var ShowStagnantManageList1=1;
var ShowStagnantManageList2=0;
sessionStorage.setItem('menu_item_href','index');
console.log(sessionStorage.getItem('menu_item_href'));
$(document).mouseup(function(e) 
{
    var container = $("#commentManagmentAmount-div").find('.display_pay_rows');

    // if the target of the click isn't the container nor a descendant of the container
    if (!container.is(e.target) && container.has(e.target).length === 0) 
    {
        var id=e.target.id
        if(id!="commentManagmentAmount"){
            container.hide();
        }
    }
});

$(".alarm-bell").on('click',function(){
    //console.log($("#notif_box").children().length);
    if($("#notif_box").children().length<=0){
       $("#notif_box").hide(); 
    }
    else{
       // $("#notif_box").show();
    }

});

// function add_loading(action){

//     $('body').append(`<div id="${action}" class="loading_run" ><div><div class="loader_ajax"></div><br><p>لطفا منتظر بمانید...</p></div></div>`);
//     $("#"+action).show(1000);
// }
function add_loading(action){
    setTimeout(() => {
        $('body').append(`<div id="${action}" class="loading_run">
                                                    <div>
                                                        <div style="display:flex;justify-content:center;align-items:center;flex-direction:column">
                                                            <div class="loader_ajax"></div><p style="font-size:2rem;font-family:IranSans">لطفا منتظر بمانید...</p>
                                                        </div>
                                                    </div>
                                                </div>`);
        
    }, 10);
}

function remove_loading(action){
    setTimeout(() => {
        $("#"+action).hide(10)
    $("#"+action).remove()
        
    }, 10);
    
}

function preventCloseModal()
{
    $("div.modal").each(function(){
        if($(this).is('.modal','.fade'))
            $(this).attr('data-keyboard',"false").attr( "data-backdrop","static");
    })
}
 preventCloseModal();
 listen_alarms(30000);

 function open_recover_user_pass(){

     Swal.fire({
         title: "شماره همراه خود را وارد نمایید",
         input: "text",
         customClass: {
            title: 'custom-title-class',
            
          },
        
         inputAttributes: {
             autocapitalize: "off",
             id: "mobileRecovery",
             autocomplete:"off",
             placeholder:"09XXXXXXXXX"
         },
         showCancelButton: true,
         confirmButtonText: "ارسال",
         cancelButtonText: "انصراف",
         showLoaderOnConfirm: false,

         //://manageAjaxRequestCustom({action:'user_pass_recovery',mobile:$("#mobileRecovery").val()}),
            preConfirm: async (mobile) => {
                
            params={action:"recover_user_pass",mobile:mobile}
            var regex=/09(1[0-9]|3[1-9]|2[1-9])-?[0-9]{3}-?[0-9]{4}/
            if(regex.test(mobile)){
            var res=await manageAjaxRequestCustom(params,1,'POST','php/recover_user_pass.php')
           
            var style="";
            if(res.msg_type=="ok"){
                //style={"color":"green","padding-top":"1rem","font-family":"IranSans","font-size":"12px"}
                Swal.fire({
                position: "top-center",
                icon: "success",
                text: res.message,
                showConfirmButton: false,
                timer: 1500
                });
            }
            else{
                Swal.fire({
                    icon: "error",
                    html: res.message,
                  }).then(()=>{
                  $("#swal2-html-container").css({"font-family":"tahoma","color":"red","font-size":"12px"})}
                  )
            }
 
        }
        else{
            Swal.fire({
                icon: "error",
                text: ' شماره همراه معتبر نمی باشد  شماره همراه با 0 و 11 رقمی وارد شود',
              });
        }
             //},5000)
         }

     });

 }
//**************************************************************************************استعلام خرید vvvvvv************************************************************************* */
// function goToPurchaseInquiry(){
//     openPurchaseInquiry();

// }
// function openPurchaseInquiry(){
// //case "linkid-PurchaseInquiry":

//    // var id = linkid.split('-')[1];
//     var id = 'PurchaseInquiry';
//     $("#"+id).html('');
//     var tab_array = [
//         {"title":"استعلامات صادره",'attrs':{"class":"nav-link active-tab tab-item","id":"export_inqs",'onclick':'go_to_section(this,get_inquires,1,\'export_inqs-section\')'}},
//         {"title":"استعلامات وارده",'attrs':{'class':"nav-link tab-item","id":"import_inqs",'onclick':'go_to_section(this,get_inquires,2,\'import_inqs-section\')'}},
//         {"title":"استعلامات آرشیو شده",'attrs':{'class':"nav-link tab-item","id":"archive_inqs",'onclick':'go_to_section(this,get_inquires,10,\'archive_inqs-section\')'}}
//     ];

//     create_tab("#"+id,tab_array);
//     get_inquires(1,'export_inqs-section');
// }





// function go_to_section(input,callback_function,status,selector){
//     if(!$('#PurchaseInquiry section#'+$(input).attr('id')+"-section").is(':visible')){
//         $('#PurchaseInquiry .custom_navbar li a.active-tab').removeClass('active-tab')
//         $('#PurchaseInquiry section.tab-section').hide(500)
//         $(input).addClass('active-tab');
//         $('#PurchaseInquiry section#'+$(input).attr('id')+"-section").show(500)
//         if(typeof callback_function ==='function'){
//             callback_function(status,selector);

//         }
//     }
// }

// function get_inquires(status,selector){
//     var action="get_inquires";
//     selector="#"+selector;
//     var param={action:action,status:status}
//     var res=ajaxHandler(param);
//     $(selector).html('');
//     $(selector).html(res);
//     if(status==1){
//         var btn_create_array = {'type':'button',"class":"btn btn-primary inqury_btn", "title":"استعلام جدید","onclick":"create_new_inquiry(this)", 'id':"create_new_inq_btn",'style':'float:left'}
//         var paragraph_array = {'type':'txt_info',"class":"", "text":"لیست استعلام های ارسال شده", 'id':"export_inq_header",'style':'float:right'}
//         create_form_element(".inq_list_header",btn_create_array);
//         create_form_element(".inq_list_header",paragraph_array);
//     }   
// }
// //************************************************** */

// //******************************************************* */

// function create_new_inquiry(input){
//     var parent=$(input).parents('section#export_inqs-section');
//     let date = new Date();
//     var inq_code_val=date.getTime()

//     $(parent).html('');
//     var form_element = {'type':'form',"class":"form", 'id':"form_create_export_inq"}
//     var section_one = {'type':'section',"class":"form-section", 'id':"form_section_inq_one",'style':'max-width:600px;margin:0 auto'}
//     var section_two = {'type':'section',"class":"form-section", 'id':"form_section_inq_two",'style':'width:100%'}
//     var section_three = {'type':'section',"class":"form-section", 'id':"form_section_inq_three",'style':'width:100%'}
//     var paragraph_array = {'type':'txt_info',"class":"", "text":"ثبت استعلام بها جدید", 'id':"export_inq_header"}
//     //-------------------------------------input for section 1--------------------------------------------------------------
//     var inq_date = {'type':'text',"class":"form-control", "title":"کد استعلام", 'id':"export_inq_uncode",'style':'width:50%','value':inq_code_val,'disabled':true}
//     var inq_code = {'type':'text',"class":"form-control", "title":"تاریخ استعلام", 'id':"export_inq_date",'style':'width:50%','readonly':true,"onchange":"set_inq_data(this,'#inq_date_disable_td')"}
//     var inq_buy_code = {'type':'text',"class":"form-control", "title":" کد خرید", 'id':"export_inq_buy_code",'style':'width:50%',"onchange":"set_inq_data(this,'#inq_buy_code_disable_td')"}
//     var inq_title = {'type':'text',"class":"form-control", "title":"عنوان استعلام", 'id':"export_inq_title",'style':'width:50%'}
//     var inq_button_1 = {'type':'button',"class":"btn btn-primary", "title":"تایید و ادامه", 'id':"confirm_continue_one",'style':'float:left','onclick':'confirm_continue(this,\'#form_section_inq_two\')'}
//     //-------------------------------------input for section 1-------------------------------------------------------------
//     //-------------------------------------input for section 2------------------------------------------------------------
//     var add_goods = {'type':'button',"class":"btn btn-primary", "title":" افزودن کالا", 'id':"add_good",'style':'float:left','onclick':'add_inq_row_good(this)'}
//     var inq_table_header_step2=[[" کد استعلام",inq_code_val,"تاریخ استعلام ","<span id=\"inq_date_disable_td\"></span>","کد درخواست خرید","<span id=\"inq_buy_code_disable_td\"></span>"]] ;
//      //-------------------------------------input for section 2-----------------------------------------------------------
//     create_form_element(parent,form_element);
//     create_form_element("#form_create_export_inq",paragraph_array);
//     //-----------------------------------section 1-------------------------------------------------------------------------
//     create_form_element("#form_create_export_inq",section_one);
//     create_form_element("#form_section_inq_one",inq_date);
//     create_form_element("#form_section_inq_one",inq_title);
//     create_form_element("#form_section_inq_one",inq_buy_code);
//     create_form_element("#form_section_inq_one",inq_code);
//      //-----------------------------------section 1------------------------------------------------------------------------
//      //-----------------------------------section 2------------------------------------------------------------------------
//     create_form_element("#form_create_export_inq",section_two);
//     create_table("#form_section_inq_two",inq_table_header_step2,'width:50%;margin:0 auto',0,0)
//     //var add_goods = {'type':'button',"class":"btn btn-primary", "title":" افزودن کالا", 'id':"add_good",'style':'float:left','onclick':'add_inq_row_good(this)'}
//     create_form_element("#form_section_inq_two",add_goods);
  
//      //-----------------------------------section 2-------------------------------------------------------------------------
//     //create_form_element("#form_create_export_inq",section_two);
//     create_form_element("#form_create_export_inq",section_three);
//     set_steps_form("#form_create_export_inq",3,0,validate_form,['form_section_inq_one','form_section_inq_two','form_section_inq_three']);
  
//    $('#export_inq_date').MdPersianDateTimePicker({
//     targetTextSelector: '#export_inq_date',
//     disableBeforeDate: new Date(),
//     disableAfterDate: new Date(),
//    })

// }

// function set_inq_data(input,target){
//    var data_inq= $(input).val()
//     $(target).text(data_inq);
//     $(target).val(data_inq);
// }

// function add_inq_row_good(input){
//     var goods_params = {action:'inq_get_all_goods'}
//     var units_params = {action:'inq_get_all_units'}
//     var options_good = '<option value="0">انتخاب کالا</option>';
//     var options_unit = '<option value="0"> انتخاب واحد کالا</option>';

//     var option_array_goods = ajaxHandler(goods_params);
//     for(k in option_array_goods){
//         options_good += `<option value=${option_array_goods[k]['code']}>${option_array_goods[k]['title']}</option>`
//     }

//     var option_array_units=ajaxHandler(units_params);
//     for(k in option_array_units){
//         options_unit+=`<option value=${option_array_units[k]['unitName']}>${option_array_units[k]['description']}</option>`
//     }

//     var index=$("#form_section_inq_two").find(".form_create_inq_box").length;
//     var box_element = {'type':'div',"class":"row form_create_inq_box", "style":"width:100%;border:2px solid gray;margin:10px;border-radius:5px;position:relative;min-height:50px", 'id':"form_create_inq_box_"+index};
//     var good_element = {'type':'div',"class":"col-md-3 form_create_good_box",  'id':"form_create_good_box_"+index};
//     var seller_element = {'type':'div',"class":"col-md-9 form_create_seller_box",  'id':"form_create_seller_box_"+index};
//     var form_element = {'type':'form',"class":"form", "style":"width:100% display:flex;justify-content:center;align-items:center", 'id':"form_create_good_row_"+index}
//     var inq_good_code = {'type':'text',"class":"form-control", "title":"کدکالا", 'id':"inq_good_code_"+index,'style':'width:50%','value':"",'disabled':true}
//     var inq_good_name = {'type':'select',"class":"form-control", "title":" شرح کالا", 'id':"inq_good_name_"+index,'style':'width:50%','onchange':"set_inq_data(this,'#inq_good_code_"+index+"')",'options':options_good}
//     var inq_good_unit = {'type':'select',"class":"form-control", "title": "واحد کالا", 'id':"inq_good_quantity_unit"+index,'style':'width:50%','options':options_unit}
//     var inq_good_quantity = {'type':'number',"class":"form-control", "title": "تعداد", 'id':"inq_good_quantity_"+index,'style':'width:50%'}
//    // var inq_btn = {'type':'button',"class":"btn btn-success", "title": "افزودن فروشنده/خریدار", 'id':"export_inq_btn",'style':'','parent_box_index':index, "onclick":"add_seller_buyer_inq(this,'#form_create_seller_box_"+index+"')"}
//    var inq_btn= {'type':'button_group',"elements":[{'type':'button',"class":"btn btn-success", "title": "افزودن فروشنده/خریدار", 'id':"add_seller_"+index,'style':'','parent_box_index':index, "onclick":"add_seller_buyer_inq(this,'#form_create_seller_box_"+index+"')"},
//    {"type":"button","class":"btn btn-danger", "title": "حذف" , 'id':"export_inq_btn_delete_inq_"+index, "onclick":'delete_seller_buyer_form(this,\'#form_create_inq_box_'+index+'\')'}]}
//    var show_hide_btn =  {'type':'button',"class":"btn btn-danger", "title": "-" ,'id':"show_hide_"+index,'style':'position:absolute;z-index:3;left:0','parent':0, "onclick":"toggle_display(this,'#form_create_inq_box_"+index+"')"}
//     create_form_element("#form_section_inq_two",box_element);
//     create_form_element("#form_create_inq_box_"+index,show_hide_btn);
//     create_form_element("#form_create_inq_box_"+index,good_element);
//     create_form_element("#form_create_inq_box_"+index,seller_element);
//     create_form_element("#form_create_good_box_"+index,form_element);
//     create_form_element("#form_create_good_row_"+index,inq_good_code);
//     create_form_element("#form_create_good_row_"+index,inq_good_name);
//     create_form_element("#form_create_good_row_"+index,inq_good_unit);
//     create_form_element("#form_create_good_row_"+index,inq_good_quantity);
//     create_form_element("#form_create_good_row_"+index,inq_btn);
//     select_data_picker("#inq_good_name_"+index)
// }

// function toggle_display(input,selector){
//     if($(selector).children().find('form').is(":visible")){
//         $(selector).children().find('form').hide()
//         $(input).addClass('btn-success');
//         $(input).removeClass('btn-danger');
//         $(input).val('+');
//     }
//     else
//     {
//        $(selector).children().find('form').show();
//        $(input).removeClass('btn-success');
//         $(input).addClass('btn-danger');
//         $(input).val('-');
//     }
// }
//  function validate_form(){
//     var error_array=
//     [
//         {'selector':"#export_inq_title",'message':"عنوان استعلام وارد نشده است"},
//         {'selector':"#export_inq_date",'message':"تاریخ استعلام وارد نشده است"},
//         {'selector':"#export_inq_buy_code",'message':"کد خرید  وارد نشده است"}
//     ];
//     for(k=0;k<error_array.length; k++ ){
//         var flag=true;
//         if($(error_array[k]['selector']).val().trim()=="" || $(error_array[k]['selector']).val().trim()==null){
//             Swal.fire({
//                 icon: "error",
//                 title: "خطا..",
//                 text: error_array[k]['message'],
//                 footer: ''
//               });
//             $(error_array[k]['selector']).css('border','2px solid red');
//             flag=false;
//         }
//         if(flag==false){
//             //continue;
//             return false;
//         }

//     }
//     var inq_title=$("#export_inq_title") .val();
//      var inq_date=$("#export_inq_date") .val();
//      var inq_buy_code=$("#export_inq_buy_code") .val();
//      var action="save_inquiry";
//      var param={inq_title:inq_title,inq_date:inq_date,inq_buy_code:inq_buy_code,action:action}
//      var res = manageAjaxRequestCustom(param,1)
//     //console.log('res fetch:');
//     //console.log(res);
//       if(res==false){
//           return false;
//       }
//       return true;

// }
// function add_seller_buyer_inq(input,parent){
//     var options=`<option value="0">فروشنده/خریدار را انتخاب نمایید</option>`;
//     var action="inq_get_all_buyer_sellers"
//     var params={action:action};
//     var res=ajaxHandler(params)//--------------------get all seller/buyer-----------------------------------------
//     for(i in res){
//         options+=`<option value="${res[i]['RowID']}">${res[i]['name']}</option>`
//     }
//     var parent_box_index=$(input).attr('parent_box_index');
//     var form_index=$(parent).find('form.form-seller').length;
//     form_index = form_index+parent_box_index;
//     var form_element = {'type':'form',"class":" from form-seller col-md-6",  'id':"form_create_seller_row_"+form_index}
//     var seller_code = {'type':'hidden', 'id':"export_inq_seller_id_hidden_"+form_index}
//     var seller_name = {'type':'select', 'options':options,'id':"export_inq_seller_name","class":"form-control", "title":"نام فروشنده/خریدار ", 'id':"export_inq_seller_name_"+form_index,'style':'width:50%','onchange':" set_inq_data(this,'#export_inq_seller_id_hidden_"+form_index+"')"}
//     var good_code = {'type':'hidden','id':"export_inq_good_id_hidden_"+form_index,'style':'width:50%','value':"",'disabled':true}
//     var good_quantity = {'type':'number',"class":"form-control", "title":"تعداد کالا ", 'id':"export_good_quantity_"+form_index,'style':'width:50%','value':"" ,'onblur':"check_inq_allowed_good_quantity(this,"+parent_box_index+")"}
//     var unit_price = {'type':'number',"class":"form-control", "title":"قیمت براساس واحد ", 'id':"export_unit_price_"+form_index,'style':'width:50%','value':""}
//     var pay_method = {'type':'text',"class":"form-control", "title":" روش پرداخت", 'id':"export_pay_method_"+form_index,'style':'width:50%','value':""}
//     var pay_detailes = {'type':'text',"class":"form-control", "title":"جزییات پرداخت", 'id':"export_pay_detailes_"+form_index,'style':'width:50%','value':""}
//     var rent_inside = {'type':'number',"class":"form-control", "title":" هزینه حمل و نقل داخلی", 'id':"export_rent_inside_"+form_index,'style':'width:50%','value':""}
//     var rent_outside = {'type':'number',"class":"form-control", "title":" هزینه حمل و نقل خارجی ", 'id':"export_rent_outside_"+form_index,'style':'width:50%'}
//   //  var inq_title = {'type':'text',"class":"form-control", "title": "inq_btn", 'id':"export_inq_title",'style':'width:50%'}
//     var inq_btns= {'type':'button_group',"elements":[{"type":"button","class":"btn btn-success", "title": "ذخیره" , 'id':"export_inq_btn_save_"+form_index, "onclick":'add_seller_buyer_save(this,\'#form_create_good_box\')'},
//     {"type":"button","class":"btn btn-danger", "title": "حذف" , 'id':"del_seller_buyer_"+form_index, "onclick":'delete_seller_buyer_form(this,\'#form_create_seller_row_'+form_index+'\')'}]}
   
//     create_form_element(parent,form_element);
//     create_form_element("#form_create_seller_row_"+form_index,seller_code);
//     create_form_element("#form_create_seller_row_"+form_index,seller_name);
//     create_form_element("#form_create_seller_row_"+form_index,good_code);
//     create_form_element("#form_create_seller_row_"+form_index,good_quantity);
//     create_form_element("#form_create_seller_row_"+form_index,unit_price);
//     create_form_element("#form_create_seller_row_"+form_index,pay_method);
//     create_form_element("#form_create_seller_row_"+form_index,pay_detailes);
//     create_form_element("#form_create_seller_row_"+form_index,rent_inside);
//     create_form_element("#form_create_seller_row_"+form_index,rent_outside);
//     create_form_element("#form_create_seller_row_"+form_index,inq_btns);
//     //create_form_element("#form_create_seller_row_"+form_index,unit_price);
    
//     select_data_picker("#export_inq_seller_name_"+form_index)
    
// }
// function check_inq_allowed_good_quantity(input,index){
//     var quantity=$(input).val();
//     var allowed_quantity=$("#inq_good_quantity_"+index).val();
//     if(parseInt(quantity)>parseInt(allowed_quantity)){
//         custom_alerts('مقدار وارد شده از مقدار درخواست شده بیشتر می باشد','a',return_value="0",title="خطا")
//         $(input).val('')
//         $(input).focus()
//         return false;
//     }
// }

// function custom_alerts(message,mes_type,return_value="0",title=""){
//     var icon_type="";
//         switch (mes_type) {
//             case "w":
//             case "e":
//             case "a":
//             icon_type="warning"
//             Swal.fire({
//                 icon: icon_type,
//                 title: title,
//                 text: message,
//                 footer: ''
//             });
//            // return return_value
//         break;
      
//        case "i":
//            icon_type="success"
//            Swal.fire({
//                 title:title,
//                 text:message,
//                 icon: icon_type
//             });
//            // return return_value
//         break;
//    }
//    return return_value;
    
// }
// function delete_seller_buyer_form(input,selector){
//     $(selector).hide(2000);
//     setTimeout(() => {
//         $(selector).remove(); 
//     }, 2000);
   

// }

//**************************************************************************************استعلام خرید ^^^************************************************************************* */


const subLayers = ['1','2','4','5','7','8','9','10','25','29','30','42','43','50','68','74','95','167','236','249','279','336','330','342'];  // زیرگروه دار
const subsidiaryLayers = ['17','18','19','20','51','52','53','54','55','56','70','71','80','85','36','38','41','47','48','49','81','88','92','100','237','243','250','251','252','259','326'];  // زیرگروه فرعی دار
const consumer = ['1','2','4','25','29','30','42','43','50','68','74','95','167','249','279'];  // واحد مصرف کننده دار
const base_url = "";
var alarms=0;
var acm_alarm_array=[];

// function programClick(linkid){
 
//     switch (linkid){
//         case "linkid-PurchaseInquiry":
//             var id = linkid.split('-')[1];
           
//             var tab_array = [
//                                 {"title":"استعلامات صادره",'attrs':{"class":"nav-link active-tab tab-item","id":"export_inqs",'onclick':'go_to_section(this,get_inquires,1,\'export_inqs-section\')'}},
//                                 {"title":"استعلامات وارده",'attrs':{'class':"nav-link tab-item","id":"import_inqs",'onclick':'go_to_section(this,get_inquires,2,\'import_inqs-section\')'}},
//                                 {"title":"استعلامات آرشیو شده",'attrs':{'class':"nav-link tab-item","id":"archive_inqs",'onclick':'go_to_section(this,get_inquires,10,\'archive_inqs-section\')'}}
//                             ];
           
//             create_tab("#"+id,tab_array);
//             get_inquires(1,'export_inqs-section');
//         break;
//     }
//     $('#'+linkid).click();
// }

async function get_active_app(){
    var menu_item_href=sessionStorage.getItem('menu_item_href');
    if(menu_item_href=="PurchaseInquiry"){
       
        await $('head').append('<link rel="stylesheet" target="inq" href="css/inq_style_print.css" type="text/css" media="print" />');
        display_inq_counts()
    }
    else{

       await $('head').find('link[target="inq"]').remove();
    }

}

setInterval(get_active_app,1000)

async function programClick1(linkid){
    await add_loading('loading_div')
    await $('#'+linkid).click();
    remove_loading('loading_div');
         
}
    
async function menu_item_display(func,menu_item_href){
    await add_loading('loading_div')
    //$('body').append(`<div id="loading_div1" style="background: rgba(128,128,128,0.9);width: 100%;height: 100vh;position:fixed;top: 0;display: flex;z-index: 1000;justify-content: center;align-items: center;" ><div style="display:flex; flex-direction:column;justify-content:center;align-items:center"><div class="loader_ajax"></div><br><p style="text-align:center;color:#fff;font-size:2rem;font-family:IranSans">لطفا منتظر بمانید...</p></div></div>`)
    var m="";
    if(!$("#"+menu_item_href).length){
        $('body').append(`<div class="tab-pane fade" id="${menu_item_href}" role="tabpanel" aria-labelledby="linkid-${menu_item_href}">${menu_item_href}</div>`);
    }
    m=setTimeout(async () => {
            
            await func();
            remove_loading('loading_div');
     
    }, 1000);
    m=0;
   
    sessionStorage.setItem('menu_item_href',menu_item_href);
    
}

function logout(){
    window.open("login.php","_self");
    exit;
}

function executeStartups(endofContract,paymentMaturity,recordPayComment,returnedCheck,regulationsAlarm,circularsAlarm,endofLegalContract,technicalDiagAlarm,thirdInsuranceAlarm,bodyInsuranceAlarm,updateKilometerAlarm,consumingMaterials,expiredContract,renderingRequestAlarm,confirmationAttachLabelRequestAlarm,meetingJobsAlarm,is_admin_CEO,contract_pay_confirm,addendum_legal_conf_alarm,addendum_final_conf_alarm,sale_warranty_alarm,pending_sale_warranty_alarm) {

 acm_alarm_array=[endofContract,paymentMaturity,recordPayComment,returnedCheck,regulationsAlarm,circularsAlarm,endofLegalContract,technicalDiagAlarm,thirdInsuranceAlarm,bodyInsuranceAlarm,updateKilometerAlarm,consumingMaterials,expiredContract,renderingRequestAlarm,confirmationAttachLabelRequestAlarm,meetingJobsAlarm,is_admin_CEO,contract_pay_confirm,addendum_legal_conf_alarm,addendum_final_conf_alarm,sale_warranty_alarm,pending_sale_warranty_alarm]

    if (parseInt(endofContract) > 0) {//1
        calculateEndAgreement(is_admin_CEO);
    }
    if (parseInt(paymentMaturity) > 0) {//2
        calculatePaymentMaturity(is_admin_CEO);
    }
    if (parseInt(recordPayComment) > 0) {//3
        calculateRecordPayComment(is_admin_CEO);
    }
    if (parseInt(returnedCheck) > 0) {//4
        calculateReturnedCheck(is_admin_CEO);
    }
    if (parseInt(regulationsAlarm) > 0) {//5
        calculateRegulationsAlarm(is_admin_CEO);
    }
    if (parseInt(circularsAlarm) > 0) {//6
        calculateCircularsAlarm(is_admin_CEO);
    }
    if (parseInt(endofLegalContract) > 0) {//7
        calculateEndLegalContract(is_admin_CEO);
    }
    if (parseInt(technicalDiagAlarm) > 0) {//8
        calculateTechnicalDiag(is_admin_CEO);
    }
    if (parseInt(thirdInsuranceAlarm) > 0) {//9
        calculateThirdInsurance(is_admin_CEO);
    }
    if (parseInt(bodyInsuranceAlarm) > 0) {//10
        calculateBodyInsurance(is_admin_CEO);
    }
    if (parseInt(updateKilometerAlarm) > 0) {//11
        calculateUpdateKilometer(is_admin_CEO);
    }
    if (parseInt(consumingMaterials) > 0) {//12
        calculateConsumingMaterials(is_admin_CEO);
    }
    if (parseInt(expiredContract) > 0) {//13
        calculateExpiredContract(is_admin_CEO);
    }
    if (parseInt(renderingRequestAlarm) > 0) {//14
        calculateRenderingRequest(is_admin_CEO);
    }
    if (parseInt(confirmationAttachLabelRequestAlarm) > 0) {//15
        calculateConfirmationAttachLabelRequest(is_admin_CEO);
    }
    if (parseInt(meetingJobsAlarm) > 0) {//16
        calculateMeetingJobs();
    }
    if (parseInt(contract_pay_confirm) > 0) {//16
        calculateContractPayRows();
    }

    if(parseInt(addendum_legal_conf_alarm)>0){
        calculateAddendum_legal_conf_rows();
    }

    if(parseInt(addendum_final_conf_alarm)>0){
        calculateAddendum_final_conf_rows();
    }
   
    if(parseInt(sale_warranty_alarm)>0){//19
       
        calculate_sale_warranty_alarm();
    }
    if(parseInt(pending_sale_warranty_alarm)>0){//19
       
        calculate_pending_sale_warranty_alarm();
    }
    
    if(parseInt(alarms)>0){
        $("#alarm_count").text(alarms)
        $(".alarm-bell i").addClass("ringing");
        $("#alarm_count").show() 
        $(".alarm-bell").attr("style", "");;
    }
    else{
         $("#alarm_count").text('')
        $(".alarm-bell i").css('color','gray');
        $("#alarm_count").hide();
        $(".alarm-bell").css('margin','0');
    }
   
}

function listen_alarms(time_update=60000){
    setInterval(function(){
        alarms=0;
        executeStartups(acm_alarm_array[0],acm_alarm_array[1],acm_alarm_array[2],acm_alarm_array[3],acm_alarm_array[4],acm_alarm_array[5],acm_alarm_array[6],acm_alarm_array[7],acm_alarm_array[8],acm_alarm_array[9],acm_alarm_array[10],acm_alarm_array[11],acm_alarm_array[12],acm_alarm_array[13],acm_alarm_array[14],acm_alarm_array[15],acm_alarm_array[16],acm_alarm_array[17],acm_alarm_array[18],acm_alarm_array[19],acm_alarm_array[20],acm_alarm_array[21])

    },time_update)
}

function get_all_alarms_count(res){
    if(isNaN(res)){
        res=0;
    }
    else{
        res=parseInt(res)
    }
    alarms=parseInt(alarms)+parseInt(res)
}

function calculateMeetingJobs(notif=0){
    var action = "calculateMeetingJobs";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    
    if(res)
    {
        $("#meetingJobsModalBody").html(res);
        if($("#is_admin_CEO").val()==1){
            if(notif==0){
                //$("#meetingJobsModal").modal('hide');
            }
            if(notif==1){
                //$("#meetingJobsModal").modal('show');
            }
        }
        else{
           // $("#meetingJobsModal").modal('show');
        }
        if (parseInt($("#jobs_count").val()) != 0){
            $("#calculateMeetingJobs-count").addClass("active_menu");
            alarms=parseInt(alarms)+parseInt($("#jobs_count").val())
            $("#calculateMeetingJobs-count").html($("#jobs_count").val());
        }
        else{
            $("#linkid-calculateMeetingJobs").parent().addClass("menu_hidden");
        }
    }
    else{
        $("#linkid-calculateMeetingJobs").parent().addClass("menu_hidden");
    }
}
 function display_meeting_jobs(){
    $("#meetingJobsModal").modal('show');
 }

function manageJobTable(k,input){
    var meeting=$("#meeting_"+k)
   
    if($(meeting).is(":hidden")){
       $(input).removeClass('btn-success');
       $(input).addClass('btn-danger');
       $(input).children('i').removeClass('fa-plus');
       $(input).children('i').addClass('fa-minus');
    }

    if($(meeting).is(":visible")){
        $(input).addClass('btn-success');
        $(input).removeClass('btn-danger');
        $(input).children('i').addClass('fa-plus');
        $(input).children('i').removeClass('fa-minus');
    }
    $(meeting).slideToggle(500);
}

function toggle_detailes(input){
    var job_detailes=document.querySelectorAll('.job_detailes');
    
    if($(job_detailes).is(":hidden")){
        $(input).children("i").removeClass('fa-angle-double-down');
        $(input).children("i").addClass('fa-angle-double-up');
    }
    if($(job_detailes).is(":visible")){
        $(input).children("i").removeClass('fa-angle-double-up');
        $(input).children("i").addClass('fa-angle-double-down');
    }
    $(job_detailes).slideToggle(100);
}

function manang_meeting_job_alarm(){
    var confirm_read=$('#confirm_read_report').is(':checked');
    var action="manang_meeting_job_alarm";
    var is_user=0;
    if($("#is_user")){
        if($("#is_user").val()==1){
            is_user=1;
        }
    }
    if(confirm_read){
        var meeting_job_id=$("#meeting_job_id").val();
        var param = {action:action,meeting_job_id:meeting_job_id,is_user:is_user};
        var res = manageAjaxRequest(param);
        if(res!= false)
        {
            if(is_user==0)
            {
                $("#job_"+meeting_job_id).remove();
                var re_count=1;
                $('#meeting_'+res+' tr td.row_counter').each(function(){
                    $(this).html(re_count);
                    re_count++;
                })
                if(re_count-1==0){
                    $('#meeting_'+res).parent('fieldset').remove();
                    $("#calculateMeetingJobs-count").text(parseInt($("#calculateMeetingJobs-count").text())-1)

                }else
                {
                    $("#job_count_"+res).text(re_count-1);
                }
                $("#meetingJobsModalDetailes").modal('hide');
                return;
            }
            if(is_user==1)
            {
                $("#user_job_"+meeting_job_id).remove();
                var re_count=1;
                $('#user_jobs_'+res+' tr td.row_counter').each(function(){
                    $(this).html(re_count);
                    re_count++;
                })
                if(re_count-1==0){
                    $('#user_jobs_'+res).parent('fieldset').remove();
					if($("#meetingJobsModal fieldset").is(':visible')==false){
						
						$("#meetingJobsModal").modal('hide');
					}
                    //$("#calculateMeetingJobs-count").text(parseInt($("#calculateMeetingJobs-count").text())-1)

                }else
                {
                    $("#user_job_count_"+res).text(re_count-1);
                }
                $("#meetingJobsModalDetailes").modal('hide');
                return;
            }
        
        }
    }
    else{
        $("#meetingJobsModalDetailes").modal('hide');
    }
}

function toggle_user_jobs($k,input){
    $("#user_jobs_"+$k).slideToggle();
}
function showMeetingJobReportList(meeting_id,is_user=0){
    var action = "showMeetingJobReportList";
    var param = {action:action,meeting_id:meeting_id,is_user:is_user};
    var res = manageAjaxRequest(param);
    if(res != false){
       
        $('#meetingJobsModalDetailes-body').html(res);
        $('#meetingJobsModalDetailes').modal('show');
        
    }
}

function changePassword() {
    $('#changePasswordModal').modal('show');
}

function checkPassword() {
    var oldPass = $("#oldPassword").val();
    var res = Main.checkPassword(oldPass);
    if (res == false){
        $("#oldPassword").val('');
        notice1Sec("پسورد اشتباه وارد شده است !","red");
        return false;
    }
}

function doChangePassword() {
    var oldPass = $("#oldPassword").val();
    var newPass = $("#newPassword").val();
    if(!parseInt((oldPass.trim()).length)){
        notice1Sec("پسورد قدیمی مشخص نشده است !","yellow");
        return false;
    }
    if(!parseInt((newPass.trim()).length)){
        notice1Sec("پسورد جدید مشخص نشده است !","yellow");
        return false;
    }
    var action = "doChangePassword";
    var param = {action:action,oldPass:oldPass,newPass:newPass};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
        $('#changePasswordModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
    }
}

//+++++++++++++++++++++++++++++++++ اتمام قراردادهای پرسنلی +++++++++++++++++++++++++++++++++

function calculateEndAgreement(is_admin_CEO=0) {
    var action = "calculateEndAgreement";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    $("#agreementDate-count").html(res);
        if (parseInt(res) != 0){
            $("#linkid-agreementDate span ").addClass("active_menu");
        }
        else{
            $("#linkid-agreementDate").parent().addClass("menu_hidden");
        }
        //showAgreementDateModal(is_admin_CEO);
        get_all_alarms_count(res)
}

function calculateContractPayRows(){
    var action = "calculateContractPayRows";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    //console.log('res:'+res);
    if(res)
    {
        $("#contract_pay_row-count").html(res);
        if (parseInt(res) != 0){
            $("#linkid-contractPayRow span ").addClass("active_menu");
            //showContractPayRowsModal();
            get_all_alarms_count(parseInt(res))
        }
        else{
            $("#linkid-contractPayRow").parent().addClass("menu_hidden");
        }
    }
    else{
        $("#linkid-contractPayRow").parent().addClass("menu_hidden");
     
    }
}

function showAgreementDateModal(is_admin_CEO=0) {
    if(is_admin_CEO==0)
    {
        $('#donedEventsMessageModal').modal('show');
    }
    if(is_admin_CEO==1){
        $('#donedEventsMessageModal').modal('hide');
    }

   showDoneAgreements();
}

function showContractPayRowsModal(){
    showContractPayRows();

}

function showAddendumModalLegalStep(){
    contractAddendum()
}

function showContractPayRows(){
    var action = "showContractPayRows";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    if(res != false)
    {
        $("#ContractPayFormulaAlarmBody").html("");
        $("#ContractPayFormulaAlarmBody").html(res);
       // alarms = parseInt(alarms)+parseInt(res);
    }
    $("#ContractPayFormulaAlarmModal").modal('show');
}

function max_min_pay_contract(input,parent_index){
   var table= $(input).parents("#box_"+parent_index).find('table.pay_row_tbl');
   if($(table).is(":visible")){
        $(table).slideUp(1000);
        $(input).removeClass('btn-danger').addClass('btn-success')
        $(input).html("");
        $(input).html('<i class="fa fa-plus"></i>');
   }
   else
   {
        $(table).slideDown(1000);
        $(input).addClass('btn-danger').removeClass('btn-success')
        $(input).html("");
        $(input).html('<i class="fa fa-minus"></i>');
   }
}

function final_confirm_contract_pay_row(rowID,input){
    var action="final_confirm_contract_pay";
    var param={action:action,pay_id:rowID}
    var res=ajaxHandler(param);
    if(res){
        $(input).parents('tr').remove();
    }

}
function showDoneAgreements(){
    var action = "showDoneAgreements";
    var param = {action:action};
    var res = manageAjaxRequest(param);

    if(res != false){
        $("#endAgreementDateListBody").html("");
        $("#endAgreementDateListBody").html(res);
    }
       
}

function doContractExtension() {
    var ch = $('#events-modal-table').find('input:checked');
    var information = new Array();
    for(var c=0;c<ch.length;c++){
        var grade = ch[c].attributes.rid.value;
        var cDate = $("#ContractExtensionDate-"+grade).val();
        var pid = $("#pid-"+grade+"-Hidden").val();
        information[information.length] = [cDate,pid];
    }
    var myJsonString = JSON.stringify(information);
    var action = "doContractExtension";
    var param = {action:action,myJsonString:myJsonString};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
        $('#donedEventsMessageModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
    }
}

//+++++++++++++++++++++++++++++++++ هشدار سررسید پرداخت +++++++++++++++++++++++++++++++++

function calculatePaymentMaturity(is_admin_CEO=0) {
    var action = "calculatePaymentMaturity";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    $("#paymentMaturityAlarm-count").html(res);
    if (parseInt(res) != 0){
        $("#linkid-paymentMaturityAlarm span ").addClass("active_menu");
        get_all_alarms_count(res)
    }
    else{
        $("#linkid-paymentMaturityAlarm").parent().addClass("menu_hidden");
    }
        
    //showPaymentMaturityAlarmModal(is_admin_CEO);
    
}

function showPaymentMaturityAlarmModal(is_admin_CEO=0) {
    var action = "showPaymentMaturityAlarm";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#paymentMaturityAlarmBody").html('');
        $("#paymentMaturityAlarmBody").html(res);
        if(is_admin_CEO==0){
            $('#paymentMaturityAlarmModal').modal('show');
        }
        if(is_admin_CEO==1){
            $('#paymentMaturityAlarmModal').modal('hide');
        }
    }
}

//+++++++++++++++++++++++++++++++++ هشدار ثبت اظهارنظر برای قرارداد +++++++++++++++++++++++++++++++++

function calculateRecordPayComment(is_admin_CEO=0) {
    var action = "calculateRecordPayComment";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    $("#recordPayCommentAlarm-count").html(res);
  
    if (parseInt(res) != 0){
        $("#linkid-recordPayCommentAlarm span ").addClass("active_menu");
        get_all_alarms_count(res)
    }
    else{
        $("#linkid-recordPayCommentAlarm").parent().addClass("menu_hidden");
    }
    // $("#linkid-recordPayCommentAlarm").css("background-color","red");
    // showRecordPayCommentAlarmModal(is_admin_CEO);
}


function showRecordPayCommentAlarmModal(is_admin_CEO=0) {
    var action = "showRecordPayCommentAlarmModal";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#recordPayCommentAlarmBody").html('');
        $("#recordPayCommentAlarmBody").html(res);
        if(is_admin_CEO==0)
            $('#recordPayCommentAlarmModal').modal('show');
        if(is_admin_CEO==1)
            $('#recordPayCommentAlarmModal').modal('hide');
    }
}

//+++++++++++++++++++++++++++++++++ هشدار دریافت چک برگشتی +++++++++++++++++++++++++++++++++

function calculateReturnedCheck(is_admin_CEO=0) {
    var action = "calculateReturnedCheck";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    $("#returnedCheckAlarm-count").html(res);
    if (parseInt(res) != 0){
        $("#linkid-returnedCheckAlarm span ").addClass("active_menu");
        get_all_alarms_count(res)
    }
    else{
        $("#linkid-returnedCheckAlarm").parent().addClass("menu_hidden");
    }
}

function showReturnedCheckAlarmModal(is_admin_CEO=0) {
    var action = "showReturnedCheckAlarmModal";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#returnedCheckAlarmBody").html('');
        $("#returnedCheckAlarmBody").html(res);
        if(is_admin_CEO==0)
            $('#returnedCheckAlarmModal').modal('show');
        if(is_admin_CEO==1)
        $('#returnedCheckAlarmModal').modal('hide');
    }
}

//+++++++++++++++++++++++++++++++++ آلارم بازنگری آئین نامه ها +++++++++++++++++++++++++++++++++

function calculateRegulationsAlarm(is_admin_CEO=0) {
    var action = "calculateRegulationsAlarm";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    $("#regulationsAlarm-count").html(res);
    if (parseInt(res) != 0){
        $("#linkid-regulationsAlarm span ").addClass("active_menu");
        get_all_alarms_count(res)
    }
    else{
        $("#linkid-regulationsAlarm").parent().addClass("menu_hidden");
    }
}

function showRegulationsAlarmModal(is_admin_CEO=0) {
    var action = "showRegulationsAlarmModal";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#regulationsAlarmBody").html('');
        $("#regulationsAlarmBody").html(res);
        if(is_admin_CEO==0)
            $('#regulationsAlarmModal').modal('show');
        if(is_admin_CEO==1)
            $('#regulationsAlarmModal').modal('hide');
    }
}

//+++++++++++++++++++++++++++++++++ آلارم بازنگری بخش نامه ها +++++++++++++++++++++++++++++++++

function calculateCircularsAlarm(is_admin_CEO=0) {
    var action = "calculateCircularsAlarm";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    $("#circularsAlarm-count").html(res);
    //console.log('typeof')
    //console.log(typeof(res))
    //console.log(res)
   if(res=='false'){
    res=0;
   }
    if (parseInt(res) != 0){
        $("#linkid-circularsAlarm span ").addClass("active_menu");
        get_all_alarms_count(res)
    }
    else{
        $("#linkid-circularsAlarm").parent().addClass("menu_hidden");
    }
    // if (parseInt(res) != 0){
    //     $("#linkid-circularsAlarm").css("background-color","red");
    //     showCircularsAlarmModal(is_admin_CEO);
    // }
}

function showCircularsAlarmModal(is_admin_CEO=0) {
    var action = "showCircularsAlarmModal";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#circularsAlarmBody").html('');
        $("#circularsAlarmBody").html(res);
        if(is_admin_CEO==0)
            $('#circularsAlarmModal').modal('show');
        if(is_admin_CEO==1)
            $('#circularsAlarmModal').modal('hide');
    }
}
//----------------------------------------------------------  تایید حقوقی  الحاقیه  قرارداد
function calculateAddendum_legal_conf_rows(){

    var action = "calculateAddendum_legal_conf_rows";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    // console.log('res1')
    // console.log(res)
    $("#addendum_legal_confirm-count").html(res);
   
        if (parseInt(res) > 0){
          //  alert(res);
            $("#linkid-addendum_legal_confirm span ").addClass("active_menu");
            $("#linkid-addendum_legal_confirm").parent().removeClass("menu_hidden");
            get_all_alarms_count(res)
        }
        else{
           
            $("#linkid-addendum_legal_confirm").parent().addClass("menu_hidden");
        }
    
    

}

function showAddendumModalFinalConfirmStep(){
    contractAddendum();
}

function calculateAddendum_final_conf_rows(){
    var action = "calculateAddendum_final_conf_rows";
    var param = {action:action};
    var res = manageAjaxRequest(param);

    $("#addendum_final_confirm-count").html(res);

        if (parseInt(res) > 0){
            $("#linkid-addendum_final_confirm span ").addClass("active_menu");
            get_all_alarms_count(res)
        }
        else{
           // alert(0);
            $("#linkid-addendum_final_confirm").parent().addClass("menu_hidden");
        }
}

function calculate_sale_warranty_alarm(){
    var action = "calculate_sale_warranty_alarm";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    $("#sale_warranty-count").html(res[0]);

        if (parseInt(res[0]) > 0)
        {
            $("#linkid-sale_warranty_alarm span ").addClass("active_menu");
            $("#linkid-sale_warranty_alarm").parent().removeClass("menu_hidden");
            get_all_alarms_count(res[0])
            if(!$("#sale_warranty_modal").length)
            {
               // $("#sale_warranty_modal").remove();
                $("body").append(`
                <div class="modal fade" style="display:none" id="sale_warranty_modal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered" style="max-width:950px" role="document">
                    <div class="modal-content">
                    <div class="modal-header bg-primary">
                        <h5 class="modal-title text-warning" id="exampleModalLongTitle">تضامین سر رسید شده</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span style="color:red;font-size:2rem" aria-hidden="true">X</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        ${res[1]}
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-danger" data-dismiss="modal">بستن</button>
                    
                    </div>
                    </div>
                </div>
                </div>`)
            }
            else{
                $("#sale_warranty_modal").find('.modal-body').html('')
                $("#sale_warranty_modal").find('.modal-body').html(res[1])
            }
        }

        else{
          
            $("#linkid-sale_warranty_alarm").parent().addClass("menu_hidden");
        }
       // $(".modal-backdrop").hide();
}

function showSaleWarrntyumModal(){
    $("#sale_warranty_modal").modal({"keyboard":false,"backdrop":"static"},"show")
}

function calculate_pending_sale_warranty_alarm(){
    var action = "calculate_pending_sale_warranty_alarm";
    var param = {action:action};
    var res = manageAjaxRequest(param);
   
    $("#sale_pending_warranty-count").html(res[0]);
    // console.log('testestes2');
    // console.log(res);
    if (res && parseInt(res[0]) > 0)
    {
      //  console.log('pending ...'+parseInt(res[0]));
        $("#linkid-pending_sale_warranty_alarm span").addClass("active_menu");
        $("#linkid-pending_sale_warranty_alarm").parent().removeClass("menu_hidden");
        get_all_alarms_count(res[0])
        if(!$("#pending_sale_warranty_modal").length)
        {
            $("body").append(`
            <div class="modal fade" style="display:none" id="pending_sale_warranty_modal" tabindex="-1" role="dialog" aria-labelledby="pending_sale_warranty_modal" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered" style="max-width:85vw" role="document">
                <div class="modal-content">
                <div class="modal-header bg-primary">
                    <h5 class="modal-title text-warning" id="exampleModalLongTitle">تضامین در حال بررسی </h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span style="color:red;font-size:2rem" aria-hidden="true">X</span>
                    </button>
                </div>
                <div class="modal-body">
                    ${res[1]}
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger" data-dismiss="modal">بستن</button>
                </div>
                </div>
            </div>
            </div>`)
        }
        else{
            $("#pending_sale_warranty_modal").find('.modal-body').html('')
            $("#pending_sale_warranty_modal").find('.modal-body').html(res[1])
        }
        
    }
    else{
        $("#linkid-pending_sale_warranty_alarm").parent().addClass("menu_hidden");
        $("#pending_sale_warranty_modal").find('.modal-body').html('')
        $("#pending_sale_warranty_modal").modal('hide');
    }
}

function showPendingSaleWarrntyumModal(){
    $("#pending_sale_warranty_modal").modal({"keyboard":false,"backdrop":"static"},"show")
}
//+++++++++++++++++++++++++++++++++ اتمام قراردادهای حقوقی +++++++++++++++++++++++++++++++++

function calculateEndLegalContract(is_admin_CEO=0) {
    var action = "calculateEndLegalContract";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    $("#endofLegalContract-count").html(res);

    if (parseInt(res) != 0){
        $("#linkid-endofLegalContract span ").addClass("active_menu");
        get_all_alarms_count(res)
    }
    else{
        $("#linkid-endofLegalContract").parent().addClass("menu_hidden");
    }
}

function showEndLegalContractModal(is_admin_CEO=0) {
    var action = "showEndLegalContractModal";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#endOfLegalContractBody").html('');
        $("#endOfLegalContractBody").html(res);
        if(is_admin_CEO==0)
            $('#endOfLegalContractModal').modal('show');
        if(is_admin_CEO==1)
            $('#endOfLegalContractModal').modal('hide');

    }
}

//+++++++++++++++++++++++++++++++++ اتمام معاینه فنی +++++++++++++++++++++++++++++++++

function calculateTechnicalDiag(is_admin_CEO=0) {
    var action = "calculateTechnicalDiag";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    $("#endofTechnicalDiag-count").html(res);
    if (parseInt(res) != 0){
        $("#linkid-technicalDiagAlarm span ").addClass("active_menu");
        get_all_alarms_count(res)
    }
    else{
        $("#linkid-technicalDiagAlarm").parent().addClass("menu_hidden");
    }
}

function showEndOfTechnicalDiagModal(is_admin_CEO=0) {
    var action = "showEndOfTechnicalDiagModal";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#endOfTechnicalDiagBody").html('');
        $("#endOfTechnicalDiagBody").html(res);
        if(is_admin_CEO==0)
            $('#endOfTechnicalDiagAlarmModal').modal('show');
        if(is_admin_CEO==1)
            $('#endOfTechnicalDiagAlarmModal').modal('hide');

    }
}

//+++++++++++++++++++++++++++++++++ اتمام بیمه شخص ثالث +++++++++++++++++++++++++++++++++

function calculateThirdInsurance(is_admin_CEO=0) {
    var action = "calculateThirdInsurance";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    $("#endofThirdInsurance-count").html(res);
    if (parseInt(res) != 0){
        $("#linkid-thirdInsuranceAlarm span ").addClass("active_menu");
        get_all_alarms_count(res)
    }
    else{
        $("#linkid-thirdInsuranceAlarm").parent().addClass("menu_hidden");
    }
}

function showEndOfThirdInsuranceModal(is_admin_CEO=0) {
    var action = "showEndOfThirdInsuranceModal";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#endOfThirdInsuranceBody").html('');
        $("#endOfThirdInsuranceBody").html(res);
        if(is_admin_CEO==0)
            $('#endOfThirdInsuranceAlarmModal').modal('show');
        if(is_admin_CEO==1)
            $('#endOfThirdInsuranceAlarmModal').modal('hide');
    }
}

//+++++++++++++++++++++++++++++++++ اتمام بیمه بدنه +++++++++++++++++++++++++++++++++

function calculateBodyInsurance(is_admin_CEO=0) {
    var action = "calculateBodyInsurance";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    $("#endofBodyInsurance-count").html(res);
    if (parseInt(res) != 0){
        $("#linkid-bodyInsuranceAlarm span ").addClass("active_menu");
        get_all_alarms_count(res)
    }
    else{
        $("#linkid-bodyInsuranceAlarm").parent().addClass("menu_hidden");
    }
}

function showEndOfBodyInsuranceModal(is_admin_CEO=0) {
    var action = "showEndOfBodyInsuranceModal";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#endOfBodyInsuranceBody").html('');
        $("#endOfBodyInsuranceBody").html(res);
        if(is_admin_CEO==0)
            $('#endOfBodyInsuranceAlarmModal').modal('show');
        if(is_admin_CEO==1)
            $('#endOfBodyInsuranceAlarmModal').modal('hide');
    }
}

//+++++++++++++++++++++++++++++++++ بروزرسانی کیلومتر ماشین +++++++++++++++++++++++++++++++++

function calculateUpdateKilometer(is_admin_CEO=0) {
    var action = "calculateUpdateKilometer";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    $("#updateKilometerAlarm-count").html(res);
    if (parseInt(res) != 0){
        $("#linkid-updateKilometerAlarm span ").addClass("active_menu");
        get_all_alarms_count(res)
    }
    else{
        $("#linkid-updateKilometerAlarm").parent().addClass("menu_hidden");
    }
}

function showUpdateKilometerAlarmModal(is_admin_CEO=0) {
    var action = "showUpdateKilometerAlarmModal";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#updateKilometerAlarmBody").html('');
        $("#updateKilometerAlarmBody").html(res);
        if(is_admin_CEO==0)
            $('#updateKilometerAlarmModal').modal('show');
        if(is_admin_CEO==1)
            $('#updateKilometerAlarmModal').modal('hide');
    }
}

//+++++++++++++++++++++++++++++++++ تعویض مواد مصرفی ماشین +++++++++++++++++++++++++++++++++

function calculateConsumingMaterials(is_admin_CEO=0) {
    var action = "calculateConsumingMaterials";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    $("#consumingMaterialsAlarm-count").html(res);
 
    if (parseInt(res) != 0){
        $("#linkid-consumingMaterialsAlarm span ").addClass("active_menu");
        get_all_alarms_count(res)
    }
    else{
        $("#linkid-consumingMaterialsAlarm").parent().addClass("menu_hidden");
    }
}

function showConsumingMaterialsModal(is_admin_CEO=0) {
    var action = "showConsumingMaterialsModal";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#consumingMaterialsAlarmBody").html('');
        $("#consumingMaterialsAlarmBody").html(res);
        if(is_admin_CEO==0)
            $('#consumingMaterialsAlarmModal').modal('show');
        if(is_admin_CEO==1)
            $('#consumingMaterialsAlarmModal').modal('hide');
    }
}

//+++++++++++++++++++++++++++++++++ قرارداد منقضی شده +++++++++++++++++++++++++++++++++

function calculateExpiredContract(is_admin_CEO=0) {
    var action = "calculateExpiredContract";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    $("#expiredContractAlarm-count").html(res);
    if (parseInt(res) != 0){
        $("#linkid-expiredContractAlarm span ").addClass("active_menu");
        get_all_alarms_count(res)
    }
    else{
        $("#linkid-expiredContractAlarm").parent().addClass("menu_hidden");
    }
   
}

function showExpiredContractModal(is_admin_CEO=0) {
    var action = "showExpiredContractModal";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#expiredContractBody").html('');
        $("#expiredContractBody").html(res);
        if(is_admin_CEO==0)
            $('#expiredContractModal').modal('show');
        if(is_admin_CEO==1)
            $('#expiredContractModal').modal('hide');
    }
}

//+++++++++++++++++++++++++++++++++ درخواست داده مهندسی جدید +++++++++++++++++++++++++++++++++

function calculateRenderingRequest(is_admin_CEO=0) {
    var action = "calculateRenderingRequest";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    $("#renderingRequestAlarm-count").html(res);
    // if (parseInt(res) != 0){
    //     $("#linkid-renderingRequestAlarm").css("background-color","red");
    //     showRenderingRequestModal(is_admin_CEO);
    // }
    if (parseInt(res) != 0){
        $("#linkid-renderingRequestAlarm span ").addClass("active_menu");
        get_all_alarms_count(res)
    }
    else{
        $("#linkid-renderingRequestAlarm").parent().addClass("menu_hidden");
    }
}

function showRenderingRequestModal(is_admin_CEO=0) {
    var action = "showRenderingRequestModal";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#renderingRequestBody").html('');
        $("#renderingRequestBody").html(res);
        if(is_admin_CEO==0)
            $('#renderingRequestAlarmModal').modal('show');
        if(is_admin_CEO==1)
            $('#renderingRequestAlarmModal').modal('hide');
    }
}

//+++++++++++++++++++++++++++++++++ نیازمند تاییدیه چاپ +++++++++++++++++++++++++++++++++

function calculateConfirmationAttachLabelRequest(is_admin_CEO=0) {
    var action = "calculateConfirmationAttachLabelRequest";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    $("#confirmationAttachLabelRequestAlarm-count").html(res);

    if (parseInt(res) != 0){
        $("#linkid-confirmationAttachLabelRequestAlarm span ").addClass("active_menu");
        get_all_alarms_count(res)
    }
    else{
        $("#linkid-renderingRequestAlarm").parent().addClass("menu_hidden");
    }
    // if (parseInt(res) != 0){
    //     $("#linkid-confirmationAttachLabelRequestAlarm").css("background-color","red");
    //     showConfirmationAttachLabelRequestModal(is_admin_CEO);
    // }
}

function showConfirmationAttachLabelRequestModal(is_admin_CEO=0) {
    var action = "showConfirmationAttachLabelRequestModal";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#confirmationAttachLabelRequestBody").html('');
        $("#confirmationAttachLabelRequestBody").html(res);
        if(is_admin_CEO==0)
            $('#confirmationAttachLabelRequestModal').modal('show');
        if(is_admin_CEO==1)
            $('#confirmationAttachLabelRequestModal').modal('hide');
    }
}

//++++++++++++++++++++++ مدیریت کاربران ++++++++++++++++++++++

function userManage() {
    var action = "userManage";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#userManagementID").html('');
        $("#userManagementID").html(res);
        showUserList();
    }
}

function showUserList(page) {
    if(typeof page == "undefined"){
        page = 1;
    }
    var un = $("#usermanagementUsernameSearch").val();
    var us = $("#usermanagementUserStatusSearch").val();
    var action = "showUserList";
    var param = {action:action,un:un,us:us,page:page};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#userManageBody").html('');
        $("#userManageBody").html(res);
    }
}

function createUser() {
    $("#manageUserHiddenUid").val('');
    $("#userManagmentFname").val('');
    $("#userManagmentLname").val('');
    $("#userManagmentUsername").val('');
    $("#userManagmentps").val('');
    $("#userManagmentUserType").val(0);
    $("#userManagmentUnitID").val(0);
    $("#userManagmentFatherName").val('');
    $("#userManagmentCodeMelli").val('');
    $("#userManagmentBirthYear").val('');
    $("#userManagmentPhone").val('');
    $("#userManagmentPostJob").val('');
    $("#userManagmentSignature").val('');
    $("#userManagmentUserStatus").val(1);
    $("#userManagmentModal-under-modal").css('display','');
    $('#userManagmentModal').modal('show');
}

function editUser(){
    var ch = $('#userManagementBody-table').find('input');
    var uid = new Array();
    for(var c=0;c<ch.length;c++){
        if(ch[c].checked){
            uid[uid.length] = ch[c].attributes.rid.value;
        }
    }
    if(uid.length > 1){
        notice1Sec("فقط یک کاربر باید انتخاب شده باشد !","red");
        return false;
    }
    if(uid.length==0){
        notice1Sec("هیچ کاربری انتخاب نشده است !","red");
        return false;
    }
    uid = uid[0];
    var res = Main.getUserInfo(uid);
    if(res != false){
        $('#userManagmentModal').modal('show');
        $("#userManagmentModal-under-modal").css('display','none');
        $("#manageUserHiddenUid").val(res['uid']);
        $("#userManagmentUsername").val(res['username']);
        $("#userManagmentFname").val(res['fname']);
        $("#userManagmentLname").val(res['lname']);
        $("#userManagmentUserType").val(res['ut']);
        $("#userManagmentUnitID").val(res['unitID']);
        $("#userManagmentFatherName").val(res['fatherName']);
        $("#userManagmentCodeMelli").val(res['codeMelli']);
        $("#userManagmentBirthYear").val(res['birthYear']);
        $("#userManagmentPhone").val(res['phone']);
        $("#userManagmentPostJob").val(res['postJob']);
        $("#userManagmentSignature").val(res['signature']);
        $("#userManagmentUserStatus").val(res['us']);
        $("#userManagmentps").val('');
        $("#userManagmentUserIP").val(res['user_ip']);
    }
}
function activeUsersManage(){
	var usersTable=$("#userManagementBody-table");
	var selected=[];
	$(usersTable).find("input[type='checkbox']").each(function(){
		if($(this).is(":checked")){
			selected.push($(this).attr('rid'))
		}
	});
	  if(selected.length > 1){
        notice1Sec("فقط یک کاربر باید انتخاب شده باشد !","red");
        return false;
    }
    if(selected.length==0){
        notice1Sec("هیچ کاربری انتخاب نشده است !","red");
        return false;
    }
    $("#selectedUserIP").val(selected[0]);
	var action ="getUsernameIP";
    var param = {action:action,uid:selected[0]}
    var res = manageAjaxRequest(param);
    $("#activeUsersManageModalBody").html('');
    if(res != false){
		
		$("#activeUsersManageModalBody").html(res);
    }
	
    $("#activeUsersManageModal").modal('show');
    
	listenLogin(selected[0]);
}

function listenLogin(userID){
    var iterval = setInterval(async function()
    {
	
        if($("#activeUsersManageModal").hasClass('show')){
            var action="listenLogin";
            var res=await manageAjaxRequestCustom({action:action,userID:userID},1,'POST','php/recover_user_pass.php')
			if(res['user_id']){
					if($("#ListenIPSelect").val()==1)
					{
						$("#userManagmentIP").val('');
						$("#userManagmentIP").val(res['ip']);
						var red = Math.floor(Math.random() * 256);
						var green = Math.floor(Math.random() * 256);
						var blue = Math.floor(Math.random() * 256);
						var newColor = "rgb(" + red + "," + green + "," + blue + ")";
						$("#userManagmentIP").css("text-align",'center').css("color",newColor).css("border-bottom",'2px solid green');
					}
					else{
						$("#userManagmentIP").css("text-align",'center').css("border-bottom",'2px solid gray').css("color","#000");
					}
            }
            else{
                $("#userManagmentIP").css("text-align",'center').css("border-bottom",'2px solid red');
            }
        }
        else{
            $("#userManagmentIP").val('');
            clearInterval(iterval);
            return false;
        }
    },2000)
     
}

function addUserIP(){
    var userID=$("#selectedUserIP").val();
    var action ="setUserNameIP";
    var userIP= $("#userManagmentIP").val();
    if(userID=="" || typeof(userID)=="undefined"){
        notice1Sec('شناسه کاربر به درستی دریافت نشده است','yellow');
        return false;
    }
    if(userIP=="" || typeof(userID)=="userIP"){
        notice1Sec('IP کاربر وارد نشده است','yellow');
        return false;
    }
    var param = {action:action,uid:userID,ip:userIP}
    var res = manageAjaxRequest(param);
    if(res != false){
        
        activeUsersManage();
        notice1Sec(res,'green');
    }

}
function deleteUserIP(RowID){
   
    var action ="deleteUserNameIP";
   
    var param = {action:action,RowID:RowID}
    if(RowID=="" || typeof(RowID)=="undefined"){
        notice1Sec('شناسه  IP به درستی دریافت نشد','yellow');
        return false;
    }
  
    var res = manageAjaxRequest(param);
    if(res != false){
        
        activeUsersManage();
        notice1Sec(res,'green');
    }
}

function doEditCreateUser(){
    var uid = $("#manageUserHiddenUid").val();
    var fname = $("#userManagmentFname").val();
    var lname = $("#userManagmentLname").val();
    var username = $("#userManagmentUsername").val();
    var ps = $("#userManagmentps").val();
    var ut = $("#userManagmentUserType").val();
    var unitID = $("#userManagmentUnitID").val();
    var fatherName = $("#userManagmentFatherName").val();
    var codeMelli = $("#userManagmentCodeMelli").val();
    var birthYear = $("#userManagmentBirthYear").val();
    var phone = $("#userManagmentPhone").val();
    var postJob = $("#userManagmentPostJob").val();
    var signature = $("#userManagmentSignature").val();
    var us = $("#userManagmentUserStatus").val();

    if(!parseInt((fname.trim()).length)){
        notice1Sec("نام کاربر مشخص نشده است !","yellow");
        return false;
    }
    if(!parseInt((lname.trim()).length)){
        notice1Sec("نام خانوادگی کاربر مشخص نشده است !","yellow");
        return false;
    }
    if(!parseInt((username.trim()).length)){
        notice1Sec("نام کاربری مشخص نشده است !","yellow");
        return false;
    }
    if(isNaN(parseInt(uid))){
        if(!parseInt((ps.trim()).length)){
            notice1Sec("کلمه عبور مشخص نشده است !","yellow");
            return false;
        }
    }
    if(parseInt(unitID) == 0){
        notice1Sec("واحد مشخص نشده است !","yellow");
        return false;
    }
    if(!parseInt((fatherName.trim()).length)){
        notice1Sec("نام پدر مشخص نشده است !","yellow");
        return false;
    }
    if(!parseInt((codeMelli.trim()).length)){
        notice1Sec("کد ملی مشخص نشده است !","yellow");
        return false;
    }
    if(!parseInt((birthYear.trim()).length)){
        notice1Sec("سال تولد مشخص نشده است !","yellow");
        return false;
    }
    if(!parseInt((phone.trim()).length)){
        notice1Sec("شماره همراه مشخص نشده است !","yellow");
        return false;
    }
    if(!parseInt((postJob.trim()).length)){
        notice1Sec("سمت مشخص نشده است !","yellow");
        return false;
    }

    var action = "doEditCreateUser";
    var param = {action:action,uid:uid,fname:fname,lname:lname,username:username,ps:ps,ut:ut,us:us,unitID:unitID,fatherName:fatherName,codeMelli:codeMelli,birthYear:birthYear,phone:phone,postJob:postJob,signature:signature};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
        $('#userManagmentModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        showUserList();
    }
}

function deleteUser(){
    var ch = $('#userManagementBody-table').find('input');
    var uid = new Array();
    for(var c=0;c<ch.length;c++){
        if(ch[c].checked){
            uid[uid.length] = ch[c].attributes.rid.value;
        }
    }
    if(uid.length>1){
        notice1Sec("فقط یک کاربر باید انتخاب شده باشد !","red");
        return false;
    }
    if(uid.length==0){
        notice1Sec("هیچ کاربری انتخاب نشده است !","red");
        return false;
    }
    uid = uid[0];
    $("#usermanage_deleteIdHidden").val(uid);
    $('#manageDeleteUserModal').modal('show');
}

function dodeleteUser() {
    var uid = $("#usermanage_deleteIdHidden").val();
    var action = "dodeleteUser";
    var param = {action:action,uid:uid};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
        $('#manageDeleteUserModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        showUserList();
    }
}
function get_all_users(){
    var action="get_all_users";
    var res=ajaxHandler({action:action});
    //console.log(res);
    var options='<option value="0"> کاربر را انتحاب نمایید</option>';
    if(res !=false){
        for(k in res){
            options+=`<option value="${res[k]['RowID']}">${res[k]['fname'] +" "+res[k]['lname']} </option>`
        }
        
    }
    return options;
}

function editUserAccess(){
    var ch = $('#userManagementBody-table').find('input');
    var uid = new Array();
    var user_fullName = new Array();
    for(var c=0;c<ch.length;c++){
        if(ch[c].checked){
            uid[uid.length] = ch[c].attributes.rid.value;
            user_fullName[user_fullName.length]=$(ch[c]).parents('tr').find('td:eq(1)').text();
          //  console.log($(ch[c]))
        }
    }
    if(uid.length>1){
        notice1Sec("فقط یک کاربر باید انتخاب شده باشد !","red");
        return false;
    }
    if(uid.length==0){
        notice1Sec("هیچ کاربری انتخاب نشده است !","red");
        return false;
    }
    uid = uid[0];
   // console.log(user_fullName);
    var allAccessHtm = Main.getUserAllAccessHtm(uid);
    var options=get_all_users();
    $("#user-management-allaccess").html(allAccessHtm);
    $('#userManagmentAccessModal').modal('show');
    if(!$("#copy_access_btn").length){
        $("#select_origin_user-div").append(`<button id="copy_access_btn" onclick="copy_user_access(${uid})" class="btn btn-primary col-sm-2" type="button"> تایید</button>`)
        $("#select_origin_user-div").find("label[for='select_origin_user']").addClass('col-sm-4').removeClass('col-sm-6')
        $("#select_origin_user-div").css({'box-shadow':'3px 3px 3px gray','padding-block':'10px'});
        $("#select_origin_user").html('');
        $("#select_origin_user").append(options);
        select_data_picker($("#select_origin_user"))
        $("#userManagmentAccessModal-title").html(`<span class="p-4"> ویرایش دسترسی های کاربر </span><span class="p-4 text-warning"> ${user_fullName[0]}</span>`)
    }
    var action = "getUserAccess";
    var param = {action:action,uid:uid};
    var res = manageAjaxRequest(param);
    if(res != false){
        for(var a=0;a<res.length;a++){
            if(res[a]['access_type'] == 1){
                var currentCbox = 'AccessCHBX'+res[a]["item_id"];
                document.getElementById(currentCbox).checked = true;
                var parent=document.getElementById(currentCbox).parentNode;
                parent.classList.add('hasAccess');
            }
        }
    }
}

function copy_user_access(uid){
    var origin_user=$("#select_origin_user").val();
    var action =  "copy_user_access";
    var params={action:action,from_user:origin_user,to_user:uid}
    var res=ajaxHandler(params);
 
      
    var action2 = "getUserAccess";
    var param = {action:action2,uid:uid};
    var res = manageAjaxRequest(param);
    if(res != false){
        for(var a=0;a<res.length;a++){
            if(res[a]['access_type'] == 1){
                var currentCbox = 'AccessCHBX'+res[a]["item_id"];
                document.getElementById(currentCbox).checked = true;
                var parent=document.getElementById(currentCbox).parentNode;
                parent.classList.add('hasAccess');
            }
        }
    }

    
}

function doEditAccessUser(){
    var ch = $('#userManagementBody-table').find('input');
    var uid = new Array();
    for(var c=0;c<ch.length;c++){
        if(ch[c].checked){
            uid[uid.length] = ch[c].attributes.rid.value;
        }
    }
    uid = uid[0];
    var ch = $('#user-access-table').find('input');
    var aid = new Array();
    for(var c=0;c<ch.length;c++){
        if(ch[c].checked){
            aid[aid.length] = ch[c].attributes.aid.value;
        }
    }
    var aids = aid.join(",");
    var action = "doEditAccessUser";
    var param = {action:action,aids:aids,uid:uid};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
    }
}

//++++++++++++++++++++++ مدیریت قطعات +++++++++++++++++++++++

function managePiece() {
    var action = "managePiece";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#managePieceID").html('');
        $("#managePieceID").html(res);

        $("#pieceManageGoodSearchGroup").prop('disabled', true);
        $("#pieceManageGoodSearchSGroup").prop('disabled', true);
        $("#pieceManageGoodSearchSeries").prop('disabled', true);
        $("#pieceManageGoodSearchColor").prop('disabled', true);

        $("#pieceManagmentHow_supplySearch").selectpicker();
        $("#pieceManagmentHow_supplySearch1").selectpicker();
        $("#pieceManageGoodSearchBrand").selectpicker();
        $("#pieceManageGoodSearchGroup").selectpicker();
        $("#pieceManageGoodSearchSGroup").selectpicker();
        $("#pieceManageGoodSearchSeries").selectpicker();
        $("#pieceManageGoodSearchColor").selectpicker();

        $("#pieceManagmentRelatedPCode"+"-div").css("display", "none");
        $("#pieceManagmentPriceDakheli"+"-div").css("display", "none");
        $("#pieceManagmentPriceDakheliTax"+"-div").css("display", "none");
        $("#pieceManagmentPriceDakheliWithTax"+"-div").css("display", "none");
        $("#pieceManagmentPACD"+"-div").css("display", "none");
        $("#pieceManagmentKickback"+"-div").css("display", "none");
        $("#pieceManagmentCurrencyType"+"-div").css("display", "none");
        $("#pieceManagmentCurrency_amount"+"-div").css("display", "none");
        $("#pieceManagmentPercentage_additional_costs"+"-div").css("display", "none");
        $("#pieceManagmentPriceToRial"+"-div").css("display", "none");
        $("#pieceManagmentPriceToRial").attr('disabled','true');
        $("#pieceManagmentCastingPrice"+"-div").css("display", "none");
        $("#pieceManagmentPercentFuelWeight"+"-div").css("display", "none");
        $("#pieceManagmentCastMachPrice"+"-div").css("display", "none");
        $("#pieceManagmentPFWBM"+"-div").css("display", "none");
        $("#pieceManagmentPriceBasis"+"-div").css("display", "none");
        $("#pieceManagmentSupplier"+"-div").css("display", "none");
        $("#pieceManagmentPriceCatchDate"+"-div").css("display", "none");
        $("#pieceManagmentPlasticPlate"+"-div").css("display", "none");
        $("#pieceManagmentPercentageP"+"-div").css("display", "none");

        $("#pieceManagmentPrimaryBaseWeight"+"-div").css("display", "none");
        $("#pieceManagmentMachiningBaseWeight"+"-div").css("display", "none");
        $("#pieceManagmentFinalBaseWeight"+"-div").css("display", "none");
        $("#pieceManagmentLoadPolish"+"-div").css("display", "none");
        $("#uploadAgainPieceMasterListID").css("display", "none");
        $('#pieceManagmentPriceCatchDate-span').MdPersianDateTimePicker({placement: 'left',targetTextSelector: '#pieceManagmentPriceCatchDate'});
        showPieceManageList();
    }
}

function showPieceManageList(page) {
    if(typeof page == "undefined"){
        page = 1;
    }
    var pName = $('#pieceManagePnameSearch').val();
    var pCode = $('#pieceManagePcodeSearch').val();
    var CollectionName = $('#pieceManageCollectionNameSearch').val();
    var Material = $('#pieceManageMaterialSearch').val();
    var supply1 = $('#pieceManagmentHow_supplySearch1').val();
    supply1 = supply1.join(',');

    var gname = $('#pieceManageGoodSearchGNames').val();
    var brand = $('#pieceManageGoodSearchBrand').val();
    var group = $('#pieceManageGoodSearchGroup').val();
    var sgroup = $('#pieceManageGoodSearchSGroup').val();
    var series = $('#pieceManageGoodSearchSeries').val();
    var color = $('#pieceManageGoodSearchColor').val();
    var supply = $('#pieceManagmentHow_supplySearch').val();
    supply = supply.join(',');
    brand = brand.join(',');
    group = group.join(',');
    sgroup = sgroup.join(',');
    series = series.join(',');
    color = color.join(',');
    var action = "showPieceManageList";
    var param = {action:action,page:page,pName:pName,pCode:pCode,CollectionName:CollectionName,
                 Material:Material,supply1:supply1,supply:supply,gname:gname,
                 brand:brand,group:group,sgroup:sgroup,series:series,color:color};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#pieceManageBody").html('');
        $("#pieceManageBody").html(res);
        $("#managePieceHiddenPage").val(page);
    }
}

function showMPieceManageList(page) {
    if(typeof page == "undefined"){
        page = 1;
    }
    var pName = $('#pieceManageMPnameSearch').val();
    var action = "showMPieceManageList";
    var param = {action:action,page:page,pName:pName};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#pieceManageBody").html('');
        $("#pieceManageBody").html(res);
        //$('#pieceManageMPnameSearch').val('')
        $("#managePieceHiddenPage").val(page);
    }
}

function showMPiecePageManageList(page) {
    if(typeof page == "undefined"){
        page = 1;
    }
    var pName = $('#pieceManageMPnameSearch').val();
    var action = "showMPiecePageManageList";
    var param = {action:action,page:page,pName:pName};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#pieceManageBody").html('');
        $("#pieceManageBody").html(res);
        //$('#pieceManageMPnameSearch').val('')
        $("#managePieceHiddenPage").val(page);
    }
}

function showBMPieceManageList(page) {
    if(typeof page == "undefined"){
        page = 1;
    }
    var action = "showBMPieceManageList";
    var param = {action:action,page:page};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#pieceManageBody").html('');
        $("#pieceManageBody").html(res);
        $("#managePieceHiddenPage").val(page);
    }
}

function showBMPiecePageManageList(page) {
    if(typeof page == "undefined"){
        page = 1;
    }
    var action = "showBMPiecePageManageList";
    var param = {action:action,page:page};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#pieceManageBody").html('');
        $("#pieceManageBody").html(res);
        $("#managePieceHiddenPage").val(page);
    }
}

function createMasterListPieceExcel() {
    var pName = $('#pieceManagePnameSearch').val();
    var pCode = $('#pieceManagePcodeSearch').val();
    var CollectionName = $('#pieceManageCollectionNameSearch').val();
    var Material = $('#pieceManageMaterialSearch').val();
    var supply1 = $('#pieceManagmentHow_supplySearch1').val();
    supply1 = supply1.join(',');

    var gname = $('#pieceManageGoodSearchGNames').val();
    var brand = $('#pieceManageGoodSearchBrand').val();
    var group = $('#pieceManageGoodSearchGroup').val();
    var sgroup = $('#pieceManageGoodSearchSGroup').val();
    var series = $('#pieceManageGoodSearchSeries').val();
    var color = $('#pieceManageGoodSearchColor').val();
    var supply = $('#pieceManagmentHow_supplySearch').val();
    supply = supply.join(',');
    brand = brand.join(',');
    group = group.join(',');
    sgroup = sgroup.join(',');
    series = series.join(',');
    color = color.join(',');
    var action = "createMasterListPieceExcel";
    var param = {action:action,pName:pName,pCode:pCode,CollectionName:CollectionName,
                 Material:Material,supply1:supply1,supply:supply,gname:gname,
                 brand:brand,group:group,sgroup:sgroup,series:series,color:color};
    var res = manageAjaxRequest(param);
    if(res != false){
        window.open(res);
    }
}

function emptyPieceManageSearchFilters() {
    $("#pieceManagePnameSearch").val('');
    $("#pieceManagePcodeSearch").val('');
    $("#pieceManageCollectionNameSearch").val('');
    $("#pieceManageMaterialSearch").val('');
    $("#pieceManagmentHow_supplySearch1").selectpicker('deselectAll');
    $("#pieceManagmentHow_supplySearch").selectpicker('deselectAll');
    $("#pieceManageGoodSearchBrand").selectpicker('deselectAll');
    $("#pieceManageGoodSearchGroup").prop('disabled', true);
    $("#pieceManageGoodSearchSGroup").prop('disabled', true);
    $("#pieceManageGoodSearchSeries").prop('disabled', true);
    $("#pieceManageGoodSearchColor").prop('disabled', true);

    $("#pieceManageGoodSearchGroup").find('option').remove();
    $("#pieceManageGoodSearchSGroup").find('option').remove();
    $("#pieceManageGoodSearchSeries").find('option').remove();
    $("#pieceManageGoodSearchColor").find('option').remove();

    $("#pieceManageGoodSearchGroup").selectpicker('refresh');
    $("#pieceManageGoodSearchSGroup").selectpicker('refresh');
    $("#pieceManageGoodSearchSeries").selectpicker('refresh');
    $("#pieceManageGoodSearchColor").selectpicker('refresh');

    $("#pieceManageGoodSearchGName").val('');
    $("#pieceManageGoodSearchGNames").val('');
    $("#pieceManageMPnameSearch").val('');
    showPieceManageList();
}

function pieceManagePieceSearch() {  //+++++++ جستجو بر اساس قطعه +++++++
    var data = Main.getPieceNameList();
    var pieceName = new Array();
    var pieceNames = {aa:[]};
    for(var d=0;d<data.length;d++){
        pieceName[d]=data[d]['pName'];
        pieceNames.aa.push({
            "id" : data[d]['RowID'],
            "name"  : data[d]['pName'],
        });
    }
    $("#pieceManagePnameSearch").typeahead({ source:pieceNames.aa });

    $("#pieceManagePnameSearch").val('');
    $("#pieceManagePcodeSearch").val('');
    $("#pieceManageCollectionNameSearch").val('');
    $("#pieceManageMaterialSearch").val('');
    $("#pieceManagmentHow_supplySearch1").selectpicker('deselectAll');
    $('#pieceManagePieceSearchModal').modal('show');
}

function pieceManageGoodSearch() {  //+++++++ جستجو بر اساس محصول +++++++
    var data = Main.getGoodNameList();
    var goodName = new Array();
    var goodNames = {aa:[]};
    for(var e=0;e<data.length;e++){
        goodName[e]=data[e]['gName'];
        goodNames.aa.push({
            "id" : data[e]['RowID'],
            "name"  : data[e]['gName'],
        });
    }
    $("#pieceManageGoodSearchGName").typeahead({ source:goodNames.aa });

    $("#pieceManagmentHow_supplySearch").selectpicker('deselectAll');
    $("#pieceManageGoodSearchBrand").selectpicker('deselectAll');
    $("#pieceManageGoodSearchGroup").prop('disabled', true);
    $("#pieceManageGoodSearchSGroup").prop('disabled', true);
    $("#pieceManageGoodSearchSeries").prop('disabled', true);
    $("#pieceManageGoodSearchColor").prop('disabled', true);

    $("#pieceManageGoodSearchGroup").find('option').remove();
    $("#pieceManageGoodSearchSGroup").find('option').remove();
    $("#pieceManageGoodSearchSeries").find('option').remove();
    $("#pieceManageGoodSearchColor").find('option').remove();

    $("#pieceManageGoodSearchGroup").selectpicker('refresh');
    $("#pieceManageGoodSearchSGroup").selectpicker('refresh');
    $("#pieceManageGoodSearchSeries").selectpicker('refresh');
    $("#pieceManageGoodSearchColor").selectpicker('refresh');

    $("#pieceManageGoodSearchGName").val('');
    $("#pieceManageGoodSearchGNames").val('');
    $('#pieceManageGoodSearchModal').modal('show');
}

function findGoodGroup() {
    var brand = $('#pieceManageGoodSearchBrand').val();
    brand = brand.join(',');
    var data = Main.getGoodGroupList(brand);
    $("#pieceManageGoodSearchGroup").find('option').remove();
    for(var e=0;e<data.length;e+=2){
        $("#pieceManageGoodSearchGroup").append('<option value="'+data[e]+'">'+data[e+1]+'</option>');
    }
    $("#pieceManageGoodSearchGroup").prop('disabled', false);
    $("#pieceManageGoodSearchGroup").selectpicker('refresh');

    $("#pieceManageGoodSearchSGroup").find('option').remove();
    $("#pieceManageGoodSearchSeries").find('option').remove();
    $("#pieceManageGoodSearchColor").find('option').remove();
    $("#pieceManageGoodSearchSGroup").prop('disabled', true);
    $("#pieceManageGoodSearchSeries").prop('disabled', true);
    $("#pieceManageGoodSearchColor").prop('disabled', true);
    $("#pieceManageGoodSearchSGroup").selectpicker('refresh');
    $("#pieceManageGoodSearchSeries").selectpicker('refresh');
    $("#pieceManageGoodSearchColor").selectpicker('refresh');
}

function findGoodSGroup() {
    var group = $('#pieceManageGoodSearchGroup').val();
    group = group.join(',');
    var data = Main.getGoodSGroupList(group);
    $("#pieceManageGoodSearchSGroup").find('option').remove();
    for(var e=0;e<data.length;e+=2){
        $("#pieceManageGoodSearchSGroup").append('<option value="'+data[e]+'">'+data[e+1]+'</option>');
    }
    $("#pieceManageGoodSearchSGroup").prop('disabled', false);
    $("#pieceManageGoodSearchSGroup").selectpicker('refresh');

    $("#pieceManageGoodSearchSeries").find('option').remove();
    $("#pieceManageGoodSearchColor").find('option').remove();
    $("#pieceManageGoodSearchSeries").prop('disabled', true);
    $("#pieceManageGoodSearchColor").prop('disabled', true);
    $("#pieceManageGoodSearchSeries").selectpicker('refresh');
    $("#pieceManageGoodSearchColor").selectpicker('refresh');
}

function findGoodSeries() {
    var sgroup = $('#pieceManageGoodSearchSGroup').val();
    sgroup = sgroup.join(',');
    var data = Main.getGoodSeriesList(sgroup);
    $("#pieceManageGoodSearchSeries").find('option').remove();
    for(var e=0;e<data.length;e+=2){
        $("#pieceManageGoodSearchSeries").append('<option value="'+data[e]+'">'+data[e+1]+'</option>')
    }
    $("#pieceManageGoodSearchSeries").prop('disabled', false);
    $("#pieceManageGoodSearchSeries").selectpicker('refresh');

    $("#pieceManageGoodSearchColor").find('option').remove();
    $("#pieceManageGoodSearchColor").prop('disabled', true);
    $("#pieceManageGoodSearchColor").selectpicker('refresh');
}

function findGoodColor() {
    var series = $('#pieceManageGoodSearchSeries').val();
    series = series.join(',');
    var data = Main.getGoodColorList(series);
    $("#pieceManageGoodSearchColor").find('option').remove();
    for(var e=0;e<data.length;e+=2){
        $("#pieceManageGoodSearchColor").append('<option value="'+data[e]+'">'+data[e+1]+'</option>')
    }
    $("#pieceManageGoodSearchColor").prop('disabled', false);
    $("#pieceManageGoodSearchColor").selectpicker('refresh');
}

function changeViewField() {
    var hs = $("#pieceManagmentHow_supply").val();
    var accType = $("#managePieceHiddenAccessType").val();
    if (parseInt(accType) === 2) {  // هم دسترسی تدارکات و هم مهندسی
        switch (hs) {
            case '0':  // راکد
            case '5':  // تولید ریخته گری
            case '6':  // تولید ماشین کاری
            case '7':  // فورج
            case '9':  // لوله
            case '10':  // شیلنگ
            case '11':  // برش لیزر
            case '12':  // کلکتور
            case '13':  // منسوخ
                $("#pieceManagmentPriceDakheli" + "-div").css("display", "none");
                $("#pieceManagmentPriceDakheliTax" + "-div").css("display", "none");
                $("#pieceManagmentPriceDakheliWithTax" + "-div").css("display", "none");
                $("#pieceManagmentPACD" + "-div").css("display", "none");
                $("#pieceManagmentKickback" + "-div").css("display", "none");
                $("#pieceManagmentCurrencyType" + "-div").css("display", "none");
                $("#pieceManagmentCurrency_amount" + "-div").css("display", "none");
                $("#pieceManagmentPercentage_additional_costs" + "-div").css("display", "none");
                $("#pieceManagmentPriceToRial" + "-div").css("display", "none");
                $("#pieceManagmentCastingPrice" + "-div").css("display", "none");
                $("#pieceManagmentPercentFuelWeight" + "-div").css("display", "none");
                $("#pieceManagmentCastMachPrice" + "-div").css("display", "none");
                $("#pieceManagmentPFWBM" + "-div").css("display", "none");
                $("#pieceManagmentPlasticPlate" + "-div").css("display", "none");
                $("#pieceManagmentPercentageP" + "-div").css("display", "none");
                $("#pieceManagmentPriceBasis" + "-div").css("display", "none");
                $("#pieceManagmentSupplier" + "-div").css("display", "none");
                $("#pieceManagmentPriceCatchDate" + "-div").css("display", "none");
                $("#pieceManagmentRelatedPCode" + "-div").css("display", "none");
                break;
            case '1':  // وارداتی
                $("#pieceManagmentPriceDakheli" + "-div").css("display", "none");
                $("#pieceManagmentPriceDakheliTax" + "-div").css("display", "none");
                $("#pieceManagmentPriceDakheliWithTax" + "-div").css("display", "none");
                $("#pieceManagmentPACD" + "-div").css("display", "none");
                $("#pieceManagmentKickback" + "-div").css("display", "none");
                $("#pieceManagmentCurrencyType" + "-div").css("display", "");
                $("#pieceManagmentCurrency_amount" + "-div").css("display", "");
                $("#pieceManagmentPercentage_additional_costs" + "-div").css("display", "");
                $("#pieceManagmentPriceToRial" + "-div").css("display", "none");
                $("#pieceManagmentCastingPrice" + "-div").css("display", "none");
                $("#pieceManagmentPercentFuelWeight" + "-div").css("display", "none");
                $("#pieceManagmentCastMachPrice" + "-div").css("display", "none");
                $("#pieceManagmentPFWBM" + "-div").css("display", "none");
                $("#pieceManagmentPlasticPlate" + "-div").css("display", "none");
                $("#pieceManagmentPercentageP" + "-div").css("display", "none");
                $("#pieceManagmentPriceBasis" + "-div").css("display", "");
                $("#pieceManagmentSupplier" + "-div").css("display", "");
                $("#pieceManagmentPriceCatchDate" + "-div").css("display", "");
                $("#pieceManagmentRelatedPCode" + "-div").css("display", "none");
                break;
            case '2':  // خرید داخلی
                $("#pieceManagmentPriceDakheli" + "-div").css("display", "");
                $("#pieceManagmentPriceDakheliTax" + "-div").css("display", "");
                $("#pieceManagmentPriceDakheliWithTax" + "-div").css("display", "");
                $("#pieceManagmentPACD" + "-div").css("display", "");
                $("#pieceManagmentKickback" + "-div").css("display", "");
                $("#pieceManagmentCurrencyType" + "-div").css("display", "none");
                $("#pieceManagmentCurrency_amount" + "-div").css("display", "none");
                $("#pieceManagmentPercentage_additional_costs" + "-div").css("display", "none");
                $("#pieceManagmentPriceToRial" + "-div").css("display", "none");
                $("#pieceManagmentCastingPrice" + "-div").css("display", "none");
                $("#pieceManagmentPercentFuelWeight" + "-div").css("display", "none");
                $("#pieceManagmentCastMachPrice" + "-div").css("display", "none");
                $("#pieceManagmentPFWBM" + "-div").css("display", "none");
                $("#pieceManagmentPlasticPlate" + "-div").css("display", "none");
                $("#pieceManagmentPercentageP" + "-div").css("display", "none");
                $("#pieceManagmentPriceBasis" + "-div").css("display", "");
                $("#pieceManagmentSupplier" + "-div").css("display", "");
                $("#pieceManagmentPriceCatchDate" + "-div").css("display", "");
                $("#pieceManagmentRelatedPCode" + "-div").css("display", "none");
                break;
            case '3':  // خرید قطعه ماشینکاری
                $("#pieceManagmentPriceDakheli" + "-div").css("display", "none");
                $("#pieceManagmentPriceDakheliTax" + "-div").css("display", "none");
                $("#pieceManagmentPriceDakheliWithTax" + "-div").css("display", "none");
                $("#pieceManagmentPACD" + "-div").css("display", "none");
                $("#pieceManagmentKickback" + "-div").css("display", "none");
                $("#pieceManagmentCurrencyType" + "-div").css("display", "none");
                $("#pieceManagmentCurrency_amount" + "-div").css("display", "none");
                $("#pieceManagmentPercentage_additional_costs" + "-div").css("display", "none");
                $("#pieceManagmentPriceToRial" + "-div").css("display", "none");
                $("#pieceManagmentCastingPrice" + "-div").css("display", "none");
                $("#pieceManagmentPercentFuelWeight" + "-div").css("display", "none");
                $("#pieceManagmentCastMachPrice" + "-div").css("display", "");
                $("#pieceManagmentPFWBM" + "-div").css("display", "");
                $("#pieceManagmentPlasticPlate" + "-div").css("display", "none");
                $("#pieceManagmentPercentageP" + "-div").css("display", "none");
                $("#pieceManagmentPriceBasis" + "-div").css("display", "");
                $("#pieceManagmentSupplier" + "-div").css("display", "");
                $("#pieceManagmentPriceCatchDate" + "-div").css("display", "");
                $("#pieceManagmentRelatedPCode" + "-div").css("display", "none");
                break;
            case '4':  // خرید قطعه ریخته گری
                $("#pieceManagmentPriceDakheli" + "-div").css("display", "none");
                $("#pieceManagmentPriceDakheliTax" + "-div").css("display", "none");
                $("#pieceManagmentPriceDakheliWithTax" + "-div").css("display", "none");
                $("#pieceManagmentPACD" + "-div").css("display", "none");
                $("#pieceManagmentKickback" + "-div").css("display", "none");
                $("#pieceManagmentCurrencyType" + "-div").css("display", "none");
                $("#pieceManagmentCurrency_amount" + "-div").css("display", "none");
                $("#pieceManagmentPercentage_additional_costs" + "-div").css("display", "none");
                $("#pieceManagmentPriceToRial" + "-div").css("display", "none");
                $("#pieceManagmentCastingPrice" + "-div").css("display", "");
                $("#pieceManagmentPercentFuelWeight" + "-div").css("display", "");
                $("#pieceManagmentCastMachPrice" + "-div").css("display", "none");
                $("#pieceManagmentPFWBM" + "-div").css("display", "none");
                $("#pieceManagmentPlasticPlate" + "-div").css("display", "none");
                $("#pieceManagmentPercentageP" + "-div").css("display", "none");
                $("#pieceManagmentPriceBasis" + "-div").css("display", "");
                $("#pieceManagmentSupplier" + "-div").css("display", "");
                $("#pieceManagmentPriceCatchDate" + "-div").css("display", "");
                $("#pieceManagmentRelatedPCode" + "-div").css("display", "none");
                break;
            case '8':  // تزریق پلاستیک
                $("#pieceManagmentPriceDakheli" + "-div").css("display", "none");
                $("#pieceManagmentPriceDakheliTax" + "-div").css("display", "none");
                $("#pieceManagmentPriceDakheliWithTax" + "-div").css("display", "none");
                $("#pieceManagmentPACD" + "-div").css("display", "none");
                $("#pieceManagmentKickback" + "-div").css("display", "none");
                $("#pieceManagmentCurrencyType" + "-div").css("display", "none");
                $("#pieceManagmentCurrency_amount" + "-div").css("display", "none");
                $("#pieceManagmentPercentage_additional_costs" + "-div").css("display", "none");
                $("#pieceManagmentPriceToRial" + "-div").css("display", "none");
                $("#pieceManagmentCastingPrice" + "-div").css("display", "none");
                $("#pieceManagmentPercentFuelWeight" + "-div").css("display", "none");
                $("#pieceManagmentCastMachPrice" + "-div").css("display", "none");
                $("#pieceManagmentPFWBM" + "-div").css("display", "none");
                $("#pieceManagmentPlasticPlate" + "-div").css("display", "");
                $("#pieceManagmentPercentageP" + "-div").css("display", "");
                $("#pieceManagmentPriceBasis" + "-div").css("display", "");
                $("#pieceManagmentSupplier" + "-div").css("display", "");
                $("#pieceManagmentPriceCatchDate" + "-div").css("display", "");
                $("#pieceManagmentRelatedPCode" + "-div").css("display", "none");
                break;
            case '14':  // قطعه مونتاژی
                $("#pieceManagmentPriceDakheli" + "-div").css("display", "none");
                $("#pieceManagmentPriceDakheliTax" + "-div").css("display", "none");
                $("#pieceManagmentPriceDakheliWithTax" + "-div").css("display", "none");
                $("#pieceManagmentPACD" + "-div").css("display", "none");
                $("#pieceManagmentKickback" + "-div").css("display", "none");
                $("#pieceManagmentCurrencyType" + "-div").css("display", "none");
                $("#pieceManagmentCurrency_amount" + "-div").css("display", "none");
                $("#pieceManagmentPercentage_additional_costs" + "-div").css("display", "none");
                $("#pieceManagmentPriceToRial" + "-div").css("display", "none");
                $("#pieceManagmentCastingPrice" + "-div").css("display", "none");
                $("#pieceManagmentPercentFuelWeight" + "-div").css("display", "none");
                $("#pieceManagmentCastMachPrice" + "-div").css("display", "none");
                $("#pieceManagmentPFWBM" + "-div").css("display", "none");
                $("#pieceManagmentPlasticPlate" + "-div").css("display", "none");
                $("#pieceManagmentPercentageP" + "-div").css("display", "none");
                $("#pieceManagmentPriceBasis" + "-div").css("display", "none");
                $("#pieceManagmentSupplier" + "-div").css("display", "none");
                $("#pieceManagmentPriceCatchDate" + "-div").css("display", "none");
                $("#pieceManagmentRelatedPCode" + "-div").css("display", "");
                break;
        }
    }else if (parseInt(accType) === 1){  // دسترسی مهندسی
        if (parseInt(hs) === 14){
            $("#pieceManagmentRelatedPCode"+"-div").css("display", '');
        }else {
            $("#pieceManagmentRelatedPCode"+"-div").css("display", "none");
        }
    }
}

function priceToRial() {
    var CurrencyType = $("#pieceManagmentCurrencyType").val();  // نوع ارز
    var CurrencyAmount = $("#pieceManagmentCurrency_amount").val();  // مقدار ارز
    var PACV = $("#pieceManagmentPercentage_additional_costs").val();  // درصد هزینه های اضافی
    var action = "priceToRial";
    var param = {action:action,CurrencyType:CurrencyType,CurrencyAmount:CurrencyAmount,PACV:PACV};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#pieceManagmentPriceToRial").val(res);
    }
}

function createPiece() {
    $("#managePieceHiddenPid").val('');
    $("#pieceManagmentPname").val('');  // نام قطعه
    $("#pieceManagmentPcode").val('');  // کد قطعه
    $("#pieceManagmentPcode").removeAttr('disabled');
    $("#pieceManagmentPunit").val('');  // واحد قطعه
    $("#pieceManagmentCollection_name").val('');  // نام مجموعه
    $("#pieceManagmentCollection_Subname").val('');  // نام زیر مجموعه
    $("#pieceManagmentMaterial").val('');  // جنس
    $("#pieceManagmentLatin_title").val('');  // نام لاتین
    $("#pieceManagmentHow_supply").val(-1);  // روش محاسبات
    $("#pieceManagmentRelatedPCode").val('');  // کد محصول مرتبط
    $("#pieceManagmentRelatedPCode"+"-div").css("display", 'none');
    $("#pieceManagmentPriceDakheli").val('');  // قیمت خرید داخلی (بدون ارزش افزوده)
    $("#pieceManagmentPriceDakheliTax").val('');  // مالیات بر ارزش افزوده
    $("#pieceManagmentPriceDakheliWithTax").val('');  // قیمت خرید داخلی (با ارزش افزوده)
    $("#pieceManagmentPACD").val('');  // درصد هزینه های اضافی خرید داخلی
    $("#pieceManagmentKickback").val('');  // مدت زمان باز پرداخت
    $("#pieceManagmentCurrencyType").val(0);  // نوع ارز
    $("#pieceManagmentCurrency_amount").val('');  // قیمت بر اساس ارز
    $("#pieceManagmentPercentage_additional_costs").val('');  // درصد هزینه های ترخیص و غیره
    $("#pieceManagmentPriceToRial").val('');  // قیمت وارداتی به ریال
    $("#pieceManagmentCastingPrice").val('');  // اجرت ریخته گری
    $("#pieceManagmentPercentFuelWeight").val('');  // درصد سوخت بار(ریخته گری)
    $("#pieceManagmentCastMachPrice").val('');  // مجموع اجرت ها
    $("#pieceManagmentPFWBM").val('');  // درصد سوخت بار(ماشینکاری)
    $("#pieceManagmentPlasticPlate").val('');  // هزینه آب کاری تزریق پلاستیک
    $("#pieceManagmentPercentageP").val('');  // درصد حمل و نقل آب کاری

    $("#pieceManagmentTechnical_Specifications").val('');  // مشخصات فنی
    $("#pieceManagmentReferenceECode").val('');  // کد مهندسی مرجع
    $("#pieceManagmentFSC").val('');  // اولین مرحله ساخت
    $("#pieceManagmentCustom_dimensions").val('');  // ابعاد سفارشی
    $("#pieceManagmentRawMaterialCode").val('');  // کد مواد اولیه
    $("#pieceManagmentExternal_size_bullion").val('');  // اندازه خارجی شمش
    $("#pieceManagmentWeight_materials").val('');  // وزن مواد اولیه
    $("#pieceManagmentWeight_Machining").val('');  // وزن ماشینکاری
    $("#pieceManagmentWeight_Final").val('');  // وزن نهایی
    $("#pieceManagmentPrimaryBaseWeight").val('');  // وزن مبنای اولیه
    $("#pieceManagmentMachiningBaseWeight").val('');  // وزن مبنای ماشینکاری
    $("#pieceManagmentFinalBaseWeight").val('');  // وزن مبنای نهایی
    $("#pieceManagmentLoadPolish").val('');  // بارریزی پرداخت
    $("#pieceManagmentSystem_weight").val('');  // وزن سیستمی
    $("#pieceManagmentDescription").val('');  // توضیحات قطعه
    $("#pieceManagmentPriceBasis").val('');  // مبنای قیمت
    $("#pieceManagmentSupplier").val('');  // تامین کننده
    $("#pieceManagmentPriceCatchDate").val('');  // تاریخ قیمت
    $('#pieceManagmentModal').modal('show');
}

function editPiece(pid) {
    var accType = $("#managePieceHiddenAccessType").val();
    var res = Main.getPieceInfo(pid);
    if(res != false){
        $('#pieceManagmentModal').modal('show');
        if (parseInt(accType) === 2){  // هم دسترسی تدارکات و هم مهندسی
            switch (res['How_supply']) {
                case '0':  // راکد
                case '5':  // تولید ریخته گری
                case '6':  // تولید ماشین کاری
                case '7':  // فورج
                case '9':  // لوله
                case '10':  // شیلنگ
                case '11':  // برش لیزر
                case '12':  // کلکتور
                case '13':  // منسوخ
                    $("#pieceManagmentPriceDakheli"+"-div").css("display", "none");
                    $("#pieceManagmentPriceDakheliTax"+"-div").css("display", "none");
                    $("#pieceManagmentPriceDakheliWithTax"+"-div").css("display", "none");
                    $("#pieceManagmentPACD"+"-div").css("display", "none");
                    $("#pieceManagmentKickback"+"-div").css("display", "none");
                    $("#pieceManagmentCurrencyType"+"-div").css("display", "none");
                    $("#pieceManagmentCurrency_amount"+"-div").css("display", "none");
                    $("#pieceManagmentPercentage_additional_costs"+"-div").css("display", "none");
                    $("#pieceManagmentPriceToRial"+"-div").css("display", "none");
                    $("#pieceManagmentCastingPrice"+"-div").css("display", "none");
                    $("#pieceManagmentPercentFuelWeight"+"-div").css("display", "none");
                    $("#pieceManagmentCastMachPrice"+"-div").css("display", "none");
                    $("#pieceManagmentPFWBM"+"-div").css("display", "none");
                    $("#pieceManagmentPlasticPlate"+"-div").css("display", "none");
                    $("#pieceManagmentPercentageP"+"-div").css("display", "none");
                    $("#pieceManagmentPriceBasis"+"-div").css("display", "none");
                    $("#pieceManagmentSupplier"+"-div").css("display", "none");
                    $("#pieceManagmentPriceCatchDate"+"-div").css("display", "none");
                    $("#pieceManagmentRelatedPCode"+"-div").css("display", "none");
                    break;
                case '1':  // وارداتی
                    $("#pieceManagmentPriceDakheli"+"-div").css("display", "none");
                    $("#pieceManagmentPriceDakheliTax"+"-div").css("display", "none");
                    $("#pieceManagmentPriceDakheliWithTax"+"-div").css("display", "none");
                    $("#pieceManagmentPACD"+"-div").css("display", "none");
                    $("#pieceManagmentKickback"+"-div").css("display", "none");
                    $("#pieceManagmentCurrencyType"+"-div").css("display", "");
                    $("#pieceManagmentCurrency_amount"+"-div").css("display", "");
                    $("#pieceManagmentPercentage_additional_costs"+"-div").css("display", "");
                    $("#pieceManagmentPriceToRial"+"-div").css("display", "none");
                    $("#pieceManagmentCastingPrice"+"-div").css("display", "none");
                    $("#pieceManagmentPercentFuelWeight"+"-div").css("display", "none");
                    $("#pieceManagmentCastMachPrice"+"-div").css("display", "none");
                    $("#pieceManagmentPFWBM"+"-div").css("display", "none");
                    $("#pieceManagmentPlasticPlate"+"-div").css("display", "none");
                    $("#pieceManagmentPercentageP"+"-div").css("display", "none");
                    $("#pieceManagmentPriceBasis"+"-div").css("display", "");
                    $("#pieceManagmentSupplier"+"-div").css("display", "");
                    $("#pieceManagmentPriceCatchDate"+"-div").css("display", "");
                    $("#pieceManagmentRelatedPCode"+"-div").css("display", "none");
                    break;
                case '2':  // خرید داخلی
                    $("#pieceManagmentPriceDakheli"+"-div").css("display", "");
                    $("#pieceManagmentPriceDakheliTax"+"-div").css("display", "");
                    $("#pieceManagmentPriceDakheliWithTax"+"-div").css("display", "");
                    $("#pieceManagmentPriceDakheliTax").attr('disabled','true');
                    $("#pieceManagmentPriceDakheliWithTax").attr('disabled','true');
                    $("#pieceManagmentPACD"+"-div").css("display", "");
                    $("#pieceManagmentKickback"+"-div").css("display", "");
                    $("#pieceManagmentCurrencyType"+"-div").css("display", "none");
                    $("#pieceManagmentCurrency_amount"+"-div").css("display", "none");
                    $("#pieceManagmentPercentage_additional_costs"+"-div").css("display", "none");
                    $("#pieceManagmentPriceToRial"+"-div").css("display", "none");
                    $("#pieceManagmentCastingPrice"+"-div").css("display", "none");
                    $("#pieceManagmentPercentFuelWeight"+"-div").css("display", "none");
                    $("#pieceManagmentCastMachPrice"+"-div").css("display", "none");
                    $("#pieceManagmentPFWBM"+"-div").css("display", "none");
                    $("#pieceManagmentPlasticPlate"+"-div").css("display", "none");
                    $("#pieceManagmentPercentageP"+"-div").css("display", "none");
                    $("#pieceManagmentPriceBasis"+"-div").css("display", "");
                    $("#pieceManagmentSupplier"+"-div").css("display", "");
                    $("#pieceManagmentPriceCatchDate"+"-div").css("display", "");
                    $("#pieceManagmentRelatedPCode"+"-div").css("display", "none");
                    break;
                case '3':  // خرید قطعه ماشینکاری
                    $("#pieceManagmentPriceDakheli"+"-div").css("display", "none");
                    $("#pieceManagmentPriceDakheliTax"+"-div").css("display", "none");
                    $("#pieceManagmentPriceDakheliWithTax"+"-div").css("display", "none");
                    $("#pieceManagmentPACD"+"-div").css("display", "none");
                    $("#pieceManagmentKickback"+"-div").css("display", "none");
                    $("#pieceManagmentCurrencyType"+"-div").css("display", "none");
                    $("#pieceManagmentCurrency_amount"+"-div").css("display", "none");
                    $("#pieceManagmentPercentage_additional_costs"+"-div").css("display", "none");
                    $("#pieceManagmentPriceToRial"+"-div").css("display", "none");
                    $("#pieceManagmentCastingPrice"+"-div").css("display", "none");
                    $("#pieceManagmentPercentFuelWeight"+"-div").css("display", "none");
                    $("#pieceManagmentCastMachPrice"+"-div").css("display", "");
                    $("#pieceManagmentPFWBM"+"-div").css("display", "");
                    $("#pieceManagmentPlasticPlate"+"-div").css("display", "none");
                    $("#pieceManagmentPercentageP"+"-div").css("display", "none");
                    $("#pieceManagmentPriceBasis"+"-div").css("display", "");
                    $("#pieceManagmentSupplier"+"-div").css("display", "");
                    $("#pieceManagmentPriceCatchDate"+"-div").css("display", "");
                    $("#pieceManagmentRelatedPCode"+"-div").css("display", "none");
                    break;
                case '4':  // خرید قطعه ریخته گری
                    $("#pieceManagmentPriceDakheli"+"-div").css("display", "none");
                    $("#pieceManagmentPriceDakheliTax"+"-div").css("display", "none");
                    $("#pieceManagmentPriceDakheliWithTax"+"-div").css("display", "none");
                    $("#pieceManagmentPACD"+"-div").css("display", "none");
                    $("#pieceManagmentKickback"+"-div").css("display", "none");
                    $("#pieceManagmentCurrencyType"+"-div").css("display", "none");
                    $("#pieceManagmentCurrency_amount"+"-div").css("display", "none");
                    $("#pieceManagmentPercentage_additional_costs"+"-div").css("display", "none");
                    $("#pieceManagmentPriceToRial"+"-div").css("display", "none");
                    $("#pieceManagmentCastingPrice"+"-div").css("display", "");
                    $("#pieceManagmentPercentFuelWeight"+"-div").css("display", "");
                    $("#pieceManagmentCastMachPrice"+"-div").css("display", "none");
                    $("#pieceManagmentPFWBM"+"-div").css("display", "none");
                    $("#pieceManagmentPlasticPlate"+"-div").css("display", "none");
                    $("#pieceManagmentPercentageP"+"-div").css("display", "none");
                    $("#pieceManagmentPriceBasis"+"-div").css("display", "");
                    $("#pieceManagmentSupplier"+"-div").css("display", "");
                    $("#pieceManagmentPriceCatchDate"+"-div").css("display", "");
                    $("#pieceManagmentRelatedPCode"+"-div").css("display", "none");
                    break;
                case '8':  // تزریق پلاستیک
                    $("#pieceManagmentPriceDakheli"+"-div").css("display", "none");
                    $("#pieceManagmentPriceDakheliTax"+"-div").css("display", "none");
                    $("#pieceManagmentPriceDakheliWithTax"+"-div").css("display", "none");
                    $("#pieceManagmentPACD"+"-div").css("display", "none");
                    $("#pieceManagmentKickback"+"-div").css("display", "none");
                    $("#pieceManagmentCurrencyType"+"-div").css("display", "none");
                    $("#pieceManagmentCurrency_amount"+"-div").css("display", "none");
                    $("#pieceManagmentPercentage_additional_costs"+"-div").css("display", "none");
                    $("#pieceManagmentPriceToRial"+"-div").css("display", "none");
                    $("#pieceManagmentCastingPrice"+"-div").css("display", "none");
                    $("#pieceManagmentPercentFuelWeight"+"-div").css("display", "none");
                    $("#pieceManagmentCastMachPrice"+"-div").css("display", "none");
                    $("#pieceManagmentPFWBM"+"-div").css("display", "none");
                    $("#pieceManagmentPlasticPlate"+"-div").css("display", "");
                    $("#pieceManagmentPercentageP"+"-div").css("display", "");
                    $("#pieceManagmentPriceBasis"+"-div").css("display", "");
                    $("#pieceManagmentSupplier"+"-div").css("display", "");
                    $("#pieceManagmentPriceCatchDate"+"-div").css("display", "");
                    $("#pieceManagmentRelatedPCode"+"-div").css("display", "none");
                    break;
                case '14':  // قطعه مونتاژی
                    $("#pieceManagmentPriceDakheli"+"-div").css("display", "none");
                    $("#pieceManagmentPriceDakheliTax"+"-div").css("display", "none");
                    $("#pieceManagmentPriceDakheliWithTax"+"-div").css("display", "none");
                    $("#pieceManagmentPACD"+"-div").css("display", "none");
                    $("#pieceManagmentKickback"+"-div").css("display", "none");
                    $("#pieceManagmentCurrencyType"+"-div").css("display", "none");
                    $("#pieceManagmentCurrency_amount"+"-div").css("display", "none");
                    $("#pieceManagmentPercentage_additional_costs"+"-div").css("display", "none");
                    $("#pieceManagmentPriceToRial"+"-div").css("display", "none");
                    $("#pieceManagmentCastingPrice"+"-div").css("display", "none");
                    $("#pieceManagmentPercentFuelWeight"+"-div").css("display", "none");
                    $("#pieceManagmentCastMachPrice"+"-div").css("display", "none");
                    $("#pieceManagmentPFWBM"+"-div").css("display", "none");
                    $("#pieceManagmentPlasticPlate"+"-div").css("display", "none");
                    $("#pieceManagmentPercentageP"+"-div").css("display", "none");
                    $("#pieceManagmentPriceBasis"+"-div").css("display", "none");
                    $("#pieceManagmentSupplier"+"-div").css("display", "none");
                    $("#pieceManagmentPriceCatchDate"+"-div").css("display", "none");
                    $("#pieceManagmentRelatedPCode"+"-div").css("display", "");
                    break;
            }

        }else if (parseInt(accType) === 1){  // دسترسی مهندسی
            if (parseInt(res['How_supply']) === 14){
                $("#pieceManagmentRelatedPCode"+"-div").css("display", '');
            }else {
                $("#pieceManagmentRelatedPCode"+"-div").css("display", "none");
            }

        }else if (parseInt(accType) === 0) {  // دسترسی تدارکات
            $("#pieceManagmentCollection_name"+"-div").css("display", "none");
            $("#pieceManagmentCollection_Subname"+"-div").css("display", "none");
            $("#pieceManagmentMaterial"+"-div").css("display", "none");
            $("#pieceManagmentLatin_title"+"-div").css("display", "none");
            $("#pieceManagmentTechnical_Specifications"+"-div").css("display", "none");
            $("#pieceManagmentReferenceECode"+"-div").css("display", "none");
            $("#pieceManagmentFSC"+"-div").css("display", "none");
            $("#pieceManagmentCustom_dimensions"+"-div").css("display", "none");
            $("#pieceManagmentRawMaterialCode"+"-div").css("display", "none");
            $("#pieceManagmentExternal_size_bullion"+"-div").css("display", "none");
            $("#pieceManagmentWeight_materials"+"-div").css("display", "none");
            $("#pieceManagmentWeight_Machining"+"-div").css("display", "none");
            $("#pieceManagmentWeight_Final"+"-div").css("display", "none");
            $("#pieceManagmentPrimaryBaseWeight"+"-div").css("display", "none");
            $("#pieceManagmentMachiningBaseWeight"+"-div").css("display", "none");
            $("#pieceManagmentFinalBaseWeight"+"-div").css("display", "none");
            $("#pieceManagmentLoadPolish"+"-div").css("display", "none");
            $("#pieceManagmentSystem_weight"+"-div").css("display", "none");
            $("#pieceManagmentDescription"+"-div").css("display", "none");

            switch (res['How_supply']) {
                case '1':  // وارداتی
                    $("#pieceManagmentPriceDakheli"+"-div").css("display", "none");
                    $("#pieceManagmentPriceDakheliTax"+"-div").css("display", "none");
                    $("#pieceManagmentPriceDakheliWithTax"+"-div").css("display", "none");
                    $("#pieceManagmentPACD"+"-div").css("display", "none");
                    $("#pieceManagmentKickback"+"-div").css("display", "none");
                    $("#pieceManagmentCurrencyType"+"-div").css("display", "");
                    $("#pieceManagmentCurrency_amount"+"-div").css("display", "");
                    $("#pieceManagmentPercentage_additional_costs"+"-div").css("display", "");
                    $("#pieceManagmentPriceToRial"+"-div").css("display", "none");
                    $("#pieceManagmentCastingPrice"+"-div").css("display", "none");
                    $("#pieceManagmentPercentFuelWeight"+"-div").css("display", "none");
                    $("#pieceManagmentCastMachPrice"+"-div").css("display", "none");
                    $("#pieceManagmentPFWBM"+"-div").css("display", "none");
                    $("#pieceManagmentPlasticPlate"+"-div").css("display", "none");
                    $("#pieceManagmentPercentageP"+"-div").css("display", "none");
                    break;
                case '2':  // خرید داخلی
                    $("#pieceManagmentPriceDakheli"+"-div").css("display", "");
                    $("#pieceManagmentPriceDakheliTax"+"-div").css("display", "");
                    $("#pieceManagmentPriceDakheliWithTax"+"-div").css("display", "");
                    $("#pieceManagmentPriceDakheliTax").attr('disabled','true');
                    $("#pieceManagmentPriceDakheliWithTax").attr('disabled','true');
                    $("#pieceManagmentPACD"+"-div").css("display", "");
                    $("#pieceManagmentKickback"+"-div").css("display", "");
                    $("#pieceManagmentCurrencyType"+"-div").css("display", "none");
                    $("#pieceManagmentCurrency_amount"+"-div").css("display", "none");
                    $("#pieceManagmentPercentage_additional_costs"+"-div").css("display", "none");
                    $("#pieceManagmentPriceToRial"+"-div").css("display", "none");
                    $("#pieceManagmentCastingPrice"+"-div").css("display", "none");
                    $("#pieceManagmentPercentFuelWeight"+"-div").css("display", "none");
                    $("#pieceManagmentCastMachPrice"+"-div").css("display", "none");
                    $("#pieceManagmentPFWBM"+"-div").css("display", "none");
                    $("#pieceManagmentPlasticPlate"+"-div").css("display", "none");
                    $("#pieceManagmentPercentageP"+"-div").css("display", "none");
                    break;
                case '3':  // خرید قطعه ماشینکاری
                    $("#pieceManagmentPriceDakheli"+"-div").css("display", "none");
                    $("#pieceManagmentPriceDakheliTax"+"-div").css("display", "none");
                    $("#pieceManagmentPriceDakheliWithTax"+"-div").css("display", "none");
                    $("#pieceManagmentPACD"+"-div").css("display", "none");
                    $("#pieceManagmentKickback"+"-div").css("display", "none");
                    $("#pieceManagmentCurrencyType"+"-div").css("display", "none");
                    $("#pieceManagmentCurrency_amount"+"-div").css("display", "none");
                    $("#pieceManagmentPercentage_additional_costs"+"-div").css("display", "none");
                    $("#pieceManagmentPriceToRial"+"-div").css("display", "none");
                    $("#pieceManagmentCastingPrice"+"-div").css("display", "none");
                    $("#pieceManagmentPercentFuelWeight"+"-div").css("display", "none");
                    $("#pieceManagmentCastMachPrice"+"-div").css("display", "");
                    $("#pieceManagmentPFWBM"+"-div").css("display", "");
                    $("#pieceManagmentPlasticPlate"+"-div").css("display", "none");
                    $("#pieceManagmentPercentageP"+"-div").css("display", "none");
                    break;
                case '4':  // خرید قطعه ریخته گری
                    $("#pieceManagmentPriceDakheli"+"-div").css("display", "none");
                    $("#pieceManagmentPriceDakheliTax"+"-div").css("display", "none");
                    $("#pieceManagmentPriceDakheliWithTax"+"-div").css("display", "none");
                    $("#pieceManagmentPACD"+"-div").css("display", "none");
                    $("#pieceManagmentKickback"+"-div").css("display", "none");
                    $("#pieceManagmentCurrencyType"+"-div").css("display", "none");
                    $("#pieceManagmentCurrency_amount"+"-div").css("display", "none");
                    $("#pieceManagmentPercentage_additional_costs"+"-div").css("display", "none");
                    $("#pieceManagmentPriceToRial"+"-div").css("display", "none");
                    $("#pieceManagmentCastingPrice"+"-div").css("display", "");
                    $("#pieceManagmentPercentFuelWeight"+"-div").css("display", "");
                    $("#pieceManagmentCastMachPrice"+"-div").css("display", "none");
                    $("#pieceManagmentPFWBM"+"-div").css("display", "none");
                    $("#pieceManagmentPlasticPlate"+"-div").css("display", "none");
                    $("#pieceManagmentPercentageP"+"-div").css("display", "none");
                    break;
                case '8':  // تزریق پلاستیک
                    $("#pieceManagmentPriceDakheli"+"-div").css("display", "none");
                    $("#pieceManagmentPriceDakheliTax"+"-div").css("display", "none");
                    $("#pieceManagmentPriceDakheliWithTax"+"-div").css("display", "none");
                    $("#pieceManagmentPACD"+"-div").css("display", "none");
                    $("#pieceManagmentKickback"+"-div").css("display", "none");
                    $("#pieceManagmentCurrencyType"+"-div").css("display", "none");
                    $("#pieceManagmentCurrency_amount"+"-div").css("display", "none");
                    $("#pieceManagmentPercentage_additional_costs"+"-div").css("display", "none");
                    $("#pieceManagmentPriceToRial"+"-div").css("display", "none");
                    $("#pieceManagmentCastingPrice"+"-div").css("display", "none");
                    $("#pieceManagmentPercentFuelWeight"+"-div").css("display", "none");
                    $("#pieceManagmentCastMachPrice"+"-div").css("display", "none");
                    $("#pieceManagmentPFWBM"+"-div").css("display", "none");
                    $("#pieceManagmentPlasticPlate"+"-div").css("display", "");
                    $("#pieceManagmentPercentageP"+"-div").css("display", "");
                    break;
            }

            $("#pieceManagmentPriceBasis"+"-div").css("display", "");
            $("#pieceManagmentSupplier"+"-div").css("display", "");
            $("#pieceManagmentPriceCatchDate"+"-div").css("display", "");

            $("#pieceManagmentPname").attr('disabled','true');
            $("#pieceManagmentPcode").attr('disabled','true');
            $("#pieceManagmentPunit").attr('disabled','true');
            $("#pieceManagmentHow_supply").attr('disabled','true');
        }

        $("#managePieceHiddenPid").val(res['pid']);  // ID
        $("#pieceManagmentPname").val(res['pName']);  // نام قطعه
        $("#pieceManagmentPcode").val(res['pCode']);  // کد قطعه
        $("#pieceManagmentPunit").val(res['pUnit']);  // واحد قطعه
        $("#pieceManagmentCollection_name").val(res['Collection']);  // نام مجموعه
        $("#pieceManagmentCollection_Subname").val(res['Subset_name']);  // نام زیر مجموعه
        $("#pieceManagmentMaterial").val(res['material']);  // جنس
        $("#pieceManagmentLatin_title").val(res['Latin']);  // نام لاتین
        $("#pieceManagmentTechnical_Specifications").val(res['Technical']);  // مشخصات فنی
        $("#pieceManagmentReferenceECode").val(res['referenceECode']);  // کد مهندسی مرجع
        $("#pieceManagmentFSC").val(res['fsc']);  // اولین مرحله ساخت
        $("#pieceManagmentCustom_dimensions").val(res['dimensions']);  // ابعاد سفارشی
        $("#pieceManagmentRawMaterialCode").val(res['RawMaterialCode']);  // کد مواد اولیه
        $("#pieceManagmentExternal_size_bullion").val(res['externalSize']);  // اندازه خارجی شمش
        $("#pieceManagmentWeight_materials").val(res['Wmaterials']);  // وزن مواد اولیه
        $("#pieceManagmentWeight_Machining").val(res['WMachining']);  // وزن ماشینکاری
        $("#pieceManagmentWeight_Final").val(res['WFinal']); // وزن نهایی
        $("#pieceManagmentPrimaryBaseWeight").val(res['PBW']);  // وزن مبنای اولیه
        $("#pieceManagmentMachiningBaseWeight").val(res['MBW']);  // وزن مبنای ماشینکاری
        $("#pieceManagmentFinalBaseWeight").val(res['FBW']);  // وزن مبنای نهایی
        $("#pieceManagmentLoadPolish").val(res['LoadPolish']);  // بارریزی پرداخت
        $("#pieceManagmentSystem_weight").val(res['Systemweight']);  // وزن سیستمی
        $("#pieceManagmentDescription").val(res['description']);  // توضیحات قطعه
        $("#pieceManagmentPriceDakheli").val(res['priceDakheliWithoutTax']);  // قیمت خرید داخلی (بدون ارزش افزوده)
        $("#pieceManagmentPriceDakheliTax").val(res['tax']);  // مالیات بر ارزش افزوده
        $("#pieceManagmentPriceDakheliWithTax").val(res['priceDakheli']);  // قیمت خرید داخلی (با ارزش افزوده)
        $("#pieceManagmentPACD").val(res['PercentageACD']);  // درصد هزینه های اضافی خرید داخلی
        $("#pieceManagmentKickback").val(res['monthkickback']);  // مدت زمان باز پرداخت
        $("#pieceManagmentCurrencyType").val(res['currencyID']);  // نوع ارز
        $("#pieceManagmentCurrency_amount").val(res['currency_amount']);  // قیمت بر اساس ارز
        $("#pieceManagmentPercentage_additional_costs").val(res['Percentage']);  // درصد هزینه های اضافی و ترخیص
        $("#pieceManagmentPriceToRial").val(res['PriceRial']);  // تبدیل به ریال
        $("#pieceManagmentCastingPrice").val(res['CastingPriceBC']);  // اجرت ریخته گری
        $("#pieceManagmentPercentFuelWeight").val(res['PercentFuelWeightBC']);  // درصد سوخت بار (ریخته گری)
        $("#pieceManagmentCastMachPrice").val(res['CastMachPriceBM']);  // مجموع اجرت ها ریخته گری و ماشینکاری
        $("#pieceManagmentPFWBM").val(res['PercentFuelWeightBM']);  // درصد سوخت بار (ماشینکاری)
        $("#pieceManagmentPlasticPlate").val(res['plasticPlate']);  // هزینه آب کاری تزریق پلاستیک
        $("#pieceManagmentPercentageP").val(res['PercentagePP']);  // درصد هزینه حمل و نقل تزریق پلاستیک
        $("#pieceManagmentPriceBasis").val(res['priceBasis']);  // مبنای قیمت
        $("#pieceManagmentSupplier").val(res['Supplier']);  // تامین کننده
        $("#pieceManagmentPriceCatchDate").val(res['priceCatchDate']);  // تاریخ قیمت
        $("#pieceManagmentHow_supply").val(res['How_supply']);  // روش انجام محاسبات
        $("#pieceManagmentRelatedPCode").val(res['montageCode']);  // کد محصول مرتبط
    }
}

function doEditCreatePiece() {
    var accType = $("#managePieceHiddenAccessType").val();
    var pid = $("#managePieceHiddenPid").val();
    var Pname = $("#pieceManagmentPname").val();  // نام قطعه
    if(!parseInt((Pname.trim()).length)){
        notice1Sec("نام قطعه مشخص نشده است !","yellow");
        return false;
    }
    var Pcode = $("#pieceManagmentPcode").val();  // کد قطعه
    if(!parseInt((Pcode.trim()).length)){
        notice1Sec("کد قطعه مشخص نشده است !","yellow");
        return false;
    }
    var Punit = $("#pieceManagmentPunit").val();  // واحد قطعه
    if(!parseInt((Punit.trim()).length)){
        notice1Sec("واحد قطعه مشخص نشده است !","yellow");
        return false;
    }
    var Collection = $("#pieceManagmentCollection_name").val();  // نام مجموعه
    var Subname = $("#pieceManagmentCollection_Subname").val();  // نام زیر مجموعه
    var Material = $("#pieceManagmentMaterial").val();  // جنس
    var Latin = $("#pieceManagmentLatin_title").val();  // عنوان لاتین

    var PriceDakheli = $("#pieceManagmentPriceDakheli").val();  // قیمت خرید داخلی (بدون ارزش افزوده)
    var tax = $("#pieceManagmentPriceDakheliTax").val();  // مالیات بر ارزش افزوده
    var PriceDakheliWithTax = $("#pieceManagmentPriceDakheliWithTax").val();  // قیمت خرید داخلی (با ارزش افزوده)
    var PACD = $("#pieceManagmentPACD").val();  // درصد هزینه های اضافی خرید داخلی
    var Kickback = $("#pieceManagmentKickback").val();  // مدت زمان باز پرداخت
    var CastingPrice = $("#pieceManagmentCastingPrice").val();  // اجرت ریخته گری
    var PFW = $("#pieceManagmentPercentFuelWeight").val();  // درصد سوخت بار(خرید ریخته گری)
    var CastMachPrice = $("#pieceManagmentCastMachPrice").val();  // مجموع اجرت ها
    var PFWBM = $("#pieceManagmentPFWBM").val();  // درصد سوخت بار(خرید ماشینکاری)

    var PlasticPlate = $("#pieceManagmentPlasticPlate").val();  // هزینه آب کاری تزریق پلاستیک
    var PercentageP = $("#pieceManagmentPercentageP").val();  // درصد هزینه حمل و نقل تزریق پلاستیک


    var CurrencyType = $("#pieceManagmentCurrencyType").val();  // نوع ارز
    var CurrencyAmount = $("#pieceManagmentCurrency_amount").val();  // مقدار ارز
    var PACV = $("#pieceManagmentPercentage_additional_costs").val();  // درصد هزینه های اضافی
    var montageCode = $("#pieceManagmentRelatedPCode").val();  // کد محصول مرتبط
    var Howsupply = $("#pieceManagmentHow_supply").val();  // روش محاسبات
    var ExternalSize = $("#pieceManagmentExternal_size_bullion").val(); // اندازه خارجی شمش
    var PriceBasis = $("#pieceManagmentPriceBasis").val();  // مبنای قیمت
    var Supplier = $("#pieceManagmentSupplier").val();  // تامین کننده
    var CatchDate = $("#pieceManagmentPriceCatchDate").val();  // تاریخ قیمت
    var desc = $("#pieceManagmentDescription").val();  // توضیحات

    if(parseInt(Howsupply) === -1){
        notice1Sec("روش انجام محاسبات انتخاب نشده است !","red");
        return false;
    }else if (parseInt(accType) === 2){  // دسترسی تدارکات و مهندسی
        switch (Howsupply) {
            case '1':  // وارداتی
                if(parseInt(CurrencyType) === 0){
                    notice1Sec("نوع ارز مشخص نشده است !","yellow");
                    return false;
                }
                if(!parseInt((CurrencyAmount.trim()).length) || !$.isNumeric(CurrencyAmount)){
                    notice1Sec("قیمت بر اساس ارز عددی نیست یا مشخص نشده است !","yellow");
                    return false;
                }
                if(!parseInt((CatchDate.trim()).length)){
                    notice1Sec("تاریخ قیمت گرفته شده مشخص نشده است !","yellow");
                    return false;
                }
                break;
            case '2':  // خرید داخلی
                if(!parseInt((PriceDakheli.trim()).length)){
                    notice1Sec("قیمت خرید داخلی (بدون ارزش افزوده) مشخص نشده است !","yellow");
                    return false;
                }
                if(!parseInt((tax.trim()).length) || parseInt(tax) == 0){
                    notice1Sec("مالیات بر ارزش افزوده مشخص نشده است !","yellow");
                    return false;
                }
                if(!parseInt((PriceDakheliWithTax.trim()).length)){
                    notice1Sec("قیمت خرید داخلی (با ارزش افزوده) مشخص نشده است !","yellow");
                    return false;
                }
                if(!parseInt((Kickback.trim()).length) || !$.isNumeric(Kickback)){
                    notice1Sec("مدت زمان باز پرداخت عددی نیست یا مشخص نشده است !","yellow");
                    return false;
                }
                if(!parseInt((CatchDate.trim()).length)){
                    notice1Sec("تاریخ قیمت گرفته شده مشخص نشده است !","yellow");
                    return false;
                }
                break;
            case '3':  // خرید قطعه ماشینکاری
                if(!parseInt((CastMachPrice.trim()).length)){
                    notice1Sec("مجموع اجرت ها مشخص نشده است !","yellow");
                    return false;
                }
                if(!parseInt((PFWBM.trim()).length) || !$.isNumeric(PFWBM)){
                    notice1Sec("درصد سوخت بار عددی نیست یا مشخص نشده است !","yellow");
                    return false;
                }
                if(!parseInt((CatchDate.trim()).length)){
                    notice1Sec("تاریخ قیمت گرفته شده مشخص نشده است !","yellow");
                    return false;
                }
                break;
            case '4':  // خرید قطعه ریخته گری
                if(!parseInt((CastingPrice.trim()).length)){
                    notice1Sec("اجرت ریخته گری مشخص نشده است !","yellow");
                    return false;
                }
                if(!parseInt((PFW.trim()).length) || !$.isNumeric(PFW)){
                    notice1Sec("درصد سوخت بار عددی نیست یا مشخص نشده است !","yellow");
                    return false;
                }
                if(!parseInt((CatchDate.trim()).length)){
                    notice1Sec("تاریخ قیمت گرفته شده مشخص نشده است !","yellow");
                    return false;
                }
                break;
            case '6':  // تولید ماشین کاری و فورج
            case '7':
                if(!parseInt((ExternalSize.trim()).length) || !$.isNumeric(ExternalSize)){
                    notice1Sec("اندازه خارجی شمش عددی نیست یا مشخص نشده است !","yellow");
                    return false;
                }
                break;
            case '8':  // تزریق پلاستیک
                if(!parseInt((CatchDate.trim()).length)){
                    notice1Sec("تاریخ قیمت گرفته شده مشخص نشده است !","yellow");
                    return false;
                }
                break;
            case '14':  // قطعه مونتاژی
                if(!parseInt((montageCode.trim()).length)){
                    notice1Sec("کد محصول مرتبط مشخص نشده است !","yellow");
                    return false;
                }
                break;
        }
    } else if (parseInt(accType) === 0){  // دسترسی تدارکات
        switch (Howsupply) {
            case '1':  // وارداتی
                if(parseInt(CurrencyType) === 0){
                    notice1Sec("نوع ارز مشخص نشده است !","yellow");
                    return false;
                }
                if(!parseInt((CurrencyAmount.trim()).length) || !$.isNumeric(CurrencyAmount)){
                    notice1Sec("قیمت بر اساس ارز عددی نیست یا مشخص نشده است !","yellow");
                    return false;
                }
                if(!parseInt((CatchDate.trim()).length)){
                    notice1Sec("تاریخ قیمت گرفته شده مشخص نشده است !","yellow");
                    return false;
                }
                break;
            case '2':  // خرید داخلی
                if(!parseInt((PriceDakheli.trim()).length)){
                    notice1Sec("قیمت خرید داخلی مشخص نشده است !","yellow");
                    return false;
                }
                if(!parseInt((tax.trim()).length) || parseInt(tax) == 0){
                    notice1Sec("مالیات بر ارزش افزوده مشخص نشده است !","yellow");
                    return false;
                }
                if(!parseInt((PriceDakheliWithTax.trim()).length)){
                    notice1Sec("قیمت خرید داخلی (با ارزش افزوده) مشخص نشده است !","yellow");
                    return false;
                }
                if(!parseInt((Kickback.trim()).length) || !$.isNumeric(Kickback)){
                    notice1Sec("مدت زمان باز پرداخت عددی نیست یا مشخص نشده است !","yellow");
                    return false;
                }
                if(!parseInt((CatchDate.trim()).length)){
                    notice1Sec("تاریخ قیمت گرفته شده مشخص نشده است !","yellow");
                    return false;
                }
                break;
            case '3':  // خرید قطعه ماشینکاری
                if(!parseInt((CastMachPrice.trim()).length)){
                    notice1Sec("مجموع اجرت ها مشخص نشده است !","yellow");
                    return false;
                }
                if(!parseInt((PFWBM.trim()).length) || !$.isNumeric(PFWBM)){
                    notice1Sec("درصد سوخت بار عددی نیست یا مشخص نشده است !","yellow");
                    return false;
                }
                if(!parseInt((CatchDate.trim()).length)){
                    notice1Sec("تاریخ قیمت گرفته شده مشخص نشده است !","yellow");
                    return false;
                }
                break;
            case '4':  // خرید قطعه ریخته گری
                if(!parseInt((CastingPrice.trim()).length)){
                    notice1Sec("اجرت ریخته گری مشخص نشده است !","yellow");
                    return false;
                }
                if(!parseInt((PFW.trim()).length) || !$.isNumeric(PFW)){
                    notice1Sec("درصد سوخت بار عددی نیست یا مشخص نشده است !","yellow");
                    return false;
                }
                if(!parseInt((CatchDate.trim()).length)){
                    notice1Sec("تاریخ قیمت گرفته شده مشخص نشده است !","yellow");
                    return false;
                }
                break;
            case '8':  // تزریق پلاستیک
                if(!parseInt((CatchDate.trim()).length)){
                    notice1Sec("تاریخ قیمت گرفته شده مشخص نشده است !","yellow");
                    return false;
                }
                break;
        }
    }else {  // دسترسی مهندسی
        if(parseInt(Howsupply) !== 14){
            montageCode = '';
        }else if(!parseInt((montageCode.trim()).length)){
            notice1Sec("کد محصول مرتبط مشخص نشده است !","yellow");
            return false;
        }
        if (parseInt(Howsupply) === 6 || parseInt(Howsupply) === 7){  // تولید ماشینکاری و فورج
            if(!parseInt((ExternalSize.trim()).length) || !$.isNumeric(ExternalSize)){
                notice1Sec("اندازه خارجی شمش عددی نیست یا مشخص نشده است !","yellow");
                return false;
            }
        }else {
            if(parseInt((ExternalSize.trim()).length) > 0 && !$.isNumeric(ExternalSize)){
                notice1Sec("اندازه خارجی شمش باید عددی باشد !","yellow");
                return false;
            }
        }
    }
    var Technical = $("#pieceManagmentTechnical_Specifications").val();  // مشخصات فنی
    var RECode = $("#pieceManagmentReferenceECode").val();  // کد مهندسی مرجع
    var FSC = $("#pieceManagmentFSC").val();  // اولین مرحله ساخت
    var RMCode = $("#pieceManagmentRawMaterialCode").val();  // کد مواد اولیه
    var dimensions = $("#pieceManagmentCustom_dimensions").val();  // ابعاد سفارشی
    var Wmaterials = $("#pieceManagmentWeight_materials").val();  // وزن مواد اولیه
    if(parseInt((Wmaterials.trim()).length) > 0 && !$.isNumeric(Wmaterials)){
        notice1Sec("وزن مواد اولیه باید عددی باشد !","yellow");
        return false;
    }
    var WMachining = $("#pieceManagmentWeight_Machining").val();  // وزن ماشینکاری
    if(parseInt((WMachining.trim()).length) > 0 && !$.isNumeric(WMachining)){
        notice1Sec("وزن ماشینکاری باید عددی باشد !","yellow");
        return false;
    }
    var WFinal = $("#pieceManagmentWeight_Final").val();  // وزن نهایی
    if(parseInt((WFinal.trim()).length) > 0 && !$.isNumeric(WFinal)){
        notice1Sec("وزن نهایی باید عددی باشد !","yellow");
        return false;
    }
    var Systemweight = $("#pieceManagmentSystem_weight").val();  // وزن سیستمی
    if(parseInt((Systemweight.trim()).length) > 0 && !$.isNumeric(Systemweight)){
        notice1Sec("وزن سیستمی باید عددی باشد !","yellow");
        return false;
    }
    var PBW = $("#pieceManagmentPrimaryBaseWeight").val();  // وزن مبنای اولیه
    if(parseInt((PBW.trim()).length) > 0 && !$.isNumeric(PBW)){
        notice1Sec("وزن مبنای اولیه باید عددی باشد !","yellow");
        return false;
    }
    var MBW = $("#pieceManagmentMachiningBaseWeight").val();  // وزن مبنای ماشینکاری
    if(parseInt((MBW.trim()).length) > 0 && !$.isNumeric(MBW)){
        notice1Sec("وزن مبنای ماشینکاری باید عددی باشد !","yellow");
        return false;
    }
    var FBW = $("#pieceManagmentFinalBaseWeight").val();  // وزن مبنای نهایی
    if(parseInt((FBW.trim()).length) > 0 && !$.isNumeric(FBW)){
        notice1Sec("وزن مبنای نهایی باید عددی باشد !","yellow");
        return false;
    }
    var LoadPolish = $("#pieceManagmentLoadPolish").val();  // بارریزی پرداخت
    if(parseInt((LoadPolish.trim()).length) > 0 && !$.isNumeric(LoadPolish)){
        notice1Sec("بارریزی پرداخت باید عددی باشد !","yellow");
        return false;
    }
    var action = "doEditCreatePiece";
    var param = {action:action,pid:pid,Pname:Pname,Pcode:Pcode,Punit:Punit,Collection:Collection,Subname:Subname,
                 Material:Material,Latin:Latin,PriceDakheli:PriceDakheli,PriceDakheliWithTax:PriceDakheliWithTax,PACD:PACD,CastingPrice:CastingPrice,PFW:PFW,
                 CastMachPrice:CastMachPrice,PFWBM:PFWBM,CurrencyType:CurrencyType, CurrencyAmount:CurrencyAmount,
                 PACV:PACV,montageCode:montageCode,Howsupply:Howsupply,Technical:Technical,RECode:RECode,FSC:FSC,
                 RMCode:RMCode,dimensions:dimensions,ExternalSize:ExternalSize,Wmaterials:Wmaterials,WMachining:WMachining,
                 WFinal:WFinal,PBW:PBW,MBW:MBW,FBW:FBW,Systemweight:Systemweight,LoadPolish:LoadPolish,PriceBasis:PriceBasis,
                 Supplier:Supplier,CatchDate:CatchDate,desc:desc,Kickback:Kickback,PlasticPlate:PlasticPlate,PercentageP:PercentageP};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
        $('#pieceManagmentModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        var page = $("#managePieceHiddenPage").val();
        showPieceManageList(page);
    }
}

function calcPriceWithTax() {
    var tax = $("#pieceManagmentPriceDakheliTax").val();
    var price = $("#pieceManagmentPriceDakheli").val();
    tax = tax/100;
    price = price.replaceAll(',','');
    var priceTax = price * tax;
    var totalPrice = parseInt(price) + parseInt(priceTax);
    $("#pieceManagmentPriceDakheliWithTax").val(String(totalPrice).replace(/(.)(?=(\d{3})+$)/g,'$1,'));
}

function ShowGoodsOfPiece(pCode) {
    var action = "ShowGoodsOfPiece";
    var param = {action:action,pCode:pCode};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#Piece-manage-Goods-body").html('');
        $("#Piece-manage-Goods-body").html(res);
        $('#pieceManageGoodsModal').modal('show');
    }
}

function ShowOtherInfoPiece(pid) {
    var action = "ShowOtherInfoPiece";
    var param = {action:action,pid:pid};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#Piece-manage-Info-body").html('');
        $("#Piece-manage-Info-body").html(res);
        $('#pieceManageInfoModal').modal('show');
    }
}

function ShowAddFilePiece(pid) {
    $("#managePieceHiddenFilePid").val(pid);
    $("#pieceManagmentMap_Number").val('');  // شماره نقشه
    $("#pieceManagmentMap_File").val('');  // عکس نقشه
    $("#pieceManagmentPiece_Image").val('');  // عکس قطعه
    $('#pieceManagmentAddFileModal').modal('show');
}

function doCreatePieceFile() {
    var pid = $("#managePieceHiddenFilePid").val();  // آیدی قطعه
    var MapNumber = $("#pieceManagmentMap_Number").val();  // شماره نقشه
    var formData = new FormData();

    if($('#pieceManagmentMap_File').val() != '' || $('#pieceManagmentMap_File')[0].files.length != 0){
        var fileSelect = document.getElementById('pieceManagmentMap_File');
        var files = fileSelect.files;
        var fileName = files[0].name.toLowerCase();

        if(fileName.indexOf('.pdf') !== fileName.length - 4) {
            notice1Sec("نوع فایل انتخابی غیر مجاز است !","yellow");
            return false;
        }
        formData.append("pdfMap",files[0]);
    }

    if($('#pieceManagmentPiece_Image').val() != '' || $('#pieceManagmentPiece_Image')[0].files.length != 0){
        var fileSelect1 = document.getElementById('pieceManagmentPiece_Image');
        var files1 = fileSelect1.files;
        if (!(files1[0].type.match("image.*") && files1[0].name.match(/\.(jpg|jpeg)$/i) ) ){
            notice1Sec("نوع فایل انتخابی غیر مجاز است !","yellow");
            return false;
        }
        formData.append("photo",files1[0]);
    }

    if($('#pieceManagmentOPC_File').val() != '' || $('#pieceManagmentOPC_File')[0].files.length != 0){
        var fileSelect2 = document.getElementById('pieceManagmentOPC_File');
        var files2 = fileSelect2.files;
        var fileName1 = files2[0].name.toLowerCase();
        if(fileName1.indexOf('.pdf') !== fileName1.length - 4) {
            notice1Sec("نوع فایل انتخابی غیر مجاز است !","yellow");
            return false;
        }
        formData.append("OPC",files2[0]);
    }
    formData.append("action","doCreatePieceFile");
    formData.append("pid",pid);
    formData.append("MapNumber",MapNumber);

    var xhr = new XMLHttpRequest();
    xhr.open('POST', 'php/managemantproccess.php',true);
    xhr.onload = function () {
        if (xhr.status === 200) {
            var res = JSON.parse(xhr.responseText);
            if(res['res'] == "false"){
                notice1Sec(res['data'],'yellow');
            }else{
                notice1Sec(res['data'],'green');
                $('#pieceManagmentAddFileModal').modal('hide');
                $('body').removeClass('modal-open');
                $('.modal-backdrop').remove();
                managePiece();
            }
        }else{
            notice1Sec("خطایی رخ داده است !",'yellow');
        }
    };
    xhr.send(formData);
}

function uploadPieceMasterList() {
    $("#pieceManagmentPML_File").val('');  // فایل اکسل قطعات
    $('#uploadPMasterListModal').modal('show');
}

function doUploadPMListFile() {
    var formData = new FormData();

    if($('#pieceManagmentPML_File').val() != '' || $('#pieceManagmentPML_File')[0].files.length != 0){
        var fileSelect = document.getElementById('pieceManagmentPML_File');
        var files = fileSelect.files;
        var fileName = files[0].name.toLowerCase();
        if(fileName.indexOf('.xlsx') !== fileName.length - 5) {
            notice1Sec("نوع فایل انتخابی غیر مجاز است !","yellow");
            return false;
        }
        formData.append("excPML",files[0]);
    }
    formData.append("action","doUploadPMListFile");
    var xhr = new XMLHttpRequest();
    xhr.open('POST', 'php/managemantproccess.php',true);
    xhr.onload = function () {
        if (xhr.status === 200) {
            var res = JSON.parse(xhr.responseText);
            if(res['res'] == "false"){
                notice1Sec(res['data'],'yellow');
            }else{
                $("#uploadPieceMasterListID").css("display", "none");
                $("#uploadAgainPieceMasterListID").css("display", '');
                notice1Sec(res['data'],'green');
                $('#uploadPMasterListModal').modal('hide');
                $('body').removeClass('modal-open');
                $('.modal-backdrop').remove();
                showPieceManageList();
            }
        }else{
            notice1Sec("خطایی رخ داده است !",'yellow');
        }
    };
    xhr.send(formData);
}

function uploadAgainPieceMasterList() {
    var action = "uploadAgainPieceMasterList";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#uploadPieceMasterListID").css("display", "");
        $("#uploadAgainPieceMasterListID").css("display", "none");
        notice1Sec(res,"green");
    }
}

function downloadFilePiece() {
    var pid = $("#managePieceHiddenFilePid").val();
    var action = "downloadFilePiece";
    var param = {action:action,pid:pid};
    var res = manageAjaxRequest(param);
    if(res != false){
        window.open(res);
    }
}

function downloadFileOPC() {
    var pid = $("#managePieceHiddenFilePid").val();
    var action = "downloadFileOPC";
    var param = {action:action,pid:pid};
    var res = manageAjaxRequest(param);
    if(res != false){
        window.open(res);
    }
}

function downloadImagePiece() {
    var pid = $("#managePieceHiddenFilePid").val();
    var action = "downloadImagePiece";
    var param = {action:action,pid:pid};
    var res = manageAjaxRequest(param);
    if(res != false){
        window.open(res);
    }
}

function downloadIPPiece() {
    var pid = $("#managePieceHiddenFilePid").val();
    var action = "downloadIPPiece";
    var param = {action:action,pid:pid};
    var res = manageAjaxRequest(param);
    if(res != false){
        window.open(res);
    }
}

//++++++++++++++++++++++ مدیریت محصولات +++++++++++++++++++++++

function manageGood() {
    var action = "manageGood";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    if(res != false) {
        $("#manageGoodID").html('');
        $("#manageGoodID").html(res);
        var data1 = Main.getGoodNameList();
        var goodName = new Array();
        var goodNames = {aa:[]};
        for(var e=0;e<data1.length;e++){
            goodName[e]=data1[e]['gName'];
            goodNames.aa.push({
                "id" : data1[e]['RowID'],
                "name"  : data1[e]['gName'],
            });
        }
        $("#goodManagmentSimilarGood").typeahead({ source:goodNames.aa });
        $("#uploadAgainGoodMasterListID").css("display", "none");
        $("#uploadAgainBOMListID").css("display", "none");
        showGoodManageList();
    }
}

function showGoodManageList(page) {
    if(typeof page == "undefined"){
        page = 1;
    }
    var gName = $('#goodManageGnameSearch').val();
    var gCode = $('#goodManageGcodeSearch').val();
    var parvaneh = $('#goodManageParvanehSearch').val();
    var action = "showGoodManageList";
    var param = {action:action,page:page,gName:gName,gCode:gCode,parvaneh:parvaneh};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#goodManageBody").html('');
        $("#goodManageBody").html(res);
		$("#manageGoodHiddenPage").val(page);
    }
}

function showMGoodManageList(page) {
    if(typeof page == "undefined"){
        page = 1;
    }
    var gName = $('#goodManageGnameSearch').val();
    var gCode = $('#goodManageGcodeSearch').val();
    var parvaneh = $('#goodManageParvanehSearch').val();
    var action = "showMGoodManageList";
    var param = {action:action,page:page,gName:gName,gCode:gCode,parvaneh:parvaneh};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#goodManageBody").html('');
        $("#goodManageBody").html(res);
        //$('#goodManageGnameSearch').val('')
        $("#manageGoodHiddenPage").val(page);
    }
}

function showMGoodPageManageList(page) {
    if(typeof page == "undefined"){
        page = 1;
    }
    var gName = $('#goodManageGnameSearch').val();
    var gCode = $('#goodManageGcodeSearch').val();
    var parvaneh = $('#goodManageParvanehSearch').val();
    var action = "showMGoodPageManageList";
    var param = {action:action,page:page,gName:gName,gCode:gCode,parvaneh:parvaneh};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#goodManageBody").html('');
        $("#goodManageBody").html(res);
        //$('#goodManageGnameSearch').val('')
        $("#manageGoodHiddenPage").val(page);
    }
}

function showBMGoodManageList(page) {
    if(typeof page == "undefined"){
        page = 1;
    }
    var action = "showBMGoodManageList";
    var param = {action:action,page:page};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#goodManageBody").html('');
        $("#goodManageBody").html(res);
        $("#manageGoodHiddenPage").val(page);
    }
}

function showBMGoodPageManageList(page) {
    if(typeof page == "undefined"){
        page = 1;
    }
    var action = "showBMGoodPageManageList";
    var param = {action:action,page:page};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#goodManageBody").html('');
        $("#goodManageBody").html(res);
        $("#manageGoodHiddenPage").val(page);
    }
}

function emptyGoodManageSearchFilters() {
    $('#goodManageGnameSearch').val('');
    $('#goodManageGcodeSearch').val('');
    $('#goodManageParvanehSearch').val(-1);
    showGoodManageList();
}

function createGood() {
    $("#manageGoodHiddenGid").val('');
    $("#goodManagmentGname").val('');
    $("#goodManagmentGcode").val('');
    $("#goodManagmentSimilarGood").val('');
    $("#goodManagmentSimilarGood"+"-div").css("display", '');
    $('#goodManagmentModal').modal('show');
}

function editGood() {
    var ch = $('#goodManageBody-table').find('input');
    var gid = new Array();
    for(var c=0;c<ch.length;c++){
        if(ch[c].checked){
            gid[gid.length] = ch[c].attributes.rid.value;
        }
    }
    if(gid.length > 1){
        notice1Sec("فقط یک محصول باید انتخاب شده باشد !","red");
        return false;
    }
    if(gid.length==0){
        notice1Sec("هیچ محصولی انتخاب نشده است !","red");
        return false;
    }
    gid = gid[0];
    var res = Main.getGoodInfo(gid);
    if(res != false){
        $('#goodManagmentModal').modal('show');
        $("#goodManagmentSimilarGood"+"-div").css("display", 'none');
        $("#manageGoodHiddenGid").val(res['gid']);
        $("#goodManagmentGname").val(res['gName']);
        $("#goodManagmentGcode").val(res['gCode']);
    }
}

function doEditCreateGood() {
    var gid = $("#manageGoodHiddenGid").val();
    var Gname = $("#goodManagmentGname").val();
    var Gcode = $("#goodManagmentGcode").val();
    var similar = $("#goodManagmentSimilarGood").val();
    if(!parseInt((Gname.trim()).length)){
        notice1Sec("نام محصول مشخص نشده است !","yellow");
        return false;
    }
    if(!parseInt((Gcode.trim()).length)){
        notice1Sec("کد محصول مشخص نشده است !","yellow");
        return false;
    }
    var action = "doEditCreateGood";
    var param = {action:action,gid:gid,Gname:Gname,Gcode:Gcode,similar:similar};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
        $('#goodManagmentModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        var page = $("#manageGoodHiddenPage").val();
        showMGoodPageManageList(page);
    }
}

function showGoodInfo(gid) {
    var action = "showGoodInfo";
    var param = {action:action,gid:gid};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#good-manage-Info-body").html('');
        $("#good-manage-Info-body").html(res);
        $('#goodManageInfoModal').modal('show');
    }
}

function showGoodPieces(gid) {
    var action = "showGoodPieces";
    var param = {action:action,gid:gid};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#good-manage-Pieces-body").html('');
        $("#good-manage-Pieces-body").html(res);
        $('#goodManagePiecesModal').modal('show');
    }
}

function doEditCreateCoefficientPiece() {
    var gCode = $("#goodManage-HiddenID").val();
    var ch = $('#goodPieces-tableID').find('input:checked');
    var information = new Array();
    for(var c=0;c<ch.length;c++){
        var grade = ch[c].attributes.rid.value;
        var Coefficient = $("#pieceCoefficient-"+grade).val();
        if(parseInt((Coefficient.trim()).length) == 0 || parseFloat(Coefficient) == 0){
            notice1Sec("ضرایب نمی توانند خالی یا صفر باشند !","yellow");
            return false;
        }
        var pCode = $("#pCode-"+grade+"-Hidden").val();
        information[information.length] = [Coefficient,pCode];
    }
    var myJsonString = JSON.stringify(information);
    var action = "doEditCreateCoefficientPiece";
    var param = {action:action,myJsonString:myJsonString,gCode:gCode};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
        $('#goodManagePiecesModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        //showGoodManageList();
    }
}

function activeInactivePieceOfGood(pCode,gCode,isEnable,gid) {
    var action = "activeInactivePieceOfGood";
    var param = {action:action,pCode:pCode,gCode:gCode,isEnable:isEnable,gid:gid};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
        showGoodPieces(gid);
    }
}

function deletePieceOfGood(pCode,gCode,gid) {
    $("#goodManage-HiddenGCode").val(gCode);
    $("#goodManage-HiddenPCode").val(pCode);
    $("#goodManage-HiddenGoodID").val(gid);
    $('#goodManageDeletePieceModal').modal('show');
}

function doDeletePieceOfGood() {
    var gCode = $("#goodManage-HiddenGCode").val();
    var pCode = $("#goodManage-HiddenPCode").val();
    var gid = $("#goodManage-HiddenGoodID").val();
    var action = "doDeletePieceOfGood";
    var param = {action:action,gCode:gCode,pCode:pCode};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
        $('#goodManageDeletePieceModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        showGoodPieces(gid);
    }
}

function addEditPieceToGoods() {  //+++++++ افزودن/ویرایش قطعه در محصولات +++++++
    var data = Main.getPieceNameList();
    var pieceName = new Array();
    var pieceNames = {aa:[]};
    for(var d=0;d<data.length;d++){
        pieceName[d]=data[d]['pName'];
        pieceNames.aa.push({
            "id" : data[d]['RowID'],
            "name"  : data[d]['pName'],
        });
    }
    $("#addPieceToGoodsManagePName").typeahead({ source:pieceNames.aa });

    var data1 = Main.getGoodNameList();
    var goodName = new Array();
    var goodNames = {aa:[]};
    for(var e=0;e<data1.length;e++){
        goodName[e]=data1[e]['gName'];
        goodNames.aa.push({
            "id" : data1[e]['RowID'],
            "name"  : data1[e]['gName'],
        });
    }
    $("#addPieceToGoodsManageGName").typeahead({ source:goodNames.aa });

    $("#addPieceToGoodsManagePName").val('');
    $("#addPieceToGoodsManageGName").val('');
    $("#addPieceToGoodsManagePCoefficient").val('');
    $("#addPieceToGoodsManageGNames").val('');
    $('#addEditPieceToGoodsManagmentModal').modal('show');
}

function addGoods() {
    var gName = $('#addPieceToGoodsManageGName').val();
    var gNamep = $('#pieceManageGoodSearchGName').val();
    var gNamec = $('#goodCompareBOMGname').val();
    if(typeof gName !== "undefined"){
        if(parseInt((gName.trim()).length) !== 0) {
            if ($('#addPieceToGoodsManageGNames').val() == '') {
                $('#addPieceToGoodsManageGNames').val($('#addPieceToGoodsManageGName').val());
            } else {
                $('#addPieceToGoodsManageGNames').val($('#addPieceToGoodsManageGNames').val() + ',' + $('#addPieceToGoodsManageGName').val());
            }
            $('#addPieceToGoodsManageGName').val('');
        }
    }
    if(typeof gNamep !== "undefined"){
        if(parseInt((gNamep.trim()).length) !== 0) {
            if ($('#pieceManageGoodSearchGNames').val() == '') {
                $('#pieceManageGoodSearchGNames').val($('#pieceManageGoodSearchGName').val());
            } else {
                $('#pieceManageGoodSearchGNames').val($('#pieceManageGoodSearchGNames').val() + ',' + $('#pieceManageGoodSearchGName').val());
            }
            $('#pieceManageGoodSearchGName').val('');
        }
    }
    if(typeof gNamec !== "undefined"){
        if(parseInt((gNamec.trim()).length) !== 0) {
            if ($('#goodCompareBOMGnames').val() == '') {
                $('#goodCompareBOMGnames').val($('#goodCompareBOMGname').val());
            } else {
                $('#goodCompareBOMGnames').val($('#goodCompareBOMGnames').val() + ',' + $('#goodCompareBOMGname').val());
            }
            $('#goodCompareBOMGname').val('');
        }
    }
}

function doAddPieceToGoods() {
    var pName = $('#addPieceToGoodsManagePName').val();
    var gNames = $('#addPieceToGoodsManageGNames').val();
    var Coefficient = $('#addPieceToGoodsManagePCoefficient').val();
    if(!parseInt((pName.trim()).length)){
        notice1Sec("نام قطعه مشخص نشده است !","yellow");
        return false;
    }
    if(!parseInt((Coefficient.trim()).length) || parseFloat(Coefficient) === 0){
        notice1Sec("ضریب قطعه مشخص نشده یا صفر است !","yellow");
        return false;
    }
    if(!$.isNumeric(Coefficient)){
        notice1Sec("ضریب قطعه باید عددی باشد !","yellow");
        return false;
    }
    if(!parseInt((gNames.trim()).length)){
        notice1Sec("محصول/محصولات مشخص نشده است !","yellow");
        return false;
    }
    var action = "doAddPieceToGoods";
    var param = {action:action,pName:pName,gNames:gNames,Coefficient:Coefficient};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
        $('#addEditPieceToGoodsManagmentModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        var page = $("#manageGoodHiddenPage").val();
        showGoodManageList(page);
    }
}

function doEditPieceToGoods() {
    var pName = $('#addPieceToGoodsManagePName').val();
    var gNames = $('#addPieceToGoodsManageGNames').val();
    var Coefficient = $('#addPieceToGoodsManagePCoefficient').val();
    if(!parseInt((pName.trim()).length)){
        notice1Sec("نام قطعه مشخص نشده است !","yellow");
        return false;
    }
    if(!parseInt((Coefficient.trim()).length) || parseFloat(Coefficient) === 0){
        notice1Sec("ضریب قطعه مشخص نشده یا صفر است !","yellow");
        return false;
    }
    if(!$.isNumeric(Coefficient)){
        notice1Sec("ضریب قطعه باید عددی باشد !","yellow");
        return false;
    }
    if(!parseInt((gNames.trim()).length)){
        notice1Sec("محصول/محصولات مشخص نشده است !","yellow");
        return false;
    }
    var action = "doEditPieceToGoods";
    var param = {action:action,pName:pName,gNames:gNames,Coefficient:Coefficient};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
        $('#addEditPieceToGoodsManagmentModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        var page = $("#manageGoodHiddenPage").val();
        showGoodManageList(page);
    }
}

function addPiecesToGood() {  //+++++++ افزودن قطعات به محصول +++++++
    var ch = $('#goodManageBody-table').find('input');
    var gid = new Array();
    for(var c=0;c<ch.length;c++){
        if(ch[c].checked){
            gid[gid.length] = ch[c].attributes.rid.value;
        }
    }
    if(gid.length > 1){
        notice1Sec("فقط یک محصول باید انتخاب شده باشد !","red");
        return false;
    }
    if(gid.length==0){
        notice1Sec("هیچ محصولی انتخاب نشده است !","red");
        return false;
    }
    gid = gid[0];
    $("#addPiecesToGoodManageHiddenGid").val('');
    $("#addPiecesToGoodManageHiddenGid").val(gid);

    var data = Main.getPieceNameList();
    var pieceName = new Array();
    var pieceNames = {aa:[]};
    for(var d=0;d<data.length;d++){
        pieceName[d]=data[d]['pName'];
        pieceNames.aa.push({
            "id" : data[d]['RowID'],
            "name"  : data[d]['pName'],
        });
    }
    $("#addPiecesToGoodManagePName").typeahead({ source:pieceNames.aa });

    $("#addPiecesToGoodManagePName").val('');
    $("#addPiecesToGoodManagePCoefficient").val('');
    $("#addPiecesToGoodManagePiecesCoefficient").val('');
    
    $("#addPiecesToGoodManagePName").removeAttr("disabled");
    $("#addPiecesToGoodManagePCoefficient").attr("disabled","true");
    $("#addPiecesToGoodManagePiecesCoefficient").attr("disabled","true");
    $('#addPiecesToGoodManagmentModal').modal('show');
}

function addPieces() {
    var pName = $('#addPiecesToGoodManagePName').val();
    if(parseInt((pName.trim()).length) !== 0) {
        $("#addPiecesToGoodManagePCoefficient").removeAttr("disabled");
        $("#addPiecesToGoodManagePName").attr("disabled","true");

        if ($('#addPiecesToGoodManagePiecesCoefficient').val() == '') {
            $('#addPiecesToGoodManagePiecesCoefficient').val($('#addPiecesToGoodManagePName').val());
        } else {
            $('#addPiecesToGoodManagePiecesCoefficient').val($('#addPiecesToGoodManagePiecesCoefficient').val() + ',' + $('#addPiecesToGoodManagePName').val());
        }
        $('#addPiecesToGoodManagePName').val('');
    }
}

function addPCoefficient() {
    var Coefficient = $('#addPiecesToGoodManagePCoefficient').val();
    if(parseInt((Coefficient.trim()).length) !== 0) {
        if(!$.isNumeric(Coefficient) || parseFloat(Coefficient) === 0){
            $('#addPiecesToGoodManagePCoefficient').val('');
            notice1Sec("ضریب قطعه عددی نیست یا صفر است !","yellow");
            return false;
        }else {
            $("#addPiecesToGoodManagePName").removeAttr("disabled");
            $("#addPiecesToGoodManagePCoefficient").attr("disabled","true");

            if ($('#addPiecesToGoodManagePiecesCoefficient').val() == '') {
                $('#addPiecesToGoodManagePiecesCoefficient').val($('#addPiecesToGoodManagePCoefficient').val());
            }else{
                $('#addPiecesToGoodManagePiecesCoefficient').val($('#addPiecesToGoodManagePiecesCoefficient').val() + ',' + $('#addPiecesToGoodManagePCoefficient').val());
            }
            $('#addPiecesToGoodManagePCoefficient').val('');
        }
    }
}

function doAddPiecesToGood() {
    var gid = $('#addPiecesToGoodManageHiddenGid').val();
    var PiecesCoefficient = $('#addPiecesToGoodManagePiecesCoefficient').val();
    if(!parseInt((PiecesCoefficient.trim()).length)){
        notice1Sec("قطعات و ضریب ها مشخص نشده است !","yellow");
        return false;
    }
    var action = "doAddPiecesToGood";
    var param = {action:action,gid:gid,PiecesCoefficient:PiecesCoefficient};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
        $('#addPiecesToGoodManagmentModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        var page = $("#manageGoodHiddenPage").val();
        showMGoodPageManageList(page);
    }
}

function uploadGoodMasterList() {
    $("#goodManagmentPML_File").val('');  // فایل اکسل قطعات
    $('#uploadGMasterListModal').modal('show');
}

function doUploadGMListFile() {
    var formData = new FormData();
    if($('#goodManagmentPML_File').val() != '' || $('#goodManagmentPML_File')[0].files.length != 0){
        var fileSelect = document.getElementById('goodManagmentPML_File');
        var files = fileSelect.files;
        var fileName = files[0].name.toLowerCase();
        if(fileName.indexOf('.xlsx') !== fileName.length - 5) {
            notice1Sec("نوع فایل انتخابی غیر مجاز است !","yellow");
            return false;
        }
        formData.append("excGML",files[0]);
    }
    formData.append("action","doUploadGMListFile");
    var xhr = new XMLHttpRequest();
    xhr.open('POST', 'php/managemantproccess.php',true);
    xhr.onload = function () {
        if (xhr.status === 200) {
            var res = JSON.parse(xhr.responseText);
            if(res['res'] == "false"){
                notice1Sec(res['data'],'yellow');
            }else{
                $("#uploadGoodMasterListID").css("display", "none");
                $("#uploadAgainGoodMasterListID").css("display", '');
                notice1Sec(res['data'],'green');
                $('#uploadGMasterListModal').modal('hide');
                $('body').removeClass('modal-open');
                $('.modal-backdrop').remove();
                showGoodManageList();
            }
        }else{
            notice1Sec("خطایی رخ داده است !",'yellow');
        }
    };
    xhr.send(formData);
}

function uploadAgainGoodMasterList() {
    var action = "uploadAgainGoodMasterList";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#uploadGoodMasterListID").css("display", '');
        $("#uploadAgainGoodMasterListID").css("display", 'none');
        notice1Sec(res,"green");
    }
}

function uploadBOMList() {
    $("#goodManagmentBOM_File").val('');  // فایل اکسل BOM
    $('#uploadBOMListModal').modal('show');
}

function doUploadBOMListFile() {
    var formData = new FormData();

    if($('#goodManagmentBOM_File').val() != '' || $('#goodManagmentBOM_File')[0].files.length != 0){
        var fileSelect = document.getElementById('goodManagmentBOM_File');
        var files = fileSelect.files;
        var fileName = files[0].name.toLowerCase();
        if(fileName.indexOf('.csv') !== fileName.length - 4) {
            notice1Sec("نوع فایل انتخابی غیر مجاز است !","yellow");
            return false;
        }
        formData.append("excBOM",files[0]);
    }
    formData.append("action","doUploadBOMListFile");
    var xhr = new XMLHttpRequest();
    xhr.open('POST', 'php/managemantproccess.php',true);
    xhr.onload = function () {
        if (xhr.status === 200) {
            var res = JSON.parse(xhr.responseText);
            if(res['res'] == "false"){
                notice1Sec(res['data'],'yellow');
            }else{
                $("#uploadBOMListID").css("display", "none");
                $("#uploadAgainBOMListID").css("display", '');
                notice1Sec(res['data'],'green');
                $('#uploadBOMListModal').modal('hide');
                $('body').removeClass('modal-open');
                $('.modal-backdrop').remove();
                showPieceManageList();
            }
        }else{
            notice1Sec("خطایی رخ داده است !",'yellow');
        }
    };
    xhr.send(formData);
}

function uploadAgainBOMList() {
    var action = "uploadAgainBOMList";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#uploadBOMListID").css("display", "");
        $("#uploadAgainBOMListID").css("display", "none");
        notice1Sec(res,"green");
    }
}

function createMasterListGoodExcel() {
    var gName = $('#goodManageGnameSearch').val();
    var gCode = $('#goodManageGcodeSearch').val();
    var parvaneh = $('#goodManageParvanehSearch').val();
    var action = "createMasterListGoodExcel";
    var param = {action:action,gName:gName,gCode:gCode,parvaneh:parvaneh};
    var res = manageAjaxRequest(param);
    if(res != false){
        window.open(res);
    }
}

//+++++++++++++++ مدیریت نرخ ها +++++++++++++++

function manageRates() {
    var action = "manageRates";
    var param = {action:action};
    var res = manageAjaxRequest(param);
   
    if(res != true) {
        $("#manageRatesID").html('');
        $("#manageRatesID").html(res[1]);

        if(jQuery.inArray(1, res[0]) !== -1) {
            $("#currencyManagmentCuname"+"-div").css("display", '');
            showCurrencyManageList();
        }
        if(jQuery.inArray(2, res[0]) !== -1) {
            $("#brassWeightManagePolishingSoilPrice").attr("disabled","true");
            showManageBrassWeightList();
        }
        if(jQuery.inArray(3, res[0]) !== -1) {
            $("#personnelManagmentSalarySubGroup").selectpicker();
            $("#personnelManagmentCompareMethod").selectpicker();
            $("#personnelManagmentProficiency").attr("disabled","true");
            $("#personnelManagmentPassedCourses").attr("disabled","true");
            $("#personnelManagmentFieldStudy").attr("disabled","true");
            $("#personnelManagmentLeaveStatus").prop('checked',true);
            $("#personnelManagmentOvertimeStatus").prop('checked',true);

            $("#personnelManagmentFName"+"-div").css("display", 'none');
            $("#personnelManagmentLName"+"-div").css("display", 'none');
            $("#personnelManagmentFatherName"+"-div").css("display", 'none');
            $("#personnelManagmentPcode"+"-div").css("display", 'none');
            $("#personnelManagmentGender"+"-div").css("display", 'none');
            $("#personnelManagmentStatus"+"-div").css("display", 'none');
            $("#personnelManagmentBirthDate"+"-div").css("display", 'none');
            $("#personnelManagmentPYFR"+"-div").css("display", 'none');
            $("#personnelManagmentNoInsurance"+"-div").css("display", 'none');
            $("#personnelManagmentRecruitmentDate"+"-div").css("display", 'none');
            $("#personnelManagmentBeginDateContract"+"-div").css("display", 'none');
            $("#personnelManagmentEndDateContract"+"-div").css("display", 'none');
            $("#personnelManagmentPhone"+"-div").css("display", 'none');
            $("#personnelManagmentMobile"+"-div").css("display", 'none');
            $("#personnelManagmentTermContract"+"-div").css("display", 'none');
            $("#personnelManagmentMonthTrial"+"-div").css("display", 'none');
            $("#personnelManagmentBirthCertificateNum"+"-div").css("display", 'none');
            $("#personnelManagmentIssued"+"-div").css("display", 'none');
            $("#personnelManagmentNationalCode"+"-div").css("display", 'none');
            $("#personnelManagmentMaritalStatus"+"-div").css("display", 'none');
            $("#personnelManagmentAddress"+"-div").css("display", 'none');
            $("#personnelManagmentInsuranceNumber"+"-div").css("display", 'none');
            $("#personnelManagmentAccountNumber"+"-div").css("display", 'none');
            $("#personnelManagmentEvaluationScore"+"-div").css("display", 'none');
            $("#personnelManagmentUnits"+"-div").css("display", 'none');
            $("#personnelManagmentDegreeEducation"+"-div").css("display", 'none');
            $("#personnelManagmentFieldStudy"+"-div").css("display", 'none');
            $("#personnelManagmentDegreeFieldStudy"+"-div").css("display", 'none');
            $("#personnelManagmentAbilityHeadGroup"+"-div").css("display", 'none');
            $("#personnelManagmentAbility"+"-div").css("display", 'none');
            $("#personnelManagmentProficiency"+"-div").css("display", 'none');
            $("#personnelManagmentPassedCourses"+"-div").css("display", 'none');
            $("#personnelManagmentAbilityProficiency"+"-div").css("display", 'none');
            $("#personnelManagmentHourlyWages"+"-div").css("display", 'none');
            $("#personnelManagmentAvgDayInMonth"+"-div").css("display", 'none');
            $("#personnelManagmentDailyDutyWorkingHours"+"-div").css("display", 'none');
            $("#personnelManagmentDailyWages"+"-div").css("display", 'none');
            $("#personnelManagmentYearsCost"+"-div").css("display", 'none');
            $("#personnelManagmentRightHousing"+"-div").css("display", 'none');
            $("#personnelManagmentNumberChildren"+"-div").css("display", 'none');
            $("#personnelManagmentChild"+"-div").css("display", 'none');
            $("#personnelManagmentGrocery"+"-div").css("display", 'none');
            $("#personnelManagmentShift"+"-div").css("display", 'none');
            $("#personnelManagmentOutOfList"+"-div").css("display", 'none');
            $("#personnelManagmentResponsibilityRight"+"-div").css("display", 'none');
            $("#personnelManagmentJobRight"+"-div").css("display", 'none');
            $("#personnelManagmentHardWork"+"-div").css("display", 'none');
            $("#personnelManagmentFinancialAllowance"+"-div").css("display", 'none');
            $("#personnelManagmentService"+"-div").css("display", 'none');
            $("#personnelManagmentDaysAvailable"+"-div").css("display", 'none');
            $("#personnelManagmentLeaveStatus"+"-div").css("display", 'none');
            $("#personnelManagmentOvertimeStatus"+"-div").css("display", 'none');
            $("#personnelManagmentAboutOTHoursMonth"+"-div").css("display", 'none');
            $("#personnelManagmentOvertimeLunch"+"-div").css("display", 'none');
            $("#personnelManagmentOvertimeService"+"-div").css("display", 'none');
            $("#personnelManagmentSalaryGroup"+"-div").css("display", 'none');
            $("#personnelManagmentMinimumSalary"+"-div").css("display", 'none');
            $("#personnelManagmentMaximumSalary"+"-div").css("display", 'none');
            $("#personnelManagmentAchievementCnd"+"-div").css("display", 'none');
            $("#personnelManagmentDescription"+"-div").css("display", 'none');

            var personnelBirthDate = new AMIB.persianCalendar('personnelManagmentBirthDate');
            var RecruitmentDate = new AMIB.persianCalendar('personnelManagmentRecruitmentDate');
            var BeginDateContract = new AMIB.persianCalendar('personnelManagmentBeginDateContract');
            var EndDateContract = new AMIB.persianCalendar('personnelManagmentEndDateContract');
            var RsDate = new AMIB.persianCalendar('personnelManageRsDateSearch');
            var ReDate = new AMIB.persianCalendar('personnelManageReDateSearch');
            var RsDate1 = new AMIB.persianCalendar('personnelManageRsDateSearch1');
            var ReDate1 = new AMIB.persianCalendar('personnelManageReDateSearch1');
            var LeaveDate = new AMIB.persianCalendar('personnelManagmentLeaveDate');
            var recruitment_test_date=new AMIB.persianCalendar('recruitment_test_date');
            $("#recruitment_test_date-col").css('display','flex');
            showPersonnelManageList();
        }
        if(jQuery.inArray(4, res[0]) !== -1) {
            showSalaryBenefitsManageUnitList();
        }
        if(jQuery.inArray(5, res[0]) !== -1) {
            $("#personnelManagmentDaysAvailable").attr("disabled","true");
            showAvailableDayManageList();
        }
        if(jQuery.inArray(6, res[0]) !== -1) {
            showIndustrialManageList();
        }
        if(jQuery.inArray(7, res[0]) !== -1) {
            showIndustrialGManageList();
        }
        if(jQuery.inArray(8, res[0]) !== -1) {
            showPercentagesManageList();
        }
        if(jQuery.inArray(9, res[0]) !== -1) {
            showRecruitmentList();

        }
    }
   
}

//+++++++++++++++ مدیریت نرخ ارز +++++++++++++++

function showCurrencyManageList(page) {
    if(typeof page == "undefined"){
        page = 1;
    }
    var action = "showCurrencyManageList";
    var param = {action:action,page:page};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#currencyManageBody").html('');
        $("#currencyManageBody").html(res);
    }
}

function checkCurrencyName() {
    var cName = $("#currencyManagmentCuname").val();
    var res = Main.checkExistDollar();
    if (cName === 'دلار'){
        if(res != false){
            $("#currencyManagmentCuname").val('');
            $("#currencyManagmentCRate").val('');
            $("#currencyManagmentExchangeRate").val('');
            $("#currencyManagmentExchangeRate").attr("disabled","true");
            $("#currencyManagmentCRate").attr("disabled","true");
            notice1Sec("قبلا دلار ثبت شده است !","yellow");
            return false;
        }else {
            $("#currencyManagmentCRate").val('');
            $("#currencyManagmentExchangeRate").val('');
            $("#currencyManagmentCRate").removeAttr("disabled");
            $("#currencyManagmentExchangeRate").attr("disabled","true");
        }
    }else {
        if(res != false){
            $("#currencyManagmentCRate").val('');
            $("#currencyManagmentExchangeRate").val('');
            $("#currencyManagmentExchangeRate").removeAttr("disabled");
            $("#currencyManagmentCRate").attr("disabled","true");
        }else {
            $("#currencyManagmentCuname").val('');
            $("#currencyManagmentCRate").val('');
            $("#currencyManagmentExchangeRate").val('');
            $("#currencyManagmentExchangeRate").attr("disabled","true");
            $("#currencyManagmentCRate").attr("disabled","true");
            notice1Sec("ابتدا باید دلار ثبت شود !","yellow");
            return false;
        }
    }
}

function changeToDollar() {
    var ExchangeRate = $("#currencyManagmentExchangeRate").val();
    var res = Main.getDollarPrice();
    if(res != false){
        var dayRate = Main.Num_format(ExchangeRate * res[0]['dayRate']);
        $("#currencyManagmentCRate").val(dayRate);
    }
}

function createCurrency() {
    $("#manageCurrencyHiddenCid").val('');
    $("#currencyManagmentCuname").val('');
    $("#currencyManagmentCRate").val('');
    $("#currencyManagmentExchangeRate").val('');
    $("#currencyManagmentCRate").attr("disabled","true");
    $("#currencyManagmentExchangeRate").attr("disabled","true");
    $("#currencyManagmentCuname"+"-div").css("display", '');
    $('#currencyManagmentModal').modal('show');
}

function editCurrency() {
    var ch = $('#currencyManageBody-table').find('input');
    var cid = new Array();
    for(var c=0;c<ch.length;c++){
        if(ch[c].checked){
            cid[cid.length] = ch[c].attributes.rid.value;
        }
    }
    if(cid.length > 1){
        notice1Sec("فقط یک ارز باید انتخاب شده باشد !","red");
        return false;
    }
    if(cid.length==0){
        notice1Sec("هیچ ارزی انتخاب نشده است !","red");
        return false;
    }
    cid = cid[0];
    var res = Main.getCurrencyInfo(cid);
    if(res != false){
        $('#currencyManagmentModal').modal('show');
        $("#currencyManagmentCuname"+"-div").css("display", 'none');
        $("#manageCurrencyHiddenCid").val(res['cid']);
        if (res['currencyName'] === 'دلار'){
            $("#currencyManagmentCRate").removeAttr("disabled");
            $("#currencyManagmentExchangeRate").attr("disabled","true");
        }else {
            $("#currencyManagmentCRate").attr("disabled",'true');
            $("#currencyManagmentExchangeRate").removeAttr("disabled");
        }
        $("#currencyManagmentCuname").val(res['currencyName']);
        $("#currencyManagmentCRate").val(res['dayRate']);
        $("#currencyManagmentExchangeRate").val(res['ExchangeRate']);
    }
}

function doEditCreateCurrency() {
    var cid = $("#manageCurrencyHiddenCid").val();
    var Cuname = $("#currencyManagmentCuname").val();
    var CRate = $("#currencyManagmentCRate").val();
    var ERate = $("#currencyManagmentExchangeRate").val();
    if(!parseInt((Cuname.trim()).length)){
        notice1Sec("نام ارز مشخص نشده است !","yellow");
        return false;
    }
    if(!parseInt((CRate.trim()).length) || parseInt(CRate) == 0){
        notice1Sec("نرخ روز مشخص نشده یا صفر است !","yellow");
        return false;
    }
    var action = "doEditCreateCurrency";
    var param = {action:action,cid:cid,Cuname:Cuname,CRate:CRate,ERate:ERate};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
        $('#currencyManagmentModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        showCurrencyManageList();
    }
}

//++++++++++++++++++++++ مدیریت بار برنج +++++++++++++++++++++++

function showManageBrassWeightList(page) {
    if(typeof page == "undefined"){
        page = 1;
    }
    var action = "showManageBrassWeightList";
    var param = {action:action,page:page};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#brassWeightManageBody").html('');
        $("#brassWeightManageBody").html(res);
    }
}

function calKhakPardakht() {
    var BSPrice = $("#brassWeightManageBSPrice").val();
    var PPSBW = $("#brassWeightManagePPSBW").val();
    var action = "calKhakPardakht";
    var param = {action:action,BSPrice:BSPrice,PPSBW:PPSBW};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#brassWeightManagePolishingSoilPrice").val(res);
    }
}

function editCreateBrassWeight() {
    var res = Main.getBrassWeight();
    if(res != false){
        $("#brassWeightManageHiddenBWid").val(res['BWid']);
        $("#brassWeightManageBSPrice").val(res['brassSwarfPrice']);
        $("#brassWeightManageBPriceU14").val(res['BullionPriceUp14']);
        $("#brassWeightManageBPriceUn14").val(res['BullionPriceUnder14']);
        $("#brassWeightManageBPriceC").val(res['BullionPriceColector']);
        $("#brassWeightManageCastingPrice").val(res['CastingPrice']);
        $("#brassWeightManagePPSBW").val(res['percentage']);
        $("#brassWeightManagePercentFuelWeight").val(res['PercentFuelWeight']);
        $("#brassWeightManagePolishingSoilPrice").val(res['PolishingSoilPrice']);
        $('#brassWeightManageModal').modal('show');
    }
}

function doEditCreateBrassWeight() {
    var BWid = $("#brassWeightManageHiddenBWid").val();
    var BSPrice = $("#brassWeightManageBSPrice").val();
    var U14 = $("#brassWeightManageBPriceU14").val();
    var Un14 = $("#brassWeightManageBPriceUn14").val();
    var BPriceC = $("#brassWeightManageBPriceC").val();
    var CPrice = $("#brassWeightManageCastingPrice").val();
    var pfw = $("#brassWeightManagePercentFuelWeight").val();
    var psp = $("#brassWeightManagePolishingSoilPrice").val();

    if(!parseInt((BSPrice.trim()).length)){
        notice1Sec("قیمت براده برنج مشخص نشده است !","yellow");
        return false;
    }
    if(!parseInt((U14.trim()).length)){
        notice1Sec("اجرت شمش قطر بالای 14 مشخص نشده است !","yellow");
        return false;
    }
    if(!parseInt((Un14.trim()).length)){
        notice1Sec("اجرت شمش قطر زیر 14 مشخص نشده است !","yellow");
        return false;
    }
    if(!parseInt((BPriceC.trim()).length)){
        notice1Sec("اجرت شمش کلکتور مشخص نشده است !","yellow");
        return false;
    }
    if(!parseInt((CPrice.trim()).length)){
        notice1Sec("اجرت ریخته گری مشخص نشده است !","yellow");
        return false;
    }
    if(!parseInt((pfw.trim()).length)){
        notice1Sec("درصد سوخت بار مشخص نشده است !","yellow");
        return false;
    }
    if(!parseInt((psp.trim()).length)){
        notice1Sec("قیمت خاک پرداخت مشخص نشده است !","yellow");
        return false;
    }
    var action = "doEditCreateBrassWeight";
    var param = {action:action,BWid:BWid,BSPrice:BSPrice,U14:U14,Un14:Un14,BPriceC:BPriceC,CPrice:CPrice,pfw:pfw,psp:psp};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
        $('#brassWeightManageModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        showManageBrassWeightList();
    }
}

//++++++++++++++++++++++ مدیریت هزینه های پرسنل +++++++++++++++++++++++

 function showRecruitmentList(){
    if(typeof page == "undefined"){
        page = 1;
    }
    var action = "showRecruitmentList";
    var param = {action:action,page:page};
    var res = manageAjaxRequest(param);
   if(res != false){
        $("#recruitmentTestsBody").html('');
        $("#recruitmentTestsBody").html(res);
    }
}

function addddPersonnel() {
    var action = "addddPersonnel";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
        //showPersonnelManageList();
    }
}

function showPersonnelManageList(page) {
    if(typeof page == "undefined"){
        page = 1;
    }
    var Pname = $('#personnelManagePnameSearch').val();
    var Pfamily = $('#personnelManagePfamilySearch').val();
    var Pcode = $('#personnelManagePcodeSearch').val();
    var Punit = $('#personnelManagePunitSearch').val();
    var RsDate = $('#personnelManageRsDateSearch').val();
    var ReDate = $('#personnelManageReDateSearch').val();
    var TsAmount = $('#personnelManageTsAmountSearch').val();
    var TeAmount = $('#personnelManageTeAmountSearch').val();

    var Pname1 = $('#personnelManagePnameSearch1').val();
    var Pfamily1 = $('#personnelManagePfamilySearch1').val();
    var Pcode1 = $('#personnelManagePcodeSearch1').val();
    var Punit1 = $('#personnelManagePunitSearch1').val();
    var RsDate1 = $('#personnelManageRsDateSearch1').val();
    var ReDate1 = $('#personnelManageReDateSearch1').val();
    var TsAmount1 = $('#personnelManageTsAmountSearch1').val();
    var TeAmount1 = $('#personnelManageTeAmountSearch1').val();

    var ability = $('#personnelManageSearchAbility').val();
    var status = $('#personnelManageSearchStatus').val();

    if(parseInt((Pname.trim()).length) > 0 && parseInt((Pname1.trim()).length)){
        notice1Sec("نام دو مرتبه انتخاب شده است !","yellow");
        return false;
    }
    if(parseInt((Pfamily.trim()).length) > 0 && parseInt((Pfamily1.trim()).length)){
        notice1Sec("نام خانوادگی دو مرتبه انتخاب شده است !","yellow");
        return false;
    }
    if(parseInt((Pcode.trim()).length) > 0 && parseInt((Pcode1.trim()).length)){
        notice1Sec("کد پرسنلی دو مرتبه انتخاب شده است !","yellow");
        return false;
    }
    if(parseInt(Punit) > 0 && parseInt(Punit1) > 0){
        notice1Sec("واحد دو مرتبه انتخاب شده است !","yellow");
        return false;
    }
    if((parseInt((RsDate.trim()).length) > 0 || parseInt((ReDate.trim()).length)) && (parseInt((RsDate1.trim()).length) > 0 || parseInt((ReDate1.trim()).length))){
        notice1Sec("تاریخ استخدام دو مرتبه انتخاب شده است !","yellow");
        return false;
    }
    if((parseInt((TsAmount.trim()).length) > 0 || parseInt((TeAmount.trim()).length)) && (parseInt((TsAmount1.trim()).length) > 0 || parseInt((TeAmount1.trim()).length))){
        notice1Sec("جمع کل هزینه ها دو مرتبه انتخاب شده است !","yellow");
        return false;
    }

    var action = "showPersonnelManageList";
    var param = {action:action,page:page,Pname:Pname,Pfamily:Pfamily,Pcode:Pcode,Punit:Punit,RsDate:RsDate,ReDate:ReDate,TsAmount:TsAmount,TeAmount:TeAmount,Pname1:Pname1,Pfamily1:Pfamily1,Pcode1:Pcode1,Punit1:Punit1,RsDate1:RsDate1,ReDate1:ReDate1,TsAmount1:TsAmount1,TeAmount1:TeAmount1,ability:ability,status:status};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#personnelManageBody").html('');
        $("#personnelManageBody").html(res);
		$("#managePersonnelHiddenPage").val(page);
    }
}

function createPersonnelExcel() {
    var Pname = $('#personnelManagePnameSearch').val();
    var Pfamily = $('#personnelManagePfamilySearch').val();
    var Pcode = $('#personnelManagePcodeSearch').val();
    var Punit = $('#personnelManagePunitSearch').val();
    var RsDate = $('#personnelManageRsDateSearch').val();
    var ReDate = $('#personnelManageReDateSearch').val();
    var TsAmount = $('#personnelManageTsAmountSearch').val();
    var TeAmount = $('#personnelManageTeAmountSearch').val();

    var Pname1 = $('#personnelManagePnameSearch1').val();
    var Pfamily1 = $('#personnelManagePfamilySearch1').val();
    var Pcode1 = $('#personnelManagePcodeSearch1').val();
    var Punit1 = $('#personnelManagePunitSearch1').val();
    var RsDate1 = $('#personnelManageRsDateSearch1').val();
    var ReDate1 = $('#personnelManageReDateSearch1').val();
    var TsAmount1 = $('#personnelManageTsAmountSearch1').val();
    var TeAmount1 = $('#personnelManageTeAmountSearch1').val();

    var ability = $('#personnelManageSearchAbility').val();
    var status = $('#personnelManageSearchStatus').val();
    var action = "createPersonnelExcel";
    var param = {action:action,Pname:Pname,Pfamily:Pfamily,Pcode:Pcode,Punit:Punit,RsDate:RsDate,ReDate:ReDate,TsAmount:TsAmount,TeAmount:TeAmount,Pname1:Pname1,Pfamily1:Pfamily1,Pcode1:Pcode1,Punit1:Punit1,RsDate1:RsDate1,ReDate1:ReDate1,TsAmount1:TsAmount1,TeAmount1:TeAmount1,ability:ability,status:status};
    var res = manageAjaxRequest(param);
    if(res != false){
        window.open(res);
    }
}

function finalPricePersonnelExcel() {
    var action = "finalPricePersonnelExcel";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    if(res != false){
        window.open(res);
    }
}

function createPersonnelAbilityExcel() {
    var Pname = $('#personnelManagePnameSearch').val();
    var Pfamily = $('#personnelManagePfamilySearch').val();
    var Pcode = $('#personnelManagePcodeSearch').val();
    var Punit = $('#personnelManagePunitSearch').val();
    var RsDate = $('#personnelManageRsDateSearch').val();
    var ReDate = $('#personnelManageReDateSearch').val();
    var TsAmount = $('#personnelManageTsAmountSearch').val();
    var TeAmount = $('#personnelManageTeAmountSearch').val();

    var Pname1 = $('#personnelManagePnameSearch1').val();
    var Pfamily1 = $('#personnelManagePfamilySearch1').val();
    var Pcode1 = $('#personnelManagePcodeSearch1').val();
    var Punit1 = $('#personnelManagePunitSearch1').val();
    var RsDate1 = $('#personnelManageRsDateSearch1').val();
    var ReDate1 = $('#personnelManageReDateSearch1').val();
    var TsAmount1 = $('#personnelManageTsAmountSearch1').val();
    var TeAmount1 = $('#personnelManageTeAmountSearch1').val();

    var ability = $('#personnelManageSearchAbility').val();
    var status = $('#personnelManageSearchStatus').val();
    var action = "createPersonnelAbilityExcel";
    var param = {action:action,Pname:Pname,Pfamily:Pfamily,Pcode:Pcode,Punit:Punit,RsDate:RsDate,ReDate:ReDate,TsAmount:TsAmount,TeAmount:TeAmount,Pname1:Pname1,Pfamily1:Pfamily1,Pcode1:Pcode1,Punit1:Punit1,RsDate1:RsDate1,ReDate1:ReDate1,TsAmount1:TsAmount1,TeAmount1:TeAmount1,ability:ability,status:status};
    var res = manageAjaxRequest(param);
    if(res != false){
        window.open(res);
    }
}

function showSalaryBenefitsManageUnitList(page) {
    if(typeof page == "undefined"){
        page = 1;
    }
    var action = "showSalaryBenefitsManageUnitList";
    var param = {action:action,page:page};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#unitManageBody").html('');
        $("#unitManageBody").html(res);
    }
}

function createUnit() {
    $("#manageSalaryBenefitsHiddenUid").val('');
    $("#salaryBenefitsManageUname").val('');
    $("#salaryBenefitsManageUType").val(-1);
    $("#salaryBenefitsManageDesc").val('');
    $('#salaryBenefitsManageUnitModal').modal('show');
}

function editUnit() {
    var ch = $('#unitManageBody-table').find('input');
    var uid = new Array();
    for(var c=0;c<ch.length;c++){
        if(ch[c].checked){
            uid[uid.length] = ch[c].attributes.rid.value;
        }
    }
    if(uid.length > 1){
        notice1Sec("فقط یک واحد باید انتخاب شده باشد !","red");
        return false;
    }
    if(uid.length==0){
        notice1Sec("هیچ واحدی انتخاب نشده است !","red");
        return false;
    }
    uid = uid[0];
    var res = Main.getUnitInfo(uid);
    if(res != false){
        $('#salaryBenefitsManageUnitModal').modal('show');
        $("#manageSalaryBenefitsHiddenUid").val(res['uid']);
        $("#salaryBenefitsManageUname").val(res['Uname']);
        $("#salaryBenefitsManageUType").val(res['Utype']);
        $("#salaryBenefitsManageDesc").val(res['Udesc']);
    }
}

function doEditCreateUnit() {
    var uid = $("#manageSalaryBenefitsHiddenUid").val();
    var Uname = $("#salaryBenefitsManageUname").val();
    var Udesc = $("#salaryBenefitsManageDesc").val();
    var Utype = $("#salaryBenefitsManageUType").val();
    if(!parseInt((Uname.trim()).length)){
        notice1Sec("نام واحد مشخص نشده است !","yellow");
        return false;
    }
    if(parseInt(Utype) == -1 ){
        notice1Sec("نوع واحد مشخص نشده است !","yellow");
        return false;
    }
    var action = "doEditCreateUnit";
    var param = {action:action,uid:uid,Uname:Uname,Udesc:Udesc,Utype:Utype};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
        $('#salaryBenefitsManageUnitModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        showSalaryBenefitsManageUnitList();
    }
}

function changePersonnelViewField() {
    var type = $("#personnelManagmentType").val();
    if (parseInt(type) == 1){
        $("#personnelManagmentFName").val('');
        $("#personnelManagmentLName").val('');
        $("#personnelManagmentFatherName").val('');
        $("#personnelManagmentPcode").val('');
        $("#personnelManagmentGender").val(1);
        $("#personnelManagmentStatus").val(1);
        $("#personnelManagmentBirthDate").val('');
        $("#personnelManagmentRecruitmentDate").val('');
        $("#personnelManagmentLeaveDate").val('');
        $("#personnelManagmentBeginDateContract").val('');
        $("#personnelManagmentEndDateContract").val('');
        $("#personnelManagmentPhone").val('');
        $("#personnelManagmentMobile").val('');
        $("#personnelManagmentTermContract").val('');
        $("#personnelManagmentMonthTrial").val('');
        $("#personnelManagmentBirthCertificateNum").val('');
        $("#personnelManagmentIssued").val('');
        $("#personnelManagmentNationalCode").val('');
        $("#personnelManagmentMaritalStatus").val(-1);
        $("#personnelManagmentAddress").val('');
        $("#personnelManagmentInsuranceNumber").val('');
        $("#personnelManagmentAccountNumber").val('');
        $("#personnelManagmentEvaluationScore").val('');
        $("#personnelManagmentUnits").val(0);

        $("#personnelManagmentDegreeEducation").val('');
        $("#personnelManagmentFieldStudy").val('');
        $("#personnelManagmentDegreeFieldStudy").val('');
        $("#personnelManagmentDegreeEducation").removeAttr("disabled");
        $("#personnelManagmentFieldStudy").attr("disabled","true");

        $("#personnelManagmentAbilityHeadGroup").val(0);
        $("#personnelManagmentAbility").empty();
        $("#personnelManagmentProficiency").val('');
        $("#personnelManagmentPassedCourses").val('');
        $("#personnelManagmentAbilityProficiency").val('');
        $("#personnelManagmentAbility").removeAttr("disabled");
        $("#personnelManagmentProficiency").attr("disabled","true");
        $("#personnelManagmentPassedCourses").attr("disabled","true");

        $("#personnelManagmentHourlyWages").val('');
        $("#personnelManagmentAvgDayInMonth").val('');
        $("#personnelManagmentDailyDutyWorkingHours").val('');
        $("#personnelManagmentDailyWages").val('');
        $("#personnelManagmentYearsCost").val('');
        $("#personnelManagmentRightHousing").val('');
        $("#personnelManagmentNumberChildren").val('');
        $("#personnelManagmentChild").val('');
        $("#personnelManagmentGrocery").val('');
        $("#personnelManagmentShift").val(0);
        $("#personnelManagmentOutOfList").val('');
        $("#personnelManagmentResponsibilityRight").val('');
        $("#personnelManagmentHardWork").val('');
        $("#personnelManagmentJobRight").val('');
        $("#personnelManagmentFinancialAllowance").val('');
        $("#personnelManagmentService").val('');
        $("#personnelManagmentAboutOTHoursMonth").val('');
        $("#personnelManagmentOvertimeLunch").val('');
        $("#personnelManagmentOvertimeService").val('');
        $("#personnelManagmentDescription").val('');
        $("#personnelManagmentSalaryGroup").val(0);
        $("#personnelManagmentMinimumSalary").val('');
        $("#personnelManagmentMaximumSalary").val('');
        $("#personnelManagmentAchievementCnd").val('');
        $("#personnelManagmentPYFR").prop('checked',false);
        $("#personnelManagmentNoInsurance").prop('checked',false);
        $("#personnelManagmentLeaveStatus").prop('checked',true);
        $("#personnelManagmentOvertimeStatus").prop('checked',true);

        $("#personnelManagmentFName"+"-div").css("display", '');
        $("#personnelManagmentLName"+"-div").css("display", '');
        $("#personnelManagmentFatherName"+"-div").css("display", '');
        $("#personnelManagmentPcode"+"-div").css("display", '');
        $("#personnelManagmentGender"+"-div").css("display", '');
        $("#personnelManagmentStatus"+"-div").css("display", '');
        $("#personnelManagmentBirthDate"+"-div").css("display", '');
        $("#personnelManagmentPYFR"+"-div").css("display", '');
        $("#personnelManagmentNoInsurance"+"-div").css("display", '');
        $("#personnelManagmentRecruitmentDate"+"-div").css("display", '');
        $("#personnelManagmentBeginDateContract"+"-div").css("display", '');
        $("#personnelManagmentEndDateContract"+"-div").css("display", '');
        $("#personnelManagmentPhone"+"-div").css("display", '');
        $("#personnelManagmentMobile"+"-div").css("display", '');
        $("#personnelManagmentTermContract"+"-div").css("display", '');
        $("#personnelManagmentMonthTrial"+"-div").css("display", '');
        $("#personnelManagmentBirthCertificateNum"+"-div").css("display", '');
        $("#personnelManagmentIssued"+"-div").css("display", '');
        $("#personnelManagmentNationalCode"+"-div").css("display", '');
        $("#personnelManagmentMaritalStatus"+"-div").css("display", '');
        $("#personnelManagmentAddress"+"-div").css("display", '');
        $("#personnelManagmentInsuranceNumber"+"-div").css("display", '');
        $("#personnelManagmentAccountNumber"+"-div").css("display", '');
        $("#personnelManagmentEvaluationScore"+"-div").css("display", '');
        $("#personnelManagmentUnits"+"-div").css("display", '');
        $("#personnelManagmentDegreeEducation"+"-div").css("display", '');
        $("#personnelManagmentFieldStudy"+"-div").css("display", '');
        $("#personnelManagmentDegreeFieldStudy"+"-div").css("display", '');
        $("#personnelManagmentAbilityHeadGroup"+"-div").css("display", '');
        $("#personnelManagmentAbility"+"-div").css("display", '');
        $("#personnelManagmentProficiency"+"-div").css("display", '');
        $("#personnelManagmentPassedCourses"+"-div").css("display", '');
        $("#personnelManagmentAbilityProficiency"+"-div").css("display", '');
        $("#personnelManagmentHourlyWages"+"-div").css("display", 'none');
        $("#personnelManagmentAvgDayInMonth"+"-div").css("display", 'none');
        $("#personnelManagmentDailyDutyWorkingHours"+"-div").css("display", 'none');
        $("#personnelManagmentDailyWages"+"-div").css("display", '');
        $("#personnelManagmentYearsCost"+"-div").css("display", '');
        $("#personnelManagmentRightHousing"+"-div").css("display", '');
        $("#personnelManagmentNumberChildren"+"-div").css("display", '');
        $("#personnelManagmentChild"+"-div").css("display", '');
        $("#personnelManagmentGrocery"+"-div").css("display", '');
        $("#personnelManagmentShift"+"-div").css("display", '');
        $("#personnelManagmentOutOfList"+"-div").css("display", '');
        $("#personnelManagmentResponsibilityRight"+"-div").css("display", '');
        $("#personnelManagmentJobRight"+"-div").css("display", '');
        $("#personnelManagmentHardWork"+"-div").css("display", '');
        $("#personnelManagmentFinancialAllowance"+"-div").css("display", '');
        $("#personnelManagmentService"+"-div").css("display", '');
        $("#personnelManagmentDaysAvailable"+"-div").css("display", '');
        $("#personnelManagmentLeaveStatus"+"-div").css("display", '');
        $("#personnelManagmentOvertimeStatus"+"-div").css("display", '');
        $("#personnelManagmentAboutOTHoursMonth"+"-div").css("display", '');
        $("#personnelManagmentOvertimeLunch"+"-div").css("display", '');
        $("#personnelManagmentOvertimeService"+"-div").css("display", '');
        $("#personnelManagmentSalaryGroup"+"-div").css("display", '');
        $("#personnelManagmentMinimumSalary"+"-div").css("display", '');
        $("#personnelManagmentMaximumSalary"+"-div").css("display", '');
        $("#personnelManagmentAchievementCnd"+"-div").css("display", '');
        $("#personnelManagmentDescription"+"-div").css("display", '');
    }else if (parseInt(type) == 0){
        $("#personnelManagmentFName").val('');
        $("#personnelManagmentLName").val('');
        $("#personnelManagmentFatherName").val('');
        $("#personnelManagmentPcode").val('');
        $("#personnelManagmentGender").val(1);
        $("#personnelManagmentStatus").val(1);
        $("#personnelManagmentBirthDate").val('');
        $("#personnelManagmentRecruitmentDate").val('');
        $("#personnelManagmentBeginDateContract").val('');
        $("#personnelManagmentEndDateContract").val('');
        $("#personnelManagmentPhone").val('');
        $("#personnelManagmentMobile").val('');
        $("#personnelManagmentTermContract").val('');
        $("#personnelManagmentMonthTrial").val('');
        $("#personnelManagmentBirthCertificateNum").val('');
        $("#personnelManagmentIssued").val('');
        $("#personnelManagmentNationalCode").val('');
        $("#personnelManagmentMaritalStatus").val(-1);
        $("#personnelManagmentAddress").val('');
        $("#personnelManagmentInsuranceNumber").val('');
        $("#personnelManagmentAccountNumber").val('');
        $("#personnelManagmentEvaluationScore").val('');
        $("#personnelManagmentUnits").val(0);

        $("#personnelManagmentDegreeEducation").val('');
        $("#personnelManagmentFieldStudy").val('');
        $("#personnelManagmentDegreeFieldStudy").val('');
        $("#personnelManagmentDegreeEducation").removeAttr("disabled");
        $("#personnelManagmentFieldStudy").attr("disabled","true");

        $("#personnelManagmentAbilityHeadGroup").val(0);
        $("#personnelManagmentAbility").empty();
        $("#personnelManagmentProficiency").val('');
        $("#personnelManagmentPassedCourses").val('');
        $("#personnelManagmentAbilityProficiency").val('');
        $("#personnelManagmentAbility").removeAttr("disabled");
        $("#personnelManagmentProficiency").attr("disabled","true");
        $("#personnelManagmentPassedCourses").attr("disabled","true");

        $("#personnelManagmentHourlyWages").val('');
        $("#personnelManagmentAvgDayInMonth").val('');
        $("#personnelManagmentDailyDutyWorkingHours").val('');
        $("#personnelManagmentDailyWages").val('');
        $("#personnelManagmentYearsCost").val('');
        $("#personnelManagmentRightHousing").val('');
        $("#personnelManagmentNumberChildren").val('');
        $("#personnelManagmentChild").val('');
        $("#personnelManagmentGrocery").val('');
        $("#personnelManagmentShift").val(0);
        $("#personnelManagmentOutOfList").val('');
        $("#personnelManagmentResponsibilityRight").val('');
        $("#personnelManagmentHardWork").val('');
        $("#personnelManagmentJobRight").val('');
        $("#personnelManagmentFinancialAllowance").val('');
        $("#personnelManagmentService").val('');
        $("#personnelManagmentAboutOTHoursMonth").val('');
        $("#personnelManagmentOvertimeLunch").val('');
        $("#personnelManagmentOvertimeService").val('');
        $("#personnelManagmentDescription").val('');
        $("#personnelManagmentSalaryGroup").val(0);
        $("#personnelManagmentMinimumSalary").val('');
        $("#personnelManagmentMaximumSalary").val('');
        $("#personnelManagmentAchievementCnd").val('');
        $("#personnelManagmentPYFR").prop('checked',false);
        $("#personnelManagmentNoInsurance").prop('checked',false);
        $("#personnelManagmentLeaveStatus").prop('checked',true);
        $("#personnelManagmentOvertimeStatus").prop('checked',true);

        $("#personnelManagmentFName"+"-div").css("display", '');
        $("#personnelManagmentLName"+"-div").css("display", '');
        $("#personnelManagmentFatherName"+"-div").css("display", '');
        $("#personnelManagmentPcode"+"-div").css("display", '');
        $("#personnelManagmentGender"+"-div").css("display", '');
        $("#personnelManagmentStatus"+"-div").css("display", '');
        $("#personnelManagmentBirthDate"+"-div").css("display", '');
        $("#personnelManagmentPYFR"+"-div").css("display", 'none');
        $("#personnelManagmentNoInsurance"+"-div").css("display", 'none');
        $("#personnelManagmentRecruitmentDate"+"-div").css("display", '');
        $("#personnelManagmentBeginDateContract"+"-div").css("display", '');
        $("#personnelManagmentEndDateContract"+"-div").css("display", '');
        $("#personnelManagmentPhone"+"-div").css("display", '');
        $("#personnelManagmentMobile"+"-div").css("display", '');
        $("#personnelManagmentTermContract"+"-div").css("display", '');
        $("#personnelManagmentMonthTrial"+"-div").css("display", '');
        $("#personnelManagmentBirthCertificateNum"+"-div").css("display", '');
        $("#personnelManagmentIssued"+"-div").css("display", '');
        $("#personnelManagmentNationalCode"+"-div").css("display", '');
        $("#personnelManagmentMaritalStatus"+"-div").css("display", '');
        $("#personnelManagmentAddress"+"-div").css("display", '');
        $("#personnelManagmentInsuranceNumber"+"-div").css("display", '');
        $("#personnelManagmentAccountNumber"+"-div").css("display", '');
        $("#personnelManagmentEvaluationScore"+"-div").css("display", '');
        $("#personnelManagmentUnits"+"-div").css("display", '');
        $("#personnelManagmentDegreeEducation"+"-div").css("display", '');
        $("#personnelManagmentFieldStudy"+"-div").css("display", '');
        $("#personnelManagmentDegreeFieldStudy"+"-div").css("display", '');
        $("#personnelManagmentAbilityHeadGroup"+"-div").css("display", '');
        $("#personnelManagmentAbility"+"-div").css("display", '');
        $("#personnelManagmentProficiency"+"-div").css("display", '');
        $("#personnelManagmentPassedCourses"+"-div").css("display", '');
        $("#personnelManagmentAbilityProficiency"+"-div").css("display", '');
        $("#personnelManagmentHourlyWages"+"-div").css("display", '');
        $("#personnelManagmentAvgDayInMonth"+"-div").css("display", '');
        $("#personnelManagmentDailyDutyWorkingHours"+"-div").css("display", '');
        $("#personnelManagmentDailyWages"+"-div").css("display", 'none');
        $("#personnelManagmentYearsCost"+"-div").css("display", 'none');
        $("#personnelManagmentRightHousing"+"-div").css("display", 'none');
        $("#personnelManagmentNumberChildren"+"-div").css("display", 'none');
        $("#personnelManagmentChild"+"-div").css("display", 'none');
        $("#personnelManagmentGrocery"+"-div").css("display", 'none');
        $("#personnelManagmentShift"+"-div").css("display", 'none');
        $("#personnelManagmentOutOfList"+"-div").css("display", 'none');
        $("#personnelManagmentResponsibilityRight"+"-div").css("display", 'none');
        $("#personnelManagmentJobRight"+"-div").css("display", 'none');
        $("#personnelManagmentHardWork"+"-div").css("display", 'none');
        $("#personnelManagmentFinancialAllowance"+"-div").css("display", 'none');
        $("#personnelManagmentService"+"-div").css("display", 'none');
        $("#personnelManagmentDaysAvailable"+"-div").css("display", 'none');
        $("#personnelManagmentLeaveStatus"+"-div").css("display", 'none');
        $("#personnelManagmentOvertimeStatus"+"-div").css("display", '');
        $("#personnelManagmentAboutOTHoursMonth"+"-div").css("display", '');
        $("#personnelManagmentOvertimeLunch"+"-div").css("display", 'none');
        $("#personnelManagmentOvertimeService"+"-div").css("display", 'none');
        $("#personnelManagmentSalaryGroup"+"-div").css("display", 'none');
        $("#personnelManagmentMinimumSalary"+"-div").css("display", 'none');
        $("#personnelManagmentMaximumSalary"+"-div").css("display", 'none');
        $("#personnelManagmentAchievementCnd"+"-div").css("display", 'none');
        $("#personnelManagmentDescription"+"-div").css("display", '');
    }else {
        $("#personnelManagmentFName").val('');
        $("#personnelManagmentLName").val('');
        $("#personnelManagmentFatherName").val('');
        $("#personnelManagmentPcode").val('');
        $("#personnelManagmentGender").val(1);
        $("#personnelManagmentStatus").val(1);
        $("#personnelManagmentBirthDate").val('');
        $("#personnelManagmentRecruitmentDate").val('');
        $("#personnelManagmentBeginDateContract").val('');
        $("#personnelManagmentEndDateContract").val('');
        $("#personnelManagmentPhone").val('');
        $("#personnelManagmentMobile").val('');
        $("#personnelManagmentTermContract").val('');
        $("#personnelManagmentMonthTrial").val('');
        $("#personnelManagmentBirthCertificateNum").val('');
        $("#personnelManagmentIssued").val('');
        $("#personnelManagmentNationalCode").val('');
        $("#personnelManagmentMaritalStatus").val(-1);
        $("#personnelManagmentAddress").val('');
        $("#personnelManagmentInsuranceNumber").val('');
        $("#personnelManagmentAccountNumber").val('');
        $("#personnelManagmentEvaluationScore").val('');
        $("#personnelManagmentUnits").val(0);

        $("#personnelManagmentDegreeEducation").val('');
        $("#personnelManagmentFieldStudy").val('');
        $("#personnelManagmentDegreeFieldStudy").val('');
        $("#personnelManagmentDegreeEducation").removeAttr("disabled");
        $("#personnelManagmentFieldStudy").attr("disabled","true");

        $("#personnelManagmentAbilityHeadGroup").val(0);
        $("#personnelManagmentAbility").empty();
        $("#personnelManagmentProficiency").val('');
        $("#personnelManagmentPassedCourses").val('');
        $("#personnelManagmentAbilityProficiency").val('');
        $("#personnelManagmentAbility").removeAttr("disabled");
        $("#personnelManagmentProficiency").attr("disabled","true");
        $("#personnelManagmentPassedCourses").attr("disabled","true");

        $("#personnelManagmentHourlyWages").val('');
        $("#personnelManagmentAvgDayInMonth").val('');
        $("#personnelManagmentDailyDutyWorkingHours").val('');
        $("#personnelManagmentDailyWages").val('');
        $("#personnelManagmentYearsCost").val('');
        $("#personnelManagmentRightHousing").val('');
        $("#personnelManagmentNumberChildren").val('');
        $("#personnelManagmentChild").val('');
        $("#personnelManagmentGrocery").val('');
        $("#personnelManagmentShift").val(0);
        $("#personnelManagmentOutOfList").val('');
        $("#personnelManagmentResponsibilityRight").val('');
        $("#personnelManagmentHardWork").val('');
        $("#personnelManagmentJobRight").val('');
        $("#personnelManagmentFinancialAllowance").val('');
        $("#personnelManagmentService").val('');
        $("#personnelManagmentAboutOTHoursMonth").val('');
        $("#personnelManagmentOvertimeLunch").val('');
        $("#personnelManagmentOvertimeService").val('');
        $("#personnelManagmentDescription").val('');
        $("#personnelManagmentSalaryGroup").val(0);
        $("#personnelManagmentMinimumSalary").val('');
        $("#personnelManagmentMaximumSalary").val('');
        $("#personnelManagmentAchievementCnd").val('');
        $("#personnelManagmentPYFR").prop('checked',false);
        $("#personnelManagmentNoInsurance").prop('checked',false);
        $("#personnelManagmentLeaveStatus").prop('checked',true);
        $("#personnelManagmentOvertimeStatus").prop('checked',true);

        $("#personnelManagmentFName"+"-div").css("display", 'none');
        $("#personnelManagmentLName"+"-div").css("display", 'none');
        $("#personnelManagmentFatherName"+"-div").css("display", 'none');
        $("#personnelManagmentPcode"+"-div").css("display", 'none');
        $("#personnelManagmentGender"+"-div").css("display", 'none');
        $("#personnelManagmentStatus"+"-div").css("display", 'none');
        $("#personnelManagmentBirthDate"+"-div").css("display", 'none');
        $("#personnelManagmentPYFR"+"-div").css("display", 'none');
        $("#personnelManagmentNoInsurance"+"-div").css("display", 'none');
        $("#personnelManagmentRecruitmentDate"+"-div").css("display", 'none');
        $("#personnelManagmentBeginDateContract"+"-div").css("display", 'none');
        $("#personnelManagmentEndDateContract"+"-div").css("display", 'none');
        $("#personnelManagmentPhone"+"-div").css("display", 'none');
        $("#personnelManagmentMobile"+"-div").css("display", 'none');
        $("#personnelManagmentTermContract"+"-div").css("display", 'none');
        $("#personnelManagmentMonthTrial"+"-div").css("display", 'none');
        $("#personnelManagmentBirthCertificateNum"+"-div").css("display", 'none');
        $("#personnelManagmentIssued"+"-div").css("display", 'none');
        $("#personnelManagmentNationalCode"+"-div").css("display", 'none');
        $("#personnelManagmentMaritalStatus"+"-div").css("display", 'none');
        $("#personnelManagmentAddress"+"-div").css("display", 'none');
        $("#personnelManagmentInsuranceNumber"+"-div").css("display", 'none');
        $("#personnelManagmentAccountNumber"+"-div").css("display", 'none');
        $("#personnelManagmentEvaluationScore"+"-div").css("display", 'none');
        $("#personnelManagmentUnits"+"-div").css("display", 'none');
        $("#personnelManagmentDegreeEducation"+"-div").css("display", 'none');
        $("#personnelManagmentFieldStudy"+"-div").css("display", 'none');
        $("#personnelManagmentDegreeFieldStudy"+"-div").css("display", 'none');
        $("#personnelManagmentAbilityHeadGroup"+"-div").css("display", 'none');
        $("#personnelManagmentAbility"+"-div").css("display", 'none');
        $("#personnelManagmentProficiency"+"-div").css("display", 'none');
        $("#personnelManagmentPassedCourses"+"-div").css("display", 'none');
        $("#personnelManagmentAbilityProficiency"+"-div").css("display", 'none');
        $("#personnelManagmentHourlyWages"+"-div").css("display", 'none');
        $("#personnelManagmentAvgDayInMonth"+"-div").css("display", 'none');
        $("#personnelManagmentDailyDutyWorkingHours"+"-div").css("display", 'none');
        $("#personnelManagmentDailyWages"+"-div").css("display", 'none');
        $("#personnelManagmentYearsCost"+"-div").css("display", 'none');
        $("#personnelManagmentRightHousing"+"-div").css("display", 'none');
        $("#personnelManagmentNumberChildren"+"-div").css("display", 'none');
        $("#personnelManagmentChild"+"-div").css("display", 'none');
        $("#personnelManagmentGrocery"+"-div").css("display", 'none');
        $("#personnelManagmentShift"+"-div").css("display", 'none');
        $("#personnelManagmentOutOfList"+"-div").css("display", 'none');
        $("#personnelManagmentResponsibilityRight"+"-div").css("display", 'none');
        $("#personnelManagmentJobRight"+"-div").css("display", 'none');
        $("#personnelManagmentHardWork"+"-div").css("display", 'none');
        $("#personnelManagmentFinancialAllowance"+"-div").css("display", 'none');
        $("#personnelManagmentService"+"-div").css("display", 'none');
        $("#personnelManagmentDaysAvailable"+"-div").css("display", 'none');
        $("#personnelManagmentLeaveStatus"+"-div").css("display", 'none');
        $("#personnelManagmentOvertimeStatus"+"-div").css("display", 'none');
        $("#personnelManagmentAboutOTHoursMonth"+"-div").css("display", 'none');
        $("#personnelManagmentOvertimeLunch"+"-div").css("display", 'none');
        $("#personnelManagmentOvertimeService"+"-div").css("display", 'none');
        $("#personnelManagmentSalaryGroup"+"-div").css("display", 'none');
        $("#personnelManagmentMinimumSalary"+"-div").css("display", 'none');
        $("#personnelManagmentMaximumSalary"+"-div").css("display", 'none');
        $("#personnelManagmentAchievementCnd"+"-div").css("display", 'none');
        $("#personnelManagmentDescription"+"-div").css("display", 'none');
    }
}

function createPersonnel() {
    $("#managePersonnelHiddenPid").val('');
    $("#personnelManagmentType").val(-1);
    $("#personnelManagmentFName").val('');
    $("#personnelManagmentLName").val('');
    $("#personnelManagmentFatherName").val('');
    $("#personnelManagmentPcode").val('');
    $("#personnelManagmentGender").val(1);
    $("#personnelManagmentStatus").val(1);
    $("#personnelManagmentBirthDate").val('');
    $("#personnelManagmentRecruitmentDate").val('');
    $("#personnelManagmentBeginDateContract").val('');
    $("#personnelManagmentEndDateContract").val('');
    $("#personnelManagmentPhone").val('');
    $("#personnelManagmentMobile").val('');
    $("#personnelManagmentTermContract").val('');
    $("#personnelManagmentMonthTrial").val('');
    $("#personnelManagmentBirthCertificateNum").val('');
    $("#personnelManagmentIssued").val('');
    $("#personnelManagmentNationalCode").val('');
    $("#personnelManagmentMaritalStatus").val(-1);
    $("#personnelManagmentAddress").val('');
    $("#personnelManagmentInsuranceNumber").val('');
    $("#personnelManagmentAccountNumber").val('');
    $("#personnelManagmentEvaluationScore").val('');
    $("#personnelManagmentUnits").val(0);

    $("#personnelManagmentDegreeEducation").val('');
    $("#personnelManagmentFieldStudy").val('');
    $("#personnelManagmentDegreeFieldStudy").val('');
    $("#personnelManagmentDegreeEducation").removeAttr("disabled");
    $("#personnelManagmentFieldStudy").attr("disabled","true");

    $("#personnelManagmentAbilityHeadGroup").val(0);
    $("#personnelManagmentAbility").empty();
    $("#personnelManagmentProficiency").val('');
    $("#personnelManagmentPassedCourses").val('');
    $("#personnelManagmentAbilityProficiency").val('');
    $("#personnelManagmentAbility").removeAttr("disabled");
    $("#personnelManagmentProficiency").attr("disabled","true");
    $("#personnelManagmentPassedCourses").attr("disabled","true");

    $("#personnelManagmentHourlyWages").val('');
    $("#personnelManagmentAvgDayInMonth").val('');
    $("#personnelManagmentDailyDutyWorkingHours").val('');
    $("#personnelManagmentDailyWages").val('');
    $("#personnelManagmentYearsCost").val('');
    $("#personnelManagmentRightHousing").val('');
    $("#personnelManagmentNumberChildren").val('');
    $("#personnelManagmentChild").val('');
    $("#personnelManagmentGrocery").val('');
    $("#personnelManagmentShift").val(0);
    $("#personnelManagmentOutOfList").val('');
    $("#personnelManagmentResponsibilityRight").val('');
    $("#personnelManagmentHardWork").val('');
    $("#personnelManagmentJobRight").val('');
    $("#personnelManagmentFinancialAllowance").val('');
    $("#personnelManagmentService").val('');
    $("#personnelManagmentAboutOTHoursMonth").val('');
    $("#personnelManagmentOvertimeLunch").val('');
    $("#personnelManagmentOvertimeService").val('');
    $("#personnelManagmentDescription").val('');
    $("#personnelManagmentSalaryGroup").val(0);
    $("#personnelManagmentMinimumSalary").val('');
    $("#personnelManagmentMaximumSalary").val('');
    $("#personnelManagmentAchievementCnd").val('');
    $("#personnelRightMarry").val('');
    $("#personnelManagmentPYFR").prop('checked',false);
    $("#personnelManagmentNoInsurance").prop('checked',false);
    $("#personnelManagmentLeaveStatus").prop('checked',true);
    $("#personnelManagmentOvertimeStatus").prop('checked',true);

    $("#personnelManagmentFName"+"-div").css("display", 'none');
    $("#personnelManagmentLName"+"-div").css("display", 'none');
    $("#personnelManagmentFatherName"+"-div").css("display", 'none');
    $("#personnelManagmentPcode"+"-div").css("display", 'none');
    $("#personnelManagmentGender"+"-div").css("display", 'none');
    $("#personnelManagmentStatus"+"-div").css("display", 'none');
    $("#personnelManagmentBirthDate"+"-div").css("display", 'none');
    $("#personnelManagmentPYFR"+"-div").css("display", 'none');
    $("#personnelManagmentNoInsurance"+"-div").css("display", 'none');
    $("#personnelManagmentRecruitmentDate"+"-div").css("display", 'none');
    $("#personnelManagmentBeginDateContract"+"-div").css("display", 'none');
    $("#personnelManagmentEndDateContract"+"-div").css("display", 'none');
    $("#personnelManagmentPhone"+"-div").css("display", 'none');
    $("#personnelManagmentMobile"+"-div").css("display", 'none');
    $("#personnelManagmentTermContract"+"-div").css("display", 'none');
    $("#personnelManagmentMonthTrial"+"-div").css("display", 'none');
    $("#personnelManagmentBirthCertificateNum"+"-div").css("display", 'none');
    $("#personnelManagmentIssued"+"-div").css("display", 'none');
    $("#personnelManagmentNationalCode"+"-div").css("display", 'none');
    $("#personnelManagmentMaritalStatus"+"-div").css("display", 'none');
    $("#personnelManagmentAddress"+"-div").css("display", 'none');
    $("#personnelManagmentInsuranceNumber"+"-div").css("display", 'none');
    $("#personnelManagmentAccountNumber"+"-div").css("display", 'none');
    $("#personnelManagmentEvaluationScore"+"-div").css("display", 'none');
    $("#personnelManagmentUnits"+"-div").css("display", 'none');
    $("#personnelManagmentDegreeEducation"+"-div").css("display", 'none');
    $("#personnelManagmentFieldStudy"+"-div").css("display", 'none');
    $("#personnelManagmentDegreeFieldStudy"+"-div").css("display", 'none');
    $("#personnelManagmentAbilityHeadGroup"+"-div").css("display", 'none');
    $("#personnelManagmentAbility"+"-div").css("display", 'none');
    $("#personnelManagmentProficiency"+"-div").css("display", 'none');
    $("#personnelManagmentPassedCourses"+"-div").css("display", 'none');
    $("#personnelManagmentAbilityProficiency"+"-div").css("display", 'none');
    $("#personnelManagmentHourlyWages"+"-div").css("display", 'none');
    $("#personnelManagmentAvgDayInMonth"+"-div").css("display", 'none');
    $("#personnelManagmentDailyDutyWorkingHours"+"-div").css("display", 'none');
    $("#personnelManagmentDailyWages"+"-div").css("display", 'none');
    $("#personnelManagmentYearsCost"+"-div").css("display", 'none');
    $("#personnelManagmentRightHousing"+"-div").css("display", 'none');
    $("#personnelManagmentNumberChildren"+"-div").css("display", 'none');
    $("#personnelManagmentChild"+"-div").css("display", 'none');
    $("#personnelManagmentGrocery"+"-div").css("display", 'none');
    $("#personnelManagmentShift"+"-div").css("display", 'none');
    $("#personnelManagmentOutOfList"+"-div").css("display", 'none');
    $("#personnelManagmentResponsibilityRight"+"-div").css("display", 'none');
    $("#personnelManagmentJobRight"+"-div").css("display", 'none');
    $("#personnelManagmentHardWork"+"-div").css("display", 'none');
    $("#personnelManagmentFinancialAllowance"+"-div").css("display", 'none');
    $("#personnelManagmentService"+"-div").css("display", 'none');
    $("#personnelManagmentDaysAvailable"+"-div").css("display", 'none');
    $("#personnelManagmentLeaveStatus"+"-div").css("display", 'none');
    $("#personnelManagmentOvertimeStatus"+"-div").css("display", 'none');
    $("#personnelManagmentAboutOTHoursMonth"+"-div").css("display", 'none');
    $("#personnelManagmentOvertimeLunch"+"-div").css("display", 'none');
    $("#personnelManagmentOvertimeService"+"-div").css("display", 'none');
    $("#personnelManagmentSalaryGroup"+"-div").css("display", 'none');
    $("#personnelManagmentMinimumSalary"+"-div").css("display", 'none');
    $("#personnelManagmentMaximumSalary"+"-div").css("display", 'none');
    $("#personnelManagmentAchievementCnd"+"-div").css("display", 'none');
    $("#personnelManagmentDescription"+"-div").css("display", 'none');
    $("#personnelManagmentLeaveDate"+"-div").css("display", 'none');
    //--------------------------------------------------------
    $("#personnelRightMarry"+"-div").css("display", 'none');

    $('#personnelManagmentModal').modal('show');
}

function editPersonnel(pid) {
    var res = Main.getPersonnelInfo(pid);
    if(res != false){
        $('#personnelManagmentModal').modal('show');

        $("#managePersonnelHiddenPid").val(res['pid']);
        $("#personnelManagmentType").val(res['type']);
        $("#personnelManagmentFName").val(res['Fname']);
        $("#personnelManagmentLName").val(res['Lname']);
        $("#personnelManagmentFatherName").val(res['father_Name']);
        $("#personnelManagmentPcode").val(res['PersonnelCode']);
        $("#personnelManagmentGender").val(res['gender']);
        $("#personnelManagmentStatus").val(res['status']);
        $("#personnelManagmentBirthDate").val(res['birthDate']);
        $("#personnelManagmentRecruitmentDate").val(res['RecruitmentDate']);
        $("#personnelManagmentBeginDateContract").val(res['BeginDateContract']);
        $("#personnelManagmentLeaveDate").val('');
        $("#personnelManagmentLeaveDate").val(res['LeaveDate']);
        $("#personnelManagmentEndDateContract").val(res['EndDateContract']);
        $("#personnelManagmentPhone").val(res['phone']);
        $("#personnelManagmentMobile").val(res['mobile']);
        $("#personnelManagmentTermContract").val(res['Term_contract']);
        $("#personnelManagmentMonthTrial").val(res['month_Trial']);
        $("#personnelManagmentBirthCertificateNum").val(res['Birth_Certificate_Num']);
        $("#personnelManagmentIssued").val(res['Issued']);
        $("#personnelManagmentNationalCode").val(res['National_Code']);
        $("#personnelManagmentMaritalStatus").val(res['Marital_Status']);
        $("#personnelRightMarry").val(res['personnelRightMarry']);
        $("#personnelManagmentAddress").val(res['Address']);
        $("#personnelManagmentInsuranceNumber").val(res['insurance_Number']);
        $("#personnelManagmentAccountNumber").val(res['account_Number']);
        $("#personnelManagmentEvaluationScore").val(res['EvaluationScore']);
        $("#personnelManagmentUnits").val(res['Unit_id']);
        $("#personnelManagmentAboutOTHoursMonth").val(res['AboutOTHoursMonth']);
        $("#personnelManagmentDescription").val(res['description']);

        $("#personnelManagmentDegreeFieldStudy").val(res['degree_field_study']);
        $("#personnelManagmentDegreeEducation").removeAttr("disabled");
        $("#personnelManagmentFieldStudy").attr("disabled", "true");

        $("#personnelManagmentAbilityProficiency").val(res['Abilities']);
        $("#personnelManagmentAbility").removeAttr("disabled");
        $("#personnelManagmentProficiency").attr("disabled", "true");
        $("#personnelManagmentPassedCourses").attr("disabled", "true");

        if (res['overtimeStatus'] == 0) {
            $("#personnelManagmentOvertimeStatus").prop('checked', false);
        } else {
            $("#personnelManagmentOvertimeStatus").prop('checked', true);
        }

        if (res['type'] == 1) {  // پرسنل عادی
            $("#personnelManagmentFName"+"-div").css("display", '');
            $("#personnelManagmentLName"+"-div").css("display", '');
            $("#personnelManagmentFatherName"+"-div").css("display", '');
            $("#personnelManagmentPcode"+"-div").css("display", '');
            $("#personnelManagmentGender"+"-div").css("display", '');
            $("#personnelManagmentStatus"+"-div").css("display", '');
            $("#personnelManagmentBirthDate"+"-div").css("display", '');
            $("#personnelManagmentLeaveDate"+"-div").css("display", '');
          
            $("#personnelManagmentPYFR"+"-div").css("display", '');
            $("#personnelManagmentNoInsurance"+"-div").css("display", '');
            $("#personnelManagmentRecruitmentDate"+"-div").css("display", '');
            $("#personnelManagmentBeginDateContract"+"-div").css("display", '');
            $("#personnelManagmentEndDateContract"+"-div").css("display", '');
            $("#personnelManagmentPhone"+"-div").css("display", '');
            $("#personnelManagmentMobile"+"-div").css("display", '');
            $("#personnelManagmentTermContract"+"-div").css("display", '');
            $("#personnelManagmentMonthTrial"+"-div").css("display", '');
            $("#personnelManagmentBirthCertificateNum"+"-div").css("display", '');
            $("#personnelManagmentIssued"+"-div").css("display", '');
            $("#personnelManagmentNationalCode"+"-div").css("display", '');
            $("#personnelManagmentMaritalStatus"+"-div").css("display", '');
            //---------------------------------------------------------------
            if($("#personnelManagmentMaritalStatus").val()==1){
                $("#personnelRightMarry-div").show();
            }
            else{
                $("#personnelRightMarry-div").hide();
            }
            //---------------------------------------------------------------
            $("#personnelManagmentAddress"+"-div").css("display", '');
            $("#personnelManagmentInsuranceNumber"+"-div").css("display", '');
            $("#personnelManagmentAccountNumber"+"-div").css("display", '');
            $("#personnelManagmentEvaluationScore"+"-div").css("display", '');
            $("#personnelManagmentUnits"+"-div").css("display", '');
            $("#personnelManagmentDegreeEducation"+"-div").css("display", '');
            $("#personnelManagmentFieldStudy"+"-div").css("display", '');
            $("#personnelManagmentDegreeFieldStudy"+"-div").css("display", '');
            $("#personnelManagmentAbilityHeadGroup"+"-div").css("display", '');
            $("#personnelManagmentAbility"+"-div").css("display", '');
            $("#personnelManagmentProficiency"+"-div").css("display", '');
            $("#personnelManagmentPassedCourses"+"-div").css("display", '');
            $("#personnelManagmentAbilityProficiency"+"-div").css("display", '');
            $("#personnelManagmentHourlyWages"+"-div").css("display", 'none');
            $("#personnelManagmentAvgDayInMonth"+"-div").css("display", 'none');
            $("#personnelManagmentDailyDutyWorkingHours"+"-div").css("display", 'none');
            $("#personnelManagmentDailyWages"+"-div").css("display", '');
            $("#personnelManagmentYearsCost"+"-div").css("display", '');
            $("#personnelManagmentRightHousing"+"-div").css("display", '');
            $("#personnelManagmentNumberChildren"+"-div").css("display", '');
            $("#personnelManagmentChild"+"-div").css("display", '');
            $("#personnelManagmentGrocery"+"-div").css("display", '');
            $("#personnelManagmentShift"+"-div").css("display", '');
            $("#personnelManagmentOutOfList"+"-div").css("display", '');
            $("#personnelManagmentResponsibilityRight"+"-div").css("display", '');
            $("#personnelManagmentJobRight"+"-div").css("display", '');
            $("#personnelManagmentHardWork"+"-div").css("display", '');
            $("#personnelManagmentFinancialAllowance"+"-div").css("display", '');
            $("#personnelManagmentService"+"-div").css("display", '');
            $("#personnelManagmentDaysAvailable"+"-div").css("display", '');
            $("#personnelManagmentLeaveStatus"+"-div").css("display", '');
            $("#personnelManagmentOvertimeStatus"+"-div").css("display", '');
            $("#personnelManagmentAboutOTHoursMonth"+"-div").css("display", '');
            $("#personnelManagmentOvertimeLunch"+"-div").css("display", '');
            $("#personnelManagmentOvertimeService"+"-div").css("display", '');
            $("#personnelManagmentSalaryGroup"+"-div").css("display", '');
            $("#personnelManagmentMinimumSalary"+"-div").css("display", '');
            $("#personnelManagmentMaximumSalary"+"-div").css("display", '');
            $("#personnelManagmentAchievementCnd"+"-div").css("display", '');
            $("#personnelManagmentDescription"+"-div").css("display", '');

            if (res['NoBenefits'] == 0) {
                $("#personnelManagmentPYFR").prop('checked', false);
            } else {
                $("#personnelManagmentPYFR").prop('checked', true);
            }
            if (res['insuranceNo'] == 0) {
                $("#personnelManagmentNoInsurance").prop('checked', false);
            } else {
                $("#personnelManagmentNoInsurance").prop('checked', true);
            }
            if (res['leaveStatus'] == 0) {
                $("#personnelManagmentLeaveStatus").prop('checked', false);
            } else {
                $("#personnelManagmentLeaveStatus").prop('checked', true);
            }

            $("#personnelManagmentDailyWages").val(res['wage']);
            $("#personnelManagmentYearsCost").val(res['yearsCost']);
            $("#personnelManagmentRightHousing").val(res['RightHousing']);
            $("#personnelManagmentNumberChildren").val(res['numberChildren']);
            $("#personnelManagmentChild").val(res['Child_Allowance']);
            $("#personnelManagmentGrocery").val(res['Grocery']);
            $("#personnelManagmentShift").val(res['Shift']);
            $("#personnelManagmentOutOfList").val(res['SalaryOutofList']);
            $("#personnelManagmentService").val(res['Service']);
            $("#personnelManagmentOvertimeLunch").val(res['OvertimeLunch']);
            $("#personnelManagmentOvertimeService").val(res['OvertimeService']);
            $("#personnelManagmentResponsibilityRight").val(res['responsibility_right']);
            $("#personnelManagmentHardWork").val(res['hardWork']);
            $("#personnelManagmentJobRight").val(res['job_right']);
            $("#personnelManagmentFinancialAllowance").val(res['financial_allowance']);
            $("#personnelManagmentSalaryGroup").val(res['sgid']);
            $("#personnelManagmentMinimumSalary").val(res['minimumSalary']);
            $("#personnelManagmentMaximumSalary").val(res['maximumSalary']);
            $("#personnelManagmentAchievementCnd").val(res['achievementConditions']);
        }else {
            $("#personnelManagmentFName"+"-div").css("display", '');
            $("#personnelManagmentLName"+"-div").css("display", '');
            $("#personnelManagmentFatherName"+"-div").css("display", '');
            $("#personnelManagmentPcode"+"-div").css("display", '');
            $("#personnelManagmentGender"+"-div").css("display", '');
            $("#personnelManagmentStatus"+"-div").css("display", '');
            $("#personnelManagmentBirthDate"+"-div").css("display", '');
            $("#personnelManagmentLeaveDate"+"-div").css("display", '');
            $("#personnelManagmentPYFR"+"-div").css("display", 'none');
            $("#personnelManagmentNoInsurance"+"-div").css("display", 'none');
            $("#personnelManagmentRecruitmentDate"+"-div").css("display", '');
            $("#personnelManagmentBeginDateContract"+"-div").css("display", '');
            $("#personnelManagmentEndDateContract"+"-div").css("display", '');
            $("#personnelManagmentPhone"+"-div").css("display", '');
            $("#personnelManagmentMobile"+"-div").css("display", '');
            $("#personnelManagmentTermContract"+"-div").css("display", '');
            $("#personnelManagmentMonthTrial"+"-div").css("display", '');
            $("#personnelManagmentBirthCertificateNum"+"-div").css("display", '');
            $("#personnelManagmentIssued"+"-div").css("display", '');
            $("#personnelManagmentNationalCode"+"-div").css("display", '');
            $("#personnelManagmentMaritalStatus"+"-div").css("display", '');
            $("#personnelManagmentAddress"+"-div").css("display", '');
            $("#personnelManagmentInsuranceNumber"+"-div").css("display", '');
            $("#personnelManagmentAccountNumber"+"-div").css("display", '');
            $("#personnelManagmentEvaluationScore"+"-div").css("display", '');
            $("#personnelManagmentUnits"+"-div").css("display", '');
            $("#personnelManagmentDegreeEducation"+"-div").css("display", '');
            $("#personnelManagmentFieldStudy"+"-div").css("display", '');
            $("#personnelManagmentDegreeFieldStudy"+"-div").css("display", '');
            $("#personnelManagmentAbilityHeadGroup"+"-div").css("display", '');
            $("#personnelManagmentAbility"+"-div").css("display", '');
            $("#personnelManagmentProficiency"+"-div").css("display", '');
            $("#personnelManagmentPassedCourses"+"-div").css("display", '');
            $("#personnelManagmentAbilityProficiency"+"-div").css("display", '');
            $("#personnelManagmentHourlyWages"+"-div").css("display", '');
            $("#personnelManagmentAvgDayInMonth"+"-div").css("display", '');
            $("#personnelManagmentDailyDutyWorkingHours"+"-div").css("display", '');
            $("#personnelManagmentDailyWages"+"-div").css("display", 'none');
            $("#personnelManagmentYearsCost"+"-div").css("display", 'none');
            $("#personnelManagmentRightHousing"+"-div").css("display", 'none');
            $("#personnelManagmentNumberChildren"+"-div").css("display", 'none');
            $("#personnelManagmentChild"+"-div").css("display", 'none');
            $("#personnelManagmentGrocery"+"-div").css("display", 'none');
            $("#personnelManagmentShift"+"-div").css("display", 'none');
            $("#personnelManagmentOutOfList"+"-div").css("display", 'none');
            $("#personnelManagmentResponsibilityRight"+"-div").css("display", 'none');
            $("#personnelManagmentJobRight"+"-div").css("display", 'none');
            $("#personnelManagmentHardWork"+"-div").css("display", 'none');
            $("#personnelManagmentFinancialAllowance"+"-div").css("display", 'none');
            $("#personnelManagmentService"+"-div").css("display", 'none');
            $("#personnelManagmentDaysAvailable"+"-div").css("display", 'none');
            $("#personnelManagmentLeaveStatus"+"-div").css("display", 'none');
            $("#personnelManagmentOvertimeStatus"+"-div").css("display", '');
            $("#personnelManagmentAboutOTHoursMonth"+"-div").css("display", '');
            $("#personnelManagmentOvertimeLunch"+"-div").css("display", 'none');
            $("#personnelManagmentOvertimeService"+"-div").css("display", 'none');
            $("#personnelManagmentSalaryGroup"+"-div").css("display", 'none');
            $("#personnelManagmentMinimumSalary"+"-div").css("display", 'none');
            $("#personnelManagmentMaximumSalary"+"-div").css("display", 'none');
            $("#personnelManagmentAchievementCnd"+"-div").css("display", 'none');
            $("#personnelManagmentDescription"+"-div").css("display", '');

            $("#personnelManagmentPYFR").prop('checked', false);
            $("#personnelManagmentNoInsurance").prop('checked', false);
            $("#personnelManagmentLeaveStatus").prop('checked', false);

            $("#personnelManagmentHourlyWages").val(res['dailyWages']);
            $("#personnelManagmentAvgDayInMonth").val(res['wage']);
            $("#personnelManagmentDailyDutyWorkingHours").val(res['yearsCost']);

            $("#personnelManagmentDailyWages").val('');
            $("#personnelManagmentYearsCost").val('');
            $("#personnelManagmentRightHousing").val('');
            $("#personnelManagmentNumberChildren").val('');
            $("#personnelManagmentChild").val('');
            $("#personnelManagmentGrocery").val('');
            $("#personnelManagmentShift").val(0);
            $("#personnelManagmentOutOfList").val('');
            $("#personnelManagmentService").val('');
            $("#personnelManagmentOvertimeLunch").val('');
            $("#personnelManagmentOvertimeService").val('');
            $("#personnelManagmentResponsibilityRight").val('');
            $("#personnelManagmentHardWork").val('');
            $("#personnelManagmentJobRight").val('');
            $("#personnelManagmentFinancialAllowance").val('');
            $("#personnelManagmentSalaryGroup").val('');
            $("#personnelManagmentMinimumSalary").val('');
            $("#personnelManagmentMaximumSalary").val('');
            $("#personnelManagmentAchievementCnd").val('');
        }
    }
}

function editAllPersonnel(pid) {
    var action = "editAllPersonnel";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
        showPersonnelManageList();
    }
}

function doEditCreatePersonnel() {
    var pid = $("#managePersonnelHiddenPid").val();
    var type = $("#personnelManagmentType").val();
    var Fname = $("#personnelManagmentFName").val();
    var Lname = $("#personnelManagmentLName").val();
    var fatherName = $("#personnelManagmentFatherName").val();
    var Pcode = $("#personnelManagmentPcode").val();
    var gender = $("#personnelManagmentGender").val();
    var birthDate = $("#personnelManagmentBirthDate").val();
    var leaveDate = $("#personnelManagmentLeaveDate").val()? $("#personnelManagmentLeaveDate").val():"";
    
    var RecruitmentDate = $("#personnelManagmentRecruitmentDate").val();
    var Sdate = $("#personnelManagmentBeginDateContract").val();
    var Edate = $("#personnelManagmentEndDateContract").val();
    var phone = $("#personnelManagmentPhone").val();
    var mobile = $("#personnelManagmentMobile").val();
    var TermContract = $("#personnelManagmentTermContract").val();
    var monthTrial = $("#personnelManagmentMonthTrial").val();
    var BCertificate = $("#personnelManagmentBirthCertificateNum").val();
    var Issued = $("#personnelManagmentIssued").val();
    var NationalCode = $("#personnelManagmentNationalCode").val();
    var MaritalStatus = $("#personnelManagmentMaritalStatus").val();
    var Address = $("#personnelManagmentAddress").val();
    var insuranceNumber = $("#personnelManagmentInsuranceNumber").val();
    var AccountNum = $("#personnelManagmentAccountNumber").val();
    var EvaluationScore = $("#personnelManagmentEvaluationScore").val();
    var Unit = $("#personnelManagmentUnits").val();
    var hourlyWages = $("#personnelManagmentHourlyWages").val();
    var avgDayInMonth = $("#personnelManagmentAvgDayInMonth").val();
    var dailyDutyWorkingHours = $("#personnelManagmentDailyDutyWorkingHours").val();
    var dailyWages = $("#personnelManagmentDailyWages").val();
    var YearsCost = $("#personnelManagmentYearsCost").val();
    var RightHousing = $("#personnelManagmentRightHousing").val();
    var NumberChildren = $("#personnelManagmentNumberChildren").val();
    var Child = $("#personnelManagmentChild").val();
    var Grocery = $("#personnelManagmentGrocery").val();
    var Shift = $("#personnelManagmentShift").val();
    var OutOfList = $("#personnelManagmentOutOfList").val();
    var Service = $("#personnelManagmentService").val();
    var OTLunch = $("#personnelManagmentOvertimeLunch").val();
    var OTService = $("#personnelManagmentOvertimeService").val();
    var responsibilityRight = $("#personnelManagmentResponsibilityRight").val();
    var hardWork = $("#personnelManagmentHardWork").val();
    var jobRight = $("#personnelManagmentJobRight").val();
    var financialAllowance = $("#personnelManagmentFinancialAllowance").val();
    var description = $("#personnelManagmentDescription").val();
    var AbilityProficiency = $("#personnelManagmentAbilityProficiency").val();
    var DegreeFieldStudy = $("#personnelManagmentDegreeFieldStudy").val();
    var AboutOTHoursMonth = $("#personnelManagmentAboutOTHoursMonth").val();
    var sgid = $("#personnelManagmentSalaryGroup").val();
    var status = $("#personnelManagmentStatus").val();
    var personnelRightMarry=0;
    if(MaritalStatus==1){
        personnelRightMarry=$("#personnelRightMarry").val();
    }
   

    if (parseInt(type) == 1){  // نوع پرسنل عادی بود
        if(!parseInt((dailyWages.trim()).length)){
            notice1Sec("دستمزد روزانه مشخص نشده است !","yellow");
            return false;
        }
        if(!parseInt((YearsCost.trim()).length)){
            YearsCost = 0;
        }
        if(!parseInt((RightHousing.trim()).length)){
            notice1Sec("حق مسکن مشخص نشده است !","yellow");
            return false;
        }
        if(!parseInt((NumberChildren.trim()).length) || !$.isNumeric(NumberChildren)){
            notice1Sec("تعداد فرزندان مشخص نشده است یا عددی نیست !","yellow");
            return false;
        }
        if(!parseInt((Child.trim()).length)){
            notice1Sec("حق هر اولاد مشخص نشده است !","yellow");
            return false;
        }
        if(!parseInt((Grocery.trim()).length)){
            notice1Sec("حق خواروبار مشخص نشده است !","yellow");
            return false;
        }
        if(MaritalStatus==1){
            if(!parseInt((personnelRightMarry.trim()).length)){
                notice1Sec("     حق تاهل مشخص نشده است !","yellow");
                return false;
            }
        }
/*        if(!parseInt((Shift.trim()).length)){
            Shift = 0;
        }*/
        if(!parseInt((Service.trim()).length)){
            Service = 0;
        }
        if(!parseInt((OTLunch.trim()).length)){
            OTLunch = 0;
        }
        if(!parseInt((OTService.trim()).length)){
            OTService = 0;
        }
      
        //-------------------------------
       
        //-------------------------------
        
    }else if (parseInt(type) == 0){  // نوع پرسنل ساعتی بود
        if(!parseInt((hourlyWages.trim()).length)){
            notice1Sec("دستمزد ساعتی مشخص نشده است !","yellow");
            return false;
        }
        if(!parseInt((avgDayInMonth.trim()).length)){
            notice1Sec("میانگین تعداد روزهای کاری در ماه مشخص نشده است !","yellow");
            return false;
        }
        if(!parseInt((dailyDutyWorkingHours.trim()).length)){
            notice1Sec("ساعت کارکرد موظفی روزانه مشخص نشده است !","yellow");
            return false;
        }
    }else {
        notice1Sec("نوع پرسنل مشخص نشده است !","yellow");
        return false;
    }

    if(!parseInt((Fname.trim()).length)){
        notice1Sec("نام مشخص نشده است !","yellow");
        return false;
    }
    if(!parseInt((Lname.trim()).length)){
        notice1Sec("نام خانوادگی مشخص نشده است !","yellow");
        return false;
    }
    if(!parseInt((fatherName.trim()).length)){
        notice1Sec("نام پدر مشخص نشده است !","yellow");
        return false;
    }
    if(!parseInt((Pcode.trim()).length) || !$.isNumeric(Pcode)){
        notice1Sec("کد پرسنلی مشخص نشده است یا عددی نیست !","yellow");
        return false;
    }
    if(!parseInt((birthDate.trim()).length)){
        notice1Sec("تاریخ تولد مشخص نشده است !","yellow");
        return false;
    }
    if(!parseInt((Sdate.trim()).length)){
        notice1Sec("تاریخ شروع قرارداد مشخص نشده است !","yellow");
        return false;
    }
    if(!parseInt((Edate.trim()).length)){
        notice1Sec("تاریخ اتمام قرارداد مشخص نشده است !","yellow");
        return false;
    }
    if(!parseInt((BCertificate.trim()).length)){
        notice1Sec("شماره شناسنامه مشخص نشده است !","yellow");
        return false;
    }
    if(!parseInt((Issued.trim()).length)){
        notice1Sec("صادره از مشخص نشده است !","yellow");
        return false;
    }
    if(!parseInt((NationalCode.trim()).length)){
        notice1Sec("کد ملی مشخص نشده است !","yellow");
        return false;
    }
    if(parseInt(MaritalStatus) === -1){
        notice1Sec("وضعیت تاهل مشخص نشده است !","yellow");
        return false;
    }


    if(!parseInt((Address.trim()).length)){
        notice1Sec("آدرس مشخص نشده است !","yellow");
        return false;
    }
    if(!parseInt((AccountNum.trim()).length)){
        notice1Sec("شماره حساب مشخص نشده است !","yellow");
        return false;
    }
    if(parseInt((EvaluationScore.trim()).length) > 0 && !$.isNumeric(EvaluationScore)){
        notice1Sec("امتیاز ارزشیابی باید عددی باشد !","yellow");
        return false;
    }
    if(parseInt(Unit) == 0){
        notice1Sec("واحد مشخص نشده است !","yellow");
        return false;
    }

    if(typeof OutOfList == "undefined" || !parseInt((OutOfList.trim()).length)){
        OutOfList = 0
    }
    if(typeof responsibilityRight == "undefined" || !parseInt((responsibilityRight.trim()).length)){
        responsibilityRight = 0;
    }
    if(typeof hardWork == "undefined" || !parseInt((hardWork.trim()).length)){
        hardWork = 0;
    }
    if(typeof jobRight == "undefined" || !parseInt((jobRight.trim()).length)){
        jobRight = 0;
    }
    if(typeof financialAllowance == "undefined" || !parseInt((financialAllowance.trim()).length)){
        financialAllowance = 0;
    }

    if ($('#personnelManagmentPYFR').is(':checked')) {
        var YFR = 1;
    }else{
        YFR = 0;
    }
    if ($('#personnelManagmentNoInsurance').is(':checked')) {
        var NoInsurance = 1;
    }else{
        NoInsurance = 0;
    }
    if ($('#personnelManagmentLeaveStatus').is(':checked')) {
        var LeaveStatus = 1;
    }else{
        LeaveStatus = 0;
    }
    if ($('#personnelManagmentOvertimeStatus').is(':checked')) {
        var OvertimeStatus = 1;
    }else{
        OvertimeStatus = 0;
    }
    var action = "doEditCreatePersonnel";
    var param = {action:action,pid:pid,Fname:Fname,Lname:Lname,fatherName:fatherName,Pcode:Pcode,birthDate:birthDate,RecruitmentDate:RecruitmentDate,Sdate:Sdate,Edate:Edate,
                 phone:phone,mobile:mobile,TermContract:TermContract,monthTrial:monthTrial,BCertificate:BCertificate,Issued:Issued,NationalCode:NationalCode,
                 MaritalStatus:MaritalStatus,personnelRightMarry:personnelRightMarry,Address:Address,insuranceNumber:insuranceNumber,AccountNum:AccountNum,EvaluationScore:EvaluationScore,
                 Unit:Unit,dailyWages:dailyWages,YearsCost:YearsCost,RightHousing:RightHousing,NumberChildren:NumberChildren,Child:Child,Grocery:Grocery,
                 Shift:Shift,OutOfList:OutOfList,Service:Service,OTLunch:OTLunch,OTService:OTService,responsibilityRight:responsibilityRight,hardWork:hardWork,
                 jobRight:jobRight,financialAllowance:financialAllowance,description:description,YFR:YFR,AbilityProficiency:AbilityProficiency,
                 DegreeFieldStudy:DegreeFieldStudy,AboutOTHoursMonth:AboutOTHoursMonth,LeaveStatus:LeaveStatus,OvertimeStatus:OvertimeStatus,sgid:sgid,
                 gender:gender,status:status,NoInsurance:NoInsurance,type:type,hourlyWages:hourlyWages,avgDayInMonth:avgDayInMonth,dailyDutyWorkingHours:dailyDutyWorkingHours};
  if(parseInt(pid)>0){
    param.leaveDate=leaveDate
  }
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
        $('#personnelManagmentModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        var page = $("#managePersonnelHiddenPage").val();
        showPersonnelManageList(page);
    }
}

function check_marrital_status(input){
    var person_type=$("#personnelManagmentType").val();//پرسنل ساعتی است یا عادی
    var marrital_status=$(input).val();
    if(person_type==1){
        if(marrital_status==1){
            $("#personnelRightMarry-div").show();
        }
        else{
            $("#personnelRightMarry-div").hide();
        }
    }
    else{
        $("#personnelRightMarry-div").hide();
    }
} 

function printPersonnelAgreement(pid){
    var action = "doPrintPersonnelAgreement";
    var param = {action:action,pid:pid};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#hiddenContentBody").html('');
        $("#hiddenContentBody").html(res);
        Swal.fire({
            title: "Print",
            showDenyButton: true,
            showCancelButton: true,
            confirmButtonText: "پرینت قرارداد",
            denyButtonText: `دانلود نسخه Word`,
            cancelButtonText: `انصراف`
          }).then((result) => {
            /* Read more about isConfirmed, isDenied below */
            if (result.isConfirmed) {
                $('#hiddenContentBody .demo').printThis({
                    base:base_url
                })
            } else if (result.isDenied) {
                Export2Word("hiddenContentBody", 'Cpotract_'+pid)
            }
          });

        // if($("#AgreementPrintArea").length){
        //     $("#AgreementPrintArea").remove();
        // }
       
        //var element=$("#hiddenContentBody")
        // $("body").append(`<div id="AgreementPrintArea" class="modal" tabindex="-1" role="dialog">
        //                     <div class="modal-dialog" role="document" style="max-width:1000px">
        //                         <div class="modal-content">
        //                         <div class="modal-header">
                                   
        //                         </div>
        //                         <div class="modal-body googoose-wrapper">
        //                         </div>
        //                         <div class="modal-footer">
        //                             <button type="button"  id="print_agreement_btn" class="btn btn-primary">پرینت </button>
        //                            <button type="button" onclick="Export2Word('hiddenContentBody')" class="btn btn-success" >دانلود فایل WORD</button>
        //                             <button type="button"  class="btn btn-danger" data-dismiss="modal">بستن</button>
        //                         </div>
        //                         </div>
        //                     </div>
        //                 </div>`)
       
        // $("#AgreementPrintArea .modal-body").html(res);
        // $("#AgreementPrintArea").modal('show');
       
        // $("#print_agreement_btn").on('click',function(){
        //      $('#hiddenContentBody .demo').printThis({
        //     //base: "http://localhost:8012/BOM/administrator.php"
        //     base:base_url
        // });
      //  })   
       
    }
}

function Export2Word(element, filename = 'AbrashDocument'){
    // var canvas = document.getElementById("hello-canvas");
    // var ctx = canvas.getContext("2d");
   	// function r(ctx, x, y, w, h, c) {
	//   ctx.beginPath();
	//   ctx.rect(x, y, w, h);
	//   ctx.strokeStyle = c;
	//   ctx.stroke();
	// }
	// r(ctx, 0, 0, 32, 32, "black");
	// r(ctx, 4, 4, 16, 16, "red");
	// r(ctx, 8, 8, 16, 16, "green");
	// r(ctx, 12, 12, 16, 16, "blue"); 
    //     var o = {
    //         filename: filename
    //     };

    //     $(document).googoose(o);
   
   // $("#"+element).wordExport()
   //------------------------
    var preHtml = "<html xmlns:o='urn:schemas-microsoft-com:office:office' xmlns:w='urn:schemas-microsoft-com:office:word' xmlns='http://www.w3.org/TR/REC-html40'><head><meta charset='utf-8'><title>Export HTML To Doc</title></head><body>";
    var postHtml = "</body></html>";
    var html = preHtml+document.getElementById(element).innerHTML+postHtml;

    var blob = new Blob(['\ufeff', html], {
        type: 'application/msword'
    });
    
    // Specify link url
    var url = 'data:application/vnd.ms-word;charset=utf-8,' + encodeURIComponent(html);
    
    // Specify file name
    filename = filename?filename+'.doc':'document.doc';
    
    // Create download link element
    var downloadLink = document.createElement("a");

    document.body.appendChild(downloadLink);
    
    if(navigator.msSaveOrOpenBlob ){
        navigator.msSaveOrOpenBlob(blob, filename);
    }else{
        // Create a link to the file
        downloadLink.href = url;
        
        // Setting the file name
        downloadLink.download = filename;
        
        //triggering the function
        downloadLink.click();
    }
    
    document.body.removeChild(downloadLink);
}

function printPersonnelCosts(){
    var pid = $("#personnelIDHidden").val();
    var action = "printPersonnelCosts";
    var param = {action:action,pid:pid};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#hiddenContentBody").html('');
        $("#hiddenContentBody").html(res);
        $('.demoPC').printThis({
            // base: "http://localhost:8012/BOM/administrator.php"
            base:base_url
        });
    }

}

function deletePersonnel(){
    var ch = $('#personnelManageBody-table').find('input');
    var pid = new Array();
    for(var c=0;c<ch.length;c++){
        if(ch[c].checked){
            pid[pid.length] = ch[c].attributes.rid.value;
        }
    }
    if(pid.length>1){
        notice1Sec("فقط یک پرسنل باید انتخاب شده باشد !","red");
        return false;
    }
    if(pid.length==0){
        notice1Sec("هیچ پرسنلی انتخاب نشده است !","red");
        return false;
    }
    pid = pid[0];
    $("#personnelManage_deleteIdHidden").val(pid);
    $('#manageDeletePersonnelModal').modal('show');
}

function dodeletePersonnel() {
    var pid = $("#personnelManage_deleteIdHidden").val();
    var action = "dodeletePersonnel";
    var param = {action:action,pid:pid};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
        $('#manageDeletePersonnelModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        var page = $("#managePersonnelHiddenPage").val();
        showPersonnelManageList(page);
    }
}

function ShowOtherInfoPersonnelCost(pid) {
    var action = "ShowOtherInfoPersonnelCost";
    var param = {action:action,pid:pid};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#personnel-manage-Info-body").html('');
        $("#personnel-manage-Info-body").html(res);
        $("#personnelIDHidden").val(pid);
        $('#personnelManageInfoModal').modal('show');
    }
}

function overtimeCalcluteStatus() {
    var pid = $("#personnelIDHidden").val();
    if ($('#overtimeCalclute').is(':checked')) {
        var OvertimeStatus = 1;
    }else{
        OvertimeStatus = 0;
    }
    var action = "overtimeCalcluteStatus";
    var param = {action:action,OvertimeStatus:OvertimeStatus,pid:pid};
    var res = manageAjaxRequest(param);
    if(res != false){
        ShowOtherInfoPersonnelCost(pid);
    }
}

function leaveCalcluteStatus() {
    var pid = $("#personnelIDHidden").val();
    if ($('#leaveCalclute').is(':checked')) {
        var LeaveStatus = 1;
    }else{
        LeaveStatus = 0;
    }
    var action = "leaveCalcluteStatus";
    var param = {action:action,LeaveStatus:LeaveStatus,pid:pid};
    var res = manageAjaxRequest(param);
    if(res != false){
        ShowOtherInfoPersonnelCost(pid);
    }
}

function aboutOTHoursMonthChange(){
    var pid = $("#personnelIDHidden").val();
    var otHour = $("#AboutOTHoursMonthTxt").val();
    var action = "aboutOTHoursMonthChange";
    var param = {action:action,otHour:otHour,pid:pid};
    var res = manageAjaxRequest(param);
    if(res != false){
        ShowOtherInfoPersonnelCost(pid);
    }
}

function ShowOtherInfoPersonnel(pid) {
    var action = "ShowOtherInfoPersonnel";
    var param = {action:action,pid:pid};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#personnel-manage-MInfo-body").html('');
        $("#personnel-manage-MInfo-body").html(res);
        $('#personnelManageInfoMModal').modal('show');
    }
}

function editDocumentPersonnel(pid) {
    var res = Main.getPersonnelDocInfo(pid);
    $("#personnelManagmentHiddenPid").val(pid);
    $("#personnelDocumentModal-title").html('فرم ویرایش مدارک '+res['name']);

    $("input[name=personnelManagmentQuestionnaire][value=" + res['Questionnaire'] + "]").prop("checked",true);
    $("input[name=personnelManagmentRecognizance][value=" + res['Recognizance'] + "]").prop("checked",true);
    $("input[name=personnelManagmentNationalCard][value=" + res['NationalCard'] + "]").prop("checked",true);
    $("input[name=personnelManagmentNationalCardDependants][value=" + res['NationalCardDependants'] + "]").prop("checked",true);
    $("input[name=personnelManagmentInsuranceBooklet][value=" + res['InsuranceBooklet'] + "]").prop("checked",true);
    $("input[name=personnelManagmentCardMilitary][value=" + res['CardMilitary'] + "]").prop("checked",true);
    $("input[name=personnelManagmentInsuranceRecords][value=" + res['InsuranceRecords'] + "]").prop("checked",true);
    $("input[name=personnelManagmentDegreeEducation][value=" + res['DegreeEducation'] + "]").prop("checked",true);
    $("input[name=personnelManagmentPhoto][value=" + res['Photo'] + "]").prop("checked",true);
    $("input[name=personnelManagmentCertificate][value=" + res['Certificate'] + "]").prop("checked",true);
    $("input[name=personnelManagmentVerificationServiceRecords][value=" + res['VerificationServiceRecords'] + "]").prop("checked",true);
    $("input[name=personnelManagmentLackBackground][value=" + res['LackBackground'] + "]").prop("checked",true);
    $("input[name=personnelManagmentAccountNumber][value=" + res['AccountNumber'] + "]").prop("checked",true);
    $("input[name=personnelManagmentCheckPromissoryNote][value=" + res['CheckPromissoryNote'] + "]").prop("checked",true);
    $("input[name=personnelManagmentExperiments][value=" + res['Experiments'] + "]").prop("checked",true);

    $("#personnelManagmentQuestionnaireDesc").val(res['QuestionnaireDesc']);
    $("#personnelManagmentRecognizanceDesc").val(res['RecognizanceDesc']);
    $("#personnelManagmentNationalCardDesc").val(res['NationalCardDesc']);
    $("#personnelManagmentNationalCardDependantsDesc").val(res['NationalCardDependantsDesc']);
    $("#personnelManagmentInsuranceBookletDesc").val(res['InsuranceBookletDesc']);
    $("#personnelManagmentCardMilitaryDesc").val(res['CardMilitaryDesc']);
    $("#personnelManagmentInsuranceRecordsDesc").val(res['InsuranceRecordsDesc']);
    $("#personnelManagmentDegreeEducationDesc").val(res['DegreeEducationDesc']);
    $("#personnelManagmentPhotoDesc").val(res['PhotoDesc']);
    $("#personnelManagmentCertificateDesc").val(res['CertificateDesc']);
    $("#personnelManagmentVerificationServiceRecordsDesc").val(res['VerificationServiceRecordsDesc']);
    $("#personnelManagmentLackBackgroundDesc").val(res['LackBackgroundDesc']);
    $("#personnelManagmentAccountNumberDesc").val(res['AccountNumberDesc']);
    $("#personnelManagmentCheckPromissoryNoteDesc").val(res['CheckPromissoryNoteDesc']);
    $("#personnelManagmentExperimentsDesc").val(res['ExperimentsDesc']);
    $('#personnelDocumentModal').modal('show');
}

function doEditDocumentPersonnel() {
    var Questionnaire = $("input[type='radio'][name='personnelManagmentQuestionnaire']:checked").val();
    var Recognizance = $("input[type='radio'][name=personnelManagmentRecognizance]:checked").val();
    var NationalCard = $("input[type='radio'][name=personnelManagmentNationalCard]:checked").val();
    var NationalCardDependants = $("input[type='radio'][name=personnelManagmentNationalCardDependants]:checked").val();
    var InsuranceBooklet = $("input[type='radio'][name=personnelManagmentInsuranceBooklet]:checked").val();
    var CardMilitary = $("input[type='radio'][name=personnelManagmentCardMilitary]:checked").val();
    var InsuranceRecords = $("input[type='radio'][name=personnelManagmentInsuranceRecords]:checked").val();
    var DegreeEducation = $("input[type='radio'][name=personnelManagmentDegreeEducation]:checked").val();
    var Photo = $("input[type='radio'][name=personnelManagmentPhoto]:checked").val();
    var Certificate = $("input[type='radio'][name=personnelManagmentCertificate]:checked").val();
    var VerificationServiceRecords = $("input[type='radio'][name=personnelManagmentVerificationServiceRecords]:checked").val();
    var LackBackground = $("input[type='radio'][name=personnelManagmentLackBackground]:checked").val();
    var AccountNumber = $("input[type='radio'][name=personnelManagmentAccountNumber]:checked").val();
    var CheckPromissoryNote = $("input[type='radio'][name=personnelManagmentCheckPromissoryNote]:checked").val();
    var Experiments = $("input[type='radio'][name=personnelManagmentExperiments]:checked").val();

    var pid = $("#personnelManagmentHiddenPid").val();
    var QuestionnaireDesc = $("#personnelManagmentQuestionnaireDesc").val();
    var RecognizanceDesc = $("#personnelManagmentRecognizanceDesc").val();
    var NationalCardDesc = $("#personnelManagmentNationalCardDesc").val();
    var NationalCardDependantsDesc = $("#personnelManagmentNationalCardDependantsDesc").val();
    var InsuranceBookletDesc = $("#personnelManagmentInsuranceBookletDesc").val();
    var CardMilitaryDesc = $("#personnelManagmentCardMilitaryDesc").val();
    var InsuranceRecordsDesc = $("#personnelManagmentInsuranceRecordsDesc").val();
    var DegreeEducationDesc = $("#personnelManagmentDegreeEducationDesc").val();
    var PhotoDesc = $("#personnelManagmentPhotoDesc").val();
    var CertificateDesc = $("#personnelManagmentCertificateDesc").val();
    var VerificationServiceRecordsDesc = $("#personnelManagmentVerificationServiceRecordsDesc").val();
    var LackBackgroundDesc = $("#personnelManagmentLackBackgroundDesc").val();
    var AccountNumberDesc = $("#personnelManagmentAccountNumberDesc").val();
    var CheckPromissoryNoteDesc = $("#personnelManagmentCheckPromissoryNoteDesc").val();
    var ExperimentsDesc = $("#personnelManagmentExperimentsDesc").val();

    var action = "doEditDocumentPersonnel";
    var param = {action:action,pid:pid,Questionnaire:Questionnaire,Recognizance:Recognizance,NationalCard:NationalCard,NationalCardDependants:NationalCardDependants,InsuranceBooklet:InsuranceBooklet,CardMilitary:CardMilitary,
                 InsuranceRecords:InsuranceRecords,DegreeEducation:DegreeEducation,Photo:Photo,Certificate:Certificate,VerificationServiceRecords:VerificationServiceRecords,LackBackground:LackBackground,AccountNumber:AccountNumber,
                 CheckPromissoryNote:CheckPromissoryNote,Experiments:Experiments,QuestionnaireDesc:QuestionnaireDesc,RecognizanceDesc:RecognizanceDesc,NationalCardDesc:NationalCardDesc,NationalCardDependantsDesc:NationalCardDependantsDesc,
                 InsuranceBookletDesc:InsuranceBookletDesc,CardMilitaryDesc:CardMilitaryDesc,InsuranceRecordsDesc:InsuranceRecordsDesc,DegreeEducationDesc:DegreeEducationDesc,PhotoDesc:PhotoDesc,CertificateDesc:CertificateDesc,
                 VerificationServiceRecordsDesc:VerificationServiceRecordsDesc,LackBackgroundDesc:LackBackgroundDesc,AccountNumberDesc:AccountNumberDesc,CheckPromissoryNoteDesc:CheckPromissoryNoteDesc,ExperimentsDesc:ExperimentsDesc};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
        $('#personnelDocumentModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
    }
}

function personnelSearchType() {
    var sType = $('#personnelManageSearchType').val();
    $('#personnelManagePnameSearch').val('');
    $('#personnelManagePfamilySearch').val('');
    $('#personnelManagePcodeSearch').val('');
    $('#personnelManagePunitSearch').val(0);
    $('#personnelManageRsDateSearch').val('');
    $('#personnelManageReDateSearch').val('');
    $('#personnelManageTsAmountSearch').val('');
    $('#personnelManageTeAmountSearch').val('');

    switch (sType) {
        case '1':
            $("#personnelManagePnameSearch"+"-div").css("display", '');
            $("#personnelManagePfamilySearch"+"-div").css("display", 'none');
            $("#personnelManagePcodeSearch"+"-div").css("display", 'none');
            $("#personnelManagePunitSearch"+"-div").css("display", 'none');
            $("#personnelManageRsDateSearch"+"-div").css("display", 'none');
            $("#personnelManageReDateSearch"+"-div").css("display", 'none');
            $("#personnelManageTsAmountSearch"+"-div").css("display", 'none');
            $("#personnelManageTeAmountSearch"+"-div").css("display", 'none');
            break;
        case '2':
            $("#personnelManagePnameSearch"+"-div").css("display", 'none');
            $("#personnelManagePfamilySearch"+"-div").css("display", '');
            $("#personnelManagePcodeSearch"+"-div").css("display", 'none');
            $("#personnelManagePunitSearch"+"-div").css("display", 'none');
            $("#personnelManageRsDateSearch"+"-div").css("display", 'none');
            $("#personnelManageReDateSearch"+"-div").css("display", 'none');
            $("#personnelManageTsAmountSearch"+"-div").css("display", 'none');
            $("#personnelManageTeAmountSearch"+"-div").css("display", 'none');
            break;
        case '3':
            $("#personnelManagePnameSearch"+"-div").css("display", 'none');
            $("#personnelManagePfamilySearch"+"-div").css("display", 'none');
            $("#personnelManagePcodeSearch"+"-div").css("display", '');
            $("#personnelManagePunitSearch"+"-div").css("display", 'none');
            $("#personnelManageRsDateSearch"+"-div").css("display", 'none');
            $("#personnelManageReDateSearch"+"-div").css("display", 'none');
            $("#personnelManageTsAmountSearch"+"-div").css("display", 'none');
            $("#personnelManageTeAmountSearch"+"-div").css("display", 'none');
            break;
        case '4':
            $("#personnelManagePnameSearch"+"-div").css("display", 'none');
            $("#personnelManagePfamilySearch"+"-div").css("display", 'none');
            $("#personnelManagePcodeSearch"+"-div").css("display", 'none');
            $("#personnelManagePunitSearch"+"-div").css("display", '');
            $("#personnelManageRsDateSearch"+"-div").css("display", 'none');
            $("#personnelManageReDateSearch"+"-div").css("display", 'none');
            $("#personnelManageTsAmountSearch"+"-div").css("display", 'none');
            $("#personnelManageTeAmountSearch"+"-div").css("display", 'none');
            break;
        case '5':
            $("#personnelManagePnameSearch"+"-div").css("display", 'none');
            $("#personnelManagePfamilySearch"+"-div").css("display", 'none');
            $("#personnelManagePcodeSearch"+"-div").css("display", 'none');
            $("#personnelManagePunitSearch"+"-div").css("display", 'none');
            $("#personnelManageRsDateSearch"+"-div").css("display", '');
            $("#personnelManageReDateSearch"+"-div").css("display", '');
            $("#personnelManageTsAmountSearch"+"-div").css("display", 'none');
            $("#personnelManageTeAmountSearch"+"-div").css("display", 'none');
            break;
        case '6':
            $("#personnelManagePnameSearch"+"-div").css("display", 'none');
            $("#personnelManagePfamilySearch"+"-div").css("display", 'none');
            $("#personnelManagePcodeSearch"+"-div").css("display", 'none');
            $("#personnelManagePunitSearch"+"-div").css("display", 'none');
            $("#personnelManageRsDateSearch"+"-div").css("display", 'none');
            $("#personnelManageReDateSearch"+"-div").css("display", 'none');
            $("#personnelManageTsAmountSearch"+"-div").css("display", '');
            $("#personnelManageTeAmountSearch"+"-div").css("display", '');
            break;
        default:
            $("#personnelManagePnameSearch"+"-div").css("display", 'none');
            $("#personnelManagePfamilySearch"+"-div").css("display", 'none');
            $("#personnelManagePcodeSearch"+"-div").css("display", 'none');
            $("#personnelManagePunitSearch"+"-div").css("display", 'none');
            $("#personnelManageRsDateSearch"+"-div").css("display", 'none');
            $("#personnelManageReDateSearch"+"-div").css("display", 'none');
            $("#personnelManageTsAmountSearch"+"-div").css("display", 'none');
            $("#personnelManageTeAmountSearch"+"-div").css("display", 'none');
    }
}

function personnelSearchType1() {
    var sType1 = $('#personnelManageSearchType1').val();
    $('#personnelManagePnameSearch1').val('');
    $('#personnelManagePfamilySearch1').val('');
    $('#personnelManagePcodeSearch1').val('');
    $('#personnelManagePunitSearch1').val(0);
    $('#personnelManageRsDateSearch1').val('');
    $('#personnelManageReDateSearch1').val('');
    $('#personnelManageTsAmountSearch1').val('');
    $('#personnelManageTeAmountSearch1').val('');

    switch (sType1) {
        case '1':
            $("#personnelManagePnameSearch1"+"-div").css("display", '');
            $("#personnelManagePfamilySearch1"+"-div").css("display", 'none');
            $("#personnelManagePcodeSearch1"+"-div").css("display", 'none');
            $("#personnelManagePunitSearch1"+"-div").css("display", 'none');
            $("#personnelManageRsDateSearch1"+"-div").css("display", 'none');
            $("#personnelManageReDateSearch1"+"-div").css("display", 'none');
            $("#personnelManageTsAmountSearch1"+"-div").css("display", 'none');
            $("#personnelManageTeAmountSearch1"+"-div").css("display", 'none');
            break;
        case '2':
            $("#personnelManagePnameSearch1"+"-div").css("display", 'none');
            $("#personnelManagePfamilySearch1"+"-div").css("display", '');
            $("#personnelManagePcodeSearch1"+"-div").css("display", 'none');
            $("#personnelManagePunitSearch1"+"-div").css("display", 'none');
            $("#personnelManageRsDateSearch1"+"-div").css("display", 'none');
            $("#personnelManageReDateSearch1"+"-div").css("display", 'none');
            $("#personnelManageTsAmountSearch1"+"-div").css("display", 'none');
            $("#personnelManageTeAmountSearch1"+"-div").css("display", 'none');
            break;
        case '3':
            $("#personnelManagePnameSearch1"+"-div").css("display", 'none');
            $("#personnelManagePfamilySearch1"+"-div").css("display", 'none');
            $("#personnelManagePcodeSearch1"+"-div").css("display", '');
            $("#personnelManagePunitSearch1"+"-div").css("display", 'none');
            $("#personnelManageRsDateSearch1"+"-div").css("display", 'none');
            $("#personnelManageReDateSearch1"+"-div").css("display", 'none');
            $("#personnelManageTsAmountSearch1"+"-div").css("display", 'none');
            $("#personnelManageTeAmountSearch1"+"-div").css("display", 'none');
            break;
        case '4':
            $("#personnelManagePnameSearch1"+"-div").css("display", 'none');
            $("#personnelManagePfamilySearch1"+"-div").css("display", 'none');
            $("#personnelManagePcodeSearch1"+"-div").css("display", 'none');
            $("#personnelManagePunitSearch1"+"-div").css("display", '');
            $("#personnelManageRsDateSearch1"+"-div").css("display", 'none');
            $("#personnelManageReDateSearch1"+"-div").css("display", 'none');
            $("#personnelManageTsAmountSearch1"+"-div").css("display", 'none');
            $("#personnelManageTeAmountSearch1"+"-div").css("display", 'none');
            break;
        case '5':
            $("#personnelManagePnameSearch1"+"-div").css("display", 'none');
            $("#personnelManagePfamilySearch1"+"-div").css("display", 'none');
            $("#personnelManagePcodeSearch1"+"-div").css("display", 'none');
            $("#personnelManagePunitSearch1"+"-div").css("display", 'none');
            $("#personnelManageRsDateSearch1"+"-div").css("display", '');
            $("#personnelManageReDateSearch1"+"-div").css("display", '');
            $("#personnelManageTsAmountSearch1"+"-div").css("display", 'none');
            $("#personnelManageTeAmountSearch1"+"-div").css("display", 'none');
            break;
        case '6':
            $("#personnelManagePnameSearch1"+"-div").css("display", 'none');
            $("#personnelManagePfamilySearch1"+"-div").css("display", 'none');
            $("#personnelManagePcodeSearch1"+"-div").css("display", 'none');
            $("#personnelManagePunitSearch1"+"-div").css("display", 'none');
            $("#personnelManageRsDateSearch1"+"-div").css("display", 'none');
            $("#personnelManageReDateSearch1"+"-div").css("display", 'none');
            $("#personnelManageTsAmountSearch1"+"-div").css("display", '');
            $("#personnelManageTeAmountSearch1"+"-div").css("display", '');
            break;
        default:
            $("#personnelManagePnameSearch1"+"-div").css("display", 'none');
            $("#personnelManagePfamilySearch1"+"-div").css("display", 'none');
            $("#personnelManagePcodeSearch1"+"-div").css("display", 'none');
            $("#personnelManagePunitSearch1"+"-div").css("display", 'none');
            $("#personnelManageRsDateSearch1"+"-div").css("display", 'none');
            $("#personnelManageReDateSearch1"+"-div").css("display", 'none');
            $("#personnelManageTsAmountSearch1"+"-div").css("display", 'none');
            $("#personnelManageTeAmountSearch1"+"-div").css("display", 'none');
    }
}

function addDegreeEducation() {
    var degree = $('#personnelManagmentDegreeEducation').val();
    if(parseInt((degree.trim()).length) !== 0) {
        if ($('#personnelManagmentDegreeFieldStudy').val() == '') {
            $('#personnelManagmentDegreeFieldStudy').val($('#personnelManagmentDegreeEducation').val());
        } else {
            $('#personnelManagmentDegreeFieldStudy').val($('#personnelManagmentDegreeFieldStudy').val() + ',' + $('#personnelManagmentDegreeEducation').val());
        }
        $('#personnelManagmentDegreeEducation').val('');
        $("#personnelManagmentFieldStudy").removeAttr("disabled");
        $("#personnelManagmentDegreeEducation").attr("disabled","true");
    }
}

function addFieldStudy() {
    var fieldStudy = $('#personnelManagmentFieldStudy').val();
    if(parseInt((fieldStudy.trim()).length) !== 0) {
        $('#personnelManagmentDegreeFieldStudy').val($('#personnelManagmentDegreeFieldStudy').val() + ',' + $('#personnelManagmentFieldStudy').val());
        $('#personnelManagmentFieldStudy').val('');
        $("#personnelManagmentDegreeEducation").removeAttr("disabled");
        $("#personnelManagmentFieldStudy").attr("disabled","true");
    }
}

function createAbility() {
    $("#personnelManagmentAbilityName").val('');
    $("#personnelManagmentAbilityGroup").val(0);
    $("#personnelManagmentAbilitySubGroup").removeAttr("disabled");
    $('#personnelManagmentAbilitySubGroup').empty();
    $('#personnelManagmentAbilitySubGroup').append($('<option>', {
        value: 0,
        text: 'انتخاب کنید'
    }));
    $('#personnelAbilityModal').modal('show');
}

function doCreateAbility() {
    var ability = $("#personnelManagmentAbilityName").val();
    var group = $("#personnelManagmentAbilityGroup").val();
    var sgroup = $("#personnelManagmentAbilitySubGroup").val();
    if(!parseInt((ability.trim()).length)){
        notice1Sec("عنوان توانایی مشخص نشده است !","yellow");
        return false;
    }
    if(parseInt(group) == 0){
        notice1Sec("سرگروه مشخص نشده است !","yellow");
        return false;
    }
    var action = "doCreateAbility";
    var param = {action:action,ability:ability,group:group,sgroup:sgroup};
    var res = manageAjaxRequest(param);
    if(res != false){
        if (parseInt(group) == -1) {
            $('#personnelManagmentAbilityGroup').append($('<option>', {
                value: res,
                text: ability
            }));
        }
        notice1Sec('درخواست با موفقیت انجام شد',"green");
        $("#personnelManagmentAbilityName").val('');
        $("#personnelManagmentAbilityGroup").val(0);
        $("#personnelManagmentAbilitySubGroup").val(0);
    }
}

function addAbility() {
    var ability = $('#personnelManagmentAbility').val();
    if(parseInt((ability.trim()).length) !== 0) {
        if ($('#personnelManagmentAbilityProficiency').val() == '') {
            $('#personnelManagmentAbilityProficiency').val($('#personnelManagmentAbility').val());
        } else {
            $('#personnelManagmentAbilityProficiency').val($('#personnelManagmentAbilityProficiency').val() + ',' + $('#personnelManagmentAbility').val());
        }
        $('#personnelManagmentAbility').val('');
        $("#personnelManagmentProficiency").removeAttr("disabled");
        $("#personnelManagmentAbility").attr("disabled","true");
    }
}

function addProficiency() {
    var proficiency = $('#personnelManagmentProficiency').val();
    if(parseInt((proficiency.trim()).length) !== 0) {
        $('#personnelManagmentAbilityProficiency').val($('#personnelManagmentAbilityProficiency').val() + ',' + $('#personnelManagmentProficiency').val());
        $('#personnelManagmentProficiency').val('');
        $("#personnelManagmentPassedCourses").removeAttr("disabled");
        $("#personnelManagmentProficiency").attr("disabled","true");
    }
}

function addPassedCourses() {
    var PassedCourses = $('#personnelManagmentPassedCourses').val();
    if(parseInt((PassedCourses.trim()).length) !== 0) {
        $('#personnelManagmentAbilityProficiency').val($('#personnelManagmentAbilityProficiency').val() + ',' + $('#personnelManagmentPassedCourses').val());
        $('#personnelManagmentPassedCourses').val('');
        $("#personnelManagmentAbility").removeAttr("disabled");
        $("#personnelManagmentPassedCourses").attr("disabled","true");
    }
}

function getAbilitySubGroup() {
    var gid = $("#personnelManagmentAbilityHeadGroup").val();
    if (parseInt(gid) > 0){
        $('#personnelManagmentAbility').empty();
        var res = Main.getAbilityList(gid);
        $('#personnelManagmentAbility').append($('<option>', {
            value: '',
            text: 'انتخاب کنید'
        }));
        for(var e=0;e<res.length;e++){
            $('#personnelManagmentAbility').append($('<option>', {
                value: res[e]['Ability'],
                text: res[e]['Ability']
            }));
        }
    }else {
        gid = $("#personnelManagmentAbilityGroup").val();
        if (parseInt(gid) == -1){
            $("#personnelManagmentAbilitySubGroup").attr("disabled","true");
        }else {
            $("#personnelManagmentAbilitySubGroup").removeAttr("disabled");
        }
        $('#personnelManagmentAbilitySubGroup').empty();
        var res = Main.getAbilityList1(gid);
        $('#personnelManagmentAbilitySubGroup').append($('<option>', {
            value: 0,
            text: 'انتخاب کنید'
        }));
        for(var e=0;e<res.length;e++){
            $('#personnelManagmentAbilitySubGroup').append($('<option>', {
                value: res[e]['RowID'],
                text: res[e]['Ability']
            }));
        }
    }
}

function personnelAbilitySubGroup() {
    var gid = $("#personnelManageSearchHeadGroup").val();
    $('#personnelManageSearchAbility').empty();
    var res = Main.getAbilityList(gid);
    $('#personnelManageSearchAbility').append($('<option>', {
        value: 0,
        text: 'انتخاب توانایی'
    }));
    for(var e=0;e<res.length;e++){
        $('#personnelManageSearchAbility').append($('<option>', {
            value: res[e]['RowID'],
            text: res[e]['Ability']
        }));
    }
}

function editSalaryGroup() {
    var res = Main.getSalaryGroupInfo();
    if(res != false) {
        $("#personnelSalaryGname1").val(res[0]['groupName']);
        $("#personnelMinimumSalary1").val(res[0]['minimumSalary']);
        $("#personnelMaximumSalary1").val(res[0]['maximumSalary']);
        $("#personnelSalaryGroupAchConditions1").val(res[0]['achievementConditions']);
        $("#personnelSalaryGname2").val(res[1]['groupName']);
        $("#personnelMinimumSalary2").val(res[1]['minimumSalary']);
        $("#personnelMaximumSalary2").val(res[1]['maximumSalary']);
        $("#personnelSalaryGroupAchConditions2").val(res[1]['achievementConditions']);
        $("#personnelSalaryGname3").val(res[2]['groupName']);
        $("#personnelMinimumSalary3").val(res[2]['minimumSalary']);
        $("#personnelMaximumSalary3").val(res[2]['maximumSalary']);
        $("#personnelSalaryGroupAchConditions3").val(res[2]['achievementConditions']);
        $("#personnelSalaryGname4").val(res[3]['groupName']);
        $("#personnelMinimumSalary4").val(res[3]['minimumSalary']);
        $("#personnelMaximumSalary4").val(res[3]['maximumSalary']);
        $("#personnelSalaryGroupAchConditions4").val(res[3]['achievementConditions']);
        $("#personnelSalaryGname5").val(res[4]['groupName']);
        $("#personnelMinimumSalary5").val(res[4]['minimumSalary']);
        $("#personnelMaximumSalary5").val(res[4]['maximumSalary']);
        $("#personnelSalaryGroupAchConditions5").val(res[4]['achievementConditions']);
        $("#personnelSalaryGname6").val(res[5]['groupName']);
        $("#personnelMinimumSalary6").val(res[5]['minimumSalary']);
        $("#personnelMaximumSalary6").val(res[5]['maximumSalary']);
        $("#personnelSalaryGroupAchConditions6").val(res[5]['achievementConditions']);
        $("#personnelSalaryGname7").val(res[6]['groupName']);
        $("#personnelMinimumSalary7").val(res[6]['minimumSalary']);
        $("#personnelMaximumSalary7").val(res[6]['maximumSalary']);
        $("#personnelSalaryGroupAchConditions7").val(res[6]['achievementConditions']);
        $("#personnelSalaryGname8").val(res[7]['groupName']);
        $("#personnelMinimumSalary8").val(res[7]['minimumSalary']);
        $("#personnelMaximumSalary8").val(res[7]['maximumSalary']);
        $("#personnelSalaryGroupAchConditions8").val(res[7]['achievementConditions']);
        $("#personnelSalaryGname9").val(res[8]['groupName']);
        $("#personnelMinimumSalary9").val(res[8]['minimumSalary']);
        $("#personnelMaximumSalary9").val(res[8]['maximumSalary']);
        $("#personnelSalaryGroupAchConditions9").val(res[8]['achievementConditions']);
        $("#personnelSalaryGname10").val(res[9]['groupName']);
        $("#personnelMinimumSalary10").val(res[9]['minimumSalary']);
        $("#personnelMaximumSalary10").val(res[9]['maximumSalary']);
        $("#personnelSalaryGroupAchConditions10").val(res[9]['achievementConditions']);
        $('#personnelSalaryGroupModal').modal('show');
    }
}

function doEditPersonnelSalaryGroup() {
    var g1 = $("#personnelSalaryGname1").val();
    var min1 = $("#personnelMinimumSalary1").val();
    var max1 = $("#personnelMaximumSalary1").val();
    var ac1 = $("#personnelSalaryGroupAchConditions1").val();
    var g2 = $("#personnelSalaryGname2").val();
    var min2 = $("#personnelMinimumSalary2").val();
    var max2 = $("#personnelMaximumSalary2").val();
    var ac2 = $("#personnelSalaryGroupAchConditions2").val();
    var g3 = $("#personnelSalaryGname3").val();
    var min3 = $("#personnelMinimumSalary3").val();
    var max3 = $("#personnelMaximumSalary3").val();
    var ac3 = $("#personnelSalaryGroupAchConditions3").val();
    var g4 = $("#personnelSalaryGname4").val();
    var min4 = $("#personnelMinimumSalary4").val();
    var max4 = $("#personnelMaximumSalary4").val();
    var ac4 = $("#personnelSalaryGroupAchConditions4").val();
    var g5 = $("#personnelSalaryGname5").val();
    var min5 = $("#personnelMinimumSalary5").val();
    var max5 = $("#personnelMaximumSalary5").val();
    var ac5 = $("#personnelSalaryGroupAchConditions5").val();
    var g6 = $("#personnelSalaryGname6").val();
    var min6 = $("#personnelMinimumSalary6").val();
    var max6 = $("#personnelMaximumSalary6").val();
    var ac6 = $("#personnelSalaryGroupAchConditions6").val();
    var g7 = $("#personnelSalaryGname7").val();
    var min7 = $("#personnelMinimumSalary7").val();
    var max7 = $("#personnelMaximumSalary7").val();
    var ac7 = $("#personnelSalaryGroupAchConditions7").val();
    var g8 = $("#personnelSalaryGname8").val();
    var min8 = $("#personnelMinimumSalary8").val();
    var max8 = $("#personnelMaximumSalary8").val();
    var ac8 = $("#personnelSalaryGroupAchConditions8").val();
    var g9 = $("#personnelSalaryGname9").val();
    var min9 = $("#personnelMinimumSalary9").val();
    var max9 = $("#personnelMaximumSalary9").val();
    var ac9 = $("#personnelSalaryGroupAchConditions9").val();
    var g10 = $("#personnelSalaryGname10").val();
    var min10 = $("#personnelMinimumSalary10").val();
    var max10 = $("#personnelMaximumSalary10").val();
    var ac10 = $("#personnelSalaryGroupAchConditions10").val();
    if(!parseInt((g1.trim()).length) || !parseInt((min1.trim()).length) || !parseInt((max1.trim()).length) || !parseInt((ac1.trim()).length) || !parseInt((g2.trim()).length) || !parseInt((min2.trim()).length) || !parseInt((max2.trim()).length) || !parseInt((ac2.trim()).length) || !parseInt((g3.trim()).length) || !parseInt((min3.trim()).length) || !parseInt((max3.trim()).length) || !parseInt((ac3.trim()).length) || !parseInt((g4.trim()).length) || !parseInt((min4.trim()).length) || !parseInt((max4.trim()).length) || !parseInt((ac4.trim()).length) || !parseInt((g5.trim()).length) || !parseInt((min5.trim()).length) || !parseInt((max5.trim()).length) || !parseInt((ac5.trim()).length) || !parseInt((g6.trim()).length) || !parseInt((min6.trim()).length) || !parseInt((max6.trim()).length) || !parseInt((ac6.trim()).length) || !parseInt((g7.trim()).length) || !parseInt((min7.trim()).length) || !parseInt((max7.trim()).length) || !parseInt((ac7.trim()).length) || !parseInt((g8.trim()).length) || !parseInt((min8.trim()).length) || !parseInt((max8.trim()).length) || !parseInt((ac8.trim()).length) || !parseInt((g9.trim()).length) || !parseInt((min9.trim()).length) || !parseInt((max9.trim()).length) || !parseInt((ac9.trim()).length) || !parseInt((g10.trim()).length) || !parseInt((min10.trim()).length) || !parseInt((max10.trim()).length) || !parseInt((ac10.trim()).length)){
        notice1Sec("همه فیلد ها باید تکمیل شوند !","yellow");
        return false;
    }
    var action = "doEditPersonnelSalaryGroup";
    var param = {action:action,g1:g1,min1:min1,max1:max1,ac1:ac1,g2:g2,min2:min2,max2:max2,ac2:ac2,g3:g3,min3:min3,max3:max3,ac3:ac3,g4:g4,min4:min4,max4:max4,ac4:ac4,g5:g5,min5:min5,max5:max5,ac5:ac5,g6:g6,min6:min6,max6:max6,ac6:ac6,g7:g7,min7:min7,max7:max7,ac7:ac7,g8:g8,min8:min8,max8:max8,ac8:ac8,g9:g9,min9:min9,max9:max9,ac9:ac9,g10:g10,min10:min10,max10:max10,ac10:ac10};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
        $('#personnelSalaryGroupModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
    }
}

function getSalaryGroupRange() {
    var group = $("#personnelManagmentSalaryGroup").val();
    var action = "getSalaryGroupRange";
    var param = {action:action,group:group};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#personnelManagmentMinimumSalary").val(res[0]['minimumSalary']);
        $("#personnelManagmentMaximumSalary").val(res[0]['maximumSalary']);
        $("#personnelManagmentAchievementCnd").val(res[0]['achievementConditions']);
    }
}

function comparePersonnelSalaryGroup() {
    $("#personnel-compare-salaryGroup-body").html('');
    $("#personnelManagmentCompareSalaryGroup").val(0);
    $('#personnelManagmentSalarySubGroup').empty();
    $("#personnelManagmentSalarySubGroup").selectpicker('refresh');
    $("#personnelManagmentCompareMethod").selectpicker('deselectAll');
    $('#personnelSalaryCompareModal').modal('show');
/*    var group = $("#personnelManagmentSalaryGroup").val();
    var action = "getSalaryGroupRange";
    var param = {action:action,group:group};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#personnelManagmentMinimumSalary").val(res[0]['minimumSalary']);
        $("#personnelManagmentMaximumSalary").val(res[0]['maximumSalary']);
        $("#personnelManagmentAchievementCnd").val(res[0]['achievementConditions']);
    }*/
}

function getSalaryGroupPersonnel() {
    var sgid = $("#personnelManagmentCompareSalaryGroup").val();
    if (parseInt(sgid) > 0){
        var res = Main.getPersonnelSalaryGroupList(sgid);
        $('#personnelManagmentSalarySubGroup').empty();
        for(var e=0;e<res.length;e++){
            $('#personnelManagmentSalarySubGroup').append($('<option>', {
                value: res[e]['RowID'],
                text: res[e]['Fname']
            }));
        }
        $("#personnelManagmentSalarySubGroup").selectpicker('refresh');
    }else {
        $('#personnelManagmentSalarySubGroup').empty();
        $("#personnelManagmentSalarySubGroup").selectpicker('refresh');
    }
}

function doComparePersonnelSalaryGroup() {
    var sGroup = $("#personnelManagmentCompareSalaryGroup").val();
    var personnel = $("#personnelManagmentSalarySubGroup").val();
    var method = $("#personnelManagmentCompareMethod").val();
    personnel = personnel.join(',');
    method = method.join(',');
    if(!parseInt((method.trim()).length)){
        notice1Sec("مشخص نشده است مقایسه بر چه اساسی باشد !","yellow");
        return false;
    }
    var action = "doComparePersonnelSalaryGroup";
    var param = {action:action,sGroup:sGroup,personnel:personnel,method:method};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#personnel-compare-salaryGroup-body").html('');
        $("#personnel-compare-salaryGroup-body").html(res);
    }
}

function getPersonnelDeficitDocumentsExcel() {
    var action = "getPersonnelDeficitDocumentsExcel";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    if(res != false){
        window.open(res);
    }
}

//++++++++++++++++++++++ مدیریت روزهای در دسترس +++++++++++++++++++++++

function showAvailableDayManageList(page) {
    if(typeof page == "undefined"){
        page = 1;
    }
    var action = "showAvailableDayManageList";
    var param = {action:action,page:page};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#availableDayManageBody").html('');
        $("#availableDayManageBody").html(res);
    }
}

function createAvailableDay() {
    $("#availableDayManageHiddenADid").val('');
    $("#availableDayManageYear").val('');
    $("#availableDayManageTotalDay").val('');
    $("#availableDayManageOfficialHolidays").val('');
    $("#availableDayManageVacations").val('');
    $('#availableDayManageModal').modal('show');
}

function editAvailableDay() {
    var ch = $('#availableDayManageBody-table').find('input');
    var ADid = new Array();
    for(var c=0;c<ch.length;c++){
        if(ch[c].checked){
            ADid[ADid.length] = ch[c].attributes.rid.value;
        }
    }
    if(ADid.length > 1){
        notice1Sec("فقط یک سال باید انتخاب شده باشد !","red");
        return false;
    }
    if(ADid.length==0){
        notice1Sec("هیچ سالی انتخاب نشده است !","red");
        return false;
    }
    ADid = ADid[0];
    var res = Main.getAvailableDayInfo(ADid);
    if(res != false){
        $('#availableDayManageModal').modal('show');
        $("#availableDayManageHiddenADid").val(res['ADid']);
        $("#availableDayManageYear").val(res['Year']);
        $("#availableDayManageTotalDay").val(res['AllDaysOfYear']);
        $("#availableDayManageOfficialHolidays").val(res['OfficialHolidays']);
        $("#availableDayManageVacations").val(res['Vacations']);
    }
}

function doEditCreateAvailableDay() {
    var ADid = $("#availableDayManageHiddenADid").val();
    var yy = $("#availableDayManageYear").val();
    var totalDay = $("#availableDayManageTotalDay").val();
    var OHolidays = $("#availableDayManageOfficialHolidays").val();
    var Vacations = $("#availableDayManageVacations").val();
    if(!parseInt((yy.trim()).length) || !$.isNumeric(yy)){
        notice1Sec("سال مشخص نشده است یا عددی نیست !","yellow");
        return false;
    }
    if(!parseInt((totalDay.trim()).length) || !$.isNumeric(totalDay)){
        notice1Sec("کل روزهای سال مشخص نشده است یا عددی نیست !","yellow");
        return false;
    }
    if(!parseInt((OHolidays.trim()).length) || !$.isNumeric(OHolidays)){
        notice1Sec("تعطیلات رسمی مشخص نشده است یا عددی نیست !","yellow");
        return false;
    }
    if(!parseInt((Vacations.trim()).length) || !$.isNumeric(Vacations)){
        notice1Sec("مرخصی ها مشخص نشده است یا عددی نیست !","yellow");
        return false;
    }
    var action = "doEditCreateAvailableDay";
    var param = {action:action,ADid:ADid,yy:yy,totalDay:totalDay,OHolidays:OHolidays,Vacations:Vacations};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
        $('#availableDayManageModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        showAvailableDayManageList();
    }
}

//++++++++++++++++++++++ مدیریت صنایع +++++++++++++++++++++++

function saveTiming() {
    var action = "saveTiming";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
        showIndustrialManageList();
    }
}

function showIndustrialManageList(page) {
    if(typeof page == "undefined"){
        page = 1;
    }
    var pName = $('#industrialManagePnameSearch').val();
    var pCode = $('#industrialManagePcodeSearch').val();
    var supply = $('#industrialManageHowSupplySearch').val();
    var action = "showIndustrialManageList";
    var param = {action:action,page:page,pName:pName,pCode:pCode,supply:supply};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#industryTimingManagementBody").html('');
        $("#industryTimingManagementBody").html(res);
        $("#industrialManageHiddenPage").val(page);
    }
}

function getExcelZamanSanji() {
    var pName = $('#industrialManagePnameSearch').val();
    var pCode = $('#industrialManagePcodeSearch').val();
    var supply = $('#industrialManageHowSupplySearch').val();
    var action = "getExcelZamanSanji";
    var param = {action:action,pName:pName,pCode:pCode,supply:supply};
    var res = manageAjaxRequest(param);
    if(res != false){
        window.open(res);
    }
}

function ShowOtherCodesPiece(pid) {
    var action = "ShowOtherCodesPiece";
    var param = {action:action,pid:pid};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#Piece-OtherCodes-manage-Info-body").html('');
        $("#Piece-OtherCodes-manage-Info-body").html(res);
        $('#pieceOtherCodesManageInfoModal').modal('show');
    }
}

function doEditCreateOtherPieceCode() {  // ثبت سایر کدهای کالا
    var pid = $("#manageIndustryHiddenRecordOPCPid").val();
    var information = new Array();
    var input_counts=$('#OtherInfoIndustry-tableID').find("input[id^='pieceOtherCodes']").length;

    for(var c=0;c<input_counts;c++){
        var grade = c+1;
        var poc = $("#pieceOtherCodes-"+grade).val();
        if(parseInt((poc.trim()).length) > 0 && !$.isNumeric(poc)){
            notice1Sec("مورد غیر عددی یافت شد !","yellow");
            return false;
        }
        information[information.length] = [poc];
    }
    var myJsonString = JSON.stringify(information);

    var action = "doEditCreateOtherPieceCode";
    var param = {action:action,pid:pid,myJsonString:myJsonString};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
        $('#pieceOtherCodesManageInfoModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        var page = $("#industrialManageHiddenPage").val();
        showIndustrialManageList(page);
    }
}

function ShowTimingInfoPiece(pid) {
    var action = "ShowTimingInfoPiece";
    var param = {action:action,pid:pid};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#Piece-Timing-manage-Info-body").html('');
        $("#Piece-Timing-manage-Info-body").html(res);
        $('#pieceTimingManageInfoModal').modal('show');
    }
}

function doEditCreateUnitTimingPiece() {  // ثبت زمان سنجی هر واحد
    var pid = $("#manageIndustryHiddenECTimingPid").val();
    var information = new Array();
    var input_counts=$("#OtherInfoIndustry-tableID").find("input[id^='pieceTiming']").length;
    for(var c=0;c<input_counts;c++){
        var grade = c+1;
        var pTiming = $("#pieceTiming-"+grade).val();
        if(parseInt((pTiming.trim()).length) > 0 && !$.isNumeric(pTiming)){
            notice1Sec("مورد غیر عددی یافت شد !","yellow");
            return false;
        }
        information[information.length] = [pTiming];
    }
    var myJsonString = JSON.stringify(information);
    var action = "doEditCreateUnitTimingPiece";
    var param = {action:action,myJsonString:myJsonString,pid:pid};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
        $('#pieceTimingManageInfoModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        var page = $("#industrialManageHiddenPage").val();
        showIndustrialManageList(page);    }
}

function editCreateEfficiency(UEid) {
    var res = Main.getUnitEfficiency(UEid);
    if(res != false){
        $('#industryManageUnitEfficiencyModal').modal('show');
        $("#manageIndustryHiddenUEUid").val(UEid);
        $("#industryManageUnitEfficiency").val(res['efficiency']);
    }
}

function doEditCreateUnitEfficiency() {  // ثبت راندمان هر واحد
    var UEid = $("#manageIndustryHiddenUEUid").val();
    var efficiency = $("#industryManageUnitEfficiency").val();
    if(!parseInt((efficiency.trim()).length) || !$.isNumeric(efficiency)){
        notice1Sec("راندمان واحد مشخص نشده یا عددی نیست !","yellow");
        return false;
    }
    if(parseInt(efficiency) > 100){
        notice1Sec("راندمان واحد نمی تواند بزرگتر از 100 باشد !","yellow");
        return false;
    }
    var action = "doEditCreateUnitEfficiency";
    var param = {action:action,UEid:UEid,efficiency:efficiency};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
        $('#industryManageUnitEfficiencyModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        showSalaryBenefitsManageUnitList();
    }
}

//++++++++++++++++++++++ زمان سنجی محصولات +++++++++++++++++++++++

function showIndustrialGManageList(page) {
    if(typeof page == "undefined"){
        page = 1;
    }
    var gName = $('#industrialManageGnameSearch').val();
    var gCode = $('#industrialManageGcodeSearch').val();
    var action = "showIndustrialGManageList";
    var param = {action:action,page:page,gName:gName,gCode:gCode};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#industryGTimingManagementBody").html('');
        $("#industryGTimingManagementBody").html(res);
        $("#industrialGManageHiddenPage").val(page);
    }
}

function ShowTimingInfoGood(gid) {
    var action = "ShowTimingInfoGood";
    var param = {action:action,gid:gid};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#Good-Timing-manage-Info-body").html('');
        $("#Good-Timing-manage-Info-body").html(res);
        $('#goodTimingManageInfoModal').modal('show');
    }
}

function doEditCreateUnitTimingGood() {  // ثبت زمان سنجی مونتاژ
    var gid = $("#manageIndustryHiddenTimingGid").val();
    var gTiming = $("#goodMontageTiming").val();
    if(parseInt((gTiming.trim()).length) > 0 && !$.isNumeric(gTiming)){
        notice1Sec("مورد غیر عددی یافت شد !","yellow");
        return false;
    }

    var action = "doEditCreateUnitTimingGood";
    var param = {action:action,gTiming:gTiming,gid:gid};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
        $('#goodTimingManageInfoModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        var page = $("#industrialGManageHiddenPage").val();
        showIndustrialGManageList(page);    }
}

//++++++++++++++++++++++ درصد ضایعات و بهره +++++++++++++++++++++++

function showPercentagesManageList(page) {
    if(typeof page == "undefined"){
        page = 1;
    }
    var action = "showPercentagesManageList";
    var param = {action:action,page:page};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#percentagesManageBody").html('');
        $("#percentagesManageBody").html(res);
    }
}

function editCreatePercentages() {
    var res = Main.getPercentagesInfo();
    if(res != false){
        $('#percentagesManageModal').modal('show');
        $("#percentagesManageHiddenWid").val(res['Wid']);
        $("#percentagesManageWCasting").val(res['wCasting']);
        $("#percentagesManageWMachining").val(res['wMachining']);
        $("#percentagesManageWPolishing").val(res['wPolishing']);
        $("#percentagesManageWMachiningChips").val(res['wMachiningChips']);
        $("#percentagesManageWPolishingSoil").val(res['wPolishingSoil']);
        $("#percentagesManageScount").val(res['Scount']);
        $("#percentagesManageTax").val(res['tax']);
    }
}

function doEditCreatePercentages() {
    var Wid = $("#percentagesManageHiddenWid").val();
    var WCasting = $("#percentagesManageWCasting").val();
    var WMachining = $("#percentagesManageWMachining").val();
    var WPolishing = $("#percentagesManageWPolishing").val();
    var WMachiningChips = $("#percentagesManageWMachiningChips").val();
    var WPolishingSoil = $("#percentagesManageWPolishingSoil").val();
    var Scount = $("#percentagesManageScount").val();
    var tax = $("#percentagesManageTax").val();
    if(!parseInt((WCasting.trim()).length) || !$.isNumeric(WCasting)){
        notice1Sec("درصد ضایعات ریخته گری مشخص نشده است یا عددی نیست !","yellow");
        return false;
    }
    if(!parseInt((WMachining.trim()).length) || !$.isNumeric(WMachining)){
        notice1Sec("درصد ضایعات ماشینکاری مشخص نشده است یا عددی نیست !","yellow");
        return false;
    }
    if(!parseInt((WPolishing.trim()).length) || !$.isNumeric(WPolishing)){
        notice1Sec("درصد ضایعات پرداخت مشخص نشده است یا عددی نیست !","yellow");
        return false;
    }
    if(!parseInt((WMachiningChips.trim()).length) || !$.isNumeric(WMachiningChips)){
        notice1Sec("درصد ضایعات براده ماشینکاری مشخص نشده است یا عددی نیست !","yellow");
        return false;
    }
    if(!parseInt((WPolishingSoil.trim()).length) || !$.isNumeric(WPolishingSoil)){
        notice1Sec("درصد ضایعات خاک پرداخت مشخص نشده است یا عددی نیست !","yellow");
        return false;
    }
    if(!parseInt((Scount.trim()).length) || !$.isNumeric(Scount)){
        notice1Sec("درصد بهره مشخص نشده است یا عددی نیست !","yellow");
        return false;
    }
    if(!parseInt((tax.trim()).length) || !$.isNumeric(tax)){
        notice1Sec("درصد مالیات مشخص نشده است یا عددی نیست !","yellow");
        return false;
    }
    var action = "doEditCreatePercentages";
    var param = {action:action,Wid:Wid,WCasting:WCasting,WMachining:WMachining,WPolishing:WPolishing,
                 WMachiningChips:WMachiningChips,WPolishingSoil:WPolishingSoil,Scount:Scount,tax:tax};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
        $('#percentagesManageModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        showPercentagesManageList();
    }
}

//++++++++++++++++++++++ مدیریت برنامه ها ++++++++++++++++++++++

function programManage() {
    var action = "programManage";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#programManageID").html('');
        $("#programManageID").html(res);
        var sDate = new AMIB.persianCalendar( 'programManageSdateSearch' );
        var eDate = new AMIB.persianCalendar( 'programManageEdateSearch' );
        var mDate = new AMIB.persianCalendar( 'programManagmentDate' );

        var data = Main.getGoodNameList();
        var goodName = new Array();
        var goodNames = {aa:[]};
        for(var d=0;d<data.length;d++){
            goodName[d]=data[d]['gName'];
            goodNames.aa.push({
                "id" : data[d]['RowID'],
                "name"  : data[d]['gName'],
            });
        }
        $("#programManagmentGname").typeahead({ source:goodNames.aa });
        showProgramManageList();
    }
}

function showProgramManageList(page) {
    if(typeof page == "undefined"){
        page = 1;
    }
    var pCode = $('#programManagePCodeSearch').val();
    var gName = $('#programManageGNameSearch').val();
    var cName = $('#programManageCNameSearch').val();
    var sDate = $('#programManageSdateSearch').val();
    var eDate = $('#programManageEdateSearch').val();
    var action = "showProgramManageList";
    var param = {action:action,page:page,pCode:pCode,gName:gName,cName:cName,sDate:sDate,eDate:eDate};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#programManageBody").html('');
        $("#programManageBody").html(res);
    }
}

function createProgram() {
    $("#manageProgramHiddenPid").val('');
    $("#programManagmentPcode").val('');
    $("#programManagmentGname").val('');
    $("#programManagmentGname").removeAttr('disabled');
    $("#programManagmentNumber").val('');
    $("#programManagmentDate").val('');
    $("#programManagmentCname").val('');
    $("#programManagmentDesc").val('');
    $('#programManagmentModal').modal('show');
}

function editProgram() {
    var ch = $('#programManageBody-table').find('input');
    var pid = new Array();
    for(var c=0;c<ch.length;c++){
        if(ch[c].checked){
            pid[pid.length] = ch[c].attributes.rid.value;
        }
    }
    if(pid.length > 1){
        notice1Sec("فقط یک برنامه باید انتخاب شده باشد !","red");
        return false;
    }
    if(pid.length==0){
        notice1Sec("هیچ برنامه ای انتخاب نشده است !","red");
        return false;
    }
    pid = pid[0];
    var res = Main.getProgramInfo(pid);
    if(res != false){
        $('#programManagmentModal').modal('show');
        $("#manageProgramHiddenPid").val(res['pid']);
        $("#programManagmentPcode").val(res['programCode']);
        $("#programManagmentGname").attr('disabled','true');
        $("#programManagmentGname").val(res['gName']);
        $("#programManagmentNumber").val(res['number']);
        $("#programManagmentDate").val(res['programDate']);
        $("#programManagmentCname").val(res['customerName']);
        $("#programManagmentDesc").val(res['activityDescription']);
    }
}

function doEditCreateProgram() {
    var pid = $("#manageProgramHiddenPid").val();
    var Pcode = $("#programManagmentPcode").val();
    var Gname = $("#programManagmentGname").val();
    var Number = $("#programManagmentNumber").val();
    var pDate = $("#programManagmentDate").val();
    var Cname = $("#programManagmentCname").val();
    var desc = $("#programManagmentDesc").val();
    if(!parseInt((Pcode.trim()).length)){
        notice1Sec("شماره برنامه مشخص نشده است !","yellow");
        return false;
    }
    if(!parseInt((Gname.trim()).length)){
        notice1Sec("نام محصول مشخص نشده است !","yellow");
        return false;
    }
    if(!parseInt((Number.trim()).length)){
        notice1Sec("تعداد مشخص نشده است !","yellow");
        return false;
    }
    if(!$.isNumeric(Number)){
        notice1Sec("تعداد باید عددی باشد !","yellow");
        return false;
    }
    if(!parseInt((pDate.trim()).length)){
        notice1Sec("تاریخ مشخص نشده است !","yellow");
        return false;
    }
    if(!parseInt((Cname.trim()).length)){
        notice1Sec("نام مشتری مشخص نشده است !","yellow");
        return false;
    }
    if(!parseInt((desc.trim()).length)){
        notice1Sec("شرح فعالیت مشخص نشده است !","yellow");
        return false;
    }
    var action = "doEditCreateProgram";
    var param = {action:action,pid:pid,Pcode:Pcode,Gname:Gname,Number:Number,pDate:pDate,Cname:Cname,desc:desc};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
        $('#programManagmentModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        showProgramManageList();
    }
}

function showPieceOfGood(pid) {
    var action = "showPieceOfGood";
    var param = {action:action,pid:pid};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#program-manage-Info-body").html('');
        $("#program-manage-Info-body").html(res);
        $('#programManageInfoModal').modal('show');
    }
}

function deleteProgram() {
    var ch = $('#programManageBody-table').find('input');
    var pid = new Array();
    for(var c=0;c<ch.length;c++){
        if(ch[c].checked){
            pid[pid.length] = ch[c].attributes.rid.value;
        }
    }
    if(pid.length > 1){
        notice1Sec("فقط یک برنامه باید انتخاب شده باشد !","red");
        return false;
    }
    if(pid.length==0){
        notice1Sec("هیچ برنامه ای انتخاب نشده است !","red");
        return false;
    }
    pid = pid[0];
    $("#programManage_deleteIdHidden").val(pid);
    $('#manageDeleteProgramModal').modal('show');
}

function dodeleteProgram() {
    var pid = $("#programManage_deleteIdHidden").val();
    var action = "dodeleteProgram";
    var param = {action:action,pid:pid};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
        $('#manageDeleteProgramModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        showProgramManageList();
    }
}

function addDescForPiece() {
    var ch = $('#addDescForPiece-tableID').find('input:checked');
    var information = new Array();
    for(var c=0;c<ch.length;c++){
        var grade = ch[c].attributes.rid.value;
        var desc = $("#descValue-"+grade).val();
        var pcode = $("#pieceCode-"+grade+"-Hidden").val();
        information[information.length] = [desc,pcode];
    }
    var programID = $("#programManage-HiddenID").val();
    var myJsonString = JSON.stringify(information);
    var action = "addDescForPiece";
    var param = {action:action,myJsonString:myJsonString,programID:programID};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
        $('#programManageInfoModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
    }
}

function getExcelProgramInfo() {
    var programID = $("#programManage-HiddenID").val();
    var action = "getExcelProgramInfo";
    var param = {action:action,programID:programID};
    var res = manageAjaxRequest(param);
    if(res != false){
        window.open(res);
    }
}

//++++++++++++++++++++ گزارشات نرخ ارز +++++++++++++++++++

function currencyReportManage() {
    var action = "currencyReportManage";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    if(res != false) {
        $("#currencyReportManageID").html('');
        $("#currencyReportManageID").html(res);
        var crSDate = new AMIB.persianCalendar( 'currencyReportManageSdateSearch' );
        var crEDate = new AMIB.persianCalendar( 'currencyReportManageEdateSearch' );
        showCurrencyReportManageList()
    }
}

function showCurrencyReportManageList(page) {
    if(typeof page == "undefined"){
        page = 1;
    }
    var cid = $("#currencyReportManageCunameSearch").val();
    var sDate = $("#currencyReportManageSdateSearch").val();
    var eDate = $("#currencyReportManageEdateSearch").val();
    var action = "showCurrencyReportManageList";
    var param = {action:action,page:page,cid:cid,sDate:sDate,eDate:eDate};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#currencyReportManageBody").html('');
        $("#currencyReportManageBody").html(res);
    }
}

//++++++++++++++++++++ گزارش تغییرات قطعه +++++++++++++++++++

function pieceChangeReportManage() {
    var action = "pieceChangeReportManage";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    if(res != false) {
        $("#pieceChangeReportManageID").html('');
        $("#pieceChangeReportManageID").html(res);
        var pcrSDate = new AMIB.persianCalendar( 'pieceChangeReportManageSdateSearch' );
        var pcrEDate = new AMIB.persianCalendar( 'pieceChangeReportManageEdateSearch' );

        var data = Main.getPieceNameList();
        var pieceName = new Array();
        var pieceNames = {aa:[]};
        for(var d=0;d<data.length;d++){
            pieceName[d]=data[d]['pName'];
            pieceNames.aa.push({
                "id" : data[d]['RowID'],
                "name"  : data[d]['pName'],
            });
        }

        var data1 = Main.getFieldNameList();
        var fieldName = new Array();
        var fieldNames = {aa:[]};
        for(var e=0;e<data1.length;e++){
            fieldName[e]=data1[e]['FaName'];
            fieldNames.aa.push({
                "id" : data1[e]['RowID'],
                "name"  : data1[e]['FaName'],
            });
        }
        $("#pieceChangeReportManagePNameSearch").typeahead({ source:pieceNames.aa });
        $("#pieceChangeReportManageFNameSearch").typeahead({ source:fieldNames.aa });
    }
}

function showPieceChangeReportManageList(page) {
    if(typeof page == "undefined"){
        page = 1;
    }
    var pName = $("#pieceChangeReportManagePNameSearch").val();
    var fName = $("#pieceChangeReportManageFNameSearch").val();
    var pCode = $("#pieceChangeReportManagePCodeSearch").val();
    var sDate = $("#pieceChangeReportManageSdateSearch").val();
    var eDate = $("#pieceChangeReportManageEdateSearch").val();
    var action = "showPieceChangeReportManageList";
    var param = {action:action,page:page,pName:pName,fName:fName,pCode:pCode,sDate:sDate,eDate:eDate};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#pieceChangeReportManageBody").html('');
        $("#pieceChangeReportManageBody").html(res);
    }
}

//++++++++++++++++++++ گزارش تغییرات محصول +++++++++++++++++++

function goodChangeReportManage() {
    var action = "goodChangeReportManage";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    if(res != false) {
        $("#goodChangeReportManageID").html('');
        $("#goodChangeReportManageID").html(res);
        var gcrSDate = new AMIB.persianCalendar( 'goodChangeReportManageSdateSearch' );
        var gcrEDate = new AMIB.persianCalendar( 'goodChangeReportManageEdateSearch' );

        var data = Main.getGoodNameList();
        var goodName = new Array();
        var goodNames = {aa:[]};
        for(var d=0;d<data.length;d++){
            goodName[d]=data[d]['gName'];
            goodNames.aa.push({
                "id" : data[d]['RowID'],
                "name"  : data[d]['gName'],
            });
        }

        var data1 = Main.getFieldNamesList();
        var fieldName = new Array();
        var fieldNames = {aa:[]};
        for(var e=0;e<data1.length;e++){
            fieldName[e]=data1[e]['FaName'];
            fieldNames.aa.push({
                "id" : data1[e]['RowID'],
                "name"  : data1[e]['FaName'],
            });
        }

        $("#goodChangeReportManageGNameSearch").typeahead({ source:goodNames.aa });
        $("#goodChangeReportManageFNameSearch").typeahead({ source:fieldNames.aa });
    }
}

function showGoodChangeReportManageList(page) {
    if(typeof page == "undefined"){
        page = 1;
    }
    var gName = $("#goodChangeReportManageGNameSearch").val();
    var fName = $("#goodChangeReportManageFNameSearch").val();
    var gCode = $("#goodChangeReportManageGCodeSearch").val();
    var sDate = $("#goodChangeReportManageSdateSearch").val();
    var eDate = $("#goodChangeReportManageEdateSearch").val();
    var action = "showGoodChangeReportManageList";
    var param = {action:action,page:page,gName:gName,fName:fName,gCode:gCode,sDate:sDate,eDate:eDate};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#goodChangeReportManageBody").html('');
        $("#goodChangeReportManageBody").html(res);
    }
}

//+++++++++++++++ گزارش قیمت قطعات / محصولات +++++++++++++++

function priceReportManage() {
    var action = "priceReportManage";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    if(res != false) {
        $("#priceReportManageID").html('');
        $("#priceReportManageID").html(res[1]);

        if(jQuery.inArray(1, res[0]) !== -1) {
            //resetPieceHowSupply();
            updatePiecePrice();
        }
        if(jQuery.inArray(2, res[0]) !== -1) {
            updateGoodPrice();
        }
        if(jQuery.inArray(3, res[0]) !== -1) {
            //showGoodProccessPriceReportManageList();
        }
    }
}

//++++++++++++++++++++ گزارش قیمت قطعات +++++++++++++++++++

function showPiecePriceReportManageList(page) {
    if(typeof page == "undefined"){
        page = 1;
    }
    var pName = $("#piecePriceReportManagePNameSearch").val();
    var pCode = $("#piecePriceReportManagePCodeSearch").val();
    var supply = $("#piecePriceReportManageSupplySearch").val();
    var error = $("#piecePriceReportManageErrorSearch").val();
    var action = "showPiecePriceReportManageList";
    var param = {action:action,page:page,pName:pName,pCode:pCode,supply:supply,error:error};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#piecePriceReportManageBody").html('');
        $("#piecePriceReportManageBody").html(res);
        $("#piecePriceReportManageHiddenPage").val(page);
    }
}

function showMPiecePriceReportManageList(page) {
    if(typeof page == "undefined"){
        page = 1;
    }
    var pName = $("#piecePriceReportManagePNameSearch").val();
    var action = "showMPiecePriceReportManageList";
    var param = {action:action,page:page,pName:pName};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#piecePriceReportManageBody").html('');
        $("#piecePriceReportManageBody").html(res);
        //$("#piecePriceReportManagePNameSearch").val('');
        $("#piecePriceReportManageHiddenPage").val(page);
    }
}

function showMPagePiecePriceReportManageList(page) {
    if(typeof page == "undefined"){
        page = 1;
    }
    var pName = $("#piecePriceReportManagePNameSearch").val();
    var action = "showMPagePiecePriceReportManageList";
    var param = {action:action,page:page,pName:pName};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#piecePriceReportManageBody").html('');
        $("#piecePriceReportManageBody").html(res);
        //$("#piecePriceReportManagePNameSearch").val('');
        $("#piecePriceReportManageHiddenPage").val(page);
    }
}

function showBMPiecePriceReportManageList(page) {
    if(typeof page == "undefined"){
        page = 1;
    }
    var action = "showBMPiecePriceReportManageList";
    var param = {action:action,page:page};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#piecePriceReportManageBody").html('');
        $("#piecePriceReportManageBody").html(res);
        $("#piecePriceReportManageHiddenPage").val(page);
    }
}

function showBMPagePiecePriceReportManageList(page) {
    if(typeof page == "undefined"){
        page = 1;
    }
    var action = "showBMPagePiecePriceReportManageList";
    var param = {action:action,page:page};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#piecePriceReportManageBody").html('');
        $("#piecePriceReportManageBody").html(res);
        $("#piecePriceReportManageHiddenPage").val(page);
    }
}

function emptyPiecePriceReportSearchFilters() {
    $("#piecePriceReportManagePCodeSearch").val('');
    $("#piecePriceReportManagePNameSearch").val('');
    $("#piecePriceReportManageSupplySearch").val(-1);
    $("#piecePriceReportManageErrorSearch").val(-1);
    showPiecePriceReportManageList();
}

function updatePiecePrice() {
    var action = "updatePiecePrice";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
        var page = $("#piecePriceReportManageHiddenPage").val();
        showPiecePriceReportManageList(page);
    }
}

function resetPieceHowSupply() {
    var action = "resetPieceHowSupply";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
        showPiecePriceReportManageList();
    }
}

function updateRowPiecePrice(pid) {
    var howsupply = $("#ChangingHow_supply"+"-"+pid).val();
    var action = "updateRowPiecePrice";
    var param = {action:action,pid:pid,howsupply:howsupply};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
        var page = $("#piecePriceReportManageHiddenPage").val();
        showPiecePriceReportManageRowList(page);
    }
}

function showPiecePriceReportManageRowList(page) {
    if(typeof page == "undefined"){
        page = 1;
    }
    var action = "showPiecePriceReportManageRowList";
    var param = {action:action,page:page};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#piecePriceReportManageBody").html('');
        $("#piecePriceReportManageBody").html(res);
        $("#piecePriceReportManageHiddenPage").val(page);
    }
}

function showSmallExpenses(pid) {
    var action = "showSmallExpenses";
    var param = {action:action,pid:pid};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#Piece-costs-Info-body").html('');
        $("#Piece-costs-Info-body").html(res);
        $('#pieceCostsInfoModal').modal('show');
    }
}

function showSmallPrice(pid) {
    var action = "showSmallPrice";
    var param = {action:action,pid:pid};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#Piece-price-Info-body").html('');
        $("#Piece-price-Info-body").html(res);
        $('#piecePriceInfoModal').modal('show');
    }
}

function showErrorOfPiece(pid) {
    var action = "showErrorOfPiece";
    var param = {action:action,pid:pid};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#Piece-error-Info-body").html('');
        $("#Piece-error-Info-body").html(res);
        $('#pieceErrorInfoModal').modal('show');
    }
}

function quickPiecePriceCalculation() {
     $("#quickPiecePriceCalcHow_supply").val(-1);
     $("#quickPiecePriceCalcBrassType").val(0);
     $("#quickPiecePriceCalcWeight_FM").val('');
     $("#quickPiecePriceCalcWeight_Mach").val('');
     $("#quickPiecePriceCalcWeight_Final").val('');
     $("#quickPiecePriceCalcPrice_FM").val('');
     $("#quickPiecePriceCalcWeight_FMT").val('');
     $("#quickPiecePriceCalcPer_MB").val('');
     $("#quickPiecePriceCalcWeight_FinalT").val('');
     $('#quickPiecePriceCalcModal').modal('show');
}

function doQuickPiecePriceCalc() {
    var HS = $("#quickPiecePriceCalcHow_supply").val();
    var BT = $("#quickPiecePriceCalcBrassType").val();
    var wfm = $("#quickPiecePriceCalcWeight_FM").val();
    var wmch = $("#quickPiecePriceCalcWeight_Mach").val();
    var wf = $("#quickPiecePriceCalcWeight_Final").val();
    var pfm = $("#quickPiecePriceCalcPrice_FM").val();
    var wfmt = $("#quickPiecePriceCalcWeight_FMT").val();
    var pmb = $("#quickPiecePriceCalcPer_MB").val();
    var wft = $("#quickPiecePriceCalcWeight_FinalT").val();

    if (parseInt(HS) === -1){
        notice1Sec("روش انجام محاسبات انتخاب نشده است !","red");
        return false;
    }else if (parseInt(HS) === 2){
        if(!parseInt((pfm.trim()).length) || !$.isNumeric(pfm)){
            notice1Sec("قیمت ماده اولیه مشخص نشده است یا عددی نیست !","yellow");
            return false;
        }
        if(!parseInt((wfmt.trim()).length) || !$.isNumeric(wfmt)){
            notice1Sec("وزن ماده اولیه مشخص نشده است یا عددی نیست !","yellow");
            return false;
        }
        if(!parseInt((wft.trim()).length) || !$.isNumeric(wft)){
            notice1Sec("وزن نهایی مشخص نشده است یا عددی نیست !","yellow");
            return false;
        }
        if(!parseInt((pmb.trim()).length) || !$.isNumeric(pmb)){
            notice1Sec("درصد مواد بازیافتی مشخص نشده است یا عددی نیست !","yellow");
            return false;
        }
    }else {
        if(!parseInt((wfm.trim()).length) || !$.isNumeric(wfm)){
            notice1Sec("وزن مواد اولیه مشخص نشده است یا عددی نیست !","yellow");
            return false;
        }
        if(!parseInt((wmch.trim()).length) || !$.isNumeric(wmch)){
            notice1Sec("وزن ماشین کاری مشخص نشده است یا عددی نیست !","yellow");
            return false;
        }
        if(!parseInt((wf.trim()).length) || !$.isNumeric(wf)){
            notice1Sec("وزن نهایی مشخص نشده است یا عددی نیست !","yellow");
            return false;
        }
    }
    var action = "doQuickPiecePriceCalc";
    var param = {action:action,HS:HS,BT:BT,wfm:wfm,wmch:wmch,wf:wf,pfm:pfm,wfmt:wfmt,pmb:pmb,wft:wft};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#quick-piece-price-body").html('');
        $("#quick-piece-price-body").html(res);
    }
}

function quickPiecePriceCalcChangeField() {
    var HS = $("#quickPiecePriceCalcHow_supply").val();
    $("#quickPiecePriceCalcBrassType").val(0);
    $("#quickPiecePriceCalcWeight_FM").val('');
    $("#quickPiecePriceCalcWeight_Mach").val('');
    $("#quickPiecePriceCalcWeight_Final").val('');
    $("#quickPiecePriceCalcPrice_FM").val('');
    $("#quickPiecePriceCalcWeight_FMT").val('');
    $("#quickPiecePriceCalcPer_MB").val('');
    $("#quickPiecePriceCalcWeight_FinalT").val('');
    $("#quick-piece-price-body").html('');
    if (parseInt(HS) === 2){
        $("#quickPiecePriceCalcWeight_FM"+"-div").css("display", 'none');
        $("#quickPiecePriceCalcBrassType"+"-div").css("display", 'none');
        $("#quickPiecePriceCalcWeight_Mach"+"-div").css("display", 'none');
        $("#quickPiecePriceCalcWeight_Final"+"-div").css("display", 'none');
        $("#quickPiecePriceCalcPrice_FM"+"-div").css("display", '');
        $("#quickPiecePriceCalcWeight_FMT"+"-div").css("display", '');
        $("#quickPiecePriceCalcPer_MB"+"-div").css("display", '');
        $("#quickPiecePriceCalcWeight_FinalT"+"-div").css("display", '');
    }else {
        if (parseInt(HS) === 1){
            $("#quickPiecePriceCalcBrassType"+"-div").css("display", '');
        }else {
            $("#quickPiecePriceCalcBrassType"+"-div").css("display", 'none');
        }
        $("#quickPiecePriceCalcWeight_FM"+"-div").css("display", '');
        $("#quickPiecePriceCalcWeight_Mach"+"-div").css("display", '');
        $("#quickPiecePriceCalcWeight_Final"+"-div").css("display", '');
        $("#quickPiecePriceCalcPrice_FM"+"-div").css("display", 'none');
        $("#quickPiecePriceCalcWeight_FMT"+"-div").css("display", 'none');
        $("#quickPiecePriceCalcPer_MB"+"-div").css("display", 'none');
        $("#quickPiecePriceCalcWeight_FinalT"+"-div").css("display", 'none');
    }
}

//++++++++++++++++++++ گزارش قیمت محصولات +++++++++++++++++++

function showGoodPriceReportManageList(page) {
    if(typeof page == "undefined"){
        page = 1;
    }
    var gName = $("#goodPriceReportManageGNameSearch").val();
    var gCode = $("#goodPriceReportManagePCodeSearch").val();
    var hCode = $("#goodPriceReportManageHCodeSearch").val();
    var action = "showGoodPriceReportManageList";
    var param = {action:action,page:page,gName:gName,gCode:gCode,hCode:hCode};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#goodPriceReportManageBody").html('');
        $("#goodPriceReportManageBody").html(res);
        $("#goodPriceReportManageHiddenPage").val(page);
    }
}

function showMGoodPriceReportManageList(page) {
    if(typeof page == "undefined"){
        page = 1;
    }
    var gName = $("#goodPriceReportManageGNameSearch").val();
    var action = "showMGoodPriceReportManageList";
    var param = {action:action,page:page,gName:gName};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#goodPriceReportManageBody").html('');
        $("#goodPriceReportManageBody").html(res);
        //$("#goodPriceReportManageGNameSearch").val('');
        $("#goodPriceReportManageHiddenPage").val(page);
    }
}

function showMPageGoodPriceReportManageList(page) {
    if(typeof page == "undefined"){
        page = 1;
    }
    var gName = $("#goodPriceReportManageGNameSearch").val();
    var action = "showMPageGoodPriceReportManageList";
    var param = {action:action,page:page,gName:gName};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#goodPriceReportManageBody").html('');
        $("#goodPriceReportManageBody").html(res);
        //$("#goodPriceReportManageGNameSearch").val('');
        $("#goodPriceReportManageHiddenPage").val(page);
    }
}

function showBMGoodPriceReportManageList(page) {
    if(typeof page == "undefined"){
        page = 1;
    }
    var action = "showBMGoodPriceReportManageList";
    var param = {action:action,page:page};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#goodPriceReportManageBody").html('');
        $("#goodPriceReportManageBody").html(res);
        $("#goodPriceReportManageHiddenPage").val(page);
    }
}

function showBMPageGoodPriceReportManageList(page) {
    if(typeof page == "undefined"){
        page = 1;
    }
    var action = "showBMPageGoodPriceReportManageList";
    var param = {action:action,page:page};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#goodPriceReportManageBody").html('');
        $("#goodPriceReportManageBody").html(res);
        $("#goodPriceReportManageHiddenPage").val(page);
    }
}

function emptyGoodPriceReportSearchFilters() {
    $("#goodPriceReportManageGNameSearch").val('');
    $("#goodPriceReportManagePCodeSearch").val('');
    $("#goodPriceReportManageHCodeSearch").val('');
    showGoodPriceReportManageList();
}

function updateGoodPrice() {
    var action = "updateGoodPrice";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
        var page = $("#goodPriceReportManageHiddenPage").val();
        showGoodPriceReportManageList(page);
    }
}

function showErrorOfGood(gid) {
    var action = "showErrorOfGood";
    var param = {action:action,gid:gid};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#Good-error-Info-body").html('');
        $("#Good-error-Info-body").html(res);
        $('#goodErrorInfoModal').modal('show');
    }
}

function showFinePriceOfGood(gid) {
    var action = "showFinePriceOfGood";
    var param = {action:action,gid:gid};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#Good-fine-price-body").html('');
        $("#Good-fine-price-body").html(res);
        $('#goodFinePriceModal').modal('show');
    }
}

function getExcelGoodFinePrice() {
    var gid = $('#goodFinePrice-HiddenID').val();
    var action = "getExcelGoodFinePrice";
    var param = {action:action,gid:gid};
    var res = manageAjaxRequest(param);
    if(res != false){
        window.open(res);
    }
}

//++++++++++++++++++++ گزارش قیمت کالای در جریان ساخت +++++++++++++++++++

function showGoodProccessPriceReportManageList(page) {
    if(typeof page == "undefined"){
        page = 1;
    }
    var Code = $("#goodProccessPriceReportManageCodeSearch").val();
    var action = "showGoodProccessPriceReportManageList";
    var param = {action:action,page:page,Code:Code};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#goodProccessPriceReportManageBody").html('');
        $("#goodProccessPriceReportManageBody").html(res);
        $("#goodProccessPriceReportManageHiddenPage").val(page);
    }
}

function goodProccessPriceCalc(pid) {
    var res = Main.getRawMaterialCode(pid);
    if (parseInt(res['FixHow_supply']) == 1 || parseInt(res['FixHow_supply']) == 2){
        $("#goodProccessPriceCalcRawMaterialCode"+"-div").css("display", 'none');
        $("#goodProccessPriceCalcAVGP"+"-div").css("display", 'none');
        $("#goodProccessPriceCalcPCode"+"-div").css("display", '');
        $("#goodProccessPriceCalcPName"+"-div").css("display", '');
        $("#goodProccessPriceCalcPCode").val(res['h18']);
        $("#goodProccessPriceCalcPName").val(res['pName']);
    }else {
        $("#goodProccessPriceCalcRawMaterialCode"+"-div").css("display", '');
        $("#goodProccessPriceCalcAVGP"+"-div").css("display", '');
        $("#goodProccessPriceCalcPCode"+"-div").css("display", 'none');
        $("#goodProccessPriceCalcPName"+"-div").css("display", 'none');
        $("#goodProccessPriceCalcRawMaterialCode").val(res['RawMaterialCode']);
        $("#goodProccessPriceCalcAVGP").val('');
        $("#good-proccess-price-body").html('');
    }
    $("#goodProccessPriceCalcHiddenPid").val(pid);
    $('#goodProccessPriceCalcModal').modal('show');
}

function doGoodProccessPriceCalc() {
    var avg = $("#goodProccessPriceCalcAVGP").val();
    var pid = $("#goodProccessPriceCalcHiddenPid").val();
    if(!parseInt((avg.trim()).length)){
        notice1Sec("قیمت میانگین ماده اولیه مشخص نشده است !","yellow");
        return false;
    }
    var action = "doGoodProccessPriceCalc";
    var param = {action:action,avg:avg,pid:pid};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#good-proccess-price-body").html('');
        $("#good-proccess-price-body").html(res);
    }
}

//+++++++++++++++ قیمت فروش محصولات +++++++++++++++

/*function salesPriceGoodSalePrice() {
    var action = "salesPriceGoodSalePrice";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
    }
}*/

function salesPriceGoodsManage() {
    var action = "salesPriceGoodsManage";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    if(res != false) {
        $("#salesPriceGoodsManageID").html('');
        $("#salesPriceGoodsManageID").html(res[1]);
        var data = Main.getGoodNameList();
        var goodName = new Array();
        var goodNames = {aa:[]};
        for(var d=0;d<data.length;d++){
            goodName[d]=data[d]['gName'];
            goodNames.aa.push({
                "id" : data[d]['RowID'],
                "name"  : data[d]['gName'],
            });
        }
        $("#salesPriceGoodsManageGNameSearch").typeahead({ source:goodNames.aa });
        $("#oneNewSalesPriceGoodsGName").typeahead({ source:goodNames.aa });
        $("#goodCompareBOMGname").typeahead({ source:goodNames.aa });
        if (parseInt(res[0]) == 1) {
            var cpDate = new AMIB.persianCalendar('checkPricesManagePDateSearch');
        }
        $("#uploadAgainSalesPriceGoodsID").css("display", "none");
        updateSalePriceList();
    }
}

function showSalesPriceGoodsManageList(page) {
    if(typeof page == "undefined"){
        page = 1;
    }
    var gName = $("#salesPriceGoodsManageGNameSearch").val();
    var gCode = $("#salesPriceGoodsManagePCodeSearch").val();
    var action = "showSalesPriceGoodsManageList";
    var param = {action:action,page:page,gName:gName,gCode:gCode};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#salesPriceGoodsManageBody").html('');
        $("#salesPriceGoodsManageBody").html(res);
        $("#oneNewSalesPriceGoodsHiddenPage").val(page);
    }
}

function updateSalePriceList(page) {
    var action = "updateSalePriceList";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
        showSalesPriceGoodsManageList(page);
    }
}

function createSalesPriceGoodsPDF() {
    $('#createSalesPriceGoodsPDFModal').modal('show');
}

function printSaleListPrice(){
    var cid = $("#saleListPriceCategory").val();
    var action = "doPrintSaleListPrice";
    var param = {action:action,cid:cid};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#hiddenSaleListPriceBody").html('');
        $("#hiddenSaleListPriceBody").html(res);
        $('.demo').printThis({
            // base: "http://localhost:8012/BOM/administrator.php"
            base:base_url
        });
    }
}

function salesPriceGoodsCompareBOM() {
    $('#goodCompareBOMModal').modal('show');
    $("#good-Compare-BOM-body").html('');
    $("#goodCompareBOMGname").val('');
    $("#goodCompareBOMGnames").val('');
}

function showGoodsCompareBomList() {
    var CBG = $("#goodCompareBOMGnames").val();
    var action = "showGoodsCompareBomList";
    var param = {action:action,CBG:CBG};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#goodCompareBOMGnames").val('');
        $("#good-Compare-BOM-body").html('');
        $("#good-Compare-BOM-body").html(res);
    }else {
        $("#goodCompareBOMGname").val('');
        $("#goodCompareBOMGnames").val('');
    }
}

function showCheckPricesManageList() {
    var checkList = $("#checkPricesManageCategorySearch").val();
    var SPercent = $("#checkPricesManageSPercentSearch").val();
    var EPercent = $("#checkPricesManageEPercentSearch").val();
    if(parseInt(checkList) < 0){
        notice1Sec("لیست مورد نظر را انتخاب نمایید !","yellow");
        return false;
    }
    if(!parseInt((SPercent.trim()).length) || !parseInt((EPercent.trim()).length)){
        notice1Sec("لطفا بازه مجاز را وارد نمایید !","yellow");
        return false;
    }
    var action = "showCheckPricesManageList";
    var param = {action:action,SPercent:SPercent,EPercent:EPercent,checkList:checkList};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#checkPricesManageBody").html('');
        $("#checkPricesManageBody").html(res);
    }
}

function questionCreateNewSalesPriceGoodsList() {
    $('#questionCreateNewSalesPriceGoodsModal').modal('show');
}

function doCreateFinalSalesPriceGoodsList() {
    var pDate = $('#checkPricesManagePDateSearch').val();
    var Cat = $('#checkPricesManageCategorySearch').val();
    if(parseInt(Cat) < 0){
        notice1Sec("لیست مورد نظر را انتخاب نمایید !","yellow");
        return false;
    }
    if(!parseInt((pDate.trim()).length)){
        notice1Sec("تاریخ اجرا مشخص نشده است !","yellow");
        return false;
    }
    var action = 'doCreateFinalSalesPriceGoodsList';
    var param = {action:action,pDate:pDate,Cat:Cat};
    var res = manageAjaxRequest(param);
    if(res != false){
        updateSalePriceList();
    }
}

function showFieldOfCalcType() {
    var calcType = $('#oneNewSalesPriceGoodsCalcType').val();
    var gid = $('#oneNewSalesPriceGoodsHiddenGid').val();
    var res = Main.getGoodCalcInfo(gid);
    $("#oneNewSalesPriceGoodsDTNBLGHGH"+"-div").css("display", '');
    $("#oneNewSalesPriceGoodsMSTNBLGHGH"+"-div").css("display", '');
    $("#oneNewSalesPriceGoodsGName"+"-div").css("display", '');
    $("#oneNewSalesPriceGoodsCoefficient"+"-div").css("display", '');
    $("#oneNewSalesPriceGoodsDivisibility"+"-div").css("display", '');
    $("#doCreateOneNewSalesPriceGoodsModal"+"-btn").removeAttr('disabled');


    if (parseInt(calcType) == 0) {  //روش عادی
        $("#oneNewSalesPriceGoodsGName"+"-div").css("display", 'none');
        $("#oneNewSalesPriceGoodsCoefficient"+"-div").css("display", 'none');
        $("#oneNewSalesPriceGoodsDivisibility"+"-div").css("display", 'none');
        if (res['color'] !== 'کروم' && res['ggroup'] === 'شیرآلات'){
            $("#oneNewSalesPriceGoodsDTNBLGHGH"+"-div").css("display", 'none');
        }
    }else {  // روش فرمولی
        if (res['ggroup'] === 'اتصالات 5 لایه'){
            $("#oneNewSalesPriceGoodsDTNBLGHGH"+"-div").css("display", 'none');
            $("#oneNewSalesPriceGoodsMSTNBLGHGH"+"-div").css("display", 'none');
        }else if (res['ggroup'] === 'شیلنگ'){
            $("#oneNewSalesPriceGoodsDTNBLGHGH"+"-div").css("display", 'none');
            $("#oneNewSalesPriceGoodsDivisibility"+"-div").css("display", 'none');
        }else {
            $("#oneNewSalesPriceGoodsDTNBLGHGH"+"-div").css("display", 'none');
            $("#oneNewSalesPriceGoodsMSTNBLGHGH"+"-div").css("display", 'none');
            $("#oneNewSalesPriceGoodsGName"+"-div").css("display", 'none');
            $("#oneNewSalesPriceGoodsCoefficient"+"-div").css("display", 'none');
            $("#oneNewSalesPriceGoodsDivisibility"+"-div").css("display", 'none');
            $("#doCreateOneNewSalesPriceGoodsModal"+"-btn").attr("disabled", 'true');
        }
    }
}

function createOneNewSalesPriceGoodsList(gid) {
    $("#oneNewSalesPriceGoodsDTNBLGHGH"+"-div").css("display", '');
    $("#oneNewSalesPriceGoodsMSTNBLGHGH"+"-div").css("display", '');
    $("#oneNewSalesPriceGoodsGName"+"-div").css("display", '');
    $("#oneNewSalesPriceGoodsCoefficient"+"-div").css("display", '');
    $("#oneNewSalesPriceGoodsDivisibility"+"-div").css("display", '');
    var res = Main.getGoodCalcInfo(gid);
    if (parseInt(res['calcType']) == 0){  //روش عادی
        $("#oneNewSalesPriceGoodsGName"+"-div").css("display", 'none');
        $("#oneNewSalesPriceGoodsCoefficient"+"-div").css("display", 'none');
        $("#oneNewSalesPriceGoodsDivisibility"+"-div").css("display", 'none');
        if (res['color'] !== 'کروم' && res['ggroup'] === 'شیرآلات'){
            $("#oneNewSalesPriceGoodsDTNBLGHGH"+"-div").css("display", 'none');
            $('#oneNewSalesPriceGoodsHiddenChromeIsNo').val(0);
        }else if (res['ggroup'] === 'لوله 5 لایه' && res['Series'] === 'لوله های PERT'){
            $("#oneNewSalesPriceGoodsDTNBLGHGH"+"-txt").html('درصد تفاوت PERT به PEX');
            $('#oneNewSalesPriceGoodsHiddenChromeIsNo').val(1);
        }else if (res['ggroup'] === 'لوله 5 لایه' && res['Series'] === 'لوله های PEX'){
            $("#oneNewSalesPriceGoodsDTNBLGHGH"+"-txt").html('درصد تغییر نسبت به لیست قیمت قبلی');
            $('#oneNewSalesPriceGoodsHiddenChromeIsNo').val(1);
        }else {
            $("#oneNewSalesPriceGoodsDTNBLGHGH"+"-txt").html('درصد تغییر نسبت به لیست قیمت قبلی');
            $('#oneNewSalesPriceGoodsHiddenChromeIsNo').val(1);
        }
    }else {  // روش فرمولی
        $('#oneNewSalesPriceGoodsHiddenChromeIsNo').val(0);
        if (res['ggroup'] === 'اتصالات 5 لایه'){
            $("#oneNewSalesPriceGoodsDTNBLGHGH"+"-div").css("display", 'none');
            $("#oneNewSalesPriceGoodsMSTNBLGHGH"+"-div").css("display", 'none');
        }else if (res['ggroup'] === 'شیلنگ'){
            $("#oneNewSalesPriceGoodsDTNBLGHGH"+"-div").css("display", 'none');
            $("#oneNewSalesPriceGoodsDivisibility"+"-div").css("display", 'none');
        }else {
            $("#oneNewSalesPriceGoodsDTNBLGHGH"+"-div").css("display", 'none');
            $("#oneNewSalesPriceGoodsMSTNBLGHGH"+"-div").css("display", 'none');
            $("#oneNewSalesPriceGoodsGName"+"-div").css("display", 'none');
            $("#oneNewSalesPriceGoodsCoefficient"+"-div").css("display", 'none');
            $("#oneNewSalesPriceGoodsDivisibility"+"-div").css("display", 'none');
        }
    }
    $('#oneNewSalesPriceGoodsHiddenGid').val(gid);
    $('#oneNewSalesPriceGoodsHiddenGGroup').val(res['ggroup']);
    $('#oneNewSalesPriceGoodsDTNBLGHGH').val(res['priceChangePercent']);
    $('#oneNewSalesPriceGoodsMSTNBLGHGH').val(res['priceChangeConstant']);
    $('#oneNewSalesPriceGoodsCalcType').val(res['calcType']);
    $('#oneNewSalesPriceGoodsGName').val(res['gName']);
    $('#oneNewSalesPriceGoodsCoefficient').val(res['coefficient']);
    $('#oneNewSalesPriceGoodsDivisibility').val(res['divisibility']);
    $('#createOneNewSalesPriceGoodsModal').modal('show');
}

function doCreateOneNewSalesPriceGoodsModal(){
    var gid = $("#oneNewSalesPriceGoodsHiddenGid").val();
    var DTNBLGHGH = $("#oneNewSalesPriceGoodsDTNBLGHGH").val();
    var MSTNBLGHGH = $("#oneNewSalesPriceGoodsMSTNBLGHGH").val();
    var ChromeIsNo = $("#oneNewSalesPriceGoodsHiddenChromeIsNo").val();
    var calcType = $("#oneNewSalesPriceGoodsCalcType").val();
    var gName = $("#oneNewSalesPriceGoodsGName").val();
    var coefficient = $("#oneNewSalesPriceGoodsCoefficient").val();
    var divisibility = $("#oneNewSalesPriceGoodsDivisibility").val();
    var ggroup = $("#oneNewSalesPriceGoodsHiddenGGroup").val();

    if (parseInt(ChromeIsNo) === 1) {
        if ((!parseInt((DTNBLGHGH.trim()).length))) {
            notice1Sec("درصد تغییر نسبت به لیست قیمت قبلی مشخص نشده است !", "yellow");
            return false;
        }
        if(!parseInt((MSTNBLGHGH.trim()).length)){
            notice1Sec("مقدار ثابت تغییر نسبت به لیست قیمت قبلی مشخص نشده است !","yellow");
            return false;
        }
    }else {
        if(!parseInt((MSTNBLGHGH.trim()).length)){
            notice1Sec("مقدار ثابت تغییر نسبت به لیست قیمت قبلی مشخص نشده است !","yellow");
            return false;
        }
    }

    if (ggroup == 'اتصالات 5 لایه'){
        if (parseInt(calcType) == 1){
            if ((!parseInt((gName.trim()).length))) {
                notice1Sec("نام محصول مرتبط مشخص نشده است !", "yellow");
                return false;
            }
            if ((!parseInt((coefficient.trim()).length))) {
                notice1Sec("ضریب مشخص نشده است !", "yellow");
                return false;
            }
            if ((!parseInt((divisibility.trim()).length))) {
                notice1Sec("بخش پذیری مشخص نشده است !", "yellow");
                return false;
            }
        }
    }

    var action = "doCreateOneNewSalesPriceGoodsModal";
    var param = {action:action,gid:gid,DTNBLGHGH:DTNBLGHGH,MSTNBLGHGH:MSTNBLGHGH,calcType:calcType,
                 gName:gName,coefficient:coefficient,divisibility:divisibility,ggroup:ggroup};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
        var page = $("#oneNewSalesPriceGoodsHiddenPage").val();
        updateSalePriceList(page);
    }
}

function getPerDiscounts() {
    var brand = $('#perDiscountManageBrand').val();
    var group = $('#perDiscountManageGroup').val();
    var res = Main.getPerDiscountInfo(brand,group);
    if(res != false){
        $('#perDiscountManageModal').modal('show');
        $("#perDiscountManageHiddenWid").val(res['Wid']);
        $("#perDiscountManageDis1").val(res['perDiscount1']);
        $("#perDiscountManagePriority1").val(res['Priority1']);

        $("#perDiscountManageDis2").val(res['perDiscount2']);
        $("#perDiscountManagePriority2").val(res['Priority2']);

        $("#perDiscountManageDis3").val(res['perDiscount3']);
        $("#perDiscountManagePriority3").val(res['Priority3']);

        $("#perDiscountManageDis4").val(res['perDiscount4']);
        $("#perDiscountManagePriority4").val(res['Priority4']);

        $("#perDiscountManageDis5").val(res['perDiscount5']);
        $("#perDiscountManagePriority5").val(res['Priority5']);
    }
}

function editCreatePerDiscount() {
    $('#perDiscountManageModal').modal('show');
    $('#perDiscountManageBrand').val(-1);
    $("#perDiscountManageGroup").find('option').remove();
    $("#perDiscountManageHiddenWid").val('');
    $("#perDiscountManageDis1").val('');
    $("#perDiscountManagePriority1").val('');
    $("#perDiscountManageDis2").val('');
    $("#perDiscountManagePriority2").val('');
    $("#perDiscountManageDis3").val('');
    $("#perDiscountManagePriority3").val('');
    $("#perDiscountManageDis4").val('');
    $("#perDiscountManagePriority4").val('');
    $("#perDiscountManageDis5").val('');
    $("#perDiscountManagePriority5").val('');
}

function doeEditCreatePerDiscount() {
    var Wid = $("#perDiscountManageHiddenWid").val();
    var brand = $('#perDiscountManageBrand').val();
    var group = $('#perDiscountManageGroup').val();

    var Dis1 = $("#perDiscountManageDis1").val();
    var Dis2 = $("#perDiscountManageDis2").val();
    var Dis3 = $("#perDiscountManageDis3").val();
    var Dis4 = $("#perDiscountManageDis4").val();
    var Dis5 = $("#perDiscountManageDis5").val();

    var Priority1 = $("#perDiscountManagePriority1").val();
    var Priority2 = $("#perDiscountManagePriority2").val();
    var Priority3 = $("#perDiscountManagePriority3").val();
    var Priority4 = $("#perDiscountManagePriority4").val();
    var Priority5 = $("#perDiscountManagePriority5").val();

    if(parseInt(brand) == -1 || parseInt(group) == -1){
        notice1Sec("برند و گروه محصول باید مشخص شوند !","yellow");
        return false;
    }

    if(!parseInt((Dis1.trim()).length) || !$.isNumeric(Dis1)){
        notice1Sec("درصد تخفیف خرید مدت دار مشخص نشده است یا عددی نیست !","yellow");
        return false;
    }
    if(!parseInt((Dis2.trim()).length) || !$.isNumeric(Dis2)){
        notice1Sec("درصد تخفیف نمایندگی مشخص نشده است یا عددی نیست !","yellow");
        return false;
    }
    if(!parseInt((Dis3.trim()).length) || !$.isNumeric(Dis3)){
        notice1Sec("درصد تخفیف پرداخت نقدی مشخص نشده است یا عددی نیست !","yellow");
        return false;
    }
    if(!parseInt((Dis4.trim()).length) || !$.isNumeric(Dis4)){
        notice1Sec("درصد تخفیف خرید لوله و اتصالات باهم مشخص نشده است یا عددی نیست !","yellow");
        return false;
    }
    if(!parseInt((Dis5.trim()).length) || !$.isNumeric(Dis5)){
        notice1Sec("درصد تخفیف پایان دوره مشخص نشده است یا عددی نیست !","yellow");
        return false;
    }

    if(!parseInt((Priority1.trim()).length) || !$.isNumeric(Priority1)){
        notice1Sec("اولویت تخفیف خرید مدت دار مشخص نشده است یا عددی نیست !","yellow");
        return false;
    }
    if(!parseInt((Priority2.trim()).length) || !$.isNumeric(Priority2)){
        notice1Sec("اولویت تخفیف نمایندگی مشخص نشده است یا عددی نیست !","yellow");
        return false;
    }
    if(!parseInt((Priority3.trim()).length) || !$.isNumeric(Priority3)){
        notice1Sec("اولویت تخفیف پرداخت نقدی مشخص نشده است یا عددی نیست !","yellow");
        return false;
    }
    if(!parseInt((Priority4.trim()).length) || !$.isNumeric(Priority4)){
        notice1Sec("اولویت تخفیف خرید لوله و اتصالات باهم مشخص نشده است یا عددی نیست !","yellow");
        return false;
    }
    if(!parseInt((Priority5.trim()).length) || !$.isNumeric(Priority5)){
        notice1Sec("اولویت تخفیف پایان دوره مشخص نشده است یا عددی نیست !","yellow");
        return false;
    }

    if((parseInt(Priority1) > 5 || parseInt(Priority1) < 1) || (parseInt(Priority2) > 5 || parseInt(Priority2) < 1) || (parseInt(Priority3) > 5 || parseInt(Priority3) < 1) || (parseInt(Priority4) > 5 || parseInt(Priority4) < 1) || (parseInt(Priority5) > 5 || parseInt(Priority5) < 1)){
        notice1Sec("اولویت تخفیفات باید عددی بین 1 تا 5 باشد !","yellow");
        return false;
    }

    if((parseInt(Priority1) == parseInt(Priority2)) || (parseInt(Priority1) == parseInt(Priority3)) || (parseInt(Priority1) == parseInt(Priority4)) || (parseInt(Priority1) == parseInt(Priority5)) || (parseInt(Priority2) == parseInt(Priority3)) || (parseInt(Priority2) == parseInt(Priority4)) || (parseInt(Priority2) == parseInt(Priority5)) || (parseInt(Priority3) == parseInt(Priority4)) || (parseInt(Priority3) == parseInt(Priority5) || (parseInt(Priority4) == parseInt(Priority5)))){
        notice1Sec("اولویت تخفیفات نمی تواند تکراری باشد !","yellow");
        return false;
    }

    var action = "doEditCreatePerDiscount";
    var param = {action:action,Wid:Wid,brand:brand,group:group,Dis1:Dis1,Dis2:Dis2,Dis3:Dis3,Dis4:Dis4,Dis5:Dis5,Priority1:Priority1,Priority2:Priority2,Priority3:Priority3,Priority4:Priority4,Priority5:Priority5};
    var res = manageAjaxRequest(param);
    if(res != false) {
        updateSalePriceList();
    }
}

function uploadSalesPriceGoods() {
    $("#goodSalePriceList_File").val('');  // فایل اکسل قیمت ها
    $('#goodSalePriceListModal').modal('show');
}

function doUploadGoodSalePriceFile() {
    var formData = new FormData();

    if($('#goodSalePriceList_File').val() != '' || $('#goodSalePriceList_File')[0].files.length != 0){
        var fileSelect = document.getElementById('goodSalePriceList_File');
        var files = fileSelect.files;
        var fileName = files[0].name.toLowerCase();
        if(fileName.indexOf('.xlsx') !== fileName.length - 5) {
            notice1Sec("نوع فایل انتخابی غیر مجاز است !","yellow");
            return false;
        }
        formData.append("excGSPL",files[0]);
    }
    formData.append("action","doUploadGoodSalePriceFile");
    var xhr = new XMLHttpRequest();
    xhr.open('POST', 'php/managemantproccess.php',true);
    xhr.onload = function () {
        if (xhr.status === 200) {
            var res = JSON.parse(xhr.responseText);
            if(res['res'] == "false"){
                notice1Sec(res['data'],'yellow');
            }else{
                $("#uploadSalesPriceGoodsID").css("display", "none");
                $("#uploadAgainSalesPriceGoodsID").css("display", '');
                notice1Sec(res['data'],'green');
                $('#goodSalePriceListModal').modal('hide');
                $('body').removeClass('modal-open');
                $('.modal-backdrop').remove();
            }
        }else{
            notice1Sec("خطایی رخ داده است !",'yellow');
        }
    };
    xhr.send(formData);
}

function uploadAgainSalesPriceGoods() {
    var action = "uploadAgainSalesPriceGoods";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#uploadSalesPriceGoodsID").css("display", '');
        $("#uploadAgainSalesPriceGoodsID").css("display", 'none');
        notice1Sec(res,"green");
        updateSalePriceList();
    }
}

function editOneSalesPriceGoodsList(gid) {
    var res = Main.getGoodSalePrice(gid);
    $("#editOneSalesPriceGoodsHiddenGid").val(gid);
    $("#editOneSalesPriceGoodsAmount").val(res['salesListPrice']);
    $('#editOneSalesPriceGoodsListModal').modal('show');
}

function doEditOneSalesPriceGoodsList() {
    var gid = $("#editOneSalesPriceGoodsHiddenGid").val();
    var amount = $("#editOneSalesPriceGoodsAmount").val();
    if(!parseInt((amount.trim()).length)){
        notice1Sec("قیمت نمی تواند خالی باشد !","yellow");
        return false;
    }
    var action = "doEditOneSalesPriceGoodsList";
    var param = {action:action,gid:gid,amount:amount};
    var res = manageAjaxRequest(param);
    if(res != false) {
        updateSalePriceList();
    }
}

function findDiscountGoodGroup() {
    var brand = $('#perDiscountManageBrand').val();
    var data = Main.getGoodGroupList(brand);
    $("#perDiscountManageGroup").find('option').remove();
    $("#perDiscountManageGroup").append('<option value="-1">انتخاب کنید</option>');
    for(var e=0;e<data.length;e+=2){
        $("#perDiscountManageGroup").append('<option value="'+data[e]+'">'+data[e+1]+'</option>');
    }
}

//+++++++++++++++ مقایسه قیمت تمام شده/ فروش +++++++++++++++

function comparePricesManage() {
    var action = "comparePricesManage";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    if(res != false) {
        $("#comparePricesManageID").html('');
        $("#comparePricesManageID").html(res);
        var data = Main.getGoodNameList();
        var goodName = new Array();
        var goodNames = {aa:[]};
        for(var d=0;d<data.length;d++){
            goodName[d]=data[d]['gName'];
            goodNames.aa.push({
                "id" : data[d]['RowID'],
                "name"  : data[d]['gName'],
            });
        }
        $("#comparePricesManageGNameSearch").typeahead({ source:goodNames.aa });
        $("#comparePricesManageSalePriceType").selectpicker();
        $("#comparePricesManageSalePriceType").val(0);
        $("#comparePricesManageSalePriceType").selectpicker('refresh');
        showComparePricesManageList();
    }
}

function showComparePricesManageList(page,pType,sType) {
    if(typeof page == "undefined"){
        page = 1;
    }
    if(typeof pType == "undefined"){
        pType = $("#comparePricesManagePriceType").val();
    }
    if(typeof sType == "undefined"){
        sType = $("#comparePricesManageSalePriceType").val();
    }
    sType = sType.join(',');
    var gName = $("#comparePricesManageGNameSearch").val();
    var gCode = $("#comparePricesManagePCodeSearch").val();
    var action = "showComparePricesManageList";
    var param = {action:action,page:page,gName:gName,gCode:gCode,pType:pType,sType:sType};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#comparePricesManageBody").html('');
        $("#comparePricesManageBody").html(res);
        switch (pType) {
            case '0':
                $("#pType-td").html("قیمت نهایی مواد");
                break;
            case '1':
                $("#pType-td").html("قیمت نهایی مواد - نقدی");
                break;
            case '2':
                $("#pType-td").html("قیمت نهایی محصول با هزینه تولید");
                break;
            case '3':
                $("#pType-td").html("قیمت نهایی محصول با هزینه تولید - نقدی");
                break;
        }
        if(jQuery.inArray('1', sType) !== -1 || jQuery.inArray('2', sType) !== -1 || jQuery.inArray('3', sType) !== -1 || jQuery.inArray('4', sType) !== -1) {
            $("#sType-td").html("قیمت فروش با تخفیفات انتخابی");
        }else {
            $("#sType-td").html("قیمت لیست فروش");
        }
    }
}

function updatePriceTypeList() {
    var page = 1;
    var pType = $("#comparePricesManagePriceType").val();
    var sType = $("#comparePricesManageSalePriceType").val();
    showComparePricesManageList(page,pType,sType);
}

function updateSaleTypeList() {
    var page = 1;
    var sType = $("#comparePricesManageSalePriceType").val();
    var pType = $("#comparePricesManagePriceType").val();
    showComparePricesManageList(page,pType,sType);
}

function showErrorOfGoodC(gid) {
    var action = "showErrorOfGood";
    var param = {action:action,gid:gid};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#Good-error-Info-bodyC").html('');
        $("#Good-error-Info-bodyC").html(res);
        $('#goodErrorInfoModalC').modal('show');
    }
}

function showFinePriceOfCPRGood(gid) {
    var action = "showFinePriceOfCPRGood";
    var param = {action:action,gid:gid};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#Good-fine-priceCPR-body").html('');
        $("#Good-fine-priceCPR-body").html(res);
        $('#goodFinePriceCPRModal').modal('show');
    }
}

//++++++++++++++++++++ گزارش تغییرات BOM +++++++++++++++++++

function bomChangeReportManage() {
    var action = "bomChangeReportManage";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    if(res != false) {
        $("#bomChangeReportManageID").html('');
        $("#bomChangeReportManageID").html(res);
        var bSDate = new AMIB.persianCalendar( 'bomChangeReportManageSdateSearch' );
        var bEDate = new AMIB.persianCalendar( 'bomChangeReportManageEdateSearch' );

        var data = Main.getPieceNameList();
        var pieceName = new Array();
        var pieceNames = {aa:[]};
        for(var d=0;d<data.length;d++){
            pieceName[d]=data[d]['pName'];
            pieceNames.aa.push({
                "id" : data[d]['RowID'],
                "name"  : data[d]['pName'],
            });
        }

        var data = Main.getGoodNameList();
        var goodName = new Array();
        var goodNames = {aa:[]};
        for(var e=0;e<data.length;e++){
            goodName[e]=data[e]['gName'];
            goodNames.aa.push({
                "id" : data[e]['RowID'],
                "name"  : data[e]['gName'],
            });
        }
        $("#bomChangeReportManagePNameSearch").typeahead({ source:pieceNames.aa });
        $("#bomChangeReportManageGNameSearch").typeahead({ source:goodNames.aa });
    }
}

function showBomChangeReportManageList(page) {
    if(typeof page == "undefined"){
        page = 1;
    }
    var pName = $("#bomChangeReportManagePNameSearch").val();
    var gName = $("#bomChangeReportManageGNameSearch").val();
    var pCode = $("#bomChangeReportManagePCodeSearch").val();
    var gCode = $("#bomChangeReportManageGCodeSearch").val();
    var sDate = $("#bomChangeReportManageSdateSearch").val();
    var eDate = $("#bomChangeReportManageEdateSearch").val();
    var action = "showBomChangeReportManageList";
    var param = {action:action,page:page,pName:pName,gName:gName,pCode:pCode,gCode:gCode,sDate:sDate,eDate:eDate};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#bomChangeReportManageBody").html('');
        $("#bomChangeReportManageBody").html(res);
    }
}

//++++++++++++++++++++ گزارش تغییرات بار برنج +++++++++++++++++++

function brassWeightReportManage() {
    var action = "brassWeightReportManage";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    if(res != false) {
        $("#brassWeightReportManageID").html('');
        $("#brassWeightReportManageID").html(res);
        var bwrSDate = new AMIB.persianCalendar( 'BWReportManageSdateSearch' );
        var bwrEDate = new AMIB.persianCalendar( 'BWReportManageEdateSearch' );
        showBWReportManageList()
    }
}

function showBWReportManageList(page) {
    if(typeof page == "undefined"){
        page = 1;
    }
    var sDate = $("#BWReportManageSdateSearch").val();
    var eDate = $("#BWReportManageEdateSearch").val();
    var action = "showBWReportManageList";
    var param = {action:action,page:page,sDate:sDate,eDate:eDate};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#BWReportManageBody").html('');
        $("#BWReportManageBody").html(res);
    }
}

//++++++++++++++++++++++ اظهارنظر و درخواست پرداخت وجه +++++++++++++++++++++++

function select_data_picker(selector,deselectAll=0,refresh=0,custom_width=false){
    var parent=$(selector).parent();
    var bs_select=$(parent).find("div.bootstrap-select")
    if(!bs_select.length)
    {
        
        $(selector).parent().css('position','relative')
        $(selector).attr('data-size',10);
        $(selector).attr("data-live-search","true");
        $(selector).selectpicker('refresh');

        if(deselectAll==1){$(selector).selectpicker('deselectAll')};
    }
    else
    {
        if(refresh==1){
            if(refresh==1){$(selector).selectpicker('refresh')};
        }
        
    }
    if(custom_width){
       // console.log('custom_width')
       // console.log(custom_width)
        $("div.dropdown-menu").css('width', '100% !important')
      }
      else{
          $("div.dropdown-menu").css('width', '400px !important')
      }
    
   
}

function commentManagement(page) {
    var action = "commentManagement";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    if(res != false) {
        $("#commentManagementID").html('');
        $("#commentManagementID").html(res[0]);

        var data = Main.getAccountNameList();
        var accountName = new Array();
        var accountNames = {aa: []};
        for (var d = 0; d < data.length; d++) {
            accountName[d] = data[d]['Name'];
            accountNames.aa.push({
                "id": data[d]['RowID'],
                "name": data[d]['Name'],
            });
        }

        var data2 = Main.getDepositorNameList();
        var depositorName = new Array();
        var depositorNames = {aa: []};
        for (var d = 0; d < data2.length; d++) {
            depositorName[d] = data2[d]['Name'];
            depositorNames.aa.push({
                "id": data2[d]['RowID'],
                "name": data2[d]['Name'],
            });
        }

        if(jQuery.inArray(1, res[1]) !== -1) {
            $("#commentManagmentReceiver").selectpicker();
            $("#commentManagmentTwoLayer-div").css('display','none');
            $(document).ready(function(){
                $("input[type='radio']").click(function(){ //checkbox_click---
                    var exception_array=['drivers_fare','is_related_project','calculation_method','contractPaymentType','method_create_contract_payment_type_fields','contract_payment_method','is_related_VAT']
                    var is_exception = exception_array.indexOf($(this).attr('name'));
                    if(is_exception==-1){
                        var CheckCarcass = $("input[name='commentManagmentCheckCarcass']:checked").val();
                        if (parseInt(CheckCarcass) > 0){
                            if (parseInt(CheckCarcass) == 1){  // تحویل داده شده است
                                $("#commentManagmentDeliveryDate").val('');
                                $("#commentManagmentCheckCarcassFile-div").css('display','');
                                $("#commentManagmentDeliveryDate-div").css('display','none');
                            }else if (parseInt(CheckCarcass) == 2){  // تحویل داده نشده است
                                $("#commentManagmentCheckCarcassFile").val('');
                                $("#commentManagmentCheckCarcassFile-div").css('display','none');
                                $("#commentManagmentDeliveryDate-div").css('display','');
                            }
                        }else {
                            var radioValue = $("input[name='commentManagmentPayType']:checked").val();
                            var is_related_project=$("input[name='is_related_project']:checked").val()
                            $("#commentManagmentClearingFund").val('');
                            $("#commentManagmentClearingGoodLoan").val('');
                            if(is_related_project==1){
                                $("#comment_project-div").show();
                            }
                            else{
                                $("#comment_project-div").hide();
                            }
                            if(parseInt(radioValue) == 0){  // سهامی
                                $("input[name='commentManagmentCashCheck']").prop('checked',false);
                                $("#is_related_project-div").show();
                                $("#is_related_VAT-div").show();
                            // $("input[name='is_related_project']").prop('checked',false);
                                $("#commentManagmentFor").val('');
                                $('#commentManagmentAccNum').children('option:not(:first)').remove();
                                $("#commentManagmentAccNum").val(-1);
                                $("#commentManagmentCode").val('');
                                $("#commentManagmentOneLayer").val(-1);
                                $('#commentManagmentTwoLayer').empty();
                                $('#commentManagmentThreeLayer').empty();
                                $('#commentManagmentUnit').empty();
                                $('#commentManagmentConsumerUnit').empty();
                                $('#commentManagmentType').empty();

                                $("#commentManagmentCashCheck-div").css('display','none');
                                
                                $("#commentManagmentOneLayer-div").css('display','');
                                $("#commentManagmentTwoLayer-div").css('display','none');
                                $("#commentManagmentThreeLayer-div").css('display','none');
                                $("#commentManagmentUnit-div").css('display','');
                                $("#commentManagmentConsumerUnit-div").css('display','');
                                $("#commentManagmentType-div").css('display','');
                                $("#commentManagmentCheckNumber-div").css('display','none');
                                $("#commentManagmentCheckDate-div").css('display','none');
                                $("#commentManagmentCheckCarcass-div").css('display','none');
                                $("#commentManagmentCheckCarcassFile-div").css('display','none');
                                $("#commentManagmentDeliveryDate-div").css('display','none');
                                $("#commentManagmentClearingFund-div").css('display','none');
                                $("#commentManagmentClearingGoodLoan-div").css('display','none');
                                $("#commentManagmentContractYN-div").css('display','');
                                $("#commentManagmentContractNum-div").css('display','');
                                $("#commentManagmentToward-div").css('display','');
                                $("#commentManagmentTotalAmount-div").css('display','');
                                $("#commentManagmentAmount-div").css('display','');
                                $("#commentManagmentFor-div").css('display','');
                                $("#commentManagmentCode-div").css('display','');
                                $("#commentManagmentCashSection-div").css('display','');
                                $("#commentManagmentPaymentMaturityCash-div").css('display','');
                                $("#commentManagmentNonCashSection-div").css('display','');
                                $("#commentManagmentPaymentMaturityCheck-div").css('display','');
                                $("#commentManagmentRequestSource-div").css('display','');
                                $("#commentManagmentRequestNumbers-div").css('display','');
                                $("#commentManagmentDesc-div").css('display','');
                                $("#drivers_fare-div").show();
                               
                            }else {  // فورج
                                $("#is_related_project-div").hide();
                                $("#comment_project-div").hide();
                                $("#is_related_VAT-div").hide();
                                //$("input[name='is_related_project']").prop('checked',false);
                                $("#commentManagmentCashCheck-div").css('display','');
                                $("#commentManagmentOneLayer-div").css('display','none');
                                $("#commentManagmentTwoLayer-div").css('display','none');
                                $("#commentManagmentThreeLayer-div").css('display','none');
                                $("#commentManagmentUnit-div").css('display','none');
                                $("#commentManagmentConsumerUnit-div").css('display','none');
                                $("#commentManagmentType-div").css('display','none');
                                $("#commentManagmentCheckNumber-div").css('display','none');
                                $("#commentManagmentCheckDate-div").css('display','none');
                                $("#commentManagmentCheckCarcass-div").css('display','none');
                                $("#commentManagmentCheckCarcassFile-div").css('display','none');
                                $("#commentManagmentDeliveryDate-div").css('display','none');
                                $("#commentManagmentContractYN-div").css('display','none');
                                $("#commentManagmentContractNum-div").css('display','none');
                                $("#commentManagmentToward-div").css('display','none');
                                $("#commentManagmentTotalAmount-div").css('display','none');
                                $("#commentManagmentAmount-div").css('display','none');
                                $("#commentManagmentFor-div").css('display','none');
                                $("#commentManagmentAccNum-div").css('display','none');
                                $("#commentManagmentCardNumber-div").css('display','none');
                                $("#commentManagmentBillingID-div").css('display','none');
                                $("#commentManagmentPaymentID-div").css('display','none');
                                $("#commentManagmentCode-div").css('display','none');
                                $("#commentManagmentCashSection-div").css('display','none');
                                $("#commentManagmentPaymentMaturityCash-div").css('display','none');
                                $("#commentManagmentNonCashSection-div").css('display','none');
                                $("#commentManagmentPaymentMaturityCheck-div").css('display','none');
                                $("#commentManagmentRequestSource-div").css('display','none');
                                $("#commentManagmentRequestNumbers-div").css('display','none');
                                $("#commentManagmentDesc-div").css('display','none');
                                $("#commentManagmentClearingFund-div").css('display','none');
                                $("#commentManagmentClearingGoodLoan-div").css('display','none');
                                $("#drivers_fare-div").hide();
                                var typeValue = $("input[name='commentManagmentCashCheck']:checked").val();
                                if(parseInt(typeValue) == 0) {  // نقدی
                                    $("#is_related_project-div").show();
                                    $("#is_related_VAT-div").show();
                                    $("#drivers_fare-div").show();
                                   
                                //$("input[name='is_related_project']").prop('checked',false);
                                    $("#commentManagmentFor").val('');
                                    $('#commentManagmentAccNum').children('option:not(:first)').remove();
                                    $("#commentManagmentAccNum").val(-1);
                                    $("#commentManagmentCode").val('');
                                    $("#commentManagmentType").val('');
                                    $("#commentManagmentCashSection").val('');
                                    $("#commentManagmentNonCashSection").val('');
                                    $("#commentManagmentPaymentMaturityCheck").val('');
                                    $("#commentManagmentOneLayer").val(-1);
                                    $('#commentManagmentTwoLayer').empty();
                                    $('#commentManagmentThreeLayer').empty();
                                    $('#commentManagmentUnit').empty();
                                    $('#commentManagmentConsumerUnit').empty();
                                    $('#commentManagmentType').empty();

                                    $("#commentManagmentOneLayer-div").css('display','');
                                    $("#commentManagmentTwoLayer-div").css('display','none');
                                    $("#commentManagmentThreeLayer-div").css('display','none');
                                    $("#commentManagmentUnit-div").css('display','');
                                    $("#commentManagmentConsumerUnit-div").css('display','');
                                    $("#commentManagmentType-div").css('display','');
                                    $("#commentManagmentContractYN-div").css('display','');
                                    $("#commentManagmentContractNum-div").css('display','');
                                    $("#commentManagmentToward-div").css('display','');
                                    $("#commentManagmentTotalAmount-div").css('display','');
                                    $("#commentManagmentAmount-div").css('display','');
                                    $("#commentManagmentFor-div").css('display','');
                                    $("#commentManagmentCode-div").css('display','');
                                    $("#commentManagmentCashSection-div").css('display','none');
                                    $("#commentManagmentPaymentMaturityCash-div").css('display','');
                                    $("#commentManagmentNonCashSection-div").css('display','none');
                                    $("#commentManagmentPaymentMaturityCheck-div").css('display','none');
                                    $("#commentManagmentRequestSource-div").css('display','');
                                    $("#commentManagmentRequestNumbers-div").css('display','');
                                    $("#commentManagmentDesc-div").css('display','');
                                }else if (parseInt(typeValue) == 1){  // چک
                                    $("#is_related_project-div").show();
                                    $("#is_related_VAT-div").show();
                                    $("#drivers_fare-div").show();
                                // $("input[name='is_related_project']").prop('checked',false);
                                    $("#commentManagmentFor").val('');
                                    $('#commentManagmentAccNum').children('option:not(:first)').remove();
                                    $("#commentManagmentAccNum").val(-1);
                                    $("#commentManagmentCode").val('');
                                    $("#commentManagmentType").val('');
                                    $("#commentManagmentCashSection").val('');
                                    $("#commentManagmentPaymentMaturityCash").val('');
                                    $("#commentManagmentOneLayer").val(-1);
                                    $('#commentManagmentTwoLayer').empty();
                                    $('#commentManagmentThreeLayer').empty();
                                    $('#commentManagmentUnit').empty();
                                    $('#commentManagmentConsumerUnit').empty();
                                    $('#commentManagmentType').empty();

                                    $("#commentManagmentOneLayer-div").css('display','');
                                    $("#commentManagmentTwoLayer-div").css('display','none');
                                    $("#commentManagmentThreeLayer-div").css('display','none');
                                    $("#commentManagmentUnit-div").css('display','');
                                    $("#commentManagmentConsumerUnit-div").css('display','');
                                    $("#commentManagmentType-div").css('display','');
                                    $("#commentManagmentContractYN-div").css('display','');
                                    $("#commentManagmentContractNum-div").css('display','');
                                    $("#commentManagmentToward-div").css('display','');
                                    $("#commentManagmentTotalAmount-div").css('display','');
                                    $("#commentManagmentAmount-div").css('display','');
                                    $("#commentManagmentFor-div").css('display','');
                                    $("#commentManagmentCode-div").css('display','none');
                                    $("#commentManagmentCashSection-div").css('display','none');
                                    $("#commentManagmentPaymentMaturityCash-div").css('display','none');
                                    $("#commentManagmentNonCashSection-div").css('display','none');
                                    $("#commentManagmentPaymentMaturityCheck-div").css('display','');
                                    $("#commentManagmentRequestSource-div").css('display','');
                                    $("#commentManagmentRequestNumbers-div").css('display','');
                                    $("#commentManagmentDesc-div").css('display','');
                                }
                            }
                        }
                    }
                });
            });
            $("#commentManagmentCode").attr("disabled","true");

            $("#commentManagmentFor").typeahead({source: accountNames.aa});
            $("#commentManageAccNameSearch").typeahead({source: accountNames.aa});
            //----------------------------------- مدیریت  جستجو براساس  زیرگروه و سرگروه و زیرگروه فرعی
            select_data_picker("#commentManageLayerOneSearch",data)
            select_data_picker("#commentManageLayerTwoSearch",data)
            select_data_picker("#commentManageLayerThreeSearch",data)
            select_data_picker("#fundListManageLayerOneSearch",data)
            select_data_picker("#fundListManageLayerTwoSearch",data)
            select_data_picker("#fundListManageLayerThreeSearch",data)
            //--------------------------------------------------------------------------------------------
            var chDate = new AMIB.persianCalendar('addCheckToCommentManageCDate');
            var csDate = new AMIB.persianCalendar('commentManageSDateSearch');  // جستجو اظهارنظر
            var ceDate = new AMIB.persianCalendar('commentManageEDateSearch');  // جستجو اظهارنظر

            var PaymentMaturityC = new AMIB.persianCalendar('commentManagmentPaymentMaturityCash');  // سررسید پرداخت نقدی
            var PaymentMaturityCh = new AMIB.persianCalendar('commentManagmentPaymentMaturityCheck');  // سررسید پرداخت چک
            var ClearingFundDate = new AMIB.persianCalendar('commentManagmentClearingFund');  // تاریخ تسویه تنخواه
            var GoodLoan = new AMIB.persianCalendar('commentManagmentClearingGoodLoan');  // تاریخ تسویه قرض الحسنه
            var CheckDate = new AMIB.persianCalendar('commentManagmentCheckDate');  // تاریخ چک
            var DeliveryDate = new AMIB.persianCalendar('commentManagmentDeliveryDate');  // تاریخ تحویل لاشه چک
            $("#is_related_VAT-div").css('position','relative');
            $("#is_related_VAT-div").append(`<p id="vat_help" 
                style="
                position: absolute;
                top: 60%;
                z-index: 1;
                background: linear-gradient(45deg, red, blue);
                color: #fff;
                padding: 10px;
                width: 70%;
                border-radius: 10px;
                box-shadow: 4px 4px 4px #000;
                display:none;
                font-family:IranSans;
                font-size:12px;
                transition: 1s"
            >در صورتی که اظهار نظر فقط برای پرداخت  مقدار مالیات بر ارزش افزوده فاکتوری صادر شده است  گزینه بله را انتخاب نمایید در صورت انتخاب گزینه بله اظهار نظر  بدون هیچ گردش اضافه به کارشناس  مربوطه در واحد مالی ارجاع داده خواهد شد</p>`);
            $("#is_related_VAT-div label:nth(0)").css('position','relative');
            $("#is_related_VAT-div label:nth(0)").
            append(`<i id="manage_help_btn" class="fa fa-question" style="
                width: 20px;
                height: 20px;
                background: blue;
                color: #fff;
                border-radius: 100%;
                position: absolute;
                padding: 4px;
                cursor: pointer;"></i>`)
                $("#manage_help_btn").on('mouseover',function(){$('#vat_help').slideDown(500)})
                $("#manage_help_btn").on('mouseout',function(){$('#vat_help').slideUp(500)})
                $("input[name='is_related_VAT']").prop('checked',false);
            showPayCommentManageList();
            
           
        }

        if(jQuery.inArray(2, res[1]) !== -1) {
            $("#accountManagmentAccountNumbers").attr("disabled","true");
            $("#accountManageAccNameSearch").typeahead({source: accountNames.aa});
            //showAccountManageList(page);
        }

        if(jQuery.inArray(3, res[1]) !== -1) {
            //showUnitManageList();
        }

        if(jQuery.inArray(4, res[1]) !== -1) {
            //showDepositorManageList(page);
        }

        if(jQuery.inArray(5, res[1]) !== -1) {
            $("#payCommentManagmentReceiver").selectpicker();
            $("#depositManagmentDepositor").typeahead({source: depositorNames.aa});
            var data3 = Main.getBankNameList();
            var bankName = new Array();
            var bankNames = {aa: []};
            for (var d = 0; d < data3.length; d++) {
                bankName[d] = data3[d]['Name'];
                bankNames.aa.push({
                    "id": data3[d]['RowID'],
                    "name": data3[d]['bankName'],
                });
            }
            $("#depositManagmentDBank").typeahead({source: bankNames.aa});
            $('#depositManagmentDdate').MdPersianDateTimePicker({
                targetTextSelector: '#depositManagmentDdate',
                disableBeforeDate: new Date(Date.now() - 1728e5),
                disableAfterDate: new Date(),
            });
            $("#payCommentManageAccNameSearch").typeahead({source: accountNames.aa});
            $("#addCheckToCommentManageDesc-div").css('display','none');
            //showFinalPayCommentManageList();
        }

        if(jQuery.inArray(6, res[1]) !== -1) {
            var fcSDate = new AMIB.persianCalendar('financialConfirmationSDateSearch');  // جستجو اظهارنظر
            var fcEDate = new AMIB.persianCalendar('financialConfirmationEDateSearch');  // جستجو اظهارنظر
            $("#financialConfirmationAccNameSearch").typeahead({source: accountNames.aa});
            //showFinancialConfirmationList();
        }

        if(jQuery.inArray(7, res[1]) !== -1) {
            //showTempFinancialKeshoList();
        }

        if(jQuery.inArray(8, res[1]) !== -1) {
            $("#commentSendManageAccNameSearch").typeahead({source: accountNames.aa});
            var scsDate = new AMIB.persianCalendar('commentSendManageSDateSearch');  // جستجو اظهارنظر ارسال شده
            var sceDate = new AMIB.persianCalendar('commentSendManageEDateSearch');  // جستجو اظهارنظر ارسال شده
            //showPayCommentSendManageList();
        }

        if(jQuery.inArray(9, res[1]) !== -1) {  //قرارداد ها
            $("#contractManagmentHourAmount-div").css('display','none');
            $("#contractManagmentMaxHour-div").css('display','none');
            $("#contractManagmentAmount-div").css('display','none');
            $(document).ready(function()
            {
                $("input[type='radio']").click(function()
                {
                    var exception_array=['is_related_project','calculation_method','contractPaymentType','method_create_contract_payment_type_fields','contract_payment_method','is_related_VAT']
                    var is_exception = exception_array.indexOf($(this).attr('name'));
                    if(is_exception==-1){
                        var cType = $("input[name='contractManagmentCType']:checked").val();
                        var cStatus = $("input[name='contractArchiveExtensionCType']:checked").val();
                        var cntType = $("#manageContractArchiveExtensionHiddenType").val();
                        if(parseInt(cType) == 0) {  // عادی
                            $("#contractManagmentHourAmount-div").css('display','none');
                            $("#contractManagmentMaxHour-div").css('display','none');
                            $("#contractManagmentAmount-div").css('display','');
                        }else {
                            $("#contractManagmentHourAmount-div").css('display','');
                            $("#contractManagmentMaxHour-div").css('display','');
                            $("#contractManagmentAmount-div").css('display','none');
                        }
                            if(parseInt(cStatus) == 0) {  // بایگانی
                                $("#contractArchiveExtensionDescription").val('');
                                $("#contractArchiveExtensionHourAmount").val('');
                                $("#contractArchiveExtensionMaxHour").val('');
                                $("#contractArchiveExtensionCredit").val('');
                                $("#contractArchiveExtensionAmount").val('');
                                $("#contractArchiveExtensionEDate").val('');
                                $("#contractArchiveExtensionDescription-div").css('display','');
                                $("#contractArchiveExtensionHourAmount-div").css('display','none');
                                $("#contractArchiveExtensionMaxHour-div").css('display','none');
                                $("#contractArchiveExtensionCredit-div").css('display','none');
                                $("#contractArchiveExtensionAmount-div").css('display','none');
                                $("#contractArchiveExtensionEDate-div").css('display','none');
                            }else {  // تمدید
                            if(parseInt(cntType) == 0) {  // عادی
                                $("#contractArchiveExtensionDescription").val('');
                                $("#contractArchiveExtensionHourAmount").val('');
                                $("#contractArchiveExtensionMaxHour").val('');
                                $("#contractArchiveExtensionCredit").val('');
                                $("#contractArchiveExtensionAmount").val('');
                                $("#contractArchiveExtensionEDate").val('');
                                $("#contractArchiveExtensionDescription-div").css('display','none');
                                $("#contractArchiveExtensionHourAmount-div").css('display','none');
                                $("#contractArchiveExtensionMaxHour-div").css('display','none');
                                $("#contractArchiveExtensionCredit-div").css('display','');
                                $("#contractArchiveExtensionAmount-div").css('display','');
                                $("#contractArchiveExtensionEDate-div").css('display','');
                            }else {
                                $("#contractArchiveExtensionDescription").val('');
                                $("#contractArchiveExtensionHourAmount").val('');
                                $("#contractArchiveExtensionMaxHour").val('');
                                $("#contractArchiveExtensionCredit").val('');
                                $("#contractArchiveExtensionAmount").val('');
                                $("#contractArchiveExtensionEDate").val('');
                                $("#contractArchiveExtensionDescription-div").css('display','none');
                                $("#contractArchiveExtensionHourAmount-div").css('display','');
                                $("#contractArchiveExtensionMaxHour-div").css('display','');
                                $("#contractArchiveExtensionCredit-div").css('display','');
                                $("#contractArchiveExtensionAmount-div").css('display','none');
                                $("#contractArchiveExtensionEDate-div").css('display','');
                            }
                        }
                       
                    }
                  
                });
            });
            $("#contractManagmentAccount").typeahead({source: accountNames.aa});
            $("#contractManageAccountSearch").typeahead({source: accountNames.aa});
            var contractSDate = new AMIB.persianCalendar('contractManagmentSDate');
            var contractEDate = new AMIB.persianCalendar('contractManagmentEDate');
            var contractAEEDate = new AMIB.persianCalendar('contractArchiveExtensionEDate');
            var contractSSDate = new AMIB.persianCalendar('contractManageSDateSearch');
            var contractSEDate = new AMIB.persianCalendar('contractManageEDateSearch');
            var ccDate = new AMIB.persianCalendar('contractCommentDatesNew');
            //showContractManageList();
        }

        if(jQuery.inArray(10, res[1]) !== -1) {
            $("#receivedCustomerCompanyBanks-div").css('display','none');
            $("#receivedCustomerCompanyPos-div").css('display','none');
            $("#receivedCustomerCheckSerial-div").css('display','none');
            $("#receivedCustomerCheckDate-div").css('display','none');
            $("#receivedCustomerCheckOwner-div").css('display','none');
            $("#receivedCustomerCheckOwnerCode-div").css('display','none');
            $("#receivedCustomerCNameSearch").typeahead({source: depositorNames.aa});
            $("#receivedCustomerCstName").typeahead({source: depositorNames.aa});
            var receivedSDate = new AMIB.persianCalendar('receivedCustomerSDateSearch');
            var receivedEDate = new AMIB.persianCalendar('receivedCustomerEDateSearch');
            var receivedRDate = new AMIB.persianCalendar('receivedCustomerRDate');
            var receivedCHDate = new AMIB.persianCalendar('receivedCustomerCheckDate');
            //showReceivedCustomerManageList();
        }

        if(jQuery.inArray(11, res[1]) !== -1) {
            var cDate = new AMIB.persianCalendar('fundListDetailsCDate');
            //showFundListManageList();
        }

        if(jQuery.inArray(12, res[1]) !== -1) {
            var rstCBD = Main.getCardboard();
            var rstCBD1 = Main.getCardboard1();
            // for(var e=0;e<rstCBD.length;e++){
            //     $('#commentStagnantManageCardboardSearch').append($('<option>', {
            //         value: rstCBD[e]['RowID'],
            //         text: rstCBD[e]['fname']+' '+rstCBD[e]['lname'] 
            //     }));
            // }
            for(var e=0;e<rstCBD1.length;e++){
                $('#commentStagnantManageCardboardSearch1').append($('<option>', {
                    value: rstCBD1[e]['RowID'],
                    text: rstCBD1[e]['fname']+' '+rstCBD1[e]['lname']
                }));
            }
           // $("#commentStagnantManageCardboardSearch").selectpicker();
            $("#commentStagnantManageCardboardSearch1").selectpicker();
            $("#commentStagnantManageAccNameSearch").typeahead({source: accountNames.aa});
            var sstsDate = new AMIB.persianCalendar('commentStagnantManageSDateSearch');  // جستجو اظهارنظر راکد
            var ssteDate = new AMIB.persianCalendar('commentStagnantManageEDateSearch');  // جستجو اظهارنظر راکد
            //showPayCommentStagnantManageList();
        }
    }
    $("#accountManageTabID-alink").on('click',function(){
        showAccountManageList(page);
    });
    $("#unitManageTabID-alink").on('click',function(){
        showUnitManageList();
    });
    $("#depositorsManageTabID-alink").on('click',function(){
        showDepositorManageList(page);
    });
    $("#payCommentManageTabID-alink").on('click',function(){
        showFinalPayCommentManageList()(page);
    });
    $("#financialConfirmationTabID-alink").on('click',function(){
        showFinancialConfirmationList()(page);
    });
    $("#tempFinancialKeshoTabID-alink").on('click',function(){
        showTempFinancialKeshoList(page);
    });
    $("#commentSendManageTabID-alink").on('click',function(){
        showPayCommentSendManageList();
    });
    $("#contractManagementTabID-alink").on('click',function(){
        showContractManageList();
    });
    $("#receivedCustomerManageTabID-alink").on('click',function(){
        showReceivedCustomerManageList();
    });
    $("#fundListManageTabID-alink").on('click',function(){
        showFundListManageList();
    });
    $("#stagnantCommentManageTabID-alink").on('click',function(){
      
        showPayCommentStagnantManageList(1,"#payCommentStagnantManageList_btn",1);
        // $("#payCommentStagnantManageList_btn").addClass('btn_cliked');
        // $("#payCommentStagnantManageList1_btn").removeClass('btn_cliked');
        
       
    });
    select_data_picker($("#commentManagmentOneLayer"))
}

function get_layer_two_options(input){
   var action ="get_layer_two_options"
   var search_key=$(input).val();
   var param={action:action,search_key:search_key};
   
        var res =  ajaxHandler(param)
        var options=`<option value="0">زیرگروه مربوطه را انتخاب نمایید</option>`;
        // for(var i=0;i<res.length;i++){
        //     $("#commentManageLayerTwoSearch-div ul").find("li a span.text").each(function(){
        //         if($(this).text().trim()==res[i]['layerName'].trim()){
        //             $(this).css("color",'green')
        //         }
        //     })
        // }
        if(res.length){
            for(var i=0;i<res.length;i++){
                options+=`<option value="${res[i]['RowID']}">${res[i]['layerName']}</option>`
            }
            switch($(input).attr('id')){
                case "commentManageLayerOneSearch":
                    $('#commentManageLayerTwoSearch').empty().append(options);
                    $('#commentManageLayerTwoSearch').selectpicker("refresh")
                    $('#commentManageLayerTwoSearch').selectpicker("deselectAll")
                    $("#commentManageLayerTwoSearch-div button").css("border-bottom","2px solid green")
                    break;
                case "fundListManageLayerOneSearch":
                    $('#fundListManageLayerTwoSearch').empty().append(options);
                    $('#fundListManageLayerTwoSearch').selectpicker("refresh")
                    $('#fundListManageLayerTwoSearch').selectpicker("deselectAll")
                    $("#fundListManageLayerTwoSearch-div button").css("border-bottom","2px solid green")
                    break;
            }
            
        }
        else{
            switch($(input).attr('id')){
                case "commentManageLayerOneSearch":
                    //$('#commentManageLayerTwoSearch').empty().append(options);
                    //$('#commentManageLayerTwoSearch').selectpicker("refresh")
                    //$("#commentManageLayerTwoSearch-div button").css("border-bottom","2px solid green")
                    $('#commentManageLayerTwoSearch').empty();
                    $('#commentManageLayerTwoSearch').selectpicker("refresh")
                    $('#commentManageLayerTwoSearch').selectpicker("deselectAll")

                    $("#commentManageLayerTwoSearch-div button").css("border-bottom","2px solid red")
                    $("#commentManageLayerThreeSearch-div button").css("border-bottom","2px solid red")
                    break;
                case "fundListManageLayerOneSearch":
                    //$('#fundListManageLayerTwoSearch').empty().append(options);
                    //$('#fundListManageLayerTwoSearch').selectpicker("refresh")
                    //$("#fundListManageLayerTwoSearch-div button").css("border-bottom","2px solid green")
                    $('#fundListManageLayerTwoSearch').empty();
                    $('#fundListManageLayerTwoSearch').selectpicker("refresh")
                    $('#fundListManageLayerTwoSearch').selectpicker("deselectAll")
                    
                    $("#fundListManageLayerTwoSearch-div button").css("border-bottom","2px solid red")
                    $("#fundListManageLayerTwoSearch-div button").css("border-bottom","2px solid red")
                    break;
            }
            
        }
    
}
function show_contract_pay_rows(input=""){
    var is_contract=$("#commentManagmentContractYN").val();
    if(input==""){
        input=$("#commentManagmentAmount");
    }
    var pay_type=1;
    if($("#filter_pay_row_type").length){
        pay_type=$("#filter_pay_row_type").val();
    }
    if(is_contract==1)
    {
        var contract_number=$("#commentManagmentContractNum").val();
        var contract_amount=$("#commentManagmentTotalAmount").val();
        $(input).parents('.form-group').css('position','relative');
        //if($(input).parents('.form-group').find('.display_pay_rows').length)
       // {
            $('.display_pay_rows').remove();
       // }
        var action="get_contract_pay_rows";
        var contract_id=$("#commentManagmentContractID").val()
        var param={action:action,contract_id:contract_id,pay_type:pay_type,contract_number:contract_number}
        var res=ajaxHandler(param)
        if(res){
            if( $(input).parents('.form-group').find('.display_pay_rows').length){
                $(input).parents('.form-group').find('.display_pay_rows').remove();
            }
            $(input).parents('.form-group').append(res);
            $(input).parents('.form-group').find('.display_pay_rows').show();
        }
    } 
}

function check_pay_comment_amount(input=""){
    
    if(input.length){
        input=$("#commentManagmentAmount");
        
    }
    if($("#commentManagmentContractNum").val().trim().length){
        
    if(parseInt($("#max_increase").val())<parseInt(numberformat2($(input).val()))){
        $(input).focus();
        if( $("#commentManagmentModal").find(".modal-form-m .amount_detailes").length){
            $("#commentManagmentModal").find(".modal-form-m .amount_detailes").remove();
        }
        $("#commentManagmentModal").find(".modal-form-m").append(
            `<div class="amount_detailes" style="color:red"> <p>مقدار مبلغ وارد شده از مقدار  حداکثر مبلغ قرارداد بیشتر می باشد</p>
            <p> حداکثر سقف افزایش مبلغ این اظهار نظر طبق قرارداد <span style="font-size:1.5rem;padding:0px 10px" >${numberformat2($("#max_increase").val(),1)}</span>ریال  می باشد</p></div>`)
            return false;
        }
    else{

        if( $("#commentManagmentModal").find(".modal-form-m .amount_detailes").length){
            $("#commentManagmentModal").find(".modal-form-m .amount_detailes").remove();
        }
        var current_amount=$(input).val();
        $("#commentManagmentModal").find(".modal-form-m").append(
        '<div class="amount_detailes" style="color:green"> <h6>حداکثر مبلغ مجاز :<span>'+numberformat2(parseInt($("#max_increase").val()),1)+ 'ریال</span></h6>'+
        '<p>  مبلغ اظهار نظر  طبق ردیف پرداخت: <span>'+numberformat2($("#amount_row").val(),1)+'</span></p>'+
        '<p> مجموع پرداخت در این اظهارنظر:<span> '+numberformat2(current_amount,1)+'</span></p></h6></div>')
    }
}
}

function select_pay_amount(input,counter,e=event){
    event.preventDefault(e);
    var pay_value=$(input).parents('tr').find('input#amount_pay_part_'+counter).val();
    $("#commentManagmentAmount").val(numberformat2(pay_value,1))
    $(input).parents('.form-group').find('.display_pay_rows').hide();
    var max_increase=(parseInt($("#pay_percent_"+counter).val())*parseInt(pay_value))/100;
    $("#max_increase").val(parseInt(max_increase)+parseInt(pay_value));
    $("#percent_row").val(parseInt($("#pay_percent_"+counter).val()));
    $("#amount_row").val(pay_value);
    $('.display_pay_rows').remove();
}

function get_layer_three_options(input){
   var action ="get_layer_three_options"
   var search_key=$(input).val();
   var param={action:action,search_key:search_key};
    var res =  ajaxHandler(param)
    var options="";
    if(res.length){
        for(var i=0;i<res.length;i++){
            options+=`<option value="${res[i]['RowID']}">${res[i]['layerName']}</option>`
        }
        switch($(input).attr('id')){
            case "commentManageLayerTwoSearch":
                $('#commentManageLayerThreeSearch').empty().append(options);
                $('#commentManageLayerThreeSearch').selectpicker("refresh")
                $('#commentManageLayerThreeSearch').selectpicker("deselectAll")
                $("#commentManageLayerThreeSearch-div button").css("border-bottom","2px solid green")
                break;
            case "fundListManageLayerTwoSearch":
                $('#fundListManageLayerThreeSearch').empty().append(options);
                $('#fundListManageLayerThreeSearch').selectpicker("refresh")
                $('#fundListManageLayerThreeSearch').selectpicker("deselectAll")
                $("#fundListManageLayerThreeSearch-div button").css("border-bottom","2px solid green")
                break;
                
        }
        
    }
    else{
        switch($(input).attr('id')){
            case "commentManageLayerTwoSearch":
                $('#commentManageLayerThreeSearch').empty();
                $('#commentManageLayerThreeSearch').selectpicker("refresh")
                $('#commentManageLayerThreeSearch').selectpicker("deselectAll")
                $("#commentManageLayerThreeSearch-div button").css("border-bottom","2px solid red")
                break;
            case "fundListManageLayerTwoSearch":
                $('#fundListManageLayerThreeSearch').empty();
                $('#fundListManageLayerThreeSearch').selectpicker("refresh")
                $('#fundListManageLayerThreeSearch').selectpicker("deselectAll")
                $("#commentManageLayerThreeSearch-div button").css("border-bottom","2px solid red")
                break;
        }
                
    }
}

function showPayCommentManageList(page) {
    if(typeof page == "undefined"){
        page = 1;
    }
    var csDate = $("#commentManageSDateSearch").val();
    var ceDate = $("#commentManageEDateSearch").val();
    var cUnit = $("#commentManageUnitSearch").val();
    var coUnit = $("#commentManageConsumerUnitSearch").val();
    var caName = $("#commentManageAccNameSearch").val();
    var cToward = $("#commentManageTowardSearch").val();
    var Uncode = $("#commentManageUncodeSearch").val();
    var amount = $("#commentManageAmountSearch").val();
    var layer_one = $("#commentManageLayerOneSearch").val();
    var layer_two = $("#commentManageLayerTwoSearch").val();
    var layer_three = $("#commentManageLayerThreeSearch").val();
    var action = "showPayCommentManageList";
    var param = {action:action,csDate:csDate,ceDate:ceDate,cUnit:cUnit,coUnit:coUnit,caName:caName,cToward:cToward,Uncode:Uncode,amount:amount,page:page,layer_one:layer_one,layer_two:layer_two,layer_three:layer_three};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#commentManageBody").html('');
        $("#commentManageBody").html(res);
    }
}

function showPayCommentSendManageList(page) {
    if(typeof page == "undefined"){
        page = 1;
    }
    var csDate = $("#commentSendManageSDateSearch").val();
    var ceDate = $("#commentSendManageEDateSearch").val();
    var cUnit = $("#commentSendManageUnitSearch").val();
    var coUnit = $("#commentSendManageConsumerUnitSearch").val();
    var caName = $("#commentSendManageAccNameSearch").val();
    var cToward = $("#commentSendManageTowardSearch").val();
    var Uncode = $("#commentSendManageUncodeSearch").val();
    var action = "showPayCommentSendManageList";
    var param = {action:action,csDate:csDate,ceDate:ceDate,cUnit:cUnit,coUnit:coUnit,caName:caName,cToward:cToward,Uncode:Uncode,page:page};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#commentSendManageBody").html('');
        $("#commentSendManageBody").html(res);
    }
} //اظهارنظرهای ارسال شده

function ShowStagnantManageTowardSearch(page,e=event){
//    var input;
//     if(typeof(e)=='string'){

//         input=$(e);
//     }
//     else{
//         if(typeof(e)=='object'){
//             input=e.target;
//         }
//     }
//    var target_id=$(input).attr('id');
//    if(target_id=="payCommentStagnantManageList_btn"){
   
//         ShowStagnantManageList1=1;
//    }   
//    else{

//         ShowStagnantManageList1=0;
//     }
    if(ShowStagnantManageList1==1){
        showPayCommentStagnantManageList(page,e=event)
    }
    if(ShowStagnantManageList1==0){
        showPayCommentStagnantManageList1(page,e=event)
    }



}
async function showPayCommentStagnantManageList(page,e=event,flag=0) {
    var input_parent="";
    if(typeof(e)=='string'){

        input_parent=$(e);
    }
    else{
        if(typeof(e)=='object'){
            input_parent=e.target;
        }
    }

   // var input_parent=e.target;
    $(input_parent).parent().find('button').each(function(){
        $(this).removeClass('btn_cliked');
    })
    $(e.target).addClass('btn_cliked');
    var action = "showPayCommentStagnantManageList";
     setTimeout(async() => {
        await add_loading(action);
    }, 1000);
   
    if(typeof page == "undefined"){
        page = 1;
    }
    var csDate = $("#commentStagnantManageSDateSearch").val();
    var ceDate = $("#commentStagnantManageEDateSearch").val();
    var cUnit = $("#commentStagnantManageUnitSearch").val();
    var coUnit = $("#commentStagnantManageConsumerUnitSearch").val();
    var caName = $("#commentStagnantManageAccNameSearch").val();
    var cToward = $("#commentStagnantManageTowardSearch").val();
    var Uncode = $("#commentStagnantManageUncodeSearch").val();
    var cardboardID = $("#commentStagnantManageCardboardSearch").val();
    var count_array=[];
    cardboardID = cardboardID.join(',');
  
    var param = {action:action,csDate:csDate,ceDate:ceDate,cUnit:cUnit,coUnit:coUnit,caName:caName,cToward:cToward,Uncode:Uncode,cardboardID:cardboardID,page:page};
   
    var res = await manageAjaxRequest(param);
    $("#commentStagnantManageCardboardSearch-div").html("");
   
    if(res != false){
        $("#stagnantCommentManageBody").html('');
        $("#stagnantCommentManageBody").html(res[0]);
    }
  
    var rstCBD=res[1];
   $("#commentStagnantManageCardboardSearch-div").append(`<select class="mb-2 mr-sm-2 headsearch" multiple="" title="در کارتابل (مربوط به جستجوی اول)" data-selected-text-format="count" data-live-search="true" data-max-options="1" style="width:200px" id="commentStagnantManageCardboardSearch" tabindex="-98"></select>`);
   
    for(k in rstCBD){
   
                $('#commentStagnantManageCardboardSearch').append($('<option>', {
                    value: k,
                    text: rstCBD[k]['cardboard_name']
                }));
                count_array.push(rstCBD[k]['comment_count']);
    }
    if(cardboardID){
        $("#commentStagnantManageCardboardSearch").val(cardboardID);
    }
    $("#commentStagnantManageCardboardSearch").selectpicker();
    //$('#commentStagnantManageCardboardSearch').selectpicker();
    $('#commentStagnantManageCardboardSearch').selectpicker('refresh');
    setTimeout(() => {
        remove_loading(action);
    }, 500);

    // $("#commentStagnantManageCardboardSearch-div").find('a.dropdown-item').each( function(){
       
    // })

   $('button[data-id="commentStagnantManageCardboardSearch"]').click(function(){
    $('#commentStagnantManageCardboardSearch').selectpicker('refresh');
        var index=0;
        $("#commentStagnantManageCardboardSearch-div").find('a.dropdown-item').each( function(){
            $(this).children('span.comment_count').remove()
            $(this).append(`<span class="comment_count" style="width:30px;height:30px;border-radius:100%;text-align:center;background:red;color:#fff;float:left">${count_array[index]}</span>`);
            index++;
        })
   })
   ShowStagnantManageList1=1;
   ShowStagnantManageList2=0;
   if(flag==1){
        $("#payCommentStagnantManageList_btn").addClass('btn_cliked');
        $("#payCommentStagnantManageList1_btn").removeClass('btn_cliked');
        ShowStagnantManageList1=1;
        ShowStagnantManageList2=0;
   }
    $("#commentStagnantManageCardboardSearch1").selectpicker('deselectAll');
    $("#commentStagnantManageCardboardSearch1").selectpicker('refresh');
    $("#commentStagnantManageCardboardSearch-div").show();
    $("#commentStagnantManageCardboardSearch1-div").hide();
    
} //اظهارنظرهای راکد در کارتابل

async function showPayCommentStagnantManageList1(page,e=event) {
    
    var input_parent=e.target;
    var count_array=[];
    $(input_parent).parent().find('button').each(function(){
        $(this).removeClass('btn_cliked');
    })
    $(e.target).addClass('btn_cliked');

    if(typeof page == "undefined"){
        page = 1;
    }
    var csDate = $("#commentStagnantManageSDateSearch").val();
    var ceDate = $("#commentStagnantManageEDateSearch").val();
    var cUnit = $("#commentStagnantManageUnitSearch").val();
    var coUnit = $("#commentStagnantManageConsumerUnitSearch").val();
    var caName = $("#commentStagnantManageAccNameSearch").val();
    var cToward = $("#commentStagnantManageTowardSearch").val();
    var Uncode = $("#commentStagnantManageUncodeSearch").val();
    var cardboardID = $("#commentStagnantManageCardboardSearch1").val();
    cardboardID = cardboardID.join(',');
    var action = "showPayCommentStagnantManageList1";
    var param = {action:action,csDate:csDate,ceDate:ceDate,cUnit:cUnit,coUnit:coUnit,caName:caName,cToward:cToward,Uncode:Uncode,cardboardID:cardboardID,page:page};
    // setTimeout(async() => {
    //     await add_loading(action);
    // }, 1000);
    var res = await manageAjaxRequest(param);
    if(res != false)
    {
       
        var rstCBD=res[1];
        $("#stagnantCommentManageBody").html('');
        $("#stagnantCommentManageBody").html(res[0]);
        ShowStagnantManageList1=0;
        ShowStagnantManageList2=1;
        // $("#commentStagnantManageCardboardSearch1").selectpicker('deselectAll');
        // $("#commentStagnantManageCardboardSearch1").selectpicker('refresh');
       
        $("#commentStagnantManageCardboardSearch1-div").html('');
        $("#commentStagnantManageCardboardSearch1-div").append(`<select class="mb-2 mr-sm-2 headsearch" multiple="" title="در کارتابل (مربوط به جستجوی دوم)" data-selected-text-format="count" data-live-search="true" data-max-options="1" style="width:200px" id="commentStagnantManageCardboardSearch1" tabindex="-98"></select>`);
        for(k in rstCBD){
   
            $('#commentStagnantManageCardboardSearch1').append($('<option>', {
                value: k,
                text: rstCBD[k]['cardboard_name']
            }));
            count_array.push(rstCBD[k]['comment_count']);
    }
    

    $("#commentStagnantManageCardboardSearch1").selectpicker();
    //$('#commentStagnantManageCardboardSearch').selectpicker();
    $('#commentStagnantManageCardboardSearch1').selectpicker('refresh');

    $('button[data-id="commentStagnantManageCardboardSearch1"]').click(function(){
        $('#commentStagnantManageCardboardSearch1').selectpicker('refresh');
            var index=0;
            $("#commentStagnantManageCardboardSearch1-div").find('a.dropdown-item').each( function(){
                $(this).children('span.comment_count').remove()
                $(this).append(`<span class="comment_count" style="width:30px;height:30px;border-radius:100%;text-align:center;background:red;color:#fff;float:left">${count_array[index]}</span>`);
                index++;
            })
       })
    }
    // setTimeout(() => {
    //     remove_loading(action);
    // }, 500);
    if(cardboardID){
        $("#commentStagnantManageCardboardSearch1").val(cardboardID);
        $("#commentStagnantManageCardboardSearch1").selectpicker('refresh');
    }
    $("#commentStagnantManageCardboardSearch").selectpicker('deselectAll');
    $("#commentStagnantManageCardboardSearch").selectpicker('refresh');
    $("#commentStagnantManageCardboardSearch-div").hide();
    $("#commentStagnantManageCardboardSearch1-div").show();
    
} //اظهارنظرهای راکد از زمان ایجاد

function createPayComment() {
    $("#PropertyNumber-div").hide();
    $("#PropertyNumber").val('');
    //****************************************اضافه شده برای  اظهار نظر های مربوط به پروژه */
    $("#is_related_project-div").hide();
    $("#comment_project-div").hide();

    
     //****************************************اضافه شده برای  اظهار نظر های مربوط به پروژه */
    //*************************************اضافه شده برای اظهارنظر های مربوط به مالیات بر ارزش افزوده**************** */
    $("#is_related_VAT-div").hide();
    $("#comment_VAT-div").hide();
   
    //*************************************اضافه شده برای اظهارنظر های مربوط به مالیات بر ارزش افزوده**************** */
     //*************************************اضافه شده برای اظهارنظر های مربوط به بارنامه و کرایه حمل رانندگان**************** */
     $("#drivers_fare-div").hide();
     $("#way_bill_type-div").hide();
    
     //*************************************اضافه شده برای اظهارنظر های مربوط به مالیات بر ارزش افزوده**************** */
    if( $("#commentManagmentModal").find(".modal-form-m .amount_detailes").length){
        $("#commentManagmentModal").find(".modal-form-m .amount_detailes").remove();
    }
   
    $("#commentManagmentCashCheck-div").css('display','none');
    $("#commentCheckoutType-div").css('display','none');
    $("#commentManagmentOneLayer-div").css('display','none');
    $("#commentManagmentTwoLayer-div").css('display','none');
    $("#commentManagmentThreeLayer-div").css('display','none');
    $("#commentManagmentUnit-div").css('display','none');
    $("#commentManagmentConsumerUnit-div").css('display','none');
    $("#commentManagmentType-div").css('display','none');
    $("#commentManagmentCheckNumber-div").css('display','none');
    $("#commentManagmentCheckDate-div").css('display','none');
    $("#commentManagmentCheckCarcass-div").css('display','none');
    $("#commentManagmentCheckCarcassFile-div").css('display','none');
    $("#commentManagmentDeliveryDate-div").css('display','none');
    $("#commentManagmentContractYN-div").css('display','none');
    $("#commentManagmentContractNum-div").css('display','none');
    $("#commentManagmentToward-div").css('display','none');
    $("#commentManagmentTotalAmount-div").css('display','none');
    $("#commentManagmentAmount-div").css('display','none');
    $("#commentManagmentFor-div").css('display','none');
    $("#commentManagmentCode-div").css('display','none');
    $("#commentManagmentAccNum-div").css('display','none');
    $("#commentManagmentCardNumber-div").css('display','none');
    $("#commentManagmentBillingID-div").css('display','none');
    $("#commentManagmentPaymentID-div").css('display','none');
    $("#commentManagmentCashSection-div").css('display','none');
    $("#commentManagmentPaymentMaturityCash-div").css('display','none');
    $("#commentManagmentNonCashSection-div").css('display','none');
    $("#commentManagmentPaymentMaturityCheck-div").css('display','none');
    $("#commentManagmentRequestSource-div").css('display','none');
    $("#commentManagmentRequestNumbers-div").css('display','none');
    $("#commentManagmentDesc-div").css('display','none');
    $("#commentManagmentClearingFund-div").css('display','none');
    $("#commentManagmentClearingGoodLoan-div").css('display','none');
    $("#commentManagmentFor").removeAttr("disabled");
    $("#commentManagmentAccNum").removeAttr("disabled");

    $("input[name='commentManagmentPayType']").prop('checked',false);
    $("input[name='commentManagmentCashCheck']").prop('checked',false);
    $("#manageCommentHiddenCid").val('');
    $("#commentManagmentOneLayer").val(-1);
    $('#commentManagmentTwoLayer').empty();
    $('#commentManagmentThreeLayer').empty();
    $('#commentManagmentUnit').empty();
    $('#commentManagmentConsumerUnit').empty();
    $('#commentManagmentType').empty();
    $("#commentManagmentCheckNumber").val('');
    $("#commentManagmentCheckDate").val('');
    $("input[name='commentManagmentCheckCarcass']").prop('checked',false);  // لاشه چک
    $("#commentManagmentCheckCarcassFile").val('');
    $("#commentManagmentDeliveryDate").val('');
    $("#commentManagmentContractYN").val(-1);
    $("#commentManagmentContractNum").val('');
    $("#commentManagmentToward").val('');
    $("#commentManagmentTotalAmount").val('');
    $("#commentManagmentAmount").val('');
    $("#commentManagmentFor").val('');
    $("#commentManagmentCode").val('');
    $('#commentManagmentAccNum').children('option:not(:first)').remove();
    $("#commentManagmentAccNum").val(-1);
    $("#commentManagmentCardNumber").val('');
    $("#commentManagmentCashSection").val('');
    $("#commentManagmentPaymentMaturityCash").val('');
    $("#commentManagmentNonCashSection").val('');
    $("#commentManagmentPaymentMaturityCheck").val('');
    $("#commentManagmentRequestSource").val(-1);
    $("#commentManagmentRequestNumbers").val('');
    $("#commentManagmentDesc").val('');
    $("#commentManagmentBillingID").val('');
    $("#commentManagmentPaymentID").val('');
    $("#commentManagmentClearingFund").val('');
    $("#commentManagmentClearingGoodLoan").val('');
   
    
    $('#commentManagmentModal').modal('show');
    ShowStagnantManageList1=0;
    ShowStagnantManageList2=1;
    $("input[name='is_related_project']").prop("checked",false)
    $("input[name='drivers_fare']").prop("checked",false)
    set_check_box_toggle("is_related_project");
    set_check_box_toggle("drivers_fare");
    //select_data_picker($("#commentManagmentConsumerUnit"),1)

}

function show_property_number(elm){
   // var layer_one=parseInt($("#commentManagmentOneLayer").val());
    var layer_three=parseInt($(elm).val());
   // var get_related_property_number_values=get_related_property_number(43)
    var get_related_property_number_values=[172, 174,176,178,180,182,184]
    var is_related_property=get_related_property_number_values.indexOf(layer_three);
   // console.log(is_related_property);
    if(is_related_property && is_related_property != -1) {
        $("#PropertyNumber-div").show();
    }
    else{
        $("#PropertyNumber-div").hide();
    }
   
}

function get_related_property_number(parent_id){
    var action="get_related_property_number"
  
    var params={action:action,parent_id:parent_id}
    var res=ajaxHandler(params)
    return res;
}
function refresh_select_options(select_id,select_alias_name,meta_data=[],need_select_picker=0,default_value=""){
   var action="refresh_select_options";
   var params={action:action,select_alias_name:select_alias_name,meta_data:meta_data}
   var res=ajaxHandler(params);
   var options="<option value='-1'>سرگروه را انتخاب نمایید</option>"
   if(res)
   {
        for(k in res){
            options+=`<option value='${res[k]['RowID']}'>${res[k]['layerName']}</option>`;
        }
       $("#"+select_id)
        .find('option')
        .remove()
        .end()
        .append(options);
        
        if(need_select_picker==1){
            select_data_picker( $("#"+select_id))
           

        }
       
        $("#"+select_id).val(default_value);
        $("#"+select_id).selectpicker('refresh');
   }
}

function set_check_box_toggle(element_name){
    
    switch(element_name){
        case "is_related_project":
            $("input[name='"+element_name+"']").click(function(){
                if($(this).val()==1){
                    $("#comment_project-div").show();
                }
                else{
                    $("#comment_project-div").hide();
                    $("#comment_project").val(0);
                }
                
            })
            break;
        case "drivers_fare":
           
            $("input[name='"+element_name+"']").click(function(){
                if($(this).val()==1){
                    $("#way_bill_type-div").show();
                    refresh_select_options("commentManagmentOneLayer",'commentManagmentOneLayer',meta_data=['related_to_barnameh'],1)
                     
                }
                else{
                    $("#way_bill_type-div").hide();
                    $("#way_bill_type").val(0);
                    refresh_select_options("commentManagmentOneLayer",'commentManagmentOneLayer',meta_data=[],1);
                }
                $("#commentManagmentTwoLayer").find('option').remove().end();
               
            })
            break;
    }
    
}

function select_comment_row(input){
    var checked = $(input).prop('checked');
    var row_id = $(input).attr('rid');
    $(input).parents('table').find('.comment_select_row[type="checkbox"]').each(function(){
        $(this).prop('checked',false);
    })
    if(checked)
    {
        $(input).prop('checked',true);
         var res = Main.getCommentInfo(row_id);
         var transfer=res.transfer;
         $("#transfer_to_kesho").attr('disabled',false);
         switch(parseInt(transfer)){
             case 1:
                 $("#transfer_to_kesho").attr('disabled',true);
                 break;
             case 2:
                 $("#transfer_to_kesho").attr('disabled',true);
                 break; 
             case 3:
                 $("#transfer_to_kesho").attr('disabled',true);
                 break;    
         }
    }
    

}

function editPayComment(pid=0) {
    if(pid==0){
        var ch = $('#commentManageBody-table').find('input');
        var cid = new Array();
        for(var c=0;c<ch.length;c++){
            if(ch[c].checked){
                cid[cid.length] = ch[c].attributes.rid.value;
            }
        }
        if(cid.length > 1){
            notice1Sec("فقط یک اظهارنظر باید انتخاب شده باشد !","red");
            return false;
        }
        if(cid.length==0){
            notice1Sec("هیچ اظهارنظری انتخاب نشده است !","red");
            return false;
        }
        cid = cid[0];
    }
    else{
        cid=pid;
    }

    
    var res = Main.getCommentInfo(cid);

    if(res != false){
        if(res['transfer']==1 || res['transfer']==2 || res['transfer']==3 ){
            custom_alerts('شما قادر به ویرایش این اظهارنظر نمی باشید','e',0,'خطا');
            return false;
        }

        if( $("#commentManagmentModal").find(".modal-form-m .amount_detailes").length){
            $("#commentManagmentModal").find(".modal-form-m .amount_detailes").remove();
        }
        // var zindex = $("#commentManagmentModal").css("z-index");
        // console.log("z-index"+zindex);
        if(pid>0){
            $("#commentManagmentModal").css('z-index','3000')
        }
        else{
            $("#commentManagmentModal").css('z-index','1050') 
        }
        $('#commentManagmentModal').modal('show');
        $("input[name='commentManagmentCashCheck']").prop('checked',false);
        $("input[name='commentManagmentPayType']").prop('checked',false);
        $('#commentManagmentUnit').empty();
        $('#commentManagmentConsumerUnit').empty();
        $('#commentManagmentType').empty();
        $('#commentManagmentTwoLayer').empty();
        $('#commentManagmentThreeLayer').empty();
        var rst = Main.getSubLayers(res['layer1']);
        var rst1 = Main.getSubLayers(res['layer2']);
        $("input[name='is_related_project']").prop('checked',false);
        $("input[name='is_related_VAT']").prop('checked',false);
        $("#comment_project-div").hide();
    
        if(res['related_project']==0 || res['related_project']=='' || res['related_project']==null){
            $("#is_related_project-id-0").prop('checked',true)
        }
        else{
           
           $("#is_related_project-id-1").prop('checked',true)
            $("#comment_project-div").show();
            $("#comment_project").val(res['related_project']);
        }
//--------------------------------------------------------------
        if(res['related_vat']==1){
            $("#is_related_VAT-id-1").prop('checked',true)
        }
        else{
            $("#is_related_VAT-id-0").prop('checked',true)
        }
        if(res['PropertyNumber']!=0 || res['PropertyNumber']!=""){
            $("#PropertyNumber-div").show();
            $("#PropertyNumber").val(res['PropertyNumber']);
        }
        else{
            $("#PropertyNumber-div").hide();
            $("#PropertyNumber").val('');
        }
//--------------------------------------------------------------
        if(res['is_drivers_fare']==0 || res['is_drivers_fare']=='' || res['is_drivers_fare']==null){
            $("#drivers_fare-id-0").prop('checked',true)
            $("#way_bill_type-div").hide();
            $("#way_bill_type").val(0);
        }
        else{
           
           $("#drivers_fare-id-1").prop('checked',true)
            $("#way_bill_type-div").show();
            $("#way_bill_type").val(res['is_drivers_fare_type']);
        }
//-------------------------------------------------------------------
        switch (res['layer1']) {
            case '1':  // مواد اولیه
                $("#commentManagmentContractYN-div").css('display','');
                $("#commentManagmentContractNum-div").css('display','');
                $("#commentManagmentToward-div").css('display','');
                $("#commentManagmentRequestSource-div").css('display','');
                $("#commentManagmentRequestNumbers-div").css('display','');
                $("#commentManagmentCheckNumber-div").css('display','none');
                $("#commentManagmentCheckDate-div").css('display','none');
                $("#commentManagmentCheckCarcass-div").css('display','none');
                $("#commentManagmentCheckCarcassFile-div").css('display','none');
                $("#commentManagmentDeliveryDate-div").css('display','none');
                $("#commentManagmentConsumerUnit-div").css('display','');
                $("#commentManagmentTwoLayer-div").css('display','');
                $('#commentManagmentTwoLayer').append($('<option>', {
                    value: 0,
                    text: '--------'
                }));
                for(var e=0;e<rst.length;e++){
                    $('#commentManagmentTwoLayer').append($('<option>', {
                        value: rst[e]['RowID'],
                        text: rst[e]['layerName']
                    }));
                }

                var x = [0,20,12];
                var arr = ['--------','تدارکات','مدیریت'];
                for(var e=0;e<3;e++){
                    $('#commentManagmentUnit').append($('<option>', {
                        value: x[e],
                        text: arr[e]
                    }));
                }

                var arr1 = ['--------','ریخته گری','ماشین کاری','پرداخت کاری','آب کاری','پی وی دی','رنگ کاری','فورج و پرس کاری','بافت شیلنگ','مونتاژ','خط لوله','تزریق پلاستیک'];
                for(var c=0;c<12;c++){
                    $('#commentManagmentConsumerUnit').append($('<option>', {
                        value: c,
                        text: arr1[c]
                    }));
                }

                var arr2 = ['','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','علی الحساب','ثبت در حساب بستانکاری طرف مقابل'];
                var arr3 = ['--------','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','علی الحساب','ثبت در حساب بستانکاری طرف مقابل'];
                for(var b=0;b<10;b++){
                    $('#commentManagmentType').append($('<option>', {
                        value: arr2[b],
                        text: arr3[b]
                    }));
                }
                break;
            case '2':  // مواد مصرفی
                $("#commentManagmentContractYN-div").css('display','');
                $("#commentManagmentContractNum-div").css('display','');
                $("#commentManagmentToward-div").css('display','');
                $("#commentManagmentRequestSource-div").css('display','');
                $("#commentManagmentRequestNumbers-div").css('display','');
                $("#commentManagmentCheckNumber-div").css('display','none');
                $("#commentManagmentCheckDate-div").css('display','none');
                $("#commentManagmentCheckCarcass-div").css('display','none');
                $("#commentManagmentCheckCarcassFile-div").css('display','none');
                $("#commentManagmentDeliveryDate-div").css('display','none');
                $("#commentManagmentConsumerUnit-div").css('display','');
                $("#commentManagmentTwoLayer-div").css('display','');
                $('#commentManagmentTwoLayer').append($('<option>', {
                    value: 0,
                    text: '--------'
                }));
                for(var e=0;e<rst.length;e++){
                    $('#commentManagmentTwoLayer').append($('<option>', {
                        value: rst[e]['RowID'],
                        text: rst[e]['layerName']
                    }));
                }

                var x = [0,20,39,12,21];
                var arr = ['--------','تدارکات','روابط عمومی','مدیریت','فناوری اطلاعات'];
                for(var e=0;e<x.length;e++){
                    $('#commentManagmentUnit').append($('<option>', {
                        value: x[e],
                        text: arr[e]
                    }));
                }
                var unit_array=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,38,39];
                var arr1 = ['--------','ریخته گری','ماشین کاری','پرداخت کاری','آب کاری','پی وی دی','رنگ کاری','فورج و پرس کاری','بافت شیلنگ','مونتاژ','خط لوله','تزریق پلاستیک','مدیریت','تحقیق و توسعه','مهندسی','قالب سازی','نگهداری و تعمیرات','کنترل کیفیت','تضمین کیفیت','برنامه ریزی','تدارکات','فناوری اطلاعات','اداری و منابع انسانی','مالی','بازرگانی فروش','خدمات','انتظامات','انبار مواد مصرفی','انبار کالاهای در جریان','انبار مواد اولیه','انبار شهرک صنعتی توس','وصول مطالبات','پشتیبانی','انبار محصول کارخانه','روابط عمومی'];
                for(var c=0;c<arr1.length;c++){
                    $('#commentManagmentConsumerUnit').append($('<option>', {
                        value: unit_array[c],
                        text: arr1[c]
                    }));
                }

                var arr2 = ['','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','علی الحساب','ثبت در حساب بستانکاری طرف مقابل'];
                var arr3 = ['--------','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','علی الحساب','ثبت در حساب بستانکاری طرف مقابل'];
                for(var b=0;b<10;b++){
                    $('#commentManagmentType').append($('<option>', {
                        value: arr2[b],
                        text: arr3[b]
                    }));
                }
                break;
            case '4':  // تنخواه
                $("#commentManagmentContractYN-div").css('display','');
                $("#commentManagmentContractNum-div").css('display','');
                $("#commentManagmentToward-div").css('display','');
                $("#commentManagmentRequestSource-div").css('display','');
                $("#commentManagmentRequestNumbers-div").css('display','');
                $("#commentManagmentCheckNumber-div").css('display','none');
                $("#commentManagmentCheckDate-div").css('display','none');
                $("#commentManagmentCheckCarcass-div").css('display','none');
                $("#commentManagmentCheckCarcassFile-div").css('display','none');
                $("#commentManagmentDeliveryDate-div").css('display','none');
                $("#commentManagmentConsumerUnit-div").css('display','');
                $("#commentManagmentTwoLayer-div").css('display','');
                $('#commentManagmentTwoLayer').append($('<option>', {
                    value: 0,
                    text: '--------'
                }));
                for(var e=0;e<rst.length;e++){
                    $('#commentManagmentTwoLayer').append($('<option>', {
                        value: rst[e]['RowID'],
                        text: rst[e]['layerName']
                    }));
                }
                //-------------------------------
                var x = [0,20,22,24,31,23,39,40,21,12,4,38];
                var arr = ['--------','تدارکات','اداری و منابع انسانی','بازرگانی فروش','وصول مطالبات','مالی','روابط عمومی','امور عمرانی','فناوری اطلاعات','مدیریت','آبکاری','انبار محصول'];
                for(var e=0;e<12;e++){
                    $('#commentManagmentUnit').append($('<option>', {
                        value: x[e],
                        text: arr[e]
                    }));
                }
                
                var arr1_value=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,40,39];
                var arr1 = ['--------','ریخته گری','ماشین کاری','پرداخت کاری','آب کاری','پی وی دی','رنگ کاری','فورج و پرس کاری','بافت شیلنگ','مونتاژ','خط لوله','تزریق پلاستیک','مدیریت','تحقیق و توسعه','مهندسی','قالب سازی','نگهداری و تعمیرات','کنترل کیفیت','تضمین کیفیت','برنامه ریزی','تدارکات','فناوری اطلاعات','اداری و منابع انسانی','مالی','بازرگانی فروش','خدمات','انتظامات','انبار مواد مصرفی','انبار کالاهای در جریان','انبار مواد اولیه','انبار شهرک صنعتی توس','امور عمرانی','روابط عمومی'];
                for(var c=0;c<33;c++){
                    $('#commentManagmentConsumerUnit').append($('<option>', {
                        value: arr1_value[c],
                        text: arr1[c]
                    }));
                }

                var arr2 = ['','تسویه حساب','علی الحساب','ثبت در حساب بستانکاری طرف مقابل'];
                var arr3 = ['--------','تسویه حساب','علی الحساب','ثبت در حساب بستانکاری طرف مقابل'];
                for(var b=0;b<4;b++){
                    $('#commentManagmentType').append($('<option>', {
                        value: arr2[b],
                        text: arr3[b]
                    }));
                }
                break;
            case '5':  // قبوض شرکتی
                $("#commentManagmentContractYN-div").css('display','');
                $("#commentManagmentContractNum-div").css('display','');
                $("#commentManagmentToward-div").css('display','');
                $("#commentManagmentRequestSource-div").css('display','');
                $("#commentManagmentRequestNumbers-div").css('display','');
                $("#commentManagmentCheckNumber-div").css('display','none');
                $("#commentManagmentCheckDate-div").css('display','none');
                $("#commentManagmentCheckCarcass-div").css('display','none');
                $("#commentManagmentCheckCarcassFile-div").css('display','none');
                $("#commentManagmentDeliveryDate-div").css('display','none');
                $("#commentManagmentConsumerUnit-div").css('display','none');
                $("#commentManagmentTwoLayer-div").css('display','');
                $('#commentManagmentTwoLayer').append($('<option>', {
                    value: 0,
                    text: '--------'
                }));
                for(var e=0;e<rst.length;e++){
                    $('#commentManagmentTwoLayer').append($('<option>', {
                        value: rst[e]['RowID'],
                        text: rst[e]['layerName']
                    }));
                }

                var x = [0,20,21,22,24,12];
                var arr = ['--------','تدارکات','فناوری اطلاعات','اداری و منابع انسانی','بازرگانی فروش','مدیریت'];
                for(var e=0;e<6;e++){
                    $('#commentManagmentUnit').append($('<option>', {
                        value: x[e],
                        text: arr[e]
                    }));
                }

                $('#commentManagmentConsumerUnit').append($('<option>', {
                    value: 0,
                    text: '--------'
                }));

                var arr2 = ['','پرداخت قبض','پیش پرداخت','تسویه حساب'];
                var arr3 = ['--------','پرداخت قبض','پیش پرداخت','تسویه حساب'];
                for(var b=0;b<4;b++){
                    $('#commentManagmentType').append($('<option>', {
                        value: arr2[b],
                        text: arr3[b]
                    }));
                }
                break;
            case '6':  // جرایم شرکتی
                $("#commentManagmentContractYN-div").css('display','');
                $("#commentManagmentContractNum-div").css('display','');
                $("#commentManagmentToward-div").css('display','');
                $("#commentManagmentRequestSource-div").css('display','');
                $("#commentManagmentRequestNumbers-div").css('display','');
                $("#commentManagmentCheckNumber-div").css('display','none');
                $("#commentManagmentCheckDate-div").css('display','none');
                $("#commentManagmentCheckCarcass-div").css('display','none');
                $("#commentManagmentCheckCarcassFile-div").css('display','none');
                $("#commentManagmentDeliveryDate-div").css('display','none');
                $("#commentManagmentConsumerUnit-div").css('display','none');
                $("#commentManagmentTwoLayer-div").css('display','none');

                var x = [0,22,12];
                var arr = ['--------','اداری و منابع انسانی','مدیریت'];
                for(var e=0;e<3;e++){
                    $('#commentManagmentUnit').append($('<option>', {
                        value: x[e],
                        text: arr[e]
                    }));
                }

                $('#commentManagmentConsumerUnit').append($('<option>', {
                    value: 0,
                    text: '--------'
                }));

                var arr2 = ['','پرداخت جریمه'];
                var arr3 = ['--------','پرداخت جریمه'];
                for(var b=0;b<2;b++){
                    $('#commentManagmentType').append($('<option>', {
                        value: arr2[b],
                        text: arr3[b]
                    }));
                }
                break;
            case '7':  // طرح توسعه
                $("#commentManagmentContractYN-div").css('display','');
                $("#commentManagmentContractNum-div").css('display','');
                $("#commentManagmentToward-div").css('display','');
                $("#commentManagmentRequestSource-div").css('display','');
                $("#commentManagmentRequestNumbers-div").css('display','');
                $("#commentManagmentCheckNumber-div").css('display','none');
                $("#commentManagmentCheckDate-div").css('display','none');
                $("#commentManagmentCheckCarcass-div").css('display','none');
                $("#commentManagmentCheckCarcassFile-div").css('display','none');
                $("#commentManagmentDeliveryDate-div").css('display','none');
                $("#commentManagmentConsumerUnit-div").css('display','none');
                $("#commentManagmentTwoLayer-div").css('display','');
                $('#commentManagmentTwoLayer').append($('<option>', {
                    value: 0,
                    text: '--------'
                }));
                for(var e=0;e<rst.length;e++){
                    $('#commentManagmentTwoLayer').append($('<option>', {
                        value: rst[e]['RowID'],
                        text: rst[e]['layerName']
                    }));
                }

                var x = [0,20,22,24,40,12,42,23];
                var arr = ['--------','تدارکات','اداری و منابع انسانی','بازرگانی فروش','امور عمرانی','مدیریت','گرافیک و تولید  محتوا','مالی'];
                for(var e=0;e<8;e++){
                    $('#commentManagmentUnit').append($('<option>', {
                        value: x[e],
                        text: arr[e]
                    }));
                }

                $('#commentManagmentConsumerUnit').append($('<option>', {
                    value: 0,
                    text: '--------'
                }));

                var arr2 = ['','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','علی الحساب','ثبت در حساب بستانکاری طرف مقابل'];
                var arr3 = ['--------','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','علی الحساب','ثبت در حساب بستانکاری طرف مقابل'];
                for(var b=0;b<10;b++){
                    $('#commentManagmentType').append($('<option>', {
                        value: arr2[b],
                        text: arr3[b]
                    }));
                }
                break;
            case '8':  // سهامداران
                $("#commentManagmentContractYN-div").css('display','');
                $("#commentManagmentContractNum-div").css('display','');
                $("#commentManagmentToward-div").css('display','');
                $("#commentManagmentRequestSource-div").css('display','');
                $("#commentManagmentRequestNumbers-div").css('display','');
                $("#commentManagmentCheckNumber-div").css('display','none');
                $("#commentManagmentCheckDate-div").css('display','none');
                $("#commentManagmentCheckCarcass-div").css('display','none');
                $("#commentManagmentCheckCarcassFile-div").css('display','none');
                $("#commentManagmentDeliveryDate-div").css('display','none');
                $("#commentManagmentConsumerUnit-div").css('display','none');
                $("#commentManagmentTwoLayer-div").css('display','');
                $('#commentManagmentTwoLayer').append($('<option>', {
                    value: 0,
                    text: '--------'
                }));
                for(var e=0;e<rst.length;e++){
                    $('#commentManagmentTwoLayer').append($('<option>', {
                        value: rst[e]['RowID'],
                        text: rst[e]['layerName']
                    }));
                }

                var x = [0,20,22,23,12,21,31];
                var arr = ['--------','تدارکات','اداری و منابع انسانی','مالی','مدیریت','فناوری اطلاعات','وصول مطالبات'];
                for(var e=0;e<7;e++){
                    $('#commentManagmentUnit').append($('<option>', {
                        value: x[e],
                        text: arr[e]
                    }));
                }

                $('#commentManagmentConsumerUnit').append($('<option>', {
                    value: 0,
                    text: '--------'
                }));

                var arr2 = ['','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','علی الحساب','برداشت سهامدار','پرداخت قبض','پرداخت جریمه','ثبت در حساب بستانکاری طرف مقابل'];
                var arr3 = ['--------','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','علی الحساب','برداشت سهامدار','پرداخت قبض','پرداخت جریمه','ثبت در حساب بستانکاری طرف مقابل'];
                for(var b=0;b<13;b++){
                    $('#commentManagmentType').append($('<option>', {
                        value: arr2[b],
                        text: arr3[b]
                    }));
                }
                break;
            case '9':  // مالیاتی
                $("#commentManagmentContractYN-div").css('display','');
                $("#commentManagmentContractNum-div").css('display','');
                $("#commentManagmentToward-div").css('display','');
                $("#commentManagmentRequestSource-div").css('display','');
                $("#commentManagmentRequestNumbers-div").css('display','');
                $("#commentManagmentCheckNumber-div").css('display','none');
                $("#commentManagmentCheckDate-div").css('display','none');
                $("#commentManagmentCheckCarcass-div").css('display','none');
                $("#commentManagmentCheckCarcassFile-div").css('display','none');
                $("#commentManagmentDeliveryDate-div").css('display','none');
                $("#commentManagmentConsumerUnit-div").css('display','none');
                $("#commentManagmentTwoLayer-div").css('display','');
                $('#commentManagmentTwoLayer').append($('<option>', {
                    value: 0,
                    text: '--------'
                }));
                for(var e=0;e<rst.length;e++){
                    $('#commentManagmentTwoLayer').append($('<option>', {
                        value: rst[e]['RowID'],
                        text: rst[e]['layerName']
                    }));
                }

                var x = [0,23,31,12];
                var arr = ['--------','مالی','وصول مطالبات','مدیریت'];
                for(var e=0;e<4;e++){
                    $('#commentManagmentUnit').append($('<option>', {
                        value: x[e],
                        text: arr[e]
                    }));
                }

                $('#commentManagmentConsumerUnit').append($('<option>', {
                    value: 0,
                    text: '--------'
                }));

                var arr2 = ['','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','علی الحساب','پرداخت جریمه','ثبت در حساب بستانکاری طرف مقابل'];
                var arr3 = ['--------','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','علی الحساب','پرداخت جریمه','ثبت در حساب بستانکاری طرف مقابل'];
                for(var b=0;b<11;b++){
                    $('#commentManagmentType').append($('<option>', {
                        value: arr2[b],
                        text: arr3[b]
                    }));
                }
                break;
            case '10':  // قراردادهای زیرساختی
                $("#commentManagmentContractYN-div").css('display','');
                $("#commentManagmentContractNum-div").css('display','');
                $("#commentManagmentToward-div").css('display','');
                $("#commentManagmentRequestSource-div").css('display','');
                $("#commentManagmentRequestNumbers-div").css('display','');
                $("#commentManagmentCheckNumber-div").css('display','none');
                $("#commentManagmentCheckDate-div").css('display','none');
                $("#commentManagmentCheckCarcass-div").css('display','none');
                $("#commentManagmentCheckCarcassFile-div").css('display','none');
                $("#commentManagmentDeliveryDate-div").css('display','none');
                $("#commentManagmentConsumerUnit-div").css('display','none');
                $("#commentManagmentTwoLayer-div").css('display','');
                $('#commentManagmentTwoLayer').append($('<option>', {
                    value: 0,
                    text: '--------'
                }));
                for(var e=0;e<rst.length;e++){
                    $('#commentManagmentTwoLayer').append($('<option>', {
                        value: rst[e]['RowID'],
                        text: rst[e]['layerName']
                    }));
                }

                var x = [0,20,22,23,24,21,12];
                var arr = ['--------','تدارکات','اداری و منابع انسانی','مالی','بازرگانی فروش','فناوری اطلاعات','مدیریت'];
                for(var e=0;e<7;e++){
                    $('#commentManagmentUnit').append($('<option>', {
                        value: x[e],
                        text: arr[e]
                    }));
                }

                $('#commentManagmentConsumerUnit').append($('<option>', {
                    value: 0,
                    text: '--------'
                }));

                var arr2 = ['','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','علی الحساب','ثبت در حساب بستانکاری طرف مقابل'];
                var arr3 = ['--------','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','علی الحساب','ثبت در حساب بستانکاری طرف مقابل'];
                for(var b=0;b<10;b++){
                    $('#commentManagmentType').append($('<option>', {
                        value: arr2[b],
                        text: arr3[b]
                    }));
                }
                break;
            case '24':  // چک برگشتی
/*                var radioValue = $("input[name='commentManagmentPayType']:checked").val();
                if (parseInt(radioValue) == 0){
                    $("#commentManagmentOneLayer").val(-1);
                    notice1Sec("چک برگشتی فقط در روش پرداخت فورج قابل ثبت می باشد !","yellow");
                    return false;
                }*/
                $("#commentManagmentCheckNumber-div").css('display','');
                $("#commentManagmentCheckDate-div").css('display','');
                $("#commentManagmentCheckCarcass-div").css('display','');
                $("#commentManagmentCheckCarcassFile-div").css('display','none');
                $("#commentManagmentDeliveryDate-div").css('display','none');
                $("#commentManagmentConsumerUnit-div").css('display','none');
                $("#commentManagmentTwoLayer-div").css('display','none');
                $("#commentManagmentContractYN-div").css('display','none');
                $("#commentManagmentContractNum-div").css('display','none');
                $("#commentManagmentToward-div").css('display','none');
                $("#commentManagmentRequestSource-div").css('display','none');
                $("#commentManagmentRequestNumbers-div").css('display','none');
                $("input[name='commentManagmentCheckCarcass']").prop('checked',false);  // لاشه چک

                var x = [0,20,31,23,12];
                var arr = ['--------','تدارکات','وصول مطالبات','مالی','مدیریت'];
                for(var e=0;e<5;e++){
                    $('#commentManagmentUnit').append($('<option>', {
                        value: x[e],
                        text: arr[e]
                    }));
                }

                $('#commentManagmentConsumerUnit').append($('<option>', {
                    value: 0,
                    text: '--------'
                }));

                var arr2 = ['','تسویه حساب'];
                var arr3 = ['--------','تسویه حساب'];
                for(var b=0;b<2;b++){
                    $('#commentManagmentType').append($('<option>', {
                        value: arr2[b],
                        text: arr3[b]
                    }));
                }
                break;
            case '25':  // پرسنلی
                $("#commentManagmentContractYN-div").css('display','');
                $("#commentManagmentContractNum-div").css('display','');
                $("#commentManagmentToward-div").css('display','');
                $("#commentManagmentRequestSource-div").css('display','none');
                $("#commentManagmentRequestNumbers-div").css('display','none');
                $("#commentManagmentCheckNumber-div").css('display','none');
                $("#commentManagmentCheckDate-div").css('display','none');
                $("#commentManagmentCheckCarcass-div").css('display','none');
                $("#commentManagmentCheckCarcassFile-div").css('display','none');
                $("#commentManagmentDeliveryDate-div").css('display','none');
                $("#commentManagmentConsumerUnit-div").css('display','');
                $("#commentManagmentTwoLayer-div").css('display','');
                $('#commentManagmentTwoLayer').append($('<option>', {
                    value: 0,
                    text: '--------'
                }));
                for(var e=0;e<rst.length;e++){
                    $('#commentManagmentTwoLayer').append($('<option>', {
                        value: rst[e]['RowID'],
                        text: rst[e]['layerName']
                    }));
                }

                var x = [0,20,22,23,12];
                var arr = ['--------','تدارکات','اداری و منابع انسانی','مالی','مدیریت'];
                for(var e=0;e<5;e++){
                    $('#commentManagmentUnit').append($('<option>', {
                        value: x[e],
                        text: arr[e]
                    }));
                }
                var unit_code=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,38,39];
                var arr1 = ['--------','ریخته گری','ماشین کاری','پرداخت کاری','آب کاری','پی وی دی','رنگ کاری','فورج و پرس کاری','بافت شیلنگ','مونتاژ','خط لوله','تزریق پلاستیک','مدیریت','تحقیق و توسعه','مهندسی','قالب سازی','نگهداری و تعمیرات','کنترل کیفیت','تضمین کیفیت','برنامه ریزی','تدارکات','فناوری اطلاعات','اداری و منابع انسانی','مالی','بازرگانی فروش','خدمات','انتظامات','انبار مواد مصرفی','انبار کالاهای در جریان','انبار مواد اولیه','انبار شهرک صنعتی توس','وصول مطالبات','پشتیبانی','5s','گروهی (مطابق قسمت توضیحات)','انبار محصول کارخانه','روابط عمومی'];
                for(var c=0;c<unit_code.length;c++){
                    $('#commentManagmentConsumerUnit').append($('<option>', {
                        value: unit_code[c],
                        text: arr1[c]
                    }));
                }

                var arr2 = ['','تسویه حساب','علی الحساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','ثبت در حساب بستانکاری طرف مقابل'];
                var arr3 = ['--------','تسویه حساب','علی الحساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','ثبت در حساب بستانکاری طرف مقابل'];
                for(var b=0;b<10;b++){
                    $('#commentManagmentType').append($('<option>', {
                        value: arr2[b],
                        text: arr3[b]
                    }));
                }
                break;
            case '29':  // اقلام بازرگانی
                $("#commentManagmentContractYN-div").css('display','');
                $("#commentManagmentContractNum-div").css('display','');
                $("#commentManagmentToward-div").css('display','');
                $("#commentManagmentRequestSource-div").css('display','');
                $("#commentManagmentRequestNumbers-div").css('display','');
                $("#commentManagmentCheckNumber-div").css('display','none');
                $("#commentManagmentCheckDate-div").css('display','none');
                $("#commentManagmentCheckCarcass-div").css('display','none');
                $("#commentManagmentCheckCarcassFile-div").css('display','none');
                $("#commentManagmentDeliveryDate-div").css('display','none');
                $("#commentManagmentConsumerUnit-div").css('display','');
                $("#commentManagmentTwoLayer-div").css('display','');
                $('#commentManagmentTwoLayer').append($('<option>', {
                    value: 0,
                    text: '--------'
                }));
                for(var e=0;e<rst.length;e++){
                    $('#commentManagmentTwoLayer').append($('<option>', {
                        value: rst[e]['RowID'],
                        text: rst[e]['layerName']
                    }));
                }

                var x = [0,20,24,31,12];
                var arr = ['--------','تدارکات','بازرگانی فروش','وصول مطالبات','مدیریت'];
                for(var e=0;e<5;e++){
                    $('#commentManagmentUnit').append($('<option>', {
                        value: x[e],
                        text: arr[e]
                    }));
                }

                var m = [0,24];
                var arr1 = ['--------','بازرگانی فروش'];
                for(var e=0;e<2;e++){
                    $('#commentManagmentConsumerUnit').append($('<option>', {
                        value: m[e],
                        text: arr1[e]
                    }));
                }

                var arr2 = ['','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','علی الحساب','ثبت در حساب بستانکاری طرف مقابل'];
                var arr3 = ['--------','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','علی الحساب','ثبت در حساب بستانکاری طرف مقابل'];
                for(var b=0;b<10;b++){
                    $('#commentManagmentType').append($('<option>', {
                        value: arr2[b],
                        text: arr3[b]
                    }));
                }
                break;
            case '30':  // محصولات تولیدی
                $("#commentManagmentContractYN-div").css('display','');
                $("#commentManagmentContractNum-div").css('display','');
                $("#commentManagmentToward-div").css('display','');
                $("#commentManagmentRequestSource-div").css('display','');
                $("#commentManagmentRequestNumbers-div").css('display','');
                $("#commentManagmentCheckNumber-div").css('display','none');
                $("#commentManagmentCheckDate-div").css('display','none');
                $("#commentManagmentCheckCarcass-div").css('display','none');
                $("#commentManagmentCheckCarcassFile-div").css('display','none');
                $("#commentManagmentDeliveryDate-div").css('display','none');
                $("#commentManagmentConsumerUnit-div").css('display','');
                $("#commentManagmentTwoLayer-div").css('display','');
                $('#commentManagmentTwoLayer').append($('<option>', {
                    value: 0,
                    text: '--------'
                }));
                for(var e=0;e<rst.length;e++){
                    $('#commentManagmentTwoLayer').append($('<option>', {
                        value: rst[e]['RowID'],
                        text: rst[e]['layerName']
                    }));
                }
               
                var x = [0,12,20,24,31,21,39,12,42,23];
                var arr = ['--------','مدیریت','تدارکات','بازرگانی فروش','وصول مطالبات','فناوری اطلاعات','روابط عمومی','مدیریت','واحد گرافیک و تولید محتوا','مالی'];
                for(var e=0;e<10;e++){
         
                    $('#commentManagmentUnit').append($('<option>', {
                        value: x[e],
                        text: arr[e]
                    }));
                }

                var m = [0,12,24,17,39];
                var arr1 = ['--------','مدیریت','بازرگانی فروش','کنترل کیفیت','روابط عمومی'];
                for(var e=0;e<4;e++){
                    $('#commentManagmentConsumerUnit').append($('<option>', {
                        value: m[e],
                        text: arr1[e]
                    }));
                }

                var arr2 = ['','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','علی الحساب','ثبت در حساب بستانکاری طرف مقابل'];
                var arr3 = ['--------','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','علی الحساب','ثبت در حساب بستانکاری طرف مقابل'];
                for(var b=0;b<10;b++){
                    $('#commentManagmentType').append($('<option>', {
                        value: arr2[b],
                        text: arr3[b]
                    }));
                }
                break;
            case '42':  // واردات
                $("#commentManagmentContractYN-div").css('display','');
                $("#commentManagmentContractNum-div").css('display','');
                $("#commentManagmentToward-div").css('display','');
                $("#commentManagmentRequestSource-div").css('display','');
                $("#commentManagmentRequestNumbers-div").css('display','');
                $("#commentManagmentCheckNumber-div").css('display','none');
                $("#commentManagmentCheckDate-div").css('display','none');
                $("#commentManagmentCheckCarcass-div").css('display','none');
                $("#commentManagmentCheckCarcassFile-div").css('display','none');
                $("#commentManagmentDeliveryDate-div").css('display','none');
                $("#commentManagmentConsumerUnit-div").css('display','');
                $("#commentManagmentTwoLayer-div").css('display','');
                $('#commentManagmentTwoLayer').append($('<option>', {
                    value: 0,
                    text: '--------'
                }));
                for(var e=0;e<rst.length;e++){
                    $('#commentManagmentTwoLayer').append($('<option>', {
                        value: rst[e]['RowID'],
                        text: rst[e]['layerName']
                    }));
                }

                var x = [0,20,23,12,22];
                var arr = ['--------','تدارکات','مالی','مدیریت','اداری و منابع انسانی'];
                for(var e=0;e<5;e++){
                    $('#commentManagmentUnit').append($('<option>', {
                        value: x[e],
                        text: arr[e]
                    }));
                }

                var arr1 = ['--------','ریخته گری','ماشین کاری','پرداخت کاری','آب کاری','پی وی دی','رنگ کاری','فورج و پرس کاری','بافت شیلنگ','مونتاژ','خط لوله','تزریق پلاستیک'];
                for(var c=0;c<12;c++){
                    $('#commentManagmentConsumerUnit').append($('<option>', {
                        value: c,
                        text: arr1[c]
                    }));
                }

                var arr2 = ['','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','علی الحساب','ثبت در حساب بستانکاری طرف مقابل'];
                var arr3 = ['--------','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','علی الحساب','ثبت در حساب بستانکاری طرف مقابل'];
                for(var b=0;b<10;b++){
                    $('#commentManagmentType').append($('<option>', {
                        value: arr2[b],
                        text: arr3[b]
                    }));
                }
                break;
            case '43':  // دارایی ثابت
                $("#commentManagmentContractYN-div").css('display','');
                $("#commentManagmentContractNum-div").css('display','');
                $("#commentManagmentToward-div").css('display','');
                $("#commentManagmentRequestSource-div").css('display','');
                $("#commentManagmentRequestNumbers-div").css('display','');
                $("#commentManagmentCheckNumber-div").css('display','none');
                $("#commentManagmentCheckDate-div").css('display','none');
                $("#commentManagmentCheckCarcass-div").css('display','none');
                $("#commentManagmentCheckCarcassFile-div").css('display','none');
                $("#commentManagmentDeliveryDate-div").css('display','none');
                $("#commentManagmentConsumerUnit-div").css('display','');
                $("#commentManagmentTwoLayer-div").css('display','');
                $('#commentManagmentTwoLayer').append($('<option>', {
                    value: 0,
                    text: '--------'
                }));
                for(var e=0;e<rst.length;e++){
                    $('#commentManagmentTwoLayer').append($('<option>', {
                        value: rst[e]['RowID'],
                        text: rst[e]['layerName']
                    }));
                }

                var x = [0,20,12,23,21,39];
                var arr = ['--------','تدارکات','مدیریت','مالی','فناوری اطلاعات','روابط عمومی'];
                for(var e=0;e<x.length;e++){
                    $('#commentManagmentUnit').append($('<option>', {
                        value: x[e],
                        text: arr[e]
                    }));
                }

                var arr1 = ['--------','ریخته گری','ماشین کاری','پرداخت کاری','آب کاری','پی وی دی','رنگ کاری','فورج و پرس کاری','بافت شیلنگ','مونتاژ','خط لوله','تزریق پلاستیک','مدیریت','تحقیق و توسعه','مهندسی','قالب سازی','نگهداری و تعمیرات','کنترل کیفیت','تضمین کیفیت','برنامه ریزی','تدارکات','فناوری اطلاعات','اداری و منابع انسانی','مالی','بازرگانی فروش','خدمات','انتظامات','انبار مواد مصرفی','انبار کالاهای در جریان','انبار مواد اولیه','انبار شهرک صنعتی توس','وصول مطالبات','پشتیبانی','5s','گروهی (مطابق قسمت توضیحات)','رمز ارز','انبار حاشیه جادو سنتو','حقوقی','انبار محصول کارخانه'];
                for(var c=0;c<39;c++){
                    $('#commentManagmentConsumerUnit').append($('<option>', {
                        value: c,
                        text: arr1[c]
                    }));
                }

                var arr2 = ['','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','علی الحساب','ثبت در حساب بستانکاری طرف مقابل'];
                var arr3 = ['--------','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','علی الحساب','ثبت در حساب بستانکاری طرف مقابل'];
                for(var b=0;b<10;b++){
                    $('#commentManagmentType').append($('<option>', {
                        value: arr2[b],
                        text: arr3[b]
                    }));
                }
                break;
            case '50':  // وسائط نقلیه
                $("#commentManagmentContractYN-div").css('display','');
                $("#commentManagmentContractNum-div").css('display','');
                $("#commentManagmentToward-div").css('display','');
                $("#commentManagmentRequestSource-div").css('display','');
                $("#commentManagmentRequestNumbers-div").css('display','');
                $("#commentManagmentCheckNumber-div").css('display','none');
                $("#commentManagmentCheckDate-div").css('display','none');
                $("#commentManagmentCheckCarcass-div").css('display','none');
                $("#commentManagmentCheckCarcassFile-div").css('display','none');
                $("#commentManagmentDeliveryDate-div").css('display','none');
                $("#commentManagmentConsumerUnit-div").css('display','');
                $("#commentManagmentTwoLayer-div").css('display','');
                $('#commentManagmentTwoLayer').append($('<option>', {
                    value: 0,
                    text: '--------'
                }));
                for(var e=0;e<rst.length;e++){
                    $('#commentManagmentTwoLayer').append($('<option>', {
                        value: rst[e]['RowID'],
                        text: rst[e]['layerName']
                    }));
                }

                var x = [0,20,22,12];
                var arr = ['--------','تدارکات','اداری و منابع انسانی','مدیریت'];
                for(var e=0;e<4;e++){
                    $('#commentManagmentUnit').append($('<option>', {
                        value: x[e],
                        text: arr[e]
                    }));
                }

                var m = [0,32];
                var arr1 = ['--------','پشتیبانی'];
                for(var e=0;e<2;e++){
                    $('#commentManagmentConsumerUnit').append($('<option>', {
                        value: m[e],
                        text: arr1[e]
                    }));
                }

                var arr2 = ['','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','علی الحساب','پرداخت جریمه','ثبت در حساب بستانکاری طرف مقابل'];
                var arr3 = ['--------','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','علی الحساب','پرداخت جریمه','ثبت در حساب بستانکاری طرف مقابل'];
                for(var b=0;b<10;b++){
                    $('#commentManagmentType').append($('<option>', {
                        value: arr2[b],
                        text: arr3[b]
                    }));
                }
                break;
            case '68':  // تحقیق و توسعه
                $("#commentManagmentContractYN-div").css('display','');
                $("#commentManagmentContractNum-div").css('display','');
                $("#commentManagmentToward-div").css('display','');
                $("#commentManagmentRequestSource-div").css('display','');
                $("#commentManagmentRequestNumbers-div").css('display','');
                $("#commentManagmentCheckNumber-div").css('display','none');
                $("#commentManagmentCheckDate-div").css('display','none');
                $("#commentManagmentCheckCarcass-div").css('display','none');
                $("#commentManagmentCheckCarcassFile-div").css('display','none');
                $("#commentManagmentDeliveryDate-div").css('display','none');
                $("#commentManagmentConsumerUnit-div").css('display','');
                $("#commentManagmentTwoLayer-div").css('display','');
                $('#commentManagmentTwoLayer').append($('<option>', {
                    value: 0,
                    text: '--------'
                }));
                for(var e=0;e<rst.length;e++){
                    $('#commentManagmentTwoLayer').append($('<option>', {
                        value: rst[e]['RowID'],
                        text: rst[e]['layerName']
                    }));
                }

                var x = [0,20,22,24,12,42,21];
                var arr = ['--------','تدارکات','اداری و منابع انسانی','بازرگانی فروش','مدیریت','گرافیک و تولید محتوا','فناوری اطلاعات'];
                for(var e=0;e<x.length;e++){
                    $('#commentManagmentUnit').append($('<option>', {
                        value: x[e],
                        text: arr[e]
                    }));
                }

                var arr1 = ['--------','ریخته گری','ماشین کاری','پرداخت کاری','آب کاری','پی وی دی','رنگ کاری','فورج و پرس کاری','بافت شیلنگ','مونتاژ','خط لوله','تزریق پلاستیک','مدیریت','تحقیق و توسعه','مهندسی','قالب سازی','نگهداری و تعمیرات','کنترل کیفیت','تضمین کیفیت','برنامه ریزی','تدارکات','فناوری اطلاعات','اداری و منابع انسانی','مالی','بازرگانی فروش','خدمات','انتظامات','انبار مواد مصرفی','انبار کالاهای در جریان','انبار مواد اولیه','انبار شهرک صنعتی توس','وصول مطالبات','پشتیبانی','5s','گروهی (مطابق قسمت توضیحات)','رمز ارز'];
                for(var c=0;c<36;c++){
                    $('#commentManagmentConsumerUnit').append($('<option>', {
                        value: c,
                        text: arr1[c]
                    }));
                }

                var arr2 = ['','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','ثبت در حساب بستانکاری طرف مقابل'];
                var arr3 = ['--------','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','ثبت در حساب بستانکاری طرف مقابل'];
                for(var b=0;b<9;b++){
                    $('#commentManagmentType').append($('<option>', {
                        value: arr2[b],
                        text: arr3[b]
                    }));
                }
                break;
            case '74':  // تشریفات
                $("#commentManagmentContractYN-div").css('display','');
                $("#commentManagmentContractNum-div").css('display','');
                $("#commentManagmentToward-div").css('display','');
                $("#commentManagmentRequestSource-div").css('display','');
                $("#commentManagmentRequestNumbers-div").css('display','');
                $("#commentManagmentCheckNumber-div").css('display','none');
                $("#commentManagmentCheckDate-div").css('display','none');
                $("#commentManagmentCheckCarcass-div").css('display','none');
                $("#commentManagmentCheckCarcassFile-div").css('display','none');
                $("#commentManagmentDeliveryDate-div").css('display','none');
                $("#commentManagmentConsumerUnit-div").css('display','');
                $("#commentManagmentTwoLayer-div").css('display','');
                $('#commentManagmentTwoLayer').append($('<option>', {
                    value: 0,
                    text: '--------'
                }));
                for(var e=0;e<rst.length;e++){
                    $('#commentManagmentTwoLayer').append($('<option>', {
                        value: rst[e]['RowID'],
                        text: rst[e]['layerName']
                    }));
                }

                var x = [0,20,22,24,31,39,12,23];
                var arr = ['--------','تدارکات','اداری و منابع انسانی','بازرگانی فروش','وصول مطالبات','روابط عمومی','مدیریت','مالی'];
                for(var e=0;e<8;e++){
                    $('#commentManagmentUnit').append($('<option>', {
                        value: x[e],
                        text: arr[e]
                    }));
                }
                var arra1_value=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,39];
                var arr1 = ['--------','ریخته گری','ماشین کاری','پرداخت کاری','آب کاری','پی وی دی','رنگ کاری','فورج و پرس کاری','بافت شیلنگ','مونتاژ','خط لوله','تزریق پلاستیک','مدیریت','تحقیق و توسعه','مهندسی','قالب سازی','نگهداری و تعمیرات','کنترل کیفیت','تضمین کیفیت','برنامه ریزی','تدارکات','فناوری اطلاعات','اداری و منابع انسانی','مالی','بازرگانی فروش','خدمات','انتظامات','انبار مواد مصرفی','انبار کالاهای در جریان','انبار مواد اولیه','انبار شهرک صنعتی توس','وصول مطالبات','پشتیبانی','5s','گروهی (مطابق قسمت توضیحات)','رمز ارز','روابط عمومی'];
                for(var c=0;c<arr1.length;c++){
                    $('#commentManagmentConsumerUnit').append($('<option>', {
                        value: arra1_value[c],
                        text: arr1[c]
                    }));
                }

                var arr2 = ['','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','ثبت در حساب بستانکاری طرف مقابل'];
                var arr3 = ['--------','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','ثبت در حساب بستانکاری طرف مقابل'];
                for(var b=0;b<9;b++){
                    $('#commentManagmentType').append($('<option>', {
                        value: arr2[b],
                        text: arr3[b]
                    }));
                }
                break;
            case '78':  // امور خیریه
                $("#commentManagmentContractYN-div").css('display','');
                $("#commentManagmentContractNum-div").css('display','');
                $("#commentManagmentToward-div").css('display','');
                $("#commentManagmentRequestSource-div").css('display','');
                $("#commentManagmentRequestNumbers-div").css('display','');
                $("#commentManagmentCheckNumber-div").css('display','none');
                $("#commentManagmentCheckDate-div").css('display','none');
                $("#commentManagmentCheckCarcass-div").css('display','none');
                $("#commentManagmentCheckCarcassFile-div").css('display','none');
                $("#commentManagmentDeliveryDate-div").css('display','none');
                $("#commentManagmentConsumerUnit-div").css('display','none');
                $("#commentManagmentTwoLayer-div").css('display','none');

                var x = [0,22,12,39];
                var arr = ['--------','اداری و منابع انسانی','مدیریت','روابط عمومی'];
                for(var e=0;e<4;e++){
                    $('#commentManagmentUnit').append($('<option>', {
                        value: x[e],
                        text: arr[e]
                    }));
                }

                $('#commentManagmentConsumerUnit').append($('<option>', {
                    value: 0,
                    text: '--------'
                }));

                var arr2 = ['','تسویه حساب'];
                var arr3 = ['--------','تسویه حساب'];
                for(var b=0;b<2;b++){
                    $('#commentManagmentType').append($('<option>', {
                        value: arr2[b],
                        text: arr3[b]
                    }));
                }
                break;
            case '95':  // حقوقی
                $("#commentManagmentContractYN-div").css('display','');
                $("#commentManagmentContractNum-div").css('display','');
                $("#commentManagmentToward-div").css('display','');
                $("#commentManagmentRequestSource-div").css('display','');
                $("#commentManagmentRequestNumbers-div").css('display','');
                $("#commentManagmentCheckNumber-div").css('display','none');
                $("#commentManagmentCheckDate-div").css('display','none');
                $("#commentManagmentCheckCarcass-div").css('display','none');
                $("#commentManagmentCheckCarcassFile-div").css('display','none');
                $("#commentManagmentDeliveryDate-div").css('display','none');
                $("#commentManagmentConsumerUnit-div").css('display','');
                $("#commentManagmentTwoLayer-div").css('display','');
                $('#commentManagmentTwoLayer').append($('<option>', {
                    value: 0,
                    text: '--------'
                }));
                for(var e=0;e<rst.length;e++){
                    $('#commentManagmentTwoLayer').append($('<option>', {
                        value: rst[e]['RowID'],
                        text: rst[e]['layerName']
                    }));
                }

                var x = [0,23,22,12];
                var arr = ['--------','مالی','اداری و منابع انسانی','مدیریت'];
                for(var e=0;e<4;e++){
                    $('#commentManagmentUnit').append($('<option>', {
                        value: x[e],
                        text: arr[e]
                    }));
                }

                var m = [0,37];
                var arr1 = ['--------','حقوقی'];
                for(var e=0;e<2;e++){
                    $('#commentManagmentConsumerUnit').append($('<option>', {
                        value: m[e],
                        text: arr1[e]
                    }));
                }

                var arr2 = ['','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','علی الحساب'];
                var arr3 = ['--------','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','علی الحساب'];
                for(var b=0;b<9;b++){
                    $('#commentManagmentType').append($('<option>', {
                        value: arr2[b],
                        text: arr3[b]
                    }));
                }
                break;
            case '167':  // پست
                $("#commentManagmentContractYN-div").css('display','');
                $("#commentManagmentContractNum-div").css('display','');
                $("#commentManagmentToward-div").css('display','');
                $("#commentManagmentRequestSource-div").css('display','');
                $("#commentManagmentRequestNumbers-div").css('display','');
                $("#commentManagmentCheckNumber-div").css('display','none');
                $("#commentManagmentCheckDate-div").css('display','none');
                $("#commentManagmentCheckCarcass-div").css('display','none');
                $("#commentManagmentCheckCarcassFile-div").css('display','none');
                $("#commentManagmentDeliveryDate-div").css('display','none');
                $("#commentManagmentConsumerUnit-div").css('display','');
                $("#commentManagmentTwoLayer-div").css('display','');
                $('#commentManagmentTwoLayer').append($('<option>', {
                    value: 0,
                    text: '--------'
                }));
                for(var e=0;e<rst.length;e++){
                    $('#commentManagmentTwoLayer').append($('<option>', {
                        value: rst[e]['RowID'],
                        text: rst[e]['layerName']
                    }));
                }

                var x = [0,20,22,24,12];
                var arr = ['--------','تدارکات','اداری و منابع انسانی','بازرگانی فروش','مدیریت'];
                for(var e=0;e<5;e++){
                    $('#commentManagmentUnit').append($('<option>', {
                        value: x[e],
                        text: arr[e]
                    }));
                }

                var arr1 = ['--------','ریخته گری','ماشین کاری','پرداخت کاری','آب کاری','پی وی دی','رنگ کاری','فورج و پرس کاری','بافت شیلنگ','مونتاژ','خط لوله','تزریق پلاستیک','مدیریت','تحقیق و توسعه','مهندسی','قالب سازی','نگهداری و تعمیرات','کنترل کیفیت','تضمین کیفیت','برنامه ریزی','تدارکات','فناوری اطلاعات','اداری و منابع انسانی','مالی','بازرگانی فروش','خدمات','انتظامات','انبار مواد مصرفی','انبار کالاهای در جریان','انبار مواد اولیه','انبار شهرک صنعتی توس'];
                for(var c=0;c<31;c++){
                    $('#commentManagmentConsumerUnit').append($('<option>', {
                        value: c,
                        text: arr1[c]
                    }));
                }

                var arr2 = ['','تسویه حساب'];
                var arr3 = ['--------','تسویه حساب'];
                for(var b=0;b<2;b++){
                    $('#commentManagmentType').append($('<option>', {
                        value: arr2[b],
                        text: arr3[b]
                    }));
                }
                break;
            case '233':  // فتوکپی
                $("#commentManagmentContractYN-div").css('display','');
                $("#commentManagmentContractNum-div").css('display','');
                $("#commentManagmentToward-div").css('display','');
                $("#commentManagmentRequestSource-div").css('display','');
                $("#commentManagmentRequestNumbers-div").css('display','');
                $("#commentManagmentCheckNumber-div").css('display','none');
                $("#commentManagmentCheckDate-div").css('display','none');
                $("#commentManagmentCheckCarcass-div").css('display','none');
                $("#commentManagmentCheckCarcassFile-div").css('display','none');
                $("#commentManagmentDeliveryDate-div").css('display','none');
                $("#commentManagmentConsumerUnit-div").css('display','none');
                $("#commentManagmentTwoLayer-div").css('display','none');

                var x = [0,22,24,12];
                var arr = ['--------','اداری و منابع انسانی','بازرگانی فروش','مدیریت'];
                for(var e=0;e<4;e++){
                    $('#commentManagmentUnit').append($('<option>', {
                        value: x[e],
                        text: arr[e]
                    }));
                }

                $('#commentManagmentConsumerUnit').append($('<option>', {
                    value: 0,
                    text: '--------'
                }));

                var arr2 = ['','تسویه حساب'];
                var arr3 = ['--------','تسویه حساب'];
                for(var b=0;b<2;b++){
                    $('#commentManagmentType').append($('<option>', {
                        value: arr2[b],
                        text: arr3[b]
                    }));
                }
                break;
            case '236':  // مواد اولیه - عمده
                $("#commentManagmentContractYN-div").css('display','');
                $("#commentManagmentContractNum-div").css('display','');
                $("#commentManagmentToward-div").css('display','');
                $("#commentManagmentRequestSource-div").css('display','');
                $("#commentManagmentRequestNumbers-div").css('display','');
                $("#commentManagmentCheckNumber-div").css('display','none');
                $("#commentManagmentCheckDate-div").css('display','none');
                $("#commentManagmentCheckCarcass-div").css('display','none');
                $("#commentManagmentCheckCarcassFile-div").css('display','none');
                $("#commentManagmentDeliveryDate-div").css('display','none');
                $("#commentManagmentConsumerUnit-div").css('display','');
                $("#commentManagmentTwoLayer-div").css('display','');
                $('#commentManagmentTwoLayer').append($('<option>', {
                    value: 0,
                    text: '--------'
                }));
                for(var e=0;e<rst.length;e++){
                    $('#commentManagmentTwoLayer').append($('<option>', {
                        value: rst[e]['RowID'],
                        text: rst[e]['layerName']
                    }));
                }

                var x = [0,23,20,12];
                var arr = ['--------','مالی','تدارکات','مدیریت'];
                for(var e=0;e<4;e++){
                    $('#commentManagmentUnit').append($('<option>', {
                        value: x[e],
                        text: arr[e]
                    }));
                }

                $('#commentManagmentConsumerUnit').append($('<option>', {
                    value: 0,
                    text: '--------'
                }));

                var arr2 = ['','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','علی الحساب','ثبت در حساب بستانکاری طرف مقابل'];
                var arr3 = ['--------','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','علی الحساب','ثبت در حساب بستانکاری طرف مقابل'];
                for(var b=0;b<10;b++){
                    $('#commentManagmentType').append($('<option>', {
                        value: arr2[b],
                        text: arr3[b]
                    }));
                }
                break;
            case '249':  // بسته بندی
                $("#commentManagmentContractYN-div").css('display','');
                $("#commentManagmentContractNum-div").css('display','');
                $("#commentManagmentToward-div").css('display','');
                $("#commentManagmentRequestSource-div").css('display','');
                $("#commentManagmentRequestNumbers-div").css('display','');
                $("#commentManagmentCheckNumber-div").css('display','none');
                $("#commentManagmentCheckDate-div").css('display','none');
                $("#commentManagmentCheckCarcass-div").css('display','none');
                $("#commentManagmentCheckCarcassFile-div").css('display','none');
                $("#commentManagmentDeliveryDate-div").css('display','none');
                $("#commentManagmentConsumerUnit-div").css('display','');
                $("#commentManagmentTwoLayer-div").css('display','');
                $('#commentManagmentTwoLayer').append($('<option>', {
                    value: 0,
                    text: '--------'
                }));
                for(var e=0;e<rst.length;e++){
                    $('#commentManagmentTwoLayer').append($('<option>', {
                        value: rst[e]['RowID'],
                        text: rst[e]['layerName']
                    }));
                }

                var x = [0,20,12];
                var arr = ['--------','تدارکات','مدیریت'];
                for(var e=0;e<3;e++){
                    $('#commentManagmentUnit').append($('<option>', {
                        value: x[e],
                        text: arr[e]
                    }));
                }

                var arr1 = ['--------','ریخته گری','ماشین کاری','پرداخت کاری','آب کاری','پی وی دی','رنگ کاری','فورج و پرس کاری','بافت شیلنگ','مونتاژ','خط لوله','تزریق پلاستیک','مدیریت','تحقیق و توسعه','مهندسی','قالب سازی','نگهداری و تعمیرات','کنترل کیفیت','تضمین کیفیت','برنامه ریزی','تدارکات','فناوری اطلاعات','اداری و منابع انسانی','مالی','بازرگانی فروش','خدمات','انتظامات','انبار مواد مصرفی','انبار کالاهای در جریان','انبار مواد اولیه','انبار شهرک صنعتی توس','وصول مطالبات','پشتیبانی','5s','گروهی (مطابق قسمت توضیحات)','رمز ارز'];
                for(var c=0;c<36;c++){
                    $('#commentManagmentConsumerUnit').append($('<option>', {
                        value: c,
                        text: arr1[c]
                    }));
                }

                var arr2 = ['','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','ثبت در حساب بستانکاری طرف مقابل'];
                var arr3 = ['--------','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','ثبت در حساب بستانکاری طرف مقابل'];
                for(var b=0;b<9;b++){
                    $('#commentManagmentType').append($('<option>', {
                        value: arr2[b],
                        text: arr3[b]
                    }));
                }
                break;
            case '267':  // وجوه قرض الحسنه
                $("#commentManagmentContractYN-div").css('display','');
                $("#commentManagmentContractNum-div").css('display','');
                $("#commentManagmentToward-div").css('display','');
                $("#commentManagmentRequestSource-div").css('display','');
                $("#commentManagmentRequestNumbers-div").css('display','');
                $("#commentManagmentCheckNumber-div").css('display','none');
                $("#commentManagmentCheckDate-div").css('display','none');
                $("#commentManagmentCheckCarcass-div").css('display','none');
                $("#commentManagmentCheckCarcassFile-div").css('display','none');
                $("#commentManagmentDeliveryDate-div").css('display','none');
                $("#commentManagmentConsumerUnit-div").css('display','none');
                $("#commentManagmentTwoLayer-div").css('display','none');

                var x = [0,12,23];
                var arr = ['--------','مدیریت','مالی'];
                for(var e=0;e<3;e++){
                    $('#commentManagmentUnit').append($('<option>', {
                        value: x[e],
                        text: arr[e]
                    }));
                }

                $('#commentManagmentConsumerUnit').append($('<option>', {
                    value: 0,
                    text: '--------'
                }));

                var arr2 = ['','تسویه حساب'];
                var arr3 = ['--------','تسویه حساب'];
                for(var b=0;b<2;b++){
                    $('#commentManagmentType').append($('<option>', {
                        value: arr2[b],
                        text: arr3[b]
                    }));
                }
                break;
            case '279':  // پاک سازی
                $("#commentManagmentContractYN-div").css('display','');
                $("#commentManagmentContractNum-div").css('display','');
                $("#commentManagmentToward-div").css('display','');
                $("#commentManagmentRequestSource-div").css('display','');
                $("#commentManagmentRequestNumbers-div").css('display','');
                $("#commentManagmentCheckNumber-div").css('display','none');
                $("#commentManagmentCheckDate-div").css('display','none');
                $("#commentManagmentCheckCarcass-div").css('display','none');
                $("#commentManagmentCheckCarcassFile-div").css('display','none');
                $("#commentManagmentDeliveryDate-div").css('display','none');
                $("#commentManagmentConsumerUnit-div").css('display','');
                $("#commentManagmentTwoLayer-div").css('display','');
                $('#commentManagmentTwoLayer').append($('<option>', {
                    value: 0,
                    text: '--------'
                }));
                for(var e=0;e<rst.length;e++){
                    $('#commentManagmentTwoLayer').append($('<option>', {
                        value: rst[e]['RowID'],
                        text: rst[e]['layerName']
                    }));
                }

                var x = [0,20,12];
                var arr = ['--------','تدارکات','مدیریت'];
                for(var e=0;e<3;e++){
                    $('#commentManagmentUnit').append($('<option>', {
                        value: x[e],
                        text: arr[e]
                    }));
                }

                var m = [0,25];
                var arr1 = ['--------','خدمات'];
                for(var e=0;e<2;e++){
                    $('#commentManagmentConsumerUnit').append($('<option>', {
                        value: m[e],
                        text: arr1[e]
                    }));
                }

                var arr2 = ['','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5'];
                var arr3 = ['--------','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5'];
                for(var b=0;b<8;b++){
                    $('#commentManagmentType').append($('<option>', {
                        value: arr2[b],
                        text: arr3[b]
                    }));
                }
                break;
            case '281':  // درخواست نرم افزاری جزئی
                $("#commentManagmentContractYN-div").css('display','');
                $("#commentManagmentContractNum-div").css('display','');
                $("#commentManagmentToward-div").css('display','');
                $("#commentManagmentRequestSource-div").css('display','');
                $("#commentManagmentRequestNumbers-div").css('display','');
                $("#commentManagmentCheckNumber-div").css('display','none');
                $("#commentManagmentCheckDate-div").css('display','none');
                $("#commentManagmentCheckCarcass-div").css('display','none');
                $("#commentManagmentCheckCarcassFile-div").css('display','none');
                $("#commentManagmentDeliveryDate-div").css('display','none');
                $("#commentManagmentConsumerUnit-div").css('display','none');
                $("#commentManagmentTwoLayer-div").css('display','');
                $('#commentManagmentTwoLayer').append($('<option>', {
                    value: 0,
                    text: '--------'
                }));
                for(var e=0;e<rst.length;e++){
                    $('#commentManagmentTwoLayer').append($('<option>', {
                        value: rst[e]['RowID'],
                        text: rst[e]['layerName']
                    }));
                }

                var x = [0,21,12];
                var arr = ['--------','فناوری اطلاعات','مدیریت'];
                for(var e=0;e<2;e++){
                    $('#commentManagmentUnit').append($('<option>', {
                        value: x[e],
                        text: arr[e]
                    }));
                }

                $('#commentManagmentConsumerUnit').append($('<option>', {
                    value: 0,
                    text: '--------'
                }));

                var arr2 = ['','تسویه حساب','پیش پرداخت'];
                var arr3 = ['--------','تسویه حساب','پیش پرداخت'];
                for(var b=0;b<2;b++){
                    $('#commentManagmentType').append($('<option>', {
                        value: arr2[b],
                        text: arr3[b]
                    }));
                }
                break;
                		//*************************************************
            ////***********************************************
			case '330':  // ERP
            $("#commentManagmentContractYN-div").css('display','');
            $("#commentManagmentContractNum-div").css('display','');
            $("#commentManagmentToward-div").css('display','');
            $("#commentManagmentRequestSource-div").css('display','');
            $("#commentManagmentRequestNumbers-div").css('display','');
            $("#commentManagmentCheckNumber-div").css('display','none');
            $("#commentManagmentCheckDate-div").css('display','none');
            $("#commentManagmentCheckCarcass-div").css('display','none');
            $("#commentManagmentCheckCarcassFile-div").css('display','none');
            $("#commentManagmentDeliveryDate-div").css('display','none');
            $("#commentManagmentConsumerUnit-div").css('display','');
            $("#commentManagmentTwoLayer-div").css('display','');
            $('#commentManagmentTwoLayer').append($('<option>', {
                value: 0,
                text: '--------'
            }));
            for(var e=0;e<rst.length;e++){
                $('#commentManagmentTwoLayer').append($('<option>', {
                    value: rst[e]['RowID'],
                    text: rst[e]['layerName']
                }));
            }

            var x = [0,20,22,24,31,23,39,40,21,12];
            var arr = ['--------','تدارکات','اداری و منابع انسانی','بازرگانی فروش','وصول مطالبات','مالی','روابط عمومی','امور عمرانی','فناوری اطلاعات','مدیریت'];
            for(var e=0;e<10;e++){
           
                $('#commentManagmentUnit').append($('<option>', {
                    value: x[e],
                    text: arr[e]
                }));
            }

            var arr1 = ['--------','فناوری اطلاعات','ریخته گری','ماشین کاری','پرداخت کاری','آب کاری','پی وی دی','رنگ کاری','فورج و پرس کاری','بافت شیلنگ','مونتاژ','خط لوله','تزریق پلاستیک'];
            for(var c=0;c<13;c++){
                $('#commentManagmentConsumerUnit').append($('<option>', {
                    value: c,
                    text: arr1[c]
                }));
            }

            var arr2 = ['','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','علی الحساب','ثبت در حساب بستانکاری طرف مقابل'];
            var arr3 = ['--------','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','علی الحساب','ثبت در حساب بستانکاری طرف مقابل'];
            for(var b=0;b<10;b++){
                $('#commentManagmentType').append($('<option>', {
                    value: arr2[b],
                    text: arr3[b]
                }));
            }
            break;
			////***********************************************
			case '342':  //----------------------------------------------دارایی های نامشهود******************
            $("#commentManagmentContractYN-div").css('display','');
            $("#commentManagmentContractNum-div").css('display','');
            $("#commentManagmentToward-div").css('display','');
            $("#commentManagmentRequestSource-div").css('display','');
            $("#commentManagmentRequestNumbers-div").css('display','');
            $("#commentManagmentCheckNumber-div").css('display','none');
            $("#commentManagmentCheckDate-div").css('display','none');
            $("#commentManagmentCheckCarcass-div").css('display','none');
            $("#commentManagmentCheckCarcassFile-div").css('display','none');
            $("#commentManagmentDeliveryDate-div").css('display','none');
            $("#commentManagmentConsumerUnit-div").css('display','');
            $("#commentManagmentTwoLayer-div").css('display','');
            $('#commentManagmentTwoLayer').append($('<option>', {
                value: 0,
                text: '--------'
            }));
            for(var e=0;e<res.length;e++){
                $('#commentManagmentTwoLayer').append($('<option>', {
                    value: res[e]['RowID'],
                    text: res[e]['layerName']
                }));
            }

            var x = [0,20,22,24,31,23,39,40,21,12];
            var arr = ['--------','تدارکات','اداری و منابع انسانی','بازرگانی فروش','وصول مطالبات','مالی','روابط عمومی','امور عمرانی','فناوری اطلاعات','مدیریت'];
            for(var e=0;e<10;e++){
           
                $('#commentManagmentUnit').append($('<option>', {
                    value: x[e],
                    text: arr[e]
                }));
            }

            var arr1 = ['--------','فناوری اطلاعات','ریخته گری','ماشین کاری','پرداخت کاری','آب کاری','پی وی دی','رنگ کاری','فورج و پرس کاری','بافت شیلنگ','مونتاژ','خط لوله','تزریق پلاستیک'];
            for(var c=0;c<13;c++){
                $('#commentManagmentConsumerUnit').append($('<option>', {
                    value: c,
                    text: arr1[c]
                }));
            }

            var arr2 = ['','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','علی الحساب','ثبت در حساب بستانکاری طرف مقابل'];
            var arr3 = ['--------','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','علی الحساب','ثبت در حساب بستانکاری طرف مقابل'];
            for(var b=0;b<10;b++){
                $('#commentManagmentType').append($('<option>', {
                    value: arr2[b],
                    text: arr3[b]
                }));
            }
            break;
			////***********************************************   دارایی های نا مشهود
				////***********************************************
			//----------------------------------------------------------------------------------------------------------------------------------------- حق عضویت 
            case '349':  // حق عضویت
            $("#commentManagmentContractYN-div").css('display','');
            $("#commentManagmentContractNum-div").css('display','');
            $("#commentManagmentToward-div").css('display','');
            $("#commentManagmentRequestSource-div").css('display','');
            $("#commentManagmentRequestNumbers-div").css('display','');
            $("#commentManagmentCheckNumber-div").css('display','none');
            $("#commentManagmentCheckDate-div").css('display','none');
            $("#commentManagmentCheckCarcass-div").css('display','none');
            $("#commentManagmentCheckCarcassFile-div").css('display','none');
            $("#commentManagmentDeliveryDate-div").css('display','none');
            $("#commentManagmentConsumerUnit-div").css('display','');
            $("#commentManagmentTwoLayer-div").css('display','');
            $('#commentManagmentTwoLayer').append($('<option>', {
                value: 0,
                text: '--------'
            }));
         
            for(var e=0;e<res.length;e++){
                $('#commentManagmentTwoLayer').append($('<option>', {
                    value: res[e]['RowID'],
                    text: res[e]['layerName']
                }));
            }
			$("#commentManagmentTwoLayer").show();
            var x = [0,23,12];
            var arr = ['--------','مالی','مدیریت'];
            for(var e=0;e<3;e++){
                $('#commentManagmentUnit').append($('<option>', {
                    value: x[e],
                    text: arr[e]
                }));
            }
			var arr1 = ['--------','ریخته گری','ماشین کاری','پرداخت کاری','آب کاری','پی وی دی','رنگ کاری','فورج و پرس کاری','بافت شیلنگ','مونتاژ','خط لوله','تزریق پلاستیک','مدیریت','تحقیق و توسعه','مهندسی','قالب سازی','نگهداری و تعمیرات','کنترل کیفیت','تضمین کیفیت','برنامه ریزی','تدارکات','فناوری اطلاعات','اداری و منابع انسانی','مالی','بازرگانی فروش','خدمات','انتظامات','انبار مواد مصرفی','انبار کالاهای در جریان','انبار مواد اولیه','انبار شهرک صنعتی توس','وصول مطالبات','پشتیبانی','5s','گروهی (مطابق قسمت توضیحات)'];
            //var arr1 = ['--------','فناوری اطلاعات','ریخته گری','ماشین کاری','پرداخت کاری','آب کاری','پی وی دی','رنگ کاری','فورج و پرس کاری','بافت شیلنگ','مونتاژ','خط لوله','تزریق پلاستیک'];
            for(var c=0;c<32;c++){
                $('#commentManagmentConsumerUnit').append($('<option>', {
                    value: c,
                    text: arr1[c]
                }));
            }

            var arr2 = ['','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','علی الحساب','ثبت در حساب بستانکاری طرف مقابل'];
            var arr3 = ['--------','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','علی الحساب','ثبت در حساب بستانکاری طرف مقابل'];
            for(var b=0;b<10;b++){
                $('#commentManagmentType').append($('<option>', {
                    value: arr2[b],
                    text: arr3[b]
                }));
            }
            break;
			//----------------------------------------------------------------------------------------------------------------------------حق عضویت ------------------------
			//----------------------------------------------------------------------------------------------------------------------------امورانبارها------------------------

            case '353':  // امورانبارها
            $("#commentManagmentContractYN-div").css('display','');
            $("#commentManagmentContractNum-div").css('display','');
            $("#commentManagmentToward-div").css('display','');
            $("#commentManagmentRequestSource-div").css('display','');
            $("#commentManagmentRequestNumbers-div").css('display','');
            $("#commentManagmentCheckNumber-div").css('display','none');
            $("#commentManagmentCheckDate-div").css('display','none');
            $("#commentManagmentCheckCarcass-div").css('display','none');
            $("#commentManagmentCheckCarcassFile-div").css('display','none');
            $("#commentManagmentDeliveryDate-div").css('display','none');
            $("#commentManagmentConsumerUnit-div").css('display','');
            $("#commentManagmentTwoLayer-div").css('display','');
            $('#commentManagmentTwoLayer').append($('<option>', {
                value: 0,
                text: '--------'
            }));
         
            for(var e=0;e<res.length;e++){
                $('#commentManagmentTwoLayer').append($('<option>', {
                    value: res[e]['RowID'],
                    text: res[e]['layerName']
                }));
            }
			$("#commentManagmentTwoLayer").show();
            var x = [0,23,12,27,28,29,30,40,31];	
            var arr = ['--------','مالی','مدیریت','انبار مواد مصرفی','انبار کالاهای در جریان','	انبار مواد اولیه','انبار شهرک صنعتی توس','امورعمرانی','وصول مطالبات'];
            for(var e=0;e<9;e++){
                $('#commentManagmentUnit').append($('<option>', {
                    value: x[e],
                    text: arr[e]
                }));
            }
			var arr1 = ['--------','ریخته گری','ماشین کاری','پرداخت کاری','آب کاری','پی وی دی','رنگ کاری','فورج و پرس کاری','بافت شیلنگ','مونتاژ','خط لوله','تزریق پلاستیک','مدیریت','تحقیق و توسعه','مهندسی','قالب سازی','نگهداری و تعمیرات','کنترل کیفیت','تضمین کیفیت','برنامه ریزی','تدارکات','فناوری اطلاعات','اداری و منابع انسانی','مالی','بازرگانی فروش','خدمات','انتظامات','انبار مواد مصرفی','انبار کالاهای در جریان','انبار مواد اولیه','انبار شهرک صنعتی توس','وصول مطالبات','پشتیبانی','5s','گروهی (مطابق قسمت توضیحات)'];
            //var arr1 = ['--------','فناوری اطلاعات','ریخته گری','ماشین کاری','پرداخت کاری','آب کاری','پی وی دی','رنگ کاری','فورج و پرس کاری','بافت شیلنگ','مونتاژ','خط لوله','تزریق پلاستیک'];
            for(var c=0;c<32;c++){
                $('#commentManagmentConsumerUnit').append($('<option>', {
                    value: c,
                    text: arr1[c]
                }));
            }

            var arr2 = ['','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','علی الحساب','ثبت در حساب بستانکاری طرف مقابل'];
            var arr3 = ['--------','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','علی الحساب','ثبت در حساب بستانکاری طرف مقابل'];
            for(var b=0;b<10;b++){
                $('#commentManagmentType').append($('<option>', {
                    value: arr2[b],
                    text: arr3[b]
                }));
            }
            break;
            //**------------------------------------------------ امورانبارها-------------------------------------------
            //**------------------------------------------------ صندوق قرض الحسنه -------------------------------------------
			case '351':  // صندوق قرض الحسنه
            $("#commentManagmentContractYN-div").css('display','');
            $("#commentManagmentContractNum-div").css('display','');
            $("#commentManagmentToward-div").css('display','');
            $("#commentManagmentRequestSource-div").css('display','');
            $("#commentManagmentRequestNumbers-div").css('display','');
            $("#commentManagmentCheckNumber-div").css('display','none');
            $("#commentManagmentCheckDate-div").css('display','none');
            $("#commentManagmentCheckCarcass-div").css('display','none');
            $("#commentManagmentCheckCarcassFile-div").css('display','none');
            $("#commentManagmentDeliveryDate-div").css('display','none');
            $("#commentManagmentConsumerUnit-div").css('display','');
            $("#commentManagmentTwoLayer-div").css('display','');
            $('#commentManagmentTwoLayer').append($('<option>', {
                value: 0,
                text: '--------'
            }));
            for(var e=0;e<res.length;e++){
                $('#commentManagmentTwoLayer').append($('<option>', {
                    value: res[e]['RowID'],
                    text: res[e]['layerName']
                }));
            }
			$("#commentManagmentTwoLayer").show();
            var x = [0,23,12,22];
            var arr = ['--------','مالی','مدیریت','اداری و منابع انسانی'];
            for(var e=0;e<4;e++){
                $('#commentManagmentUnit').append($('<option>', {
                    value: x[e],
                    text: arr[e]
                }));
            }
			var arr1 = ['--------','ریخته گری','ماشین کاری','پرداخت کاری','آب کاری','پی وی دی','رنگ کاری','فورج و پرس کاری','بافت شیلنگ','مونتاژ','خط لوله','تزریق پلاستیک','مدیریت','تحقیق و توسعه','مهندسی','قالب سازی','نگهداری و تعمیرات','کنترل کیفیت','تضمین کیفیت','برنامه ریزی','تدارکات','فناوری اطلاعات','اداری و منابع انسانی','مالی','بازرگانی فروش','خدمات','انتظامات','انبار مواد مصرفی','انبار کالاهای در جریان','انبار مواد اولیه','انبار شهرک صنعتی توس','وصول مطالبات','پشتیبانی','5s','گروهی (مطابق قسمت توضیحات)'];
            //var arr1 = ['--------','فناوری اطلاعات','ریخته گری','ماشین کاری','پرداخت کاری','آب کاری','پی وی دی','رنگ کاری','فورج و پرس کاری','بافت شیلنگ','مونتاژ','خط لوله','تزریق پلاستیک'];
            for(var c=0;c<32;c++){
                $('#commentManagmentConsumerUnit').append($('<option>', {
                    value: c,
                    text: arr1[c]
                }));
            }

            var arr2 = ['','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','علی الحساب','ثبت در حساب بستانکاری طرف مقابل'];
            var arr3 = ['--------','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','علی الحساب','ثبت در حساب بستانکاری طرف مقابل'];
            for(var b=0;b<10;b++){
                $('#commentManagmentType').append($('<option>', {
                    value: arr2[b],
                    text: arr3[b]
                }));
            }
            break;
			//**------------------------------------------------ حق عضویت--------------------------------
            
        case '336':  // املاک و مستغلات
            $("#commentManagmentContractYN-div").css('display','');
            $("#commentManagmentContractNum-div").css('display','');
            $("#commentManagmentToward-div").css('display','');
            $("#commentManagmentRequestSource-div").css('display','');
            $("#commentManagmentRequestNumbers-div").css('display','');
            $("#commentManagmentCheckNumber-div").css('display','none');
            $("#commentManagmentCheckDate-div").css('display','none');
            $("#commentManagmentCheckCarcass-div").css('display','none');
            $("#commentManagmentCheckCarcassFile-div").css('display','none');
            $("#commentManagmentDeliveryDate-div").css('display','none');
            $("#commentManagmentConsumerUnit-div").css('display','');
            $("#commentManagmentTwoLayer-div").show();
            $('#commentManagmentTwoLayer').append($('<option>', {
                value: 0,
                text: '--------'
            }));
            for(var e=0;e<rst.length;e++){
                $('#commentManagmentTwoLayer').append($('<option>', {
                    value: rst[e]['RowID'],
                    text: rst[e]['layerName']
                }));
            }

            var x = [0,20,22,24,31,23,39,40,21,12];
            var arr = ['--------','تدارکات','اداری و منابع انسانی','بازرگانی فروش','وصول مطالبات','مالی','روابط عمومی','امور عمرانی','فناوری اطلاعات','مدیریت'];
            for(var e=0;e<10;e++){
                $('#commentManagmentUnit').append($('<option>', {
                    value: x[e],
                    text: arr[e]
                }));
            }
			var arr1 = ['--------','ریخته گری','ماشین کاری','پرداخت کاری','آب کاری','پی وی دی','رنگ کاری','فورج و پرس کاری','بافت شیلنگ','مونتاژ','خط لوله','تزریق پلاستیک','مدیریت','تحقیق و توسعه','مهندسی','قالب سازی','نگهداری و تعمیرات','کنترل کیفیت','تضمین کیفیت','برنامه ریزی','تدارکات','فناوری اطلاعات','اداری و منابع انسانی','مالی','بازرگانی فروش','خدمات','انتظامات','انبار مواد مصرفی','انبار کالاهای در جریان','انبار مواد اولیه','انبار شهرک صنعتی توس','وصول مطالبات','پشتیبانی','5s','گروهی (مطابق قسمت توضیحات)'];
            //var arr1 = ['--------','فناوری اطلاعات','ریخته گری','ماشین کاری','پرداخت کاری','آب کاری','پی وی دی','رنگ کاری','فورج و پرس کاری','بافت شیلنگ','مونتاژ','خط لوله','تزریق پلاستیک'];
            for(var c=0;c<32;c++){
                $('#commentManagmentConsumerUnit').append($('<option>', {
                    value: c,
                    text: arr1[c]
                }));
            }

            var arr2 = ['','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','علی الحساب','ثبت در حساب بستانکاری طرف مقابل'];
            var arr3 = ['--------','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','علی الحساب','ثبت در حساب بستانکاری طرف مقابل'];
            for(var b=0;b<10;b++){
                $('#commentManagmentType').append($('<option>', {
                    value: arr2[b],
                    text: arr3[b]
                }));
            }
            break;
			////***********************************************
        }

        switch (res['layer2']) {
            case '13':
            case '14':
            case '318':
                $("#commentManagmentTotalAmount").attr("disabled","true");
                $("#commentManagmentAmount").attr("disabled","true");
                $("#commentManagmentCashSection").attr("disabled","true");
                $("#commentManagmentNonCashSection").attr("disabled","true");
                $("#commentManagmentPaymentMaturityCheck").attr("disabled","true");
                $("#commentManagmentThreeLayer-div").css('display', 'none');
                break;
            case '17':
            case '18':
            case '19':
            case '20':
            case '51':
            case '52':
            case '53':
            case '54':
            case '55':
            case '56':
            case '71':
            case '80':
            case '85':
            case '36':
            case '38':
            case '41':
            case '47':
            case '48':
            case '49':
            case '81':
            case '88':
            case '92':
            case '100':
            case '237':
            case '243':
            case '250':
            case '251':
            case '252':
            case '259':
                $("#commentManagmentTotalAmount").removeAttr("disabled");
                $("#commentManagmentAmount").removeAttr("disabled");
                $("#commentManagmentCashSection").removeAttr("disabled");
                $("#commentManagmentNonCashSection").removeAttr("disabled");
                $("#commentManagmentPaymentMaturityCheck").removeAttr("disabled");

                $("#commentManagmentThreeLayer-div").css('display', '');
                $('#commentManagmentThreeLayer').append($('<option>', {
                    value: 0,
                    text: '--------'
                }));
                for(var e=0;e<rst1.length;e++){
                    $('#commentManagmentThreeLayer').append($('<option>', {
                        value: rst1[e]['RowID'],
                        text: rst1[e]['layerName']
                    }));
                }
                break;
		
            default:
                $("#commentManagmentTotalAmount").removeAttr("disabled");
                $("#commentManagmentAmount").removeAttr("disabled");
                $("#commentManagmentCashSection").removeAttr("disabled");
                $("#commentManagmentNonCashSection").removeAttr("disabled");
                $("#commentManagmentPaymentMaturityCheck").removeAttr("disabled");
                $("#commentManagmentThreeLayer-div").css('display', 'none');
                break;
        }

        $("#commentManagmentTotalAmount-div").css('display','');  //مبلغ کل معامله
        $("#commentManagmentAmount-div").css('display','');  //مبلغ قابل پرداخت
        $("#commentManagmentOneLayer-div").css('display','');  //سرگروه
        $("#commentManagmentType-div").css('display','');  // نوع
        $("#commentManagmentUnit-div").css('display','');  // واحد
        $("#commentManagmentDesc-div").css('display','');  // توضیحات

        $("#manageCommentHiddenCid").val(cid);
        $("#commentManagmentOneLayer").val(res['layer1']);
        $("#commentManagmentType").val(res['type']);
        $("#commentManagmentUnit").val(res['Unit']);

        if (parseInt(res['layer1']) == 24){  // چک برگشتی
            $("#commentManagmentToward-div").css('display','none');
            $("#commentManagmentContractYN-div").css('display','none');
            $("#commentManagmentContractNum-div").css('display','none');
            $("#commentManagmentRequestSource-div").css('display','none');
            $("#commentManagmentRequestNumbers-div").css('display','none');
            $("#commentManagmentCheckNumber").val(res['checkNumber']);
            $("#commentManagmentCheckDate").val(res['checkDate']);
            if (parseInt(res['checkCarcass']) == 1){  //  لاشه چک تحویل داده شده
                $("#commentManagmentCheckCarcassFile-div").css('display','');
                $("#commentManagmentDeliveryDate-div").css('display','none');
                $("input[name=commentManagmentCheckCarcass][value="+res['checkCarcass']+"]").prop('checked',true);  // لاشه چک
                $("#commentManagmentDeliveryDate").val('');
            }else if(parseInt(res['checkCarcass']) == 2){  // لاشه چک تحویل داده نشده
                $("#commentManagmentCheckCarcassFile-div").css('display','none');
                $("#commentManagmentDeliveryDate-div").css('display','');
                $("input[name=commentManagmentCheckCarcass][value="+res['checkCarcass']+"]").prop('checked',true);  // لاشه چک
                $("#commentManagmentDeliveryDate").val(res['checkDeliveryDate']);
            }
        }else {
            $("#commentManagmentToward-div").css('display','');
            $("#commentManagmentContractYN-div").css('display','');
            $("#commentManagmentContractNum-div").css('display','');
            $("#commentManagmentRequestSource-div").css('display','');
            $("#commentManagmentRequestNumbers-div").css('display','');
            $("#commentManagmentCheckNumber").val('');
            $("#commentManagmentCheckDate").val('');
            $("#commentManagmentCheckCarcassFile").val('');
            $("#commentManagmentDeliveryDate").val('');
        }

        if (parseInt(res['layer1']) == 25) {  // پرسنلی بود
            $("#commentManagmentRequestSource-div").css('display','none');
            $("#commentManagmentRequestNumbers-div").css('display','none');
        }else {
            $("#commentManagmentRequestSource-div").css('display','');
            $("#commentManagmentRequestNumbers-div").css('display','');
        }

        if (parseInt(res['layer1']) == 267){  // وجوه قرض الحسنه
            $("#commentManagmentClearingGoodLoan-div").css('display','');
            $("#commentManagmentClearingGoodLoan").val(res['goodLoan']);
        }else {
            $("#commentManagmentClearingGoodLoan-div").css('display','none');
            $("#commentManagmentClearingGoodLoan").val('');
        }

        $("#commentManagmentToward").val(res['Toward']);
        $("#commentManagmentTotalAmount").val(res['totalAmount']);
        $("#commentManagmentAmount").val(res['Amount']);
        $("#commentManagmentDesc").val(res['desc']);

        if(!parseInt((res['contractNumber'].trim()).length)){  //اگر شماره قرارداد خالی بود
            $("#commentManagmentContractYN").val(0);
            $("#commentManagmentContractNum").val('');
        }else{
            $("#commentManagmentContractYN").val(1);
            $("#commentManagmentContractNum").val(res['contractNumber']);
        }

        if (jQuery.inArray(res['layer1'], subLayers) !== -1){  // دارای زیرگروه
            $("#commentManagmentTwoLayer-div").css('display','');
            $("#commentManagmentTwoLayer").val(res['layer2']);
            if (parseInt(res['layer1']) == 4 && parseInt(res['layer2']) == 23){
                $("#commentManagmentClearingFund-div").css('display','');
                $("#commentManagmentClearingFund").val(res['clearingFundDate']);
            }else {
                $("#commentManagmentClearingFund-div").css('display','none');
                $("#commentManagmentClearingFund").val('');
            }
        }else {
            $("#commentManagmentTwoLayer-div").css('display','none');
            $("#commentManagmentTwoLayer").val(0);
            $("#commentManagmentClearingFund-div").css('display','none');
            $("#commentManagmentClearingFund").val('');
        }

        if (jQuery.inArray(res['layer2'], subsidiaryLayers) !== -1){  // دارای زیرگروه فرعی
            $("#commentManagmentThreeLayer-div").css('display','');
            $("#commentManagmentThreeLayer").val(res['layer3']);
        }else {
            $("#commentManagmentThreeLayer-div").css('display','none');
            $("#commentManagmentThreeLayer").val(0);
        }

        if (jQuery.inArray(res['layer1'], consumer) !== -1){  // واحد مصرف کننده دارد
            if (parseInt(res['layer2']) == 13 || parseInt(res['layer2']) == 14){
                $("#commentManagmentConsumerUnit-div").css('display','none');
                $("#commentManagmentConsumerUnit").val(0);
            }else {
                $("#commentManagmentConsumerUnit-div").css('display','');
                $("#commentManagmentConsumerUnit").val(res['consumerUnit']);
            }
        }else {
            $("#commentManagmentConsumerUnit-div").css('display','none');
            $("#commentManagmentConsumerUnit").val(0);
        }

        if (parseInt(res['sendType']) == 2 || (parseInt(res['sendType']) == 3 && parseInt(res['sabtDarHesabType']) == 1)){  // سهامی بود یا ثبت در حساب سهامی بود
            $("input[name=commentManagmentPayType][value="+0+"]").prop('checked',true);
            $("input[name='commentManagmentCashCheck']").prop('checked',false);
            $("#commentManagmentCashCheck-div").css('display','none');

            if (res['type'] == 'پرداخت قبض' || res['type'] == 'پرداخت جریمه'){
                $("#commentManagmentNonCashSection-div").css('display','none');
                $("#commentManagmentPaymentMaturityCheck-div").css('display','none');
                $("#commentManagmentCashSection-div").css('display','none');
                $("#commentManagmentPaymentMaturityCash-div").css('display','');
                $("#commentManagmentBillingID-div").css('display','');
                $("#commentManagmentPaymentID-div").css('display','');
                $("#commentManagmentFor-div").css('display','none');
                $("#commentManagmentCode-div").css('display','none');
                $("#commentManagmentAccNum-div").css('display','none');
                $("#commentManagmentCardNumber-div").css('display','none');

                $("#commentManagmentNonCashSection").val('');
                $("#commentManagmentPaymentMaturityCheck").val('');
                $("#commentManagmentCashSection").val(res['Amount']);
                $("#commentManagmentPaymentMaturityCash").val(res['paymentMaturityCash']);
                $("#commentManagmentBillingID").val(res['BillingID']);
                $("#commentManagmentPaymentID").val(res['PaymentID']);
                $("#commentManagmentFor").val('');
                $("#commentManagmentCode").val('');
                $("#commentManagmentAccNum").val(-1);
                $("#commentManagmentCardNumber").val('');
                $("#manageCommentHiddenBillPay").val(1);
            }else if (res['type'] == 'ثبت در حساب بستانکاری طرف مقابل'){
                $("#commentManagmentNonCashSection-div").css('display','none');
                $("#commentManagmentPaymentMaturityCheck-div").css('display','none');
                $("#commentManagmentCashSection-div").css('display','none');
                $("#commentManagmentPaymentMaturityCash-div").css('display','none');
                $("#commentManagmentBillingID-div").css('display','none');
                $("#commentManagmentPaymentID-div").css('display','none');
                $("#commentManagmentFor-div").css('display','');
                $("#commentManagmentCode-div").css('display','');
                $("#commentManagmentAccNum-div").css('display','none');
                $("#commentManagmentCardNumber-div").css('display','none');

                $("#commentManagmentNonCashSection").val('');
                $("#commentManagmentPaymentMaturityCheck").val('');
                $("#commentManagmentCashSection").val('');
                $("#commentManagmentPaymentMaturityCash").val('');
                $("#commentManagmentBillingID").val('');
                $("#commentManagmentPaymentID").val('');
                $("#commentManagmentFor").val(res['accName']);
                $("#commentManagmentCode").val(res['codeTafzili']);
                $("#commentManagmentAccNum").val(-1);
                $("#commentManagmentCardNumber").val('');
                $("#manageCommentHiddenBillPay").val(2);
            }else {
                $("#commentManagmentNonCashSection-div").css('display','');
                $("#commentManagmentPaymentMaturityCheck-div").css('display','');
                $("#commentManagmentCashSection-div").css('display','');
                $("#commentManagmentPaymentMaturityCash-div").css('display','');
                $("#commentManagmentBillingID-div").css('display','none');
                $("#commentManagmentPaymentID-div").css('display','none');
                $("#commentManagmentFor-div").css('display','');
                $("#commentManagmentCode-div").css('display','');
                $("#commentManagmentAccNum-div").css('display','');
                $("#commentManagmentCardNumber-div").css('display','');

                $("#commentManagmentNonCashSection").val(res['NonCashSection']);
                $("#commentManagmentPaymentMaturityCheck").val(res['paymentMaturityCheck']);
                $("#commentManagmentCashSection").val(res['CashSection']);
                $("#commentManagmentPaymentMaturityCash").val(res['paymentMaturityCash']);
                $("#commentManagmentBillingID").val('');
                $("#commentManagmentPaymentID").val('');
                $("#commentManagmentFor").val(res['accName']);
                $("#commentManagmentCode").val(res['codeTafzili']);
                $('#commentManagmentAccNum').children('option:not(:first)').remove();
                var data3 = Main.getAccountNumList(res['cFor']);
               
                for (var b=0;b<data3[0].length;b++) {
                    $('#commentManagmentAccNum').append($('<option>',
                        {
                            value: data3[1]+','+b,
                            text : data3[0][b]+"("+data3[2][b]+")"
                        }));
                }
                $("#commentManagmentAccNum").val(res['cFor']);
                $("#commentManagmentCardNumber").val(res['cardNumber']);
                $("#manageCommentHiddenBillPay").val(0);
            }
        }else if (parseInt(res['sendType']) == 0 || (parseInt(res['sendType']) == 3 && parseInt(res['sabtDarHesabType']) == 0)){  // فورج نقدی یا ثبت در حساب فورج بود
            $("input[name=commentManagmentPayType][value="+1+"]").prop('checked',true);
            $("input[name=commentManagmentCashCheck][value="+0+"]").prop('checked',true);
            $("#commentManagmentCashCheck-div").css('display','');

            if (res['type'] == 'پرداخت قبض' || res['type'] == 'پرداخت جریمه'){
                $("#commentManagmentNonCashSection-div").css('display','none');
                $("#commentManagmentPaymentMaturityCheck-div").css('display','none');
                $("#commentManagmentCashSection-div").css('display','none');
                $("#commentManagmentPaymentMaturityCash-div").css('display','');
                $("#commentManagmentBillingID-div").css('display','');
                $("#commentManagmentPaymentID-div").css('display','');
                $("#commentManagmentFor-div").css('display','none');
                $("#commentManagmentCode-div").css('display','none');
                $("#commentManagmentAccNum-div").css('display','none');
                $("#commentManagmentCardNumber-div").css('display','none');

                $("#commentManagmentNonCashSection").val('');
                $("#commentManagmentPaymentMaturityCheck").val('');
                $("#commentManagmentCashSection").val(res['Amount']);
                $("#commentManagmentPaymentMaturityCash").val(res['paymentMaturityCash']);
                $("#commentManagmentBillingID").val(res['BillingID']);
                $("#commentManagmentPaymentID").val(res['PaymentID']);
                $("#commentManagmentFor").val('');
                $("#commentManagmentCode").val('');
                $("#commentManagmentAccNum").val(-1);
                $("#commentManagmentCardNumber").val('');
                $("#manageCommentHiddenBillPay").val(1);
            }if (res['type'] == 'ثبت در حساب بستانکاری طرف مقابل'){
                $("#commentManagmentNonCashSection-div").css('display','none');
                $("#commentManagmentPaymentMaturityCheck-div").css('display','none');
                $("#commentManagmentCashSection-div").css('display','none');
                $("#commentManagmentPaymentMaturityCash-div").css('display','none');
                $("#commentManagmentBillingID-div").css('display','none');
                $("#commentManagmentPaymentID-div").css('display','none');
                $("#commentManagmentFor-div").css('display','');
                $("#commentManagmentCode-div").css('display','');
                $("#commentManagmentAccNum-div").css('display','none');
                $("#commentManagmentCardNumber-div").css('display','none');

                $("#commentManagmentNonCashSection").val('');
                $("#commentManagmentPaymentMaturityCheck").val('');
                $("#commentManagmentCashSection").val('');
                $("#commentManagmentPaymentMaturityCash").val('');
                $("#commentManagmentBillingID").val('');
                $("#commentManagmentPaymentID").val('');
                $("#commentManagmentFor").val(res['accName']);
                $("#commentManagmentCode").val(res['codeTafzili']);
                $("#commentManagmentAccNum").val(-1);
                $("#commentManagmentCardNumber").val('');
                $("#manageCommentHiddenBillPay").val(2);
            }else {
                $("#commentManagmentNonCashSection-div").css('display','none');
                $("#commentManagmentPaymentMaturityCheck-div").css('display','none');
                $("#commentManagmentCashSection-div").css('display','none');
                $("#commentManagmentPaymentMaturityCash-div").css('display','');
                $("#commentManagmentBillingID-div").css('display','none');
                $("#commentManagmentPaymentID-div").css('display','none');
                $("#commentManagmentFor-div").css('display','');
                $("#commentManagmentCode-div").css('display','');
                $("#commentManagmentAccNum-div").css('display','');
                $("#commentManagmentCardNumber-div").css('display','');

                $("#commentManagmentNonCashSection").val('');
                $("#commentManagmentPaymentMaturityCheck").val('');
                $("#commentManagmentCashSection").val(res['Amount']);
                $("#commentManagmentPaymentMaturityCash").val(res['paymentMaturityCash']);
                $("#commentManagmentBillingID").val('');
                $("#commentManagmentPaymentID").val('');
                $("#commentManagmentFor").val(res['accName']);
                $("#commentManagmentCode").val(res['codeTafzili']);
                $('#commentManagmentAccNum').children('option:not(:first)').remove();
                var data3 = Main.getAccountNumList(res['cFor']);
                for (var b=0;b<data3[0].length;b++) {
                    $('#commentManagmentAccNum').append($('<option>',
                        {
                            value: data3[1]+','+b,
                            text : data3[0][b]+"("+data3[2][b]+")"
                        }));
                }
                $("#commentManagmentAccNum").val(res['cFor']);
                $("#commentManagmentCardNumber").val(res['cardNumber']);
                $("#manageCommentHiddenBillPay").val(0);
            }
        }else {  // فورج چک بود
            $("input[name=commentManagmentPayType][value="+1+"]").prop('checked',true);
            $("input[name=commentManagmentCashCheck][value="+1+"]").prop('checked',true);
            $("#commentManagmentCashCheck-div").css('display','');
            $("#commentManagmentAccNum-div").css('display','none');
            $("#commentManagmentCardNumber-div").css('display','none');
            $("#commentManagmentAccNum").val(-1);
            $("#commentManagmentCardNumber").val('');

            if (res['type'] == 'پرداخت قبض' || res['type'] == 'پرداخت جریمه'){
                $("#commentManagmentNonCashSection-div").css('display','none');
                $("#commentManagmentPaymentMaturityCheck-div").css('display','none');
                $("#commentManagmentCashSection-div").css('display','none');
                $("#commentManagmentPaymentMaturityCash-div").css('display','');
                $("#commentManagmentBillingID-div").css('display','');
                $("#commentManagmentPaymentID-div").css('display','');
                $("#commentManagmentFor-div").css('display','none');
                $("#commentManagmentCode-div").css('display','none');

                $("#commentManagmentNonCashSection").val('');
                $("#commentManagmentPaymentMaturityCheck").val('');
                $("#commentManagmentCashSection").val(res['Amount']);
                $("#commentManagmentPaymentMaturityCash").val(res['paymentMaturityCash']);
                $("#commentManagmentBillingID").val(res['BillingID']);
                $("#commentManagmentPaymentID").val(res['PaymentID']);
                $("#commentManagmentFor").val('');
                $("#commentManagmentCode").val('');
                $("#manageCommentHiddenBillPay").val(1);
            }if (res['type'] == 'ثبت در حساب بستانکاری طرف مقابل'){
                $("#commentManagmentNonCashSection-div").css('display','none');
                $("#commentManagmentPaymentMaturityCheck-div").css('display','none');
                $("#commentManagmentCashSection-div").css('display','none');
                $("#commentManagmentPaymentMaturityCash-div").css('display','none');
                $("#commentManagmentBillingID-div").css('display','none');
                $("#commentManagmentPaymentID-div").css('display','none');
                $("#commentManagmentFor-div").css('display','');
                $("#commentManagmentCode-div").css('display','');

                $("#commentManagmentNonCashSection").val('');
                $("#commentManagmentPaymentMaturityCheck").val('');
                $("#commentManagmentCashSection").val('');
                $("#commentManagmentPaymentMaturityCash").val('');
                $("#commentManagmentBillingID").val('');
                $("#commentManagmentPaymentID").val('');
                $("#commentManagmentFor").val(res['accName']);
                $("#commentManagmentCode").val(res['codeTafzili']);
                $("#manageCommentHiddenBillPay").val(2);
            }else {
                $("#commentManagmentNonCashSection-div").css('display','none');
                $("#commentManagmentPaymentMaturityCheck-div").css('display','');
                $("#commentManagmentCashSection-div").css('display','none');
                $("#commentManagmentPaymentMaturityCash-div").css('display','none');
                $("#commentManagmentBillingID-div").css('display','none');
                $("#commentManagmentPaymentID-div").css('display','none');
                $("#commentManagmentFor-div").css('display','');
                $("#commentManagmentCode-div").css('display','');

                $("#commentManagmentNonCashSection").val(res['Amount']);
                $("#commentManagmentPaymentMaturityCheck").val(res['paymentMaturityCheck']);
                $("#commentManagmentCashSection").val('');
                $("#commentManagmentPaymentMaturityCash").val('');
                $("#commentManagmentBillingID").val('');
                $("#commentManagmentPaymentID").val('');
                $("#commentManagmentFor").val(res['accName']);
                $("#commentManagmentCode").val(res['codeTafzili']);
                $("#manageCommentHiddenBillPay").val(0);
            }
        }
        $("#commentManagmentRequestSource").val(res['RequestSource']);
        $("#commentManagmentRequestNumbers").val(res['RequestNumbers']);
        if(res['type'].replaceAll(/\s/g,'')=="تسویهحساب"){
            $("#commentCheckoutType-div select#commentCheckoutType option").each(function(){
                if($(this).val()==parseInt(res['checkOutType'])){
                    $(this).attr('selected','selected');
                }
            })
            $("#commentManagmentType-div").show();
        }
    }

    //اضافه شده برای مدیریت  اظهار نظر های  دارای بارنامه 
    set_check_box_toggle("is_related_project");
    refresh_select_options("commentManagmentOneLayer",'commentManagmentOneLayer',['related_to_barnameh'],1,res.layer1)
   
    $("#commentManagmentOneLayer").val(res.layer1);
    onchange_simulate_barnameh(res.Unit,res.layer1);
    var options='<option value="0">------</option>';
    var option_values=get_sublayer_two(res.layer1);
    for(k in option_values){
        options+=`<option value="${option_values[k]['RowID']}">${option_values[k]['layerName']}</option>`
    }
    $("#commentManagmentTwoLayer").find('option').remove().end().append(options)//get_sublayer_two(res.layer1);
    $("#commentManagmentTwoLayer").val(res.layer2);
    $("#is_related_project-div").show();

     $("input[name='is_related_project']").prop('checked',false);
        $("input[name='is_related_VAT']").prop('checked',false);
        $("#comment_project-div").hide();
    
        if(res['related_project']==0 || res['related_project']=='' || res['related_project']==null){
            $("#is_related_project-id-0").prop('checked',true)
        }
        else{
           
           $("#is_related_project-id-1").prop('checked',true)
            $("#comment_project-div").show();
            $("#comment_project").val(res['related_project']);
        }
//--------------------------------------------------------------
        if(res['related_vat']==1){
            $("#is_related_VAT-id-1").prop('checked',true)
        }
        else{
            $("#is_related_VAT-id-0").prop('checked',true)
            $("#is_related_VAT-div").show();
        }
//--------------------------------------------------------------
        if(res['is_drivers_fare']==0 || res['is_drivers_fare']=='' || res['is_drivers_fare']==null){
            $("#drivers_fare-id-0").prop('checked',true)
            $("#way_bill_type-div").hide();
            $("#way_bill_type").val(0);
        }
        else{
           
           $("#drivers_fare-id-1").prop('checked',true)
            $("#way_bill_type-div").show();
            $("#way_bill_type").val(res['is_drivers_fare_type']);
            $("#drivers_fare-div").show()
        }
        set_check_box_toggle("is_related_project");
        set_check_box_toggle("drivers_fare");
       // $("#commentManagmentOneLayer").val(res.layer1);
        $("#commentManagmentOneLayer").val(res['layer1']);
        select_data_picker($("#commentManagmentConsumerUnit"),1)
        if(pid>0){
            getUserInfoCartable($("#managePartnersCartableSender").val())
        }
}

function doEditCreateComment() {
    var formData = new FormData();
    var pMethod = $("input[name='commentManagmentPayType']:checked").val();  // سهامی یا فورج
    var pType = $("input[name='commentManagmentCashCheck']:checked").val();  // نقدی یا چک
    var cid = $("#manageCommentHiddenCid").val();
    var Unit = $("#commentManagmentUnit").val();
    var consumerUnit = $("#commentManagmentConsumerUnit").val();
    var Type = $("#commentManagmentType").val();
    var CheckNumber = $("#commentManagmentCheckNumber").val();
    var CheckDate = $("#commentManagmentCheckDate").val();
    var CheckCarcass = $("input[name='commentManagmentCheckCarcass']:checked").val();  // تحویل لاشه چک
    var DeliveryDate = $("#commentManagmentDeliveryDate").val();
    var ContractYN = $("#commentManagmentContractYN").val();
    var ContractNum = $("#commentManagmentContractNum").val();
    var Toward = $("#commentManagmentToward").val();
    var totalAmount = $("#commentManagmentTotalAmount").val();
    var Amount = $("#commentManagmentAmount").val();
    var cForv = $("#commentManagmentFor").val();
    var code = $("#commentManagmentCode").val();
    var AccNum = $("#commentManagmentAccNum").val();
    var CardNumber = $("#commentManagmentCardNumber").val();
    var CashSection = $("#commentManagmentCashSection").val();
    var MaturityCash = $("#commentManagmentPaymentMaturityCash").val();
    var NonCashSection = $("#commentManagmentNonCashSection").val();
    var MaturityCheck = $("#commentManagmentPaymentMaturityCheck").val();
    var RequestSource = $("#commentManagmentRequestSource").val();
    var RequestNumbers = $("#commentManagmentRequestNumbers").val();
    var Desc = $("#commentManagmentDesc").val();
    var billID = $("#commentManagmentBillingID").val();
    var payID = $("#commentManagmentPaymentID").val();
    var layer1 = $("#commentManagmentOneLayer").val();
    var layer2 = $("#commentManagmentTwoLayer").val();
    var layer3 = $("#commentManagmentThreeLayer").val();
    var cFund = $("#commentManagmentClearingFund").val();
    var goodLoan = $("#commentManagmentClearingGoodLoan").val();
    var flag = $("#manageCommentHiddenBillPay").val();
    var PropertyNumber=$("#PropertyNumber").val()?$("#PropertyNumber").val():0;
    var checkOutType="";
    var payCommentType=0;
    var is_related_project = $('input[name="is_related_project"]:checked').val();
    var related_project=0;
    if(is_related_project==1){
        related_project=$("#comment_project").val();
    }
    var is_related_vat = $('input[name="is_related_VAT"]:checked').val();

    //--------------------------------------------------------------------------------------
    var is_drivers_fare = $('input[name="drivers_fare"]:checked').val();
    var is_drivers_fare_type=0;
    if(is_drivers_fare==1){
        is_drivers_fare_type=$("#way_bill_type").val();
    }
   
    //----------------------------------------------------------------------------------------
    if(Type){
        payCommentType=Type.replaceAll(/\s/g,'');
    if(payCommentType){
        if(payCommentType.indexOf("تسویهحساب")>-1){
            checkOutType = $("#commentCheckoutType").val();
        }
        if(payCommentType.indexOf("پیشپرداخت")>-1){
            checkOutType = 10;//
        }
    }
}
    if (parseInt(layer1) == -1){
        notice1Sec("سرگروه مشخص نشده است !","yellow");
        return false;
    }else if (jQuery.inArray(layer1, subLayers) !== -1){
        if (parseInt(layer2) == 0){
            notice1Sec("زیرگروه مشخص نشده است !","yellow");
            return false;
        }else {
            if (parseInt(layer2) == 23){
                if (!parseInt((cFund.trim()).length)) {
                    notice1Sec("تاریخ تسویه تنخواه مشخص نشده است !", "yellow");
                    return false;
                }
            }
        }
    }

    if(is_related_project==1){
        if(related_project==0 || related_project=="" || typeof(related_project)=='undefined'){
            notice1Sec(" پروژه مشخص نشده است !", "yellow");
            return false;
        }
    }
    if(is_related_vat==1){
        if(is_related_vat==0 || is_related_vat=="" || typeof(is_related_vat)=='undefined'){
            notice1Sec(" وضعیت مالیات بر ارزش افزوده مشخص نشده است", "yellow");
            return false;
        }
    }

    if(is_drivers_fare==1){
        if(is_drivers_fare_type==0 || is_drivers_fare_type=="" || typeof(is_drivers_fare_type)=='undefined'){
            notice1Sec(" نوع بارنامه مشخص نشده  است", "yellow");
            return false;
        }
    }

   

    if (jQuery.inArray(layer2, subsidiaryLayers) !== -1){
        if (parseInt(layer3) == 0){
            notice1Sec("زیرگروه فرعی مشخص نشده است !","yellow");
            return false;
        }
    }

    if (layer2 == null){
        layer2 = 0;
    }
    if (layer3 == null){
        layer3 = 0;
    }
    if (parseInt(Unit) == 0){
        notice1Sec("واحد درخواست کننده مشخص نشده است !","yellow");
        return false;
    }
    if (jQuery.inArray(layer1, consumer) !== -1){
        if (parseInt(layer2) == 13 || parseInt(layer2) == 14 || parseInt(layer2) == 318){  // اگر تنخواه هزینه ای یا مصرفی  یا مواد اولیه بود
            consumerUnit = 0;
        }else {
            if(parseInt(consumerUnit) == 0){
                notice1Sec("واحد مصرف کننده مشخص نشده است !","yellow");
                return false;
            }
        }
    }else {
        consumerUnit = 0;
    }

    if (parseInt(layer1) == 24){  // چک برگشتی بود
/*        if (parseInt(pMethod) == 0){  //سهامی است
            notice1Sec("چک برگشتی فقط در روش پرداخت فورج قابل ثبت می باشد !", "yellow");
            return false;
        }*/
        if(!parseInt((CheckNumber.trim()).length)){
            notice1Sec("شماره چک مشخص نشده است !", "yellow");
            return false;
        }
        if(!parseInt((CheckDate.trim()).length)){
            notice1Sec("تاریخ چک مشخص نشده است !", "yellow");
            return false;
        }
        if(typeof CheckCarcass == "undefined"){
            notice1Sec("لاشه چک تحویل واحد مالی شده یا نشده مشخص نیست !", "yellow");
            return false;
        }else if (parseInt(CheckCarcass) == 1) {  // لاشه چک تحویل داده شده است
            if($('#commentManagmentCheckCarcassFile').val() != '' || $('#commentManagmentCheckCarcassFile')[0].files.length != 0){
                var fileSelect = document.getElementById('commentManagmentCheckCarcassFile');
                var files = fileSelect.files;
                if(!window.File && window.FileReader && window.FileList && window.Blob){ //if browser doesn't supports File API
                    notice1Sec("Your browser does not support new File API! Please upgrade.","yellow");
                    return false;
                }else {
                    var total_selected_files = files.length;
                    for (var x = 0; x < total_selected_files; x++) {
                        formData.append("files[]",files[x]);
                    }
                }
            }else {
                notice1Sec("رسید تحویل چک بارگذاری نشده است !", "yellow");
                return false;
            }
            DeliveryDate = '';
        }else {
            if(!parseInt((DeliveryDate.trim()).length)){
                notice1Sec("تعهد تاریخ تحویل لاشه چک به واحد مالی مشخص نشده است !", "yellow");
                return false;
            }
        }
        ContractNum = '';
        Toward = '';
        RequestSource = -1;
        RequestNumbers = '';
    }else if (parseInt(layer1) == 25) {  // پرسنلی بود
        if(!parseInt((Toward.trim()).length)){
            notice1Sec("بابت مشخص نشده است !","yellow");
            return false;
        }
        if (parseInt(ContractYN) == -1) {
            notice1Sec("قرارداد (دارد / ندارد) مشخص نشده است !", "yellow");
            return false;
        }else if(parseInt(ContractYN) == 0){
            ContractNum = '';
        }else if (parseInt(ContractYN) == 1 && !parseInt((ContractNum.trim()).length) ){
            notice1Sec("شماره قرارداد مشخص نشده است !","yellow");
            return false;
        }
        RequestSource = -1;
        RequestNumbers = '';
        CheckNumber = '';
        CheckDate = '';
        DeliveryDate = '';
        CheckCarcass = -1;
    }else {
        CheckNumber = '';
        CheckDate = '';
        DeliveryDate = '';
        CheckCarcass = -1;

        if (parseInt(ContractYN) == -1) {
            notice1Sec("قرارداد (دارد / ندارد) مشخص نشده است !", "yellow");
            return false;
        }else if(parseInt(ContractYN) == 0){
            ContractNum = '';
        }else if (parseInt(ContractYN) == 1 && !parseInt((ContractNum.trim()).length) ){
            notice1Sec("شماره قرارداد مشخص نشده است !","yellow");
            return false;
        }
        if(!parseInt((Toward.trim()).length)){
            notice1Sec("بابت مشخص نشده است !","yellow");
            return false;
        }
        if (!parseInt((RequestNumbers.trim()).length) && parseInt(RequestSource) == -1) {
            notice1Sec("منبع یا شماره درخواست مشخص نشده است !", "yellow");
            return false;
        }
        if (parseInt((RequestNumbers.trim()).length) > 0 && parseInt(RequestSource) > 0) {
            notice1Sec("یک مورد از منبع یا شماره درخواست باید ثبت شود !", "yellow");
            return false;
        }
    }

    if (parseInt(layer1) == 267){  // وجوه قرض الحسنه
        if (!parseInt((goodLoan.trim()).length)) {
            notice1Sec("تاریخ تسویه وجه قرض الحسنه مشخص نشده است !", "yellow");
            return false;
        }
    }
    if(Type == null)
    {
        notice1Sec("نوع مشخص نشده است !","yellow");
        return false;
    }
    else
    {
        if(!parseInt((Type.trim()).length)){
            notice1Sec("نوع مشخص نشده است !","yellow");
            return false;
        }
        if(Type.replaceAll(/\s/g,'')=="تسویهحساب"){
            if($("#commentCheckoutType").val()==0){
                notice1Sec("نوع تسویه حساب مشخص نشده است !","yellow");
            return false;
            }
        }
    }

    if(!parseInt((totalAmount.trim()).length)){
        notice1Sec("مبلغ مربوط به کل معامله مشخص نشده است !","yellow");
        return false;
    }

    if(!parseInt((Amount.trim()).length)){
        notice1Sec("مبلغ قابل پرداخت در این اظهارنظر مشخص نشده است !","yellow");
        return false;
    }

    if(typeof pMethod == "undefined"){
        notice1Sec("سهامی یا فورج مشخص نشده است !","yellow");
        return false;
    }else if (parseInt(pMethod) == 1){  // فورج باشد
        if(typeof pType == "undefined"){
            notice1Sec("نقدی یا چک مشخص نشده است !","yellow");
            return false;
        }else if (parseInt(pType) == 0){  // اگر نقدی بود
            if (parseInt(flag) == 1) {  // پرداخت قبض
                if(!parseInt((billID.trim()).length)){
                    notice1Sec("شناسه قبض مشخص نشده است !","yellow");
                    return false;
                }
                if(!parseInt((payID.trim()).length)){
                    notice1Sec("شناسه پرداخت مشخص نشده است !","yellow");
                    return false;
                }
                if (!parseInt((MaturityCash.trim()).length)) {
                    notice1Sec("تاریخ سررسید نقدی مشخص نشده است !", "yellow");
                    return false;
                }
                AccNum = -1;
                CashSection = Amount;
                NonCashSection = 0;
                MaturityCheck = '';
            }
            if (parseInt(flag) == 2) {  // ثبت در حساب بستانکاری طرف مقابل
                if (!parseInt((cForv.trim()).length)) {
                    notice1Sec("طرف حساب مشخص نشده است !", "yellow");
                    return false;
                }
                billID = '';
                payID = '';
                CashSection = 0;
                NonCashSection = 0;
                MaturityCash = '';
                MaturityCheck = '';
                AccNum = -1;
            }
            if (parseInt(flag) == 0) {  // سایر موارد
                if (!parseInt((MaturityCash.trim()).length)) {
                    notice1Sec("تاریخ سررسید نقدی مشخص نشده است !", "yellow");
                    return false;
                }
                if (!parseInt((cForv.trim()).length)) {
                    notice1Sec("طرف حساب مشخص نشده است !", "yellow");
                    return false;
                }
                if (parseInt(AccNum) == -1) {
                    notice1Sec("شماره حساب مشخص نشده است !", "yellow");
                    return false;
                }
                billID = '';
                payID = '';
                CashSection = Amount;
                NonCashSection = 0;
                MaturityCheck = '';
            }
        }else {  // چکی بود
            if (parseInt(layer1) == 24){
                notice1Sec("چک برگشتی را نمی توان بصورت فورج چک پرداخت کرد !", "yellow");
                return false;
            }
            if (parseInt(flag) == 1) {  // پرداخت قبض
                notice1Sec("قبض را نمی توان بصورت فورج چک پرداخت کرد !", "yellow");
                return false;
            }
            if (parseInt(flag) == 2) {  // ثبت در حساب بستانکاری طرف مقابل
                notice1Sec("ثبت در حساب بستانکاری را نمی توان بصورت فورج چک پرداخت کرد !", "yellow");
                return false;
            }
            if (parseInt(flag) == 0) {  // سایر موارد
                if(!parseInt((MaturityCheck.trim()).length)){
                    notice1Sec("تاریخ سررسید چک مشخص نشده است !","yellow");
                    return false;
                }
                if (!parseInt((cForv.trim()).length)) {
                    notice1Sec("طرف حساب مشخص نشده است !", "yellow");
                    return false;
                }
                billID = '';
                payID = '';
                CashSection = 0;
                NonCashSection = Amount;
                MaturityCash = '';
                AccNum = -1;
            }
        }
    }else {  //سهامی باشد
        if (parseInt(flag) == 1) {  // پرداخت قبض
            if(!parseInt((billID.trim()).length)){
                notice1Sec("شناسه قبض مشخص نشده است !","yellow");
                return false;
            }
            if(!parseInt((payID.trim()).length)){
                notice1Sec("شناسه پرداخت مشخص نشده است !","yellow");
                return false;
            }
            if (!parseInt((MaturityCash.trim()).length)) {
                notice1Sec("تاریخ سررسید نقدی مشخص نشده است !", "yellow");
                return false;
            }
            AccNum = -1;
            CashSection = Amount;
            NonCashSection = 0;
            MaturityCheck = '';
        }
        if (parseInt(flag) == 2) {  // ثبت در حساب بستانکاری طرف مقابل
            if (!parseInt((cForv.trim()).length)) {
                notice1Sec("طرف حساب مشخص نشده است !", "yellow");
                return false;
            }
            billID = '';
            payID = '';
            CashSection = 0;
            NonCashSection = 0;
            MaturityCash = '';
            MaturityCheck = '';
            AccNum = -1;
        }
        if (parseInt(flag) == 0) {  // سایر موارد
            if(parseInt($("#commentManagmentOneLayer").val())!=4)//اگر سرگروه تنخواه نباشد
            {
            if (!parseInt((CashSection.trim()).length) && !parseInt((NonCashSection.trim()).length)) {
                notice1Sec("بخش نقدی یا چک مشخص نشده است !", "yellow");
                return false;
            }
        }
            if ((parseInt((CashSection.trim()).length) > 0 && parseInt(CashSection) >= 0) && !parseInt((MaturityCash.trim()).length)) {
                notice1Sec("تاریخ سررسید نقدی مشخص نشده است !", "yellow");
                return false;
            }else if (!parseInt((CashSection.trim()).length)) {
                MaturityCash = '';
            }
            if ((parseInt((NonCashSection.trim()).length) > 0 && parseInt(NonCashSection) >= 0) && !parseInt((MaturityCheck.trim()).length)) {
                notice1Sec("تاریخ سررسید چک مشخص نشده است !", "yellow");
                return false;
            }else if (!parseInt((NonCashSection.trim()).length)){
                MaturityCheck = '';
            }
            if (!parseInt((cForv.trim()).length)) {
                notice1Sec("طرف حساب مشخص نشده است !", "yellow");
                return false;
            }
            if (parseInt(AccNum) == -1) {
                notice1Sec("شماره حساب مشخص نشده است !", "yellow");
                return false;
            }
            billID = '';
            payID = '';
        }
    }
    var get_related_property_number_values=[172, 174,176,178,180,182,184]
    var is_exist=get_related_property_number_values.indexOf(parseInt(layer3))
    //console.log(is_exist);
    if(layer1==43 && is_exist != -1){
        if(PropertyNumber==0 || PropertyNumber==null || PropertyNumber.trim==''){
            notice1Sec("     شماره اموال مشخص نشده است!", "yellow");
            return false;
        }
    }

    formData.append("action","doEditCreateComment");
    formData.append("cid",cid);
    formData.append("pMethod",pMethod);
    formData.append("pType",pType);
    formData.append("Unit",Unit);
    formData.append("consumerUnit",consumerUnit);
    formData.append("Type",Type);
    formData.append("Toward",Toward);
    formData.append("totalAmount",totalAmount);
    formData.append("Amount",Amount);
    formData.append("AccNum",AccNum);
    formData.append("CardNumber",CardNumber);
    formData.append("CashSection",CashSection);
    formData.append("MaturityCash",MaturityCash);
    formData.append("NonCashSection",NonCashSection);
    formData.append("MaturityCheck",MaturityCheck);
    formData.append("RequestSource",RequestSource);
    formData.append("RequestNumbers",RequestNumbers);
    formData.append("Desc",Desc);
    formData.append("billID",billID);
    formData.append("payID",payID);
    formData.append("layer1",layer1);
    formData.append("layer2",layer2);
    formData.append("layer3",layer3);
    formData.append("cFund",cFund);
    formData.append("cForv",cForv);
    formData.append("code",code);
    formData.append("ContractNum",ContractNum);
    formData.append("CheckNumber",CheckNumber);
    formData.append("CheckDate",CheckDate);
    formData.append("DeliveryDate",DeliveryDate);
    formData.append("CheckCarcass",CheckCarcass);
    formData.append("goodLoan",goodLoan);
    formData.append("checkOutType",checkOutType);
    formData.append("related_project",related_project);
    formData.append("related_vat",is_related_vat);
    formData.append("related_vat",is_related_vat);
    formData.append("is_drivers_fare_type",is_drivers_fare_type);
    formData.append("is_drivers_fare",is_drivers_fare);
    formData.append("PropertyNumber",PropertyNumber);

    var xhr = new XMLHttpRequest();
    xhr.open('POST', 'php/managemantproccess.php',true);
    xhr.onload = function () {
        if (xhr.status === 200) {
            var res = JSON.parse(xhr.responseText);
            if(res['res'] == "false"){
                notice1Sec(res['data'],'yellow');
            }else{
                notice1Sec(res['data'], "green");
                $('#commentManagmentModal').modal('hide');
                $('body').removeClass('modal-open');
                $('.modal-backdrop').remove();
                showPayCommentManageList();
                showPayCommentSendManageList();
            }
        }else{
            notice1Sec("خطایی رخ داده است !",'yellow');
        }
    };
    xhr.send(formData);
}

function attachFileToComment() {
    var ch = $('#commentManageBody-table').find('input');
    var cid = new Array();
    for(var c=0;c<ch.length;c++){
        if(ch[c].checked){
            cid[cid.length] = ch[c].attributes.rid.value;
        }
    }
    if(cid.length > 1){
        notice1Sec("فقط یک اظهارنظر باید انتخاب شده باشد !","red");
        return false;
    }
    if(cid.length==0){
        notice1Sec("هیچ اظهارنظری انتخاب نشده است !","red");
        return false;
    }
    cid = cid[0];
    $("#commentManagmentAddAttachmentID").val(cid);
    $("#commentManagmentAddAttachmentName").val('');
    $("#commentManagmentAddAttachment").val('');
    var res = Main.getAttachedCommentFile(cid);
    $("#commentAddAttachmentFile-body").html('');
    $("#commentAddAttachmentFile-body").html(res);
    $('#commentAddAttachmentFileModal').modal('show');
}

function doAttachFileToComment() {
    var cid = $('#commentManagmentAddAttachmentID').val();
    var info = $('#commentManagmentAddAttachmentName').val();
    var formData = new FormData();
    if($('#commentManagmentAddAttachment').val() != '' || $('#commentManagmentAddAttachment')[0].files.length != 0){
        var fileSelect = document.getElementById('commentManagmentAddAttachment');
        var files = fileSelect.files;
        if(!window.File && window.FileReader && window.FileList && window.Blob){ //if browser doesn't supports File API
            notice1Sec("Your browser does not support new File API! Please upgrade.","yellow");
            return false;
        }else {
            var total_selected_files = files.length;
            for (var x = 0; x < total_selected_files; x++) {
                formData.append("files[]",files[x]);
            }
        }
    }
    formData.append("action","doAttachFileToComment");
    formData.append("cid",cid);
    formData.append("info",info);

    var xhr = new XMLHttpRequest();
    xhr.open('POST', 'php/managemantproccess.php',true);
    xhr.onload = function () {
        if (xhr.status === 200) {
            var res = JSON.parse(xhr.responseText);
            if(res['res'] == "false"){
                notice1Sec(res['data'],'yellow');
            }else{
                notice1Sec('بارگذاری انجام شد.', "green");
                var rst = Main.getAttachedCommentFile(cid);
                $("#commentAddAttachmentFile-body").html('');
                $("#commentAddAttachmentFile-body").html(rst);
                $("#commentManagmentAddAttachmentName").val('');
                $("#commentManagmentAddAttachment").val('');
                showPayCommentManageList();
            }
        }else{
            notice1Sec("خطایی رخ داده است !",'yellow');
        }
    };
    xhr.send(formData);
}

function deleteAttachCommentFile(fid){
    var cid = $('#commentManagmentAddAttachmentID').val();
    var action = "deleteAttachCommentFile";
    var param = {action:action,fid:fid};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res, "green");
        var rst = Main.getAttachedCommentFile(cid);
        $("#commentAddAttachmentFile-body").html('');
        $("#commentAddAttachmentFile-body").html(rst);
        showPayCommentManageList();
    }
}

async function sendPayCommentPrimary(){
    var vat_flag=0;
    var ch = $('#commentManageBody-table').find('input');
    var cid = new Array();
    for(var c=0;c<ch.length;c++){
        if(ch[c].checked){
            cid[cid.length] = ch[c].attributes.rid.value;
        }
    }
    if(cid.length > 1){
        notice1Sec("فقط یک اظهارنظر باید انتخاب شده باشد !","red");
        return false;
    }
    if(cid.length==0){
        notice1Sec("هیچ اظهارنظری انتخاب نشده است !","red");
        return false;
    }
    cid = cid[0];

    var action="get_vat_pay_comment";
    var param={action:action,cid:cid}
    var res=ajaxHandler(param)
    //console.log(res);
    if(parseInt(res)==1){
        Swal.fire({
            text: "اظهارنظر دارای مالیات بر ارزش افزوده می باشد و به صورت خودکار به کارشناس ارجاع داده خواهد  قبل از ارجاع کلیه مستندات را پیوست نمایید  ادامه می دهید؟",
            title:"توجه",
            icon: "question",
            iconHtml: "؟",
            confirmButtonText: "بله",
            cancelButtonText: "خیر",
            showCancelButton: true,
            showCloseButton: true,
            customClass: {
                confirmButton: "btn btn-success swbtn",
                cancelButton: "btn btn-danger swbtn"
            },
            buttonsStyling: false
        //})
        }).then(async function(v){
          if(v.isConfirmed==true){
              await doSendPayComment(cid,1,receiver='44',desc="ارجاع خودکار اظهارنظرهای مالیات بر ارزش افزوده",0) 
          }
          else if (v.isDenied){
            vat_flag=1;
            return false;
          }
        });
    }
    else{
       sendPayComment(cid);
        $("input[name='commentManagmentConfirmedType']").prop('checked',false);
    }
    if(vat_flag==1){
        return false;
    }
   // }
}

async function select_receivers_id(cid,meta_data=""){

    var res = await ShowWorkflowComment(cid,1,meta_data);
    var data = res[1];
    $("#commentManagmentReceiver").find('option').remove();
    $("#commentManagmentReceiver").append('<option value="0">--------</option>');
    for(var e=0;e<data.length;e++){
        var color="#000"
        if(data[e]['unitID']==27){
            color="green"
        }
        $("#commentManagmentReceiver").append('<option style="color:'+color+'" value="'+data[e]['RowID']+'">'+data[e]['lname']+' '+data[e]['fname']+'</option>');
    }
    $("#commentManagmentReceiver").selectpicker('refresh');
    $("#commentManagmentReceiver").selectpicker('deselectAll');
    $("#commentWorkflowSend-body").html('');
    $("#commentWorkflowSend-body").html(res[0]);
    $("#commentManagmentHiddenCid").val(cid);
    $("#commentManagmentConfirmedDesc").val('');
    $("#commentManagmentPriorityLevel").val(0);
    $("#commentManagmentIsPaid").prop('checked', false);
    $('#sendCommentManagmentModal').modal('show');

 
}

async function select_receivers_id_related_barname(cid,meta_data){
    
    var action = "select_receivers_id_related_barname";
    //add_loading(action);
    var res = await ajaxHandler({action:action,pid:cid,meta_data,meta_data});
    var data = res[1];
    $("#commentManagmentReceiver").find('option').remove();
    $("#commentManagmentReceiver").append('<option value="0">--------</option>');
    for(var e=0;e<data.length;e++){
        var color="#000"
        if(data[e]['unitID']==27){
            color="green"
        }
        $("#commentManagmentReceiver").append('<option style="color:'+color+'" value="'+data[e]['RowID']+'">'+data[e]['lname']+' '+data[e]['fname']+'</option>');
    }
    $("#commentManagmentReceiver").selectpicker('refresh');
    $("#commentManagmentReceiver").selectpicker('deselectAll');
    $("#commentWorkflowSend-body").html('');
    $("#commentWorkflowSend-body").html(res[0]);
    $("#commentManagmentHiddenCid").val(cid);
    $("#commentManagmentConfirmedDesc").val('');
    $("#commentManagmentPriorityLevel").val(0);
    $("#commentManagmentIsPaid").prop('checked', false);
    $('#sendCommentManagmentModal').modal('show');
    //remove_loading(action);
}


// async function sendPayComment(cid) {
//     var related_barnameh= await get_related_to_barnameh_pay_comment(cid)?await get_related_to_barnameh_pay_comment(cid):0;
//     if(related_barnameh==1){
//        await select_receivers_id_related_barname(cid);
//       // await select_receivers_id(cid);
//         $("#sendCommentManagmentModal").modal('show');
//         $("input[name='commentManagmentConfirmedType']").change(function(){
//             $("#commentManagmentReceiver").val(0);
//             $("#commentManagmentReceiver").selectpicker('dselectAll');
//             $("#commentManagmentReceiver").selectpicker('refresh');
//             $("button[data-id='commentManagmentReceiver']").on('click',async function(related_barnameh){
//                 var meta_data="";
//                 var confirm= $("input[name='commentManagmentConfirmedType']:checked").val();
//                 if(typeof(confirm)=='undefined'){
//                     notice1Sec('وضعیت تایید یا عدم تایید را انتخاب نمایید','yellow');
//                     return false;
//                 }
//                 $("input[name='commentManagmentConfirmedType']:checked").prop('checked',true);
//                 if(confirm==1 && related_barnameh==1)
//                 {
//                     meta_data='is_drivers_fare_type';
     
//                 }
//                 await select_receivers_id_related_barname(cid,meta_data);
//             });
//         })
//     }
//     else{

//         select_receivers_id(cid);
//     }
   
//     $('.modal-dialog').draggable({
//         handle: ".modal-header"
//     });
  
// }

async function sendPayComment(cid) {
    sessionStorage.setItem('related_barnameh',0)
    sessionStorage.setItem('cid',0)
    var related_barnameh= await get_related_to_barnameh_pay_comment(cid);
    sessionStorage.setItem('related_barnameh',related_barnameh)
    sessionStorage.setItem('cid',cid)
    var D1=new Date();
    console.log('before_check_barnameh:'+D1.getMinutes()+":"+ D1.getSeconds()) // =>  30
   
    if(related_barnameh==1){

       await select_receivers_id_related_barname(cid);
       var D2=new Date();
       console.log('after_check_barnameh:'+D2.getMinutes()+":"+ D2.getSeconds());
        //await select_receivers_id(cid);
        $("#sendCommentManagmentModal").modal('show');
        $("input[name='commentManagmentConfirmedType']").change(function(){
           
            $("#commentManagmentReceiver").val(0);
            $("#commentManagmentReceiver").selectpicker('dselectAll');
            $("#commentManagmentReceiver").selectpicker('refresh');
            $("button[data-id='commentManagmentReceiver']").on('click',async function(e,related_barnameh){
                var meta_data="";
                var confirm= $("input[name='commentManagmentConfirmedType']:checked").val();
                if(typeof(confirm)=='undefined'){
                    notice1Sec('وضعیت تایید یا عدم تایید را انتخاب نمایید','yellow');
                    return false;
                }
                $("input[name='commentManagmentConfirmedType']:checked").prop('checked',true);
                if(confirm==1 &&  sessionStorage.getItem('related_barnameh')==1)
                {
                    var D3=new Date();
                    meta_data='is_drivers_fare_type';
                    console.log('after2_check_barnameh:'+D3.getMinutes()+":"+ D3.getSeconds());
                    await select_receivers_id_related_barname(sessionStorage.getItem('cid'),meta_data);
                    var D6=new Date();
                    console.log('after3_check_barnameh:'+D6.getMinutes()+":"+ D6.getSeconds());
                }
                else{
                    var D4=new Date();
                    console.log('end:'+D4.getMinutes()+":"+ D4.getSeconds());
                    select_receivers_id(sessionStorage.getItem('cid'));
                    var D7=new Date();
                    console.log('end:'+D7.getMinutes()+":"+ D7.getSeconds());
                }
            });
           
        });
    }
    else{

        select_receivers_id(cid);
        var D5=new Date();
        console.log('whitout:'+D5.getMinutes()+":"+ D5.getSeconds());
    }
   
    $('.modal-dialog').draggable({
        handle: ".modal-header"
    });
  
}

function get_related_to_barnameh_pay_comment(cid){
    var action="get_related_to_barnameh_pay_comment";
    var params={action:action,cid:cid}
    var res=ajaxHandler(params);
    if(res){
        return  res;
    }
}
async function doSendPayComment(cid="",confType="",receiver="",desc="",PriorityLevel="") {
    cid=cid?cid:$("#commentManagmentHiddenCid").val();
    confType=confType?confType:$("input[name='commentManagmentConfirmedType']:checked").val();
    receiver=receiver?receiver:$("#commentManagmentReceiver").val();
    desc=desc?desc:$("#commentManagmentConfirmedDesc").val();;
    PriorityLevel=PriorityLevel?PriorityLevel:$("#commentManagmentPriorityLevel").val();

   if(typeof(receiver)=="object"){
    receiver = await receiver.join(',');
   };
    
    //var desc = $("#commentManagmentConfirmedDesc").val();
    //var PriorityLevel = $("#commentManagmentPriorityLevel").val();

    if(typeof confType == "undefined"){
        notice1Sec("تایید یا عدم تایید مشخص نشده است !","yellow");
        return false;
    }
    if (!parseInt((receiver.trim()).length)){
        notice1Sec("گیرنده مشخص نشده است !","yellow");
        return false;
    }
    if (parseInt(confType) == 0){
        if (!parseInt((desc.trim()).length)) {
            notice1Sec("در صورت عدم تایید، توضیحات اجباری می باشد !", "yellow");
            return false;
        }
    }
    if ($('#commentManagmentIsPaid').is(':checked')) {
        var isPaid = 1;
    }else{
        isPaid = 0;
    }
    //console.log(1);
    setTimeout(async () => {
        await $("#doSendPayComment-btn").css('background','red');
    }, 1000);
   
   // console.log(2);
    var action = "doSendPayComment";
    var param = {action:action,cid:cid,confType:confType,receiver:receiver,desc:desc,PriorityLevel:PriorityLevel,isPaid:isPaid};
    var res =await  manageAjaxRequest(param);
    //console.log(3)
   await $("#doSendPayComment-btn").css('background','yellow')
   //console.log(4)
    if(res != false){
        notice1Sec(res, "green");
        $('#sendCommentManagmentModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        showPayCommentManageList();
    }
}

function saveSendPayComment() {
    var cid = $("#commentManagmentHiddenCid").val();
    var confType = $("input[name='commentManagmentConfirmedType']:checked").val();
    var receiver = $("#commentManagmentReceiver").val();
    receiver = receiver.join(',');
    var desc = $("#commentManagmentConfirmedDesc").val();

    if(typeof confType == "undefined"){
        notice1Sec("تایید یا عدم تایید مشخص نشده است !","yellow");
        return false;
    }
    if (!parseInt((receiver.trim()).length)){
        notice1Sec("گیرنده مشخص نشده است !","yellow");
        return false;
    }
    if (parseInt(confType) == 0){
        if (!parseInt((desc.trim()).length)) {
            notice1Sec("در صورت عدم تایید، توضیحات اجباری می باشد !", "yellow");
            return false;
        }
    }
    var action = "doSaveSendPayComment";
    var param = {action:action,cid:cid,confType:confType,receiver:receiver,desc:desc};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res, "green");
        var res = ShowWorkflowComment(cid,1);
        $("#commentWorkflowSend-body").html('');
        $("#commentWorkflowSend-body").html(res[0]);
    }
}

function  getUserInfoCartable(userid){
    var action = "getUserInfoCartable";
    var param = {   
                    action:action,
                    userid:userid
                };

    var res = manageAjaxRequest(param);
    $("#managePartnersCartable-body").html('');
    $("#transferPartnersCartable-btn").attr('disabled',true);
    if(res!=false){
    
        $("#managePartnersCartable-body").html(res);
        $("#transferPartnersCartable-btn").attr('disabled',false);
        create_data_table("ManagePartnersCartable_table");
    }
}

async function transferPartnersCartable(){
   
    var pid_array=[];
    var action="transferPartnersCartable";
    var flag=1;
    $('#ManagePartnersCartable_table').find("input[type=checkbox]").each(function(){
       
        if($(this).is(':checked')){
            var index=$(this).val();
            var array_handler={};
           
            var confirm_status_value=$(this).parents('tr').children().find('input[name="payment_confirm_status_'+index+'"]:checked').val()
            var send_cemment_desc_value=$(this).parents('tr').children().find('textarea#send_cemment_desc_'+index).val()
            console.log('send_cemment_desc_value');
            console.log(send_cemment_desc_value);
            if(!confirm_status_value){
               
               // custom_alerts('وضعیت تایید یا عدم تایید مشخص نشده است','w',0,'خطا');
                flag=-1;
                return false;
            }
            if(confirm_status_value==0 && String(send_cemment_desc_value).trim()==""){
               
               // custom_alerts('در صورت عدم تایید  ثبت توضیحات الزامی میباشد ','w',0,'خطا');
               // 'وضعیت تایید یا عدم تایید مشخص نشده است'
              flag=-2;
              return false;
            }
            array_handler={pid:$(this).val(),
                            confirm_status:confirm_status_value,
                            send_cemment_desc:send_cemment_desc_value}
                           
            pid_array.push(array_handler);
        }
    });
    if(flag==-1){
        notice1Sec('وضعیت تایید یا عدم تایید مشخص نشده است',"yellow");
        return false;
    }
    if(flag==-2){
        notice1Sec('در صورت عدم تایید  ثبت توضیحات الزامی میباشد ',"yellow");
        return false;
    }
    var sender=$("#managePartnersCartableSender").val();
    var receiver=$("#َmanagePartnersCartableSubstitute").val();
    if(!pid_array.length){
        notice1Sec("هیچ اظهارنظری انتخاب نشده است","yellow");
        return false;
    }
    if(typeof sender == "undefined" || sender == ""){
        notice1Sec("ارسال کننده اظهار نظر انتخاب نشده است","yellow");
        return false;
    }
    if(typeof receiver == "undefined" || receiver == ""){
        notice1Sec("دریافت کننده اظهار نظر انتخاب نشده است","yellow");
        return false;
    }
    if(receiver[0] ==  sender[0]){
        notice1Sec("گیرنده و فرستنده  با هم یکسان می باشند ","yellow");
        return false;
    }
    var param={pid_array:pid_array,action:action,sender:sender[0],receiver:receiver[0],}
 
    var res = manageAjaxRequest(param);
    if(res !=false){
        notice1Sec(res,"green");
        getUserInfoCartable(sender[0]);
    }
    else{
        notice1Sec(res,"yellow")
    }
}


function SelectAllRows(){
    $('#ManagePartnersCartable_table').find("input[type=checkbox]").each(function(){
        $(this).prop('checked',true)
    })

}
function unSelectAllRows(){
    $('#ManagePartnersCartable_table').find("input[type=checkbox]").each(function(){
        $(this).prop('checked',false)
    })
}

function deleteSelectedPayComment(){
    var pid_array=[];
    var action="deleteSelectedPayComment";
    $('#ManagePartnersCartable_table').find("input[type=checkbox]").each(function(){
        if($(this).is(':checked')){
            var index=$(this).val();
            pid_array.push(index);
        }
    });


    var params={action:action,pid_array:pid_array}

    Swal.fire({
        title: "",
        text: "اظهار نظر های انتخاب شده  ابطال گردد ؟",
        showDenyButton: true,
        showCancelButton: false,
        confirmButtonText: "ابطال شود",
        denyButtonText: `انصراف`
      }).then((result) => {
        /* Read more about isConfirmed, isDenied below */
        if (result.isConfirmed) {
            var res=ajaxHandler(params);
            if(res){
                Swal.fire("ابطال", "اظهار نظر ها با موفقیت ابطال گردید", "success");
                getUserInfoCartable($("#managePartnersCartableSender").val())

            }
            else{
                Swal.fire("خطا", "تغییری اعمال  نشد", "info");
            }
        }
        
      });
   
}
function managePartnersCartable(){
    $("#managePartnersCartableDate").val("");
    $("#َmanagePartnersCartableDesc").val("");
    $("#managePartnersCartableSender").selectpicker('refresh');
    $("#managePartnersCartableSender").selectpicker('deselectAll');
    $("#managePartnersCartableSender").on("change",function(e){
        getUserInfoCartable(e.target.value)
    });
    $("#َmanagePartnersCartableSubstitute").selectpicker('refresh');
    $("#َmanagePartnersCartableSubstitute").selectpicker('deselectAll');
   // $('#managePartnersCartableDate').MdPersianDateTimePicker({
   // targetTextSelector: '#managePartnersCartableDate',
    //disableBeforeDate: new Date(),
    //disableAfterDate: new Date(),
   
//});
    $("#transferPartnersCartable-btn").attr('disabled',true);
    $("#managePartnersCartableModal").modal('show');
}
function manageAutomaticSend(s=true){
    $("#automaticSendCommentManagmentDate").val("");
    $("#َautomaticSendCommentManagmentDays").val("");
    $("#َautomaticSendCommentManagmentDesc").val("");
    $("#َautomaticSendCommentManagmentReceiver").selectpicker('refresh');
    $("#َautomaticSendCommentManagmentReceiver").selectpicker('deselectAll');
    $("#َautomaticSendCommentManagmentsubstitute").selectpicker('refresh');
    $("#َautomaticSendCommentManagmentsubstitute").selectpicker('deselectAll');
    if(s==true){
    $('#automaticSendCommentManagmentDate').MdPersianDateTimePicker({
    targetTextSelector: '#automaticSendCommentManagmentDate',
    //TargetSelector: '#automaticSendCommentManagmentDate',
    disableBeforeDate: new Date(),
    //disableAfterDate: new Date(),
   
});
    }
    var param={action:"sendAutoCommentWorkflowHtm"};
    var res = manageAjaxRequest(param);
    $("#manageAutomaticSendWorkflowSend-body").html("")
    $("#manageAutomaticSendWorkflowSend-body").html(res[0]);

    $("#manageAutomaticSendCommentModal").modal('show');
}
function doAutomaticSendPayComment(){
    var absentReceiver=$("#َautomaticSendCommentManagmentReceiver").val();
    var substituteReceiver=$("#َautomaticSendCommentManagmentsubstitute").val();
    var autoSendStartDate=$("#automaticSendCommentManagmentDate").val();
    var autoSendDayes=$("#َautomaticSendCommentManagmentDays").val();
    var autoSendDesc=$("#َautomaticSendCommentManagmentDesc").val();
    if(typeof autoSendStartDate == "undefined" || autoSendStartDate == ""){
        notice1Sec("تاریخ  شروع ارسال خودکار  مشخص نشده است","yellow");
        return false;
    }

    if(typeof autoSendDayes == "undefined" || autoSendDayes == ""){
        notice1Sec("تعداد روزهای ارسال خودکار مشخص نشده است","yellow");
        return false;
    }
    
    if(typeof absentReceiver == "undefined" || absentReceiver == ""){
        notice1Sec("کاربرغایب دریافت کننده ارجاع مشخص نشده است!","yellow");
        return false;
    }

    if(typeof substituteReceiver == "undefined" || substituteReceiver == ""){
        notice1Sec("کاربر جانشین دریافت کننده ارجاع مشخص نشده است!","yellow");
        return false;
    }
    
    if(typeof autoSendDesc == "undefined" || autoSendDesc == ""){
        notice1Sec("توضیحات ارسال خودکار مشخص نشده است","yellow");
        return false;
    }
    if(absentReceiver[0] == substituteReceiver[0]){
        notice1Sec("کاربر غایب با کاربر  جانشین یکسان است","yellow");
        return false;
    }
    
    var action = "doAutomaticSendPayComment";
    var param = {   
                    action:action,
                    absentReceiver:absentReceiver[0],
                    substituteReceiver:substituteReceiver[0],
                    autoSendStartDate:autoSendStartDate,
                    autoSendDayes:autoSendDayes,
                    autoSendDesc:autoSendDesc
                };

    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res, "green");
        manageAutomaticSend(false);
    }

}

function confirmDeleteAutoSendRecord (RowID){
    bs_confirm("حذف رکورد ارجاع خودکار","رکورد مربوط به ارجاع خودکار حذف شود ؟","DeleteAutoSendRecord",[RowID])
}
function DeleteAutoSendRecord(RowID){
    var action = "DeleteAutoSendRecord";
    var param = {action:action,autoSendRowID:RowID};
    var res = manageAjaxRequest(param);
    //console.log('res:'.res);
    if(res != false){
       notice1Sec("حذف با موفقیت انجام شد","green");
       manageAutomaticSend(false);
    }
    else{
        notice1Sec("  هیچ تغییری اعمال نشد","yellow");
    }
}
function ShowAttachmentFileComment(pid) {
    var action = "ShowAttachmentFileComment";
    var param = {action:action,pid:pid};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#commentAttachmentFile-body").html('');
        $("#commentAttachmentFile-body").html(res);
        $('#commentAttachmentFileModal').modal('show');
    }
}

function ShowWorkflowComment(pid,send=0,meta_data="") {

    var action = "ShowWorkflowComment";
    var param = {action:action,pid:pid,meta_data:meta_data};
   
    var res = manageAjaxRequest(param);
    
    if(res != false){
        if (send == 0) {
            $("#commentWorkflow-body").html('');
            $("#commentWorkflow-body").html(res[0]);
            $('#commentWorkflowModal').modal('show');
        }else {
            return res;
        }
    }
    
}

function editTempSendComment(pwID) {
    var res = Main.getTempSendCommentInfo(pwID);

    var data = res[1];
    $("#commentManagmentTempReceiver").find('option').remove();
    $("#commentManagmentTempReceiver").append('<option value="0">--------</option>');
    for(var e=0;e<data.length;e++){
        $("#commentManagmentTempReceiver").append('<option value="'+data[e]['RowID']+'">'+data[e]['lname']+' '+data[e]['fname']+'</option>');
    }

    $("input[name='commentManagmentTempConfirmedType']").prop('checked',false);
    if (parseInt(res[0]['status']) == 1){
        $("input[name=commentManagmentTempConfirmedType][value="+1+"]").prop('checked',true);
    }else {
        $("input[name=commentManagmentTempConfirmedType][value="+0+"]").prop('checked',true);
    }
    $("#commentManagmentTempReceiver").val(res[0]['receiver'].split(','));
    $("#commentManagmentTempReceiver").selectpicker('refresh');
    $("#commentManagmentTempConfirmedDesc").val(res[0]['description']);
    $("#commentManagmentTempHiddenPWID").val(pwID);
    $('#sendTempCommentManagmentModal').modal('show');
}

function doEditTempSendComment() {
    var cid = $("#commentManagmentHiddenCid").val();
    var pwID = $("#commentManagmentTempHiddenPWID").val();
    var confType = $("input[name='commentManagmentTempConfirmedType']:checked").val();
    var receiver = $("#commentManagmentTempReceiver").val();
    receiver = receiver.join(',');
    var desc = $("#commentManagmentTempConfirmedDesc").val();
    if(typeof confType == "undefined"){
        notice1Sec("تایید یا عدم تایید مشخص نشده است !","yellow");
        return false;
    }
    if (!parseInt((receiver.trim()).length)){
        notice1Sec("گیرنده مشخص نشده است !","yellow");
        return false;
    }
    if (parseInt(confType) == 0){
        if (!parseInt((desc.trim()).length)) {
            notice1Sec("در صورت عدم تایید، توضیحات اجباری می باشد !", "yellow");
            return false;
        }
    }

    var action = "doEditTempSendComment";
    var param = {action:action,pwID:pwID,confType:confType,receiver:receiver,desc:desc};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res, "green");
        $('#sendTempCommentManagmentModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        var res = ShowWorkflowComment(cid,1);
        $("#commentWorkflowSend-body").html('');
        $("#commentWorkflowSend-body").html(res[0]);
    }
}

function deleteTempSendComment(pwID) {
    $("#deleteTempComment_deleteIdHidden").val(pwID);
    $('#deleteTempCommentManagmentModal').modal('show');
}

function doDeleteTempSendComment() {
    var cid = $("#commentManagmentHiddenCid").val();
    var pwID = $("#deleteTempComment_deleteIdHidden").val();
    var action = "doDeleteTempSendComment";
    var param = {action:action,pwID:pwID};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res, "green");
        $('#deleteTempCommentManagmentModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        var res = ShowWorkflowComment(cid,1);
        $("#commentWorkflowSend-body").html('');
        $("#commentWorkflowSend-body").html(res[0]);
    }
}

function sendTempSendComment(pwID) {
    $("#sendTempComment_sendIdHidden").val(pwID);
    $('#sendTempCommentManagmentSendModal').modal('show');
}

function doSendTempSendComment() {
    var pwID = $("#sendTempComment_sendIdHidden").val();
    var action = "doSendTempSendComment";
    var param = {action:action,pwID:pwID};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res, "green");
        $('#sendTempCommentManagmentModal').modal('hide');
        $('#sendCommentManagmentModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        showPayCommentManageList();
    }
}

function ShowOtherInfoComment(cid) {
    var action = "ShowOtherInfoComment";
    var param = {action:action,cid:cid};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#comment-manage-Info-body").html('');
        $("#comment-manage-Info-body").html(res);
        $('#commentManageInfoModal').modal('show');
    }
}

function printPayComment(cid){
    var action = "doPrintPayComment";
    var param = {action:action,cid:cid};
    var res = manageAjaxRequest(param);
    if(res != false){
        if (parseInt(res[1]) == 1){
            notice1Sec('پرداخت شده است !', "yellow");
        }
        $("#hiddenCommentBody").html('');
        $("#hiddenCommentBody").html(res[0]);
        $('.demoo').printThis({
            // base: "http://localhost:8012/BOM/administrator.php"
            base:base_url
        });
    }
}

function getAccountNumber() {
    $('#commentManagmentAccNum').children('option:not(:first)').remove();
    $("#commentManagmentAccNum").val(-1);
    var cfor = $("#commentManagmentFor").val();
    var data1 = Main.getAccountNumListWithName(cfor);
   
    var type = $("#commentManagmentType").val();
    var data2 = Main.getCommentTypeID(type);
    var PayType = $("input[name='commentManagmentPayType']:checked").val();
    var typeValue = $("input[name='commentManagmentCashCheck']:checked").val();
    console.log(data2);
    if(data2.length){
        if(parseInt(data2[0]['RowID']) == 13) 
        {  // ثبت در حساب بستانکاری طرف مقابل
            $("#commentManagmentAccNum-div").css('display','none');
            $("#commentManagmentAccNum").val(-1);
            $("#commentManagmentCode").val(data1[1]);
          
        }else 
        {
           
            if (parseInt(data1.length) !== 0){
              
                if (parseInt(data1[3]) == 1){
                    notice1Sec("این طرف حساب، دارای قرارداد می باشد !", "yellow");
                    //$("#commentManagmentContractYN").val(1);
                    //$("#commentManagmentContractYN").attr("disabled","true");
                }else {
                    //$("#commentManagmentContractYN").removeAttr("disabled");
                    //$("#commentManagmentContractYN").val(0);
                }
                if (parseInt(PayType) == 1 && parseInt(typeValue) == 1){  // فورج چک بود
                    
                $("#commentManagmentAccNum-div").css('display','none');
                $("#commentManagmentAccNum").val(-1);
                $("#commentManagmentCode").val(data1[1]);
                }else {
                    for (var b = 0; b < data1[0].length; b++) {
                        $('#commentManagmentAccNum').append($('<option>',
                            {
                                value: data1[2] + ',' + b,
                               text : data1[0][b]+" ("+data1[4][b]+")"
                            }));
                    }
                    $("#commentManagmentAccNum-div").css('display', '');
                    $("#commentManagmentCode").val(data1[1]);
                }
            }else {
                
                $("#commentManagmentAccNum-div").css('display','none');
                $("#commentManagmentCode").val('');
                //$("#commentManagmentContractYN").val(0);
                //$("#commentManagmentContractYN").removeAttr("disabled");
            }
        }
    }
    else{
        notice1Sec("نوع پرداخت اظهارنظر انتخاب نشده است ", "yellow");
       $("#commentManagmentType").css('border-bottom','2px solid red')
       $("#commentManagmentFor").val('');
    }
}
function get_sublayer_two(layer1){
    var barnameh_select = $("input[name='drivers_fare']:checked").val();
    var action = "get_sublayer_two";
    var params = {action:action,layer1:layer1,barnameh_select:barnameh_select}
    var res = ajaxHandler(params);
    var options = "<option>زیرگروه را انتخاب نمایید</option>";
    if(res){
        return res;
    }
}

function getSubLayerTwo() {
    var layer1 = $("#commentManagmentOneLayer").val();
    $('#commentManagmentUnit').empty();
    $('#commentManagmentConsumerUnit').empty();
    $('#commentManagmentType').empty();
    $('#commentManagmentTwoLayer').empty();
    $('#commentManagmentThreeLayer').empty();
    $("#commentManagmentThreeLayer-div").css('display', 'none');
    if (parseInt(layer1) !== 4) {
        $("#commentManagmentClearingFund-div").css('display', 'none');
        $("#commentManagmentClearingFund").val('');
    }

    if (parseInt(layer1) !== 267) {
        $("#commentManagmentClearingGoodLoan-div").css('display', 'none');
        $("#commentManagmentClearingGoodLoan").val('');
    }else {
        $("#commentManagmentClearingGoodLoan-div").css('display', '');
    }
    //var res = Main.getSubLayers(layer1);
    var res = get_sublayer_two(layer1);
  
	
    switch (layer1) {
        case '-1':
            $("#commentManagmentContractYN-div").css('display','');
            $("#commentManagmentContractNum-div").css('display','');
            $("#commentManagmentToward-div").css('display','');
            $("#commentManagmentRequestSource-div").css('display','');
            $("#commentManagmentRequestNumbers-div").css('display','');
            $("#commentManagmentCheckNumber-div").css('display','none');
            $("#commentManagmentCheckDate-div").css('display','none');
            $("#commentManagmentCheckCarcass-div").css('display','none');
            $("#commentManagmentCheckCarcassFile-div").css('display','none');
            $("#commentManagmentDeliveryDate-div").css('display','none');
            $("#commentManagmentConsumerUnit-div").css('display','');
            break;
        case '1':  // مواد اولیه
            $("#commentManagmentContractYN-div").css('display','');
            $("#commentManagmentContractNum-div").css('display','');
            $("#commentManagmentToward-div").css('display','');
            $("#commentManagmentRequestSource-div").css('display','');
            $("#commentManagmentRequestNumbers-div").css('display','');
            $("#commentManagmentCheckNumber-div").css('display','none');
            $("#commentManagmentCheckDate-div").css('display','none');
            $("#commentManagmentCheckCarcass-div").css('display','none');
            $("#commentManagmentCheckCarcassFile-div").css('display','none');
            $("#commentManagmentDeliveryDate-div").css('display','none');
            $("#commentManagmentConsumerUnit-div").css('display','');
            $("#commentManagmentTwoLayer-div").css('display','');
            $('#commentManagmentTwoLayer').append($('<option>', {
                value: 0,
                text: '--------'
            }));
            for(var e=0;e<res.length;e++){
                $('#commentManagmentTwoLayer').append($('<option>', {
                    value: res[e]['RowID'],
                    text: res[e]['layerName']
                }));
            }

            var x = [0,20,12,23];
            var arr = ['--------','تدارکات','مدیریت','مالی'];
            for(var e=0;e<4;e++){
                $('#commentManagmentUnit').append($('<option>', {
                    value: x[e],
                    text: arr[e]
                }));
            }

            var arr1 = ['--------','ریخته گری','ماشین کاری','پرداخت کاری','آب کاری','پی وی دی','رنگ کاری','فورج و پرس کاری','بافت شیلنگ','مونتاژ','خط لوله','تزریق پلاستیک'];
            for(var c=0;c<12;c++){
                $('#commentManagmentConsumerUnit').append($('<option>', {
                    value: c,
                    text: arr1[c]
                }));
            }

            var arr2 = ['','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','علی الحساب','ثبت در حساب بستانکاری طرف مقابل'];
            var arr3 = ['--------','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','علی الحساب','ثبت در حساب بستانکاری طرف مقابل'];
            for(var b=0;b<10;b++){
                $('#commentManagmentType').append($('<option>', {
                    value: arr2[b],
                    text: arr3[b]
                }));
            }
            break;
        case '2':  // مواد مصرفی
            $("#commentManagmentContractYN-div").css('display','');
            $("#commentManagmentContractNum-div").css('display','');
            $("#commentManagmentToward-div").css('display','');
            $("#commentManagmentRequestSource-div").css('display','');
            $("#commentManagmentRequestNumbers-div").css('display','');
            $("#commentManagmentCheckNumber-div").css('display','none');
            $("#commentManagmentCheckDate-div").css('display','none');
            $("#commentManagmentCheckCarcass-div").css('display','none');
            $("#commentManagmentCheckCarcassFile-div").css('display','none');
            $("#commentManagmentDeliveryDate-div").css('display','none');
            $("#commentManagmentConsumerUnit-div").css('display','');
            $("#commentManagmentTwoLayer-div").css('display','');
            $('#commentManagmentTwoLayer').append($('<option>', {
                value: 0,
                text: '--------'
            }));
            for(var e=0;e<res.length;e++){
                $('#commentManagmentTwoLayer').append($('<option>', {
                    value: res[e]['RowID'],
                    text: res[e]['layerName']
                }));
            }

            var x = [0,20,39,12,21];
            var arr = ['--------','تدارکات','روابط عمومی','مدیریت','فناوری اطلاعات'];
            for(var e=0;e<x.length;e++){
                $('#commentManagmentUnit').append($('<option>', {
                    value: x[e],
                    text: arr[e]
                }));
            }
            var unit_array=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,38,39];
            var arr1 = ['--------','ریخته گری','ماشین کاری','پرداخت کاری','آب کاری','پی وی دی','رنگ کاری','فورج و پرس کاری','بافت شیلنگ','مونتاژ','خط لوله','تزریق پلاستیک','مدیریت','تحقیق و توسعه','مهندسی','قالب سازی','نگهداری و تعمیرات','کنترل کیفیت','تضمین کیفیت','برنامه ریزی','تدارکات','فناوری اطلاعات','اداری و منابع انسانی','مالی','بازرگانی فروش','خدمات','انتظامات','انبار مواد مصرفی','انبار کالاهای در جریان','انبار مواد اولیه','انبار شهرک صنعتی توس','انبار محصول کارخانه','روابط عمومی'];
            for(var c=0;c<arr1.length;c++){
                $('#commentManagmentConsumerUnit').append($('<option>', {
                    value: unit_array[c],
                    text: arr1[c]
                }));
            }

            // var arr1 = ['--------','ریخته گری','ماشین کاری','پرداخت کاری','آب کاری','پی وی دی','رنگ کاری','فورج و پرس کاری','بافت شیلنگ','مونتاژ','خط لوله','تزریق پلاستیک','مدیریت','تحقیق و توسعه','مهندسی','قالب سازی','نگهداری و تعمیرات','کنترل کیفیت','تضمین کیفیت','برنامه ریزی','تدارکات','فناوری اطلاعات','اداری و منابع انسانی','مالی','بازرگانی فروش','خدمات','انتظامات','انبار مواد مصرفی','انبار کالاهای در جریان','انبار مواد اولیه','انبار شهرک صنعتی توس','روابط عمومی'];
            // for(var c=0;c<32;c++){
            //     $('#commentManagmentConsumerUnit').append($('<option>', {
            //         value: c,
            //         text: arr1[c]
            //     }));
            // }

            var arr2 = ['','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','علی الحساب','ثبت در حساب بستانکاری طرف مقابل'];
            var arr3 = ['--------','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','علی الحساب','ثبت در حساب بستانکاری طرف مقابل'];
            for(var b=0;b<10;b++){
                $('#commentManagmentType').append($('<option>', {
                    value: arr2[b],
                    text: arr3[b]
                }));
            }
            break;
			
			////***********************************************
			case '336':  // املاک و مستغلات
            $("#commentManagmentContractYN-div").css('display','');
            $("#commentManagmentContractNum-div").css('display','');
            $("#commentManagmentToward-div").css('display','');
            $("#commentManagmentRequestSource-div").css('display','');
            $("#commentManagmentRequestNumbers-div").css('display','');
            $("#commentManagmentCheckNumber-div").css('display','none');
            $("#commentManagmentCheckDate-div").css('display','none');
            $("#commentManagmentCheckCarcass-div").css('display','none');
            $("#commentManagmentCheckCarcassFile-div").css('display','none');
            $("#commentManagmentDeliveryDate-div").css('display','none');
            $("#commentManagmentConsumerUnit-div").css('display','');
            $("#commentManagmentTwoLayer-div").css('display','');
            $('#commentManagmentTwoLayer').append($('<option>', {
                value: 0,
                text: '--------'
            }));
            for(var e=0;e<res.length;e++){
                $('#commentManagmentTwoLayer').append($('<option>', {
                    value: res[e]['RowID'],
                    text: res[e]['layerName']
                }));
            }

            var x = [0,20,22,24,31,23,39,40,21,12];
            var arr = ['--------','تدارکات','اداری و منابع انسانی','بازرگانی فروش','وصول مطالبات','مالی','روابط عمومی','امور عمرانی','فناوری اطلاعات','مدیریت'];
            for(var e=0;e<10;e++){
                $('#commentManagmentUnit').append($('<option>', {
                    value: x[e],
                    text: arr[e]
                }));
            }
			var arr1 = ['--------','ریخته گری','ماشین کاری','پرداخت کاری','آب کاری','پی وی دی','رنگ کاری','فورج و پرس کاری','بافت شیلنگ','مونتاژ','خط لوله','تزریق پلاستیک','مدیریت','تحقیق و توسعه','مهندسی','قالب سازی','نگهداری و تعمیرات','کنترل کیفیت','تضمین کیفیت','برنامه ریزی','تدارکات','فناوری اطلاعات','اداری و منابع انسانی','مالی','بازرگانی فروش','خدمات','انتظامات','انبار مواد مصرفی','انبار کالاهای در جریان','انبار مواد اولیه','انبار شهرک صنعتی توس','وصول مطالبات','پشتیبانی','5s','گروهی (مطابق قسمت توضیحات)'];
            //var arr1 = ['--------','فناوری اطلاعات','ریخته گری','ماشین کاری','پرداخت کاری','آب کاری','پی وی دی','رنگ کاری','فورج و پرس کاری','بافت شیلنگ','مونتاژ','خط لوله','تزریق پلاستیک'];
            for(var c=0;c<32;c++){
                $('#commentManagmentConsumerUnit').append($('<option>', {
                    value: c,
                    text: arr1[c]
                }));
            }

            var arr2 = ['','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','علی الحساب','ثبت در حساب بستانکاری طرف مقابل'];
            var arr3 = ['--------','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','علی الحساب','ثبت در حساب بستانکاری طرف مقابل'];
            for(var b=0;b<10;b++){
                $('#commentManagmentType').append($('<option>', {
                    value: arr2[b],
                    text: arr3[b]
                }));
            }
            break;
			////***********************************************
			
			////***********************************************
			case '330':  // ERP
            $("#commentManagmentContractYN-div").css('display','');
            $("#commentManagmentContractNum-div").css('display','');
            $("#commentManagmentToward-div").css('display','');
            $("#commentManagmentRequestSource-div").css('display','');
            $("#commentManagmentRequestNumbers-div").css('display','');
            $("#commentManagmentCheckNumber-div").css('display','none');
            $("#commentManagmentCheckDate-div").css('display','none');
            $("#commentManagmentCheckCarcass-div").css('display','none');
            $("#commentManagmentCheckCarcassFile-div").css('display','none');
            $("#commentManagmentDeliveryDate-div").css('display','none');
            $("#commentManagmentConsumerUnit-div").css('display','');
            $("#commentManagmentTwoLayer-div").css('display','');
            $('#commentManagmentTwoLayer').append($('<option>', {
                value: 0,
                text: '--------'
            }));
            for(var e=0;e<res.length;e++){
                $('#commentManagmentTwoLayer').append($('<option>', {
                    value: res[e]['RowID'],
                    text: res[e]['layerName']
                }));
            }

            var x = [0,20,22,24,31,23,39,40,21,12];
            var arr = ['--------','تدارکات','اداری و منابع انسانی','بازرگانی فروش','وصول مطالبات','مالی','روابط عمومی','امور عمرانی','فناوری اطلاعات','مدیریت'];
            for(var e=0;e<10;e++){
           
                $('#commentManagmentUnit').append($('<option>', {
                    value: x[e],
                    text: arr[e]
                }));
            }

            var arr1 = ['--------','فناوری اطلاعات','ریخته گری','ماشین کاری','پرداخت کاری','آب کاری','پی وی دی','رنگ کاری','فورج و پرس کاری','بافت شیلنگ','مونتاژ','خط لوله','تزریق پلاستیک'];
            for(var c=0;c<13;c++){
                $('#commentManagmentConsumerUnit').append($('<option>', {
                    value: c,
                    text: arr1[c]
                }));
            }

            var arr2 = ['','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','علی الحساب','ثبت در حساب بستانکاری طرف مقابل'];
            var arr3 = ['--------','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','علی الحساب','ثبت در حساب بستانکاری طرف مقابل'];
            for(var b=0;b<10;b++){
                $('#commentManagmentType').append($('<option>', {
                    value: arr2[b],
                    text: arr3[b]
                }));
            }
            break;
			////***********************************************

            
			case '342':  //----------------------------------------------دارایی های نامشهود******************
            $("#commentManagmentContractYN-div").css('display','');
            $("#commentManagmentContractNum-div").css('display','');
            $("#commentManagmentToward-div").css('display','');
            $("#commentManagmentRequestSource-div").css('display','');
            $("#commentManagmentRequestNumbers-div").css('display','');
            $("#commentManagmentCheckNumber-div").css('display','none');
            $("#commentManagmentCheckDate-div").css('display','none');
            $("#commentManagmentCheckCarcass-div").css('display','none');
            $("#commentManagmentCheckCarcassFile-div").css('display','none');
            $("#commentManagmentDeliveryDate-div").css('display','none');
            $("#commentManagmentConsumerUnit-div").css('display','');
            $("#commentManagmentTwoLayer-div").css('display','');
            $('#commentManagmentTwoLayer').append($('<option>', {
                value: 0,
                text: '--------'
            }));
            for(var e=0;e<res.length;e++){
                $('#commentManagmentTwoLayer').append($('<option>', {
                    value: res[e]['RowID'],
                    text: res[e]['layerName']
                }));
            }

            var x = [0,20,22,24,31,23,39,40,21,12];
            var arr = ['--------','تدارکات','اداری و منابع انسانی','بازرگانی فروش','وصول مطالبات','مالی','روابط عمومی','امور عمرانی','فناوری اطلاعات','مدیریت'];
            for(var e=0;e<10;e++){
           
                $('#commentManagmentUnit').append($('<option>', {
                    value: x[e],
                    text: arr[e]
                }));
            }

            var arr1 = ['--------','فناوری اطلاعات','ریخته گری','ماشین کاری','پرداخت کاری','آب کاری','پی وی دی','رنگ کاری','فورج و پرس کاری','بافت شیلنگ','مونتاژ','خط لوله','تزریق پلاستیک'];
            for(var c=0;c<13;c++){
                $('#commentManagmentConsumerUnit').append($('<option>', {
                    value: c,
                    text: arr1[c]
                }));
            }

            var arr2 = ['','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','علی الحساب','ثبت در حساب بستانکاری طرف مقابل'];
            var arr3 = ['--------','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','علی الحساب','ثبت در حساب بستانکاری طرف مقابل'];
            for(var b=0;b<10;b++){
                $('#commentManagmentType').append($('<option>', {
                    value: arr2[b],
                    text: arr3[b]
                }));
            }
            break;
			////***********************************************   دارایی های نا مشهود
			//**------------------------------------------------ حق عضویت--------------------------------
			case '349':  // حق عضویت
            $("#commentManagmentContractYN-div").css('display','');
            $("#commentManagmentContractNum-div").css('display','');
            $("#commentManagmentToward-div").css('display','');
            $("#commentManagmentRequestSource-div").css('display','');
            $("#commentManagmentRequestNumbers-div").css('display','');
            $("#commentManagmentCheckNumber-div").css('display','none');
            $("#commentManagmentCheckDate-div").css('display','none');
            $("#commentManagmentCheckCarcass-div").css('display','none');
            $("#commentManagmentCheckCarcassFile-div").css('display','none');
            $("#commentManagmentDeliveryDate-div").css('display','none');
            $("#commentManagmentConsumerUnit-div").css('display','');
            $("#commentManagmentTwoLayer-div").css('display','');
            $('#commentManagmentTwoLayer').append($('<option>', {
                value: 0,
                text: '--------'
            }));
            for(var e=0;e<res.length;e++){
                $('#commentManagmentTwoLayer').append($('<option>', {
                    value: res[e]['RowID'],
                    text: res[e]['layerName']
                }));
            }
			$("#commentManagmentTwoLayer").show();
            var x = [0,23,12];
            var arr = ['--------','مالی','مدیریت'];
            for(var e=0;e<3;e++){
                $('#commentManagmentUnit').append($('<option>', {
                    value: x[e],
                    text: arr[e]
                }));
            }
			var arr1 = ['--------','ریخته گری','ماشین کاری','پرداخت کاری','آب کاری','پی وی دی','رنگ کاری','فورج و پرس کاری','بافت شیلنگ','مونتاژ','خط لوله','تزریق پلاستیک','مدیریت','تحقیق و توسعه','مهندسی','قالب سازی','نگهداری و تعمیرات','کنترل کیفیت','تضمین کیفیت','برنامه ریزی','تدارکات','فناوری اطلاعات','اداری و منابع انسانی','مالی','بازرگانی فروش','خدمات','انتظامات','انبار مواد مصرفی','انبار کالاهای در جریان','انبار مواد اولیه','انبار شهرک صنعتی توس','وصول مطالبات','پشتیبانی','5s','گروهی (مطابق قسمت توضیحات)'];
            //var arr1 = ['--------','فناوری اطلاعات','ریخته گری','ماشین کاری','پرداخت کاری','آب کاری','پی وی دی','رنگ کاری','فورج و پرس کاری','بافت شیلنگ','مونتاژ','خط لوله','تزریق پلاستیک'];
            for(var c=0;c<32;c++){
                $('#commentManagmentConsumerUnit').append($('<option>', {
                    value: c,
                    text: arr1[c]
                }));
            }

            var arr2 = ['','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','علی الحساب','ثبت در حساب بستانکاری طرف مقابل'];
            var arr3 = ['--------','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','علی الحساب','ثبت در حساب بستانکاری طرف مقابل'];
            for(var b=0;b<10;b++){
                $('#commentManagmentType').append($('<option>', {
                    value: arr2[b],
                    text: arr3[b]
                }));
            }
            break;
			//**------------------------------------------------ حق عضویت--------------------------------

            	//----------------------------------------------------------------------------------------------------------------------------امورانبارها------------------------

                case '353':  // امورانبارها
                $("#commentManagmentContractYN-div").css('display','');
                $("#commentManagmentContractNum-div").css('display','');
                $("#commentManagmentToward-div").css('display','');
                $("#commentManagmentRequestSource-div").css('display','');
                $("#commentManagmentRequestNumbers-div").css('display','');
                $("#commentManagmentCheckNumber-div").css('display','none');
                $("#commentManagmentCheckDate-div").css('display','none');
                $("#commentManagmentCheckCarcass-div").css('display','none');
                $("#commentManagmentCheckCarcassFile-div").css('display','none');
                $("#commentManagmentDeliveryDate-div").css('display','none');
                $("#commentManagmentConsumerUnit-div").css('display','');
                $("#commentManagmentTwoLayer-div").css('display','');
                $('#commentManagmentTwoLayer').append($('<option>', {
                    value: 0,
                    text: '--------'
                }));
             
                for(var e=0;e<res.length;e++){
                    $('#commentManagmentTwoLayer').append($('<option>', {
                        value: res[e]['RowID'],
                        text: res[e]['layerName']
                    }));
                }
                $("#commentManagmentTwoLayer").show();
                var x = [0,23,12,27,28,29,30,40,31];	
                var arr = ['--------','مالی','مدیریت','انبار مواد مصرفی','انبار کالاهای در جریان','	انبار مواد اولیه','انبار شهرک صنعتی توس','امورعمرانی','وصول مطالبات'];
                for(var e=0;e<9;e++){
                    $('#commentManagmentUnit').append($('<option>', {
                        value: x[e],
                        text: arr[e]
                    }));
                }
                var arr1 = ['--------','ریخته گری','ماشین کاری','پرداخت کاری','آب کاری','پی وی دی','رنگ کاری','فورج و پرس کاری','بافت شیلنگ','مونتاژ','خط لوله','تزریق پلاستیک','مدیریت','تحقیق و توسعه','مهندسی','قالب سازی','نگهداری و تعمیرات','کنترل کیفیت','تضمین کیفیت','برنامه ریزی','تدارکات','فناوری اطلاعات','اداری و منابع انسانی','مالی','بازرگانی فروش','خدمات','انتظامات','انبار مواد مصرفی','انبار کالاهای در جریان','انبار مواد اولیه','انبار شهرک صنعتی توس','وصول مطالبات','پشتیبانی','5s','گروهی (مطابق قسمت توضیحات)'];
                //var arr1 = ['--------','فناوری اطلاعات','ریخته گری','ماشین کاری','پرداخت کاری','آب کاری','پی وی دی','رنگ کاری','فورج و پرس کاری','بافت شیلنگ','مونتاژ','خط لوله','تزریق پلاستیک'];
                for(var c=0;c<32;c++){
                    $('#commentManagmentConsumerUnit').append($('<option>', {
                        value: c,
                        text: arr1[c]
                    }));
                }
    
                var arr2 = ['','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','علی الحساب','ثبت در حساب بستانکاری طرف مقابل'];
                var arr3 = ['--------','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','علی الحساب','ثبت در حساب بستانکاری طرف مقابل'];
                for(var b=0;b<10;b++){
                    $('#commentManagmentType').append($('<option>', {
                        value: arr2[b],
                        text: arr3[b]
                    }));
                }
                break;
                //**------------------------------------------------ امورانبارها-------------------------------------------
			//**------------------------------------------------ صندوق قرض الحسنه -------------------------------------------
			case '351':  // صندوق قرض الحسنه
            $("#commentManagmentContractYN-div").css('display','');
            $("#commentManagmentContractNum-div").css('display','');
            $("#commentManagmentToward-div").css('display','');
            $("#commentManagmentRequestSource-div").css('display','');
            $("#commentManagmentRequestNumbers-div").css('display','');
            $("#commentManagmentCheckNumber-div").css('display','none');
            $("#commentManagmentCheckDate-div").css('display','none');
            $("#commentManagmentCheckCarcass-div").css('display','none');
            $("#commentManagmentCheckCarcassFile-div").css('display','none');
            $("#commentManagmentDeliveryDate-div").css('display','none');
            $("#commentManagmentConsumerUnit-div").css('display','');
            $("#commentManagmentTwoLayer-div").css('display','');
            $('#commentManagmentTwoLayer').append($('<option>', {
                value: 0,
                text: '--------'
            }));
            for(var e=0;e<res.length;e++){
                $('#commentManagmentTwoLayer').append($('<option>', {
                    value: res[e]['RowID'],
                    text: res[e]['layerName']
                }));
            }
			$("#commentManagmentTwoLayer").show();
            var x = [0,23,12,22];
            var arr = ['--------','مالی','مدیریت','اداری و منابع انسانی'];
            for(var e=0;e<4;e++){
                $('#commentManagmentUnit').append($('<option>', {
                    value: x[e],
                    text: arr[e]
                }));
            }
			var arr1 = ['--------','ریخته گری','ماشین کاری','پرداخت کاری','آب کاری','پی وی دی','رنگ کاری','فورج و پرس کاری','بافت شیلنگ','مونتاژ','خط لوله','تزریق پلاستیک','مدیریت','تحقیق و توسعه','مهندسی','قالب سازی','نگهداری و تعمیرات','کنترل کیفیت','تضمین کیفیت','برنامه ریزی','تدارکات','فناوری اطلاعات','اداری و منابع انسانی','مالی','بازرگانی فروش','خدمات','انتظامات','انبار مواد مصرفی','انبار کالاهای در جریان','انبار مواد اولیه','انبار شهرک صنعتی توس','وصول مطالبات','پشتیبانی','5s','گروهی (مطابق قسمت توضیحات)'];
            //var arr1 = ['--------','فناوری اطلاعات','ریخته گری','ماشین کاری','پرداخت کاری','آب کاری','پی وی دی','رنگ کاری','فورج و پرس کاری','بافت شیلنگ','مونتاژ','خط لوله','تزریق پلاستیک'];
            for(var c=0;c<32;c++){
                $('#commentManagmentConsumerUnit').append($('<option>', {
                    value: c,
                    text: arr1[c]
                }));
            }

            var arr2 = ['','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','علی الحساب','ثبت در حساب بستانکاری طرف مقابل'];
            var arr3 = ['--------','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','علی الحساب','ثبت در حساب بستانکاری طرف مقابل'];
            for(var b=0;b<10;b++){
                $('#commentManagmentType').append($('<option>', {
                    value: arr2[b],
                    text: arr3[b]
                }));
            }
            break;
			//**------------------------------------------------  قرض الحسنه- صندوق-------------------------------
        case '4':  // تنخواه
            $("#commentManagmentContractYN-div").css('display','');
            $("#commentManagmentContractNum-div").css('display','');
            $("#commentManagmentToward-div").css('display','');
            $("#commentManagmentRequestSource-div").css('display','');
            $("#commentManagmentRequestNumbers-div").css('display','');
            $("#commentManagmentCheckNumber-div").css('display','none');
            $("#commentManagmentCheckDate-div").css('display','none');
            $("#commentManagmentCheckCarcass-div").css('display','none');
            $("#commentManagmentCheckCarcassFile-div").css('display','none');
            $("#commentManagmentDeliveryDate-div").css('display','none');
            $("#commentManagmentConsumerUnit-div").css('display','');
            $("#commentManagmentTwoLayer-div").css('display','');
            $('#commentManagmentTwoLayer').append($('<option>', {
                value: 0,
                text: '--------'
            }));
            for(var e=0;e<res.length;e++){
                $('#commentManagmentTwoLayer').append($('<option>', {
                    value: res[e]['RowID'],
                    text: res[e]['layerName']
                }));
            }

            var x = [0,20,22,24,31,23,39,40,21,12,4,38];
            var arr = ['--------','تدارکات','اداری و منابع انسانی','بازرگانی فروش','وصول مطالبات','مالی','روابط عمومی','امور عمرانی','فناوری اطلاعات','مدیریت','آبکاری','انبار محصول'];
            for(var e=0;e<12;e++){
                $('#commentManagmentUnit').append($('<option>', {
                    value: x[e],
                    text: arr[e]
                }));
            }

            var arr1 = ['--------','ریخته گری','ماشین کاری','پرداخت کاری','آب کاری','پی وی دی','رنگ کاری','فورج و پرس کاری','بافت شیلنگ','مونتاژ','خط لوله','تزریق پلاستیک','مدیریت','تحقیق و توسعه','مهندسی','قالب سازی','نگهداری و تعمیرات','کنترل کیفیت','تضمین کیفیت','برنامه ریزی','تدارکات','فناوری اطلاعات','اداری و منابع انسانی','مالی','بازرگانی فروش','خدمات','انتظامات','انبار مواد مصرفی','انبار کالاهای در جریان','انبار مواد اولیه','انبار شهرک صنعتی توس','امور عمرانی','روابط عمومی'];
            for(var c=0;c<33;c++){
                $('#commentManagmentConsumerUnit').append($('<option>', {
                    value: c,
                    text: arr1[c]
                }));
            }

            var arr2 = ['','تسویه حساب','علی الحساب','ثبت در حساب بستانکاری طرف مقابل'];
            var arr3 = ['--------','تسویه حساب','علی الحساب','ثبت در حساب بستانکاری طرف مقابل'];
            for(var b=0;b<4;b++){
                $('#commentManagmentType').append($('<option>', {
                    value: arr2[b],
                    text: arr3[b]
                }));
            }
            break;
        case '5':  // قبوض شرکتی
            $("#commentManagmentContractYN-div").css('display','');
            $("#commentManagmentContractNum-div").css('display','');
            $("#commentManagmentToward-div").css('display','');
            $("#commentManagmentRequestSource-div").css('display','');
            $("#commentManagmentRequestNumbers-div").css('display','');
            $("#commentManagmentCheckNumber-div").css('display','none');
            $("#commentManagmentCheckDate-div").css('display','none');
            $("#commentManagmentCheckCarcass-div").css('display','none');
            $("#commentManagmentCheckCarcassFile-div").css('display','none');
            $("#commentManagmentDeliveryDate-div").css('display','none');
            $("#commentManagmentConsumerUnit-div").css('display','none');
            $("#commentManagmentTwoLayer-div").css('display','');
            $('#commentManagmentTwoLayer').append($('<option>', {
                value: 0,
                text: '--------'
            }));
            for(var e=0;e<res.length;e++){
                $('#commentManagmentTwoLayer').append($('<option>', {
                    value: res[e]['RowID'],
                    text: res[e]['layerName']
                }));
            }

            var x = [0,20,21,22,24,12];
            var arr = ['--------','تدارکات','فناوری اطلاعات','اداری و منابع انسانی','بازرگانی فروش','مدیریت'];
            for(var e=0;e<6;e++){
                $('#commentManagmentUnit').append($('<option>', {
                    value: x[e],
                    text: arr[e]
                }));
            }

            $('#commentManagmentConsumerUnit').append($('<option>', {
                value: 0,
                text: '--------'
            }));

            var arr2 = ['','پرداخت قبض','پیش پرداخت','تسویه حساب'];
            var arr3 = ['--------','پرداخت قبض','پیش پرداخت','تسویه حساب'];
            for(var b=0;b<4;b++){
                $('#commentManagmentType').append($('<option>', {
                    value: arr2[b],
                    text: arr3[b]
                }));
            }
            break;
        case '6':  // جرایم شرکتی
            $("#commentManagmentContractYN-div").css('display','');
            $("#commentManagmentContractNum-div").css('display','');
            $("#commentManagmentToward-div").css('display','');
            $("#commentManagmentRequestSource-div").css('display','');
            $("#commentManagmentRequestNumbers-div").css('display','');
            $("#commentManagmentCheckNumber-div").css('display','none');
            $("#commentManagmentCheckDate-div").css('display','none');
            $("#commentManagmentCheckCarcass-div").css('display','none');
            $("#commentManagmentCheckCarcassFile-div").css('display','none');
            $("#commentManagmentDeliveryDate-div").css('display','none');
            $("#commentManagmentConsumerUnit-div").css('display','none');
            $("#commentManagmentTwoLayer-div").css('display','none');

            var x = [0,22,12];
            var arr = ['--------','اداری و منابع انسانی','مدیریت'];
            for(var e=0;e<3;e++){
                $('#commentManagmentUnit').append($('<option>', {
                    value: x[e],
                    text: arr[e]
                }));
            }

            $('#commentManagmentConsumerUnit').append($('<option>', {
                value: 0,
                text: '--------'
            }));

            var arr2 = ['','پرداخت جریمه'];
            var arr3 = ['--------','پرداخت جریمه'];
            for(var b=0;b<2;b++){
                $('#commentManagmentType').append($('<option>', {
                    value: arr2[b],
                    text: arr3[b]
                }));
            }
            break;
        case '7':  // طرح توسعه
            $("#commentManagmentContractYN-div").css('display','');
            $("#commentManagmentContractNum-div").css('display','');
            $("#commentManagmentToward-div").css('display','');
            $("#commentManagmentRequestSource-div").css('display','');
            $("#commentManagmentRequestNumbers-div").css('display','');
            $("#commentManagmentCheckNumber-div").css('display','none');
            $("#commentManagmentCheckDate-div").css('display','none');
            $("#commentManagmentCheckCarcass-div").css('display','none');
            $("#commentManagmentCheckCarcassFile-div").css('display','none');
            $("#commentManagmentDeliveryDate-div").css('display','none');
            $("#commentManagmentConsumerUnit-div").css('display','none');
            $("#commentManagmentTwoLayer-div").css('display','');
            $('#commentManagmentTwoLayer').append($('<option>', {
                value: 0,
                text: '--------'
            }));
            for(var e=0;e<res.length;e++){
                $('#commentManagmentTwoLayer').append($('<option>', {
                    value: res[e]['RowID'],
                    text: res[e]['layerName']
                }));
            }

            var x = [0,20,22,24,40,12,42,23];
            var arr = ['--------','تدارکات','اداری و منابع انسانی','بازرگانی فروش','امور عمرانی','مدیریت','گرافیک و تولید محتوا','مالی'];
            for(var e=0;e<8;e++){
				
                $('#commentManagmentUnit').append($('<option>', {
                    value: x[e],
                    text: arr[e]
                }));
            }

            $('#commentManagmentConsumerUnit').append($('<option>', {
                value: 0,
                text: '--------'
            }));

            var arr2 = ['','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','علی الحساب','ثبت در حساب بستانکاری طرف مقابل'];
            var arr3 = ['--------','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','علی الحساب','ثبت در حساب بستانکاری طرف مقابل'];
            for(var b=0;b<10;b++){
                $('#commentManagmentType').append($('<option>', {
                    value: arr2[b],
                    text: arr3[b]
                }));
            }
            break;
        case '8':  // سهامداران
            $("#commentManagmentContractYN-div").css('display','');
            $("#commentManagmentContractNum-div").css('display','');
            $("#commentManagmentToward-div").css('display','');
            $("#commentManagmentRequestSource-div").css('display','');
            $("#commentManagmentRequestNumbers-div").css('display','');
            $("#commentManagmentCheckNumber-div").css('display','none');
            $("#commentManagmentCheckDate-div").css('display','none');
            $("#commentManagmentCheckCarcass-div").css('display','none');
            $("#commentManagmentCheckCarcassFile-div").css('display','none');
            $("#commentManagmentDeliveryDate-div").css('display','none');
            $("#commentManagmentConsumerUnit-div").css('display','none');
            $("#commentManagmentTwoLayer-div").css('display','');
            $('#commentManagmentTwoLayer').append($('<option>', {
                value: 0,
                text: '--------'
            }));
            for(var e=0;e<res.length;e++){
                $('#commentManagmentTwoLayer').append($('<option>', {
                    value: res[e]['RowID'],
                    text: res[e]['layerName']
                }));
            }

            var x = [0,20,22,23,12,21,31];
            var arr = ['--------','تدارکات','اداری و منابع انسانی','مالی','مدیریت','فناوری اطلاعات','وصول مطالبات'];
            for(var e=0;e<7;e++){
                $('#commentManagmentUnit').append($('<option>', {
                    value: x[e],
                    text: arr[e]
                }));
            }

            $('#commentManagmentConsumerUnit').append($('<option>', {
                value: 0,
                text: '--------'
            }));

            var arr2 = ['','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','علی الحساب','برداشت سهامدار','پرداخت قبض','پرداخت جریمه','ثبت در حساب بستانکاری طرف مقابل'];
            var arr3 = ['--------','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','علی الحساب','برداشت سهامدار','پرداخت قبض','پرداخت جریمه','ثبت در حساب بستانکاری طرف مقابل'];
            for(var b=0;b<13;b++){
                $('#commentManagmentType').append($('<option>', {
                    value: arr2[b],
                    text: arr3[b]
                }));
            }
            break;
        case '9':  // مالیاتی
            $("#commentManagmentContractYN-div").css('display','');
            $("#commentManagmentContractNum-div").css('display','');
            $("#commentManagmentToward-div").css('display','');
            $("#commentManagmentRequestSource-div").css('display','');
            $("#commentManagmentRequestNumbers-div").css('display','');
            $("#commentManagmentCheckNumber-div").css('display','none');
            $("#commentManagmentCheckDate-div").css('display','none');
            $("#commentManagmentCheckCarcass-div").css('display','none');
            $("#commentManagmentCheckCarcassFile-div").css('display','none');
            $("#commentManagmentDeliveryDate-div").css('display','none');
            $("#commentManagmentConsumerUnit-div").css('display','none');
            $("#commentManagmentTwoLayer-div").css('display','');
            $('#commentManagmentTwoLayer').append($('<option>', {
                value: 0,
                text: '--------'
            }));
            for(var e=0;e<res.length;e++){
                $('#commentManagmentTwoLayer').append($('<option>', {
                    value: res[e]['RowID'],
                    text: res[e]['layerName']
                }));
            }

            var x = [0,23,31,12];
            var arr = ['--------','مالی','وصول مطالبات','مدیریت'];
            for(var e=0;e<4;e++){
                $('#commentManagmentUnit').append($('<option>', {
                    value: x[e],
                    text: arr[e]
                }));
            }

            $('#commentManagmentConsumerUnit').append($('<option>', {
                value: 0,
                text: '--------'
            }));

            var arr2 = ['','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','علی الحساب','پرداخت جریمه','ثبت در حساب بستانکاری طرف مقابل'];
            var arr3 = ['--------','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','علی الحساب','پرداخت جریمه','ثبت در حساب بستانکاری طرف مقابل'];
            for(var b=0;b<11;b++){
                $('#commentManagmentType').append($('<option>', {
                    value: arr2[b],
                    text: arr3[b]
                }));
            }
            break;
        case '10':  // قراردادهای زیرساختی
            $("#commentManagmentContractYN-div").css('display','');
            $("#commentManagmentContractNum-div").css('display','');
            $("#commentManagmentToward-div").css('display','');
            $("#commentManagmentRequestSource-div").css('display','');
            $("#commentManagmentRequestNumbers-div").css('display','');
            $("#commentManagmentCheckNumber-div").css('display','none');
            $("#commentManagmentCheckDate-div").css('display','none');
            $("#commentManagmentCheckCarcass-div").css('display','none');
            $("#commentManagmentCheckCarcassFile-div").css('display','none');
            $("#commentManagmentDeliveryDate-div").css('display','none');
            $("#commentManagmentConsumerUnit-div").css('display','none');
            $("#commentManagmentTwoLayer-div").css('display','');
            $('#commentManagmentTwoLayer').append($('<option>', {
                value: 0,
                text: '--------'
            }));
            for(var e=0;e<res.length;e++){
                $('#commentManagmentTwoLayer').append($('<option>', {
                    value: res[e]['RowID'],
                    text: res[e]['layerName']
                }));
            }

            var x = [0,20,22,23,24,21,12];
            var arr = ['--------','تدارکات','اداری و منابع انسانی','مالی','بازرگانی فروش','فناوری اطلاعات','مدیریت'];
            for(var e=0;e<7;e++){
                $('#commentManagmentUnit').append($('<option>', {
                    value: x[e],
                    text: arr[e]
                }));
            }

            $('#commentManagmentConsumerUnit').append($('<option>', {
                value: 0,
                text: '--------'
            }));

            var arr2 = ['','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','علی الحساب','ثبت در حساب بستانکاری طرف مقابل'];
            var arr3 = ['--------','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','علی الحساب','ثبت در حساب بستانکاری طرف مقابل'];
            for(var b=0;b<10;b++){
                $('#commentManagmentType').append($('<option>', {
                    value: arr2[b],
                    text: arr3[b]
                }));
            }
            break;
        case '24':  // چک برگشتی
            var radioValue = $("input[name='commentManagmentPayType']:checked").val();
/*            if (parseInt(radioValue) == 0){
                $("#commentManagmentOneLayer").val(-1);
                notice1Sec("چک برگشتی فقط در روش پرداخت فورج قابل ثبت می باشد !","yellow");
                return false;
            }*/
            $("#commentManagmentCheckNumber-div").css('display','');
            $("#commentManagmentCheckDate-div").css('display','');
            $("#commentManagmentCheckCarcass-div").css('display','');
            $("#commentManagmentCheckCarcassFile-div").css('display','none');
            $("#commentManagmentDeliveryDate-div").css('display','none');
            $("#commentManagmentConsumerUnit-div").css('display','none');
            $("#commentManagmentTwoLayer-div").css('display','none');
            $("#commentManagmentContractYN-div").css('display','none');
            $("#commentManagmentContractNum-div").css('display','none');
            $("#commentManagmentToward-div").css('display','none');
            $("#commentManagmentRequestSource-div").css('display','none');
            $("#commentManagmentRequestNumbers-div").css('display','none');
            $("input[name='commentManagmentCheckCarcass']").prop('checked',false);  // لاشه چک

            var x = [0,20,31,23,12];
            var arr = ['--------','تدارکات','وصول مطالبات','مالی','مدیریت'];
            for(var e=0;e<5;e++){
                $('#commentManagmentUnit').append($('<option>', {
                    value: x[e],
                    text: arr[e]
                }));
            }

            $('#commentManagmentConsumerUnit').append($('<option>', {
                value: 0,
                text: '--------'
            }));

            var arr2 = ['','تسویه حساب'];
            var arr3 = ['--------','تسویه حساب'];
            for(var b=0;b<2;b++){
                $('#commentManagmentType').append($('<option>', {
                    value: arr2[b],
                    text: arr3[b]
                }));
            }
            break;
        case '25':  // پرسنلی
            $("#commentManagmentContractYN-div").css('display','');
            $("#commentManagmentContractNum-div").css('display','');
            $("#commentManagmentToward-div").css('display','');
            $("#commentManagmentRequestSource-div").css('display','none');
            $("#commentManagmentRequestNumbers-div").css('display','none');
            $("#commentManagmentCheckNumber-div").css('display','none');
            $("#commentManagmentCheckDate-div").css('display','none');
            $("#commentManagmentCheckCarcass-div").css('display','none');
            $("#commentManagmentCheckCarcassFile-div").css('display','none');
            $("#commentManagmentDeliveryDate-div").css('display','none');
            $("#commentManagmentConsumerUnit-div").css('display','');
            $("#commentManagmentTwoLayer-div").css('display','');
            $('#commentManagmentTwoLayer').append($('<option>', {
                value: 0,
                text: '--------'
            }));
            for(var e=0;e<res.length;e++){
                $('#commentManagmentTwoLayer').append($('<option>', {
                    value: res[e]['RowID'],
                    text: res[e]['layerName']
                }));
            }

            var x = [0,20,22,23,12];
            var arr = ['--------','تدارکات','اداری و منابع انسانی','مالی','مدیریت'];
            for(var e=0;e<5;e++){
                $('#commentManagmentUnit').append($('<option>', {
                    value: x[e],
                    text: arr[e]
                }));
            }
            var unit_code=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,38,39];
            var arr1 = ['--------','ریخته گری','ماشین کاری','پرداخت کاری','آب کاری','پی وی دی','رنگ کاری','فورج و پرس کاری','بافت شیلنگ','مونتاژ','خط لوله','تزریق پلاستیک','مدیریت','تحقیق و توسعه','مهندسی','قالب سازی','نگهداری و تعمیرات','کنترل کیفیت','تضمین کیفیت','برنامه ریزی','تدارکات','فناوری اطلاعات','اداری و منابع انسانی','مالی','بازرگانی فروش','خدمات','انتظامات','انبار مواد مصرفی','انبار کالاهای در جریان','انبار مواد اولیه','انبار شهرک صنعتی توس','وصول مطالبات','پشتیبانی','5s','گروهی (مطابق قسمت توضیحات)','انبار محصول کارخانه','روابط عمومی'];
            for(var c=0;c<unit_code.length;c++){
                $('#commentManagmentConsumerUnit').append($('<option>', {
                    value: c,
                    text: arr1[c]
                }));
            }

            var arr2 = ['','تسویه حساب','علی الحساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','ثبت در حساب بستانکاری طرف مقابل'];
            var arr3 = ['--------','تسویه حساب','علی الحساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','ثبت در حساب بستانکاری طرف مقابل'];
            for(var b=0;b<10;b++){
                $('#commentManagmentType').append($('<option>', {
                    value: arr2[b],
                    text: arr3[b]
                }));
            }
            break;
        case '29':  // اقلام بازرگانی
            $("#commentManagmentContractYN-div").css('display','');
            $("#commentManagmentContractNum-div").css('display','');
            $("#commentManagmentToward-div").css('display','');
            $("#commentManagmentRequestSource-div").css('display','');
            $("#commentManagmentRequestNumbers-div").css('display','');
            $("#commentManagmentCheckNumber-div").css('display','none');
            $("#commentManagmentCheckDate-div").css('display','none');
            $("#commentManagmentCheckCarcass-div").css('display','none');
            $("#commentManagmentCheckCarcassFile-div").css('display','none');
            $("#commentManagmentDeliveryDate-div").css('display','none');
            $("#commentManagmentConsumerUnit-div").css('display','');
            $("#commentManagmentTwoLayer-div").css('display','');
            $('#commentManagmentTwoLayer').append($('<option>', {
                value: 0,
                text: '--------'
            }));
            for(var e=0;e<res.length;e++){
                $('#commentManagmentTwoLayer').append($('<option>', {
                    value: res[e]['RowID'],
                    text: res[e]['layerName']
                }));
            }

            var x = [0,20,24,31,12];
            var arr = ['--------','تدارکات','بازرگانی فروش','وصول مطالبات','مدیریت'];
            for(var e=0;e<5;e++){
                $('#commentManagmentUnit').append($('<option>', {
                    value: x[e],
                    text: arr[e]
                }));
            }

            var m = [0,24];
            var arr1 = ['--------','بازرگانی فروش'];
            for(var e=0;e<2;e++){
                $('#commentManagmentConsumerUnit').append($('<option>', {
                    value: m[e],
                    text: arr1[e]
                }));
            }

            var arr2 = ['','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','علی الحساب','ثبت در حساب بستانکاری طرف مقابل'];
            var arr3 = ['--------','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','علی الحساب','ثبت در حساب بستانکاری طرف مقابل'];
            for(var b=0;b<10;b++){
                $('#commentManagmentType').append($('<option>', {
                    value: arr2[b],
                    text: arr3[b]
                }));
            }
            break;
        case '30':  // محصولات تولیدی
            $("#commentManagmentContractYN-div").css('display','');
            $("#commentManagmentContractNum-div").css('display','');
            $("#commentManagmentToward-div").css('display','');
            $("#commentManagmentRequestSource-div").css('display','');
            $("#commentManagmentRequestNumbers-div").css('display','');
            $("#commentManagmentCheckNumber-div").css('display','none');
            $("#commentManagmentCheckDate-div").css('display','none');
            $("#commentManagmentCheckCarcass-div").css('display','none');
            $("#commentManagmentCheckCarcassFile-div").css('display','none');
            $("#commentManagmentDeliveryDate-div").css('display','none');
            $("#commentManagmentConsumerUnit-div").css('display','');
            $("#commentManagmentTwoLayer-div").css('display','');
            $('#commentManagmentTwoLayer').append($('<option>', {
                value: 0,
                text: '--------'
            }));
            for(var e=0;e<res.length;e++){
                $('#commentManagmentTwoLayer').append($('<option>', {
                    value: res[e]['RowID'],
                    text: res[e]['layerName']
                }));
            }

            var x = [0,20,24,31,21,39,12,42,23];
            var arr = ['--------','تدارکات','بازرگانی فروش','وصول مطالبات','فناوری اطلاعات','روابط عمومی','مدیریت','واحد گرافیک و تولید محتوا','مالی'];
            for(var e=0;e<10;e++){
                $('#commentManagmentUnit').append($('<option>', {
                    value: x[e],
                    text: arr[e]
                }));
            }

            var m = [0,12,24,17,42,39];
            var arr1 = ['--------','مدیریت','بازرگانی فروش','کنترل کیفیت','واحد گرافیک و تولید محتوا','روابط عمومی'];
            for(var e=0;e<4;e++){
                $('#commentManagmentConsumerUnit').append($('<option>', {
                    value: m[e],
                    text: arr1[e]
                }));
            }

            var arr2 = ['','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','علی الحساب','ثبت در حساب بستانکاری طرف مقابل'];
            var arr3 = ['--------','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','علی الحساب','ثبت در حساب بستانکاری طرف مقابل'];
            for(var b=0;b<10;b++){
                $('#commentManagmentType').append($('<option>', {
                    value: arr2[b],
                    text: arr3[b]
                }));
            }
            break;
        case '42':  // واردات
            $("#commentManagmentContractYN-div").css('display','');
            $("#commentManagmentContractNum-div").css('display','');
            $("#commentManagmentToward-div").css('display','');
            $("#commentManagmentRequestSource-div").css('display','');
            $("#commentManagmentRequestNumbers-div").css('display','');
            $("#commentManagmentCheckNumber-div").css('display','none');
            $("#commentManagmentCheckDate-div").css('display','none');
            $("#commentManagmentCheckCarcass-div").css('display','none');
            $("#commentManagmentCheckCarcassFile-div").css('display','none');
            $("#commentManagmentDeliveryDate-div").css('display','none');
            $("#commentManagmentConsumerUnit-div").css('display','');
            $("#commentManagmentTwoLayer-div").css('display','');
            $('#commentManagmentTwoLayer').append($('<option>', {
                value: 0,
                text: '--------'
            }));
            for(var e=0;e<res.length;e++){
                $('#commentManagmentTwoLayer').append($('<option>', {
                    value: res[e]['RowID'],
                    text: res[e]['layerName']
                }));
            }

            var x = [0,20,23,12,22];
            var arr = ['--------','تدارکات','مالی','مدیریت','اداری و منابع انسانی'];
            for(var e=0;e<5;e++){
                $('#commentManagmentUnit').append($('<option>', {
                    value: x[e],
                    text: arr[e]
                }));
            }

            var arr1 = ['--------','ریخته گری','ماشین کاری','پرداخت کاری','آب کاری','پی وی دی','رنگ کاری','فورج و پرس کاری','بافت شیلنگ','مونتاژ','خط لوله','تزریق پلاستیک'];
            for(var c=0;c<12;c++){
                $('#commentManagmentConsumerUnit').append($('<option>', {
                    value: c,
                    text: arr1[c]
                }));
            }

            var arr2 = ['','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','علی الحساب','ثبت در حساب بستانکاری طرف مقابل'];
            var arr3 = ['--------','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','علی الحساب','ثبت در حساب بستانکاری طرف مقابل'];
            for(var b=0;b<10;b++){
                $('#commentManagmentType').append($('<option>', {
                    value: arr2[b],
                    text: arr3[b]
                }));
            }
            break;
        case '43':  // دارایی ثابت
            $("#commentManagmentContractYN-div").css('display','');
            $("#commentManagmentContractNum-div").css('display','');
            $("#commentManagmentToward-div").css('display','');
            $("#commentManagmentRequestSource-div").css('display','');
            $("#commentManagmentRequestNumbers-div").css('display','');
            $("#commentManagmentCheckNumber-div").css('display','none');
            $("#commentManagmentCheckDate-div").css('display','none');
            $("#commentManagmentCheckCarcass-div").css('display','none');
            $("#commentManagmentCheckCarcassFile-div").css('display','none');
            $("#commentManagmentDeliveryDate-div").css('display','none');
            $("#commentManagmentConsumerUnit-div").css('display','');
            $("#commentManagmentTwoLayer-div").css('display','');
            $('#commentManagmentTwoLayer').append($('<option>', {
                value: 0,
                text: '--------'
            }));
            for(var e=0;e<res.length;e++){
                $('#commentManagmentTwoLayer').append($('<option>', {
                    value: res[e]['RowID'],
                    text: res[e]['layerName']
                }));
            }

            var x = [0,20,12,23,21,39];
            var arr = ['--------','تدارکات','مدیریت','مالی','فناوری اطلاعات','روابط عمومی'];
            for(var e=0;e<x.length;e++){
                $('#commentManagmentUnit').append($('<option>', {
                    value: x[e],
                    text: arr[e]
                }));
            }

            var arr1 = ['--------','ریخته گری','ماشین کاری','پرداخت کاری','آب کاری','پی وی دی','رنگ کاری','فورج و پرس کاری','بافت شیلنگ','مونتاژ','خط لوله','تزریق پلاستیک','مدیریت','تحقیق و توسعه','مهندسی','قالب سازی','نگهداری و تعمیرات','کنترل کیفیت','تضمین کیفیت','برنامه ریزی','تدارکات','فناوری اطلاعات','اداری و منابع انسانی','مالی','بازرگانی فروش','خدمات','انتظامات','انبار مواد مصرفی','انبار کالاهای در جریان','انبار مواد اولیه','انبار شهرک صنعتی توس','وصول مطالبات','پشتیبانی','5s','گروهی (مطابق قسمت توضیحات)','رمز ارز','انبار حاشیه جادو سنتو','حقوقی','انبار محصول کارخانه'];
            for(var c=0;c<39;c++){
                $('#commentManagmentConsumerUnit').append($('<option>', {
                    value: c,
                    text: arr1[c]
                }));
            }

            var arr2 = ['','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','علی الحساب','ثبت در حساب بستانکاری طرف مقابل'];
            var arr3 = ['--------','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','علی الحساب','ثبت در حساب بستانکاری طرف مقابل'];
            for(var b=0;b<10;b++){
                $('#commentManagmentType').append($('<option>', {
                    value: arr2[b],
                    text: arr3[b]
                }));
            }
            break;
        case '50':  // وسائط نقلیه
            $("#commentManagmentContractYN-div").css('display','');
            $("#commentManagmentContractNum-div").css('display','');
            $("#commentManagmentToward-div").css('display','');
            $("#commentManagmentRequestSource-div").css('display','');
            $("#commentManagmentRequestNumbers-div").css('display','');
            $("#commentManagmentCheckNumber-div").css('display','none');
            $("#commentManagmentCheckDate-div").css('display','none');
            $("#commentManagmentCheckCarcass-div").css('display','none');
            $("#commentManagmentCheckCarcassFile-div").css('display','none');
            $("#commentManagmentDeliveryDate-div").css('display','none');
            $("#commentManagmentConsumerUnit-div").css('display','');
            $("#commentManagmentTwoLayer-div").css('display','');
            $('#commentManagmentTwoLayer').append($('<option>', {
                value: 0,
                text: '--------'
            }));
            for(var e=0;e<res.length;e++){
                $('#commentManagmentTwoLayer').append($('<option>', {
                    value: res[e]['RowID'],
                    text: res[e]['layerName']
                }));
            }

            var x = [0,20,22,12,21];
            var arr = ['--------','تدارکات','اداری و منابع انسانی','مدیریت','فناوری اطلاعات'];
            for(var e=0;e<x.length;e++){
                $('#commentManagmentUnit').append($('<option>', {
                    value: x[e],
                    text: arr[e]
                }));
            }

            var m = [0,32,21];
            var arr1 = ['--------','پشتیبانی','فناوری اطلاعات'];
            for(var e=0;e<arr1.length;e++){
                $('#commentManagmentConsumerUnit').append($('<option>', {
                    value: m[e],
                    text: arr1[e]
                }));
            }

            var arr2 = ['','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','علی الحساب','پرداخت جریمه','ثبت در حساب بستانکاری طرف مقابل'];
            var arr3 = ['--------','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','علی الحساب','پرداخت جریمه','ثبت در حساب بستانکاری طرف مقابل'];
            for(var b=0;b<10;b++){
                $('#commentManagmentType').append($('<option>', {
                    value: arr2[b],
                    text: arr3[b]
                }));
            }
            break;
		case '68':  // تحقیق و توسعه
            $("#commentManagmentContractYN-div").css('display','');
            $("#commentManagmentContractNum-div").css('display','');
            $("#commentManagmentToward-div").css('display','');
            $("#commentManagmentRequestSource-div").css('display','');
            $("#commentManagmentRequestNumbers-div").css('display','');
            $("#commentManagmentCheckNumber-div").css('display','none');
            $("#commentManagmentCheckDate-div").css('display','none');
            $("#commentManagmentCheckCarcass-div").css('display','none');
            $("#commentManagmentCheckCarcassFile-div").css('display','none');
            $("#commentManagmentDeliveryDate-div").css('display','none');
            $("#commentManagmentConsumerUnit-div").css('display','');
            $("#commentManagmentTwoLayer-div").css('display','');
            $('#commentManagmentTwoLayer').append($('<option>', {
                value: 0,
                text: '--------'
            }));
            for(var e=0;e<res.length;e++){
                $('#commentManagmentTwoLayer').append($('<option>', {
                    value: res[e]['RowID'],
                    text: res[e]['layerName']
                }));
            }

            var x = [0,20,22,24,12,42,21];
            var arr = ['--------','تدارکات','اداری و منابع انسانی','بازرگانی فروش','مدیریت','گرافیک و تولید محتوا','فناوری اطلاعات'];
            for(var e=0;e<x.length;e++){
                $('#commentManagmentUnit').append($('<option>', {
                    value: x[e],
                    text: arr[e]
                }));
            }

            var arr1 = ['--------','ریخته گری','ماشین کاری','پرداخت کاری','آب کاری','پی وی دی','رنگ کاری','فورج و پرس کاری','بافت شیلنگ','مونتاژ','خط لوله','تزریق پلاستیک','مدیریت','تحقیق و توسعه','مهندسی','قالب سازی','نگهداری و تعمیرات','کنترل کیفیت','تضمین کیفیت','برنامه ریزی','تدارکات','فناوری اطلاعات','اداری و منابع انسانی','مالی','بازرگانی فروش','خدمات','انتظامات','انبار مواد مصرفی','انبار کالاهای در جریان','انبار مواد اولیه','انبار شهرک صنعتی توس','وصول مطالبات','پشتیبانی','5s','گروهی (مطابق قسمت توضیحات)','رمز ارز'];
            for(var c=0;c<36;c++){
                $('#commentManagmentConsumerUnit').append($('<option>', {
                    value: c,
                    text: arr1[c]
                }));
            }

            var arr2 = ['','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','ثبت در حساب بستانکاری طرف مقابل'];
            var arr3 = ['--------','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','ثبت در حساب بستانکاری طرف مقابل'];
            for(var b=0;b<9;b++){
                $('#commentManagmentType').append($('<option>', {
                    value: arr2[b],
                    text: arr3[b]
                }));
            }
            break;
		case '74':  // تشریفات
            $("#commentManagmentContractYN-div").css('display','');
            $("#commentManagmentContractNum-div").css('display','');
            $("#commentManagmentToward-div").css('display','');
            $("#commentManagmentRequestSource-div").css('display','');
            $("#commentManagmentRequestNumbers-div").css('display','');
            $("#commentManagmentCheckNumber-div").css('display','none');
            $("#commentManagmentCheckDate-div").css('display','none');
            $("#commentManagmentCheckCarcass-div").css('display','none');
            $("#commentManagmentCheckCarcassFile-div").css('display','none');
            $("#commentManagmentDeliveryDate-div").css('display','none');
            $("#commentManagmentConsumerUnit-div").css('display','');
            $("#commentManagmentTwoLayer-div").css('display','');
            $('#commentManagmentTwoLayer').append($('<option>', {
                value: 0,
                text: '--------'
            }));
            
            for(var e=0;e<res.length;e++){
                $('#commentManagmentTwoLayer').append($('<option>', {
                    value: res[e]['RowID'],
                    text: res[e]['layerName']
                }));
            }

            var x = [0,20,22,24,31,39,12,23];
            var arr = ['--------','تدارکات','اداری و منابع انسانی','بازرگانی فروش','وصول مطالبات','روابط عمومی','مدیریت','مالی'];
            for(var e=0;e<8;e++){
                $('#commentManagmentUnit').append($('<option>', {
                    value: x[e],
                    text: arr[e]
                }));
            }
            var arra1_value=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,39];
                var arr1 = ['--------','ریخته گری','ماشین کاری','پرداخت کاری','آب کاری','پی وی دی','رنگ کاری','فورج و پرس کاری','بافت شیلنگ','مونتاژ','خط لوله','تزریق پلاستیک','مدیریت','تحقیق و توسعه','مهندسی','قالب سازی','نگهداری و تعمیرات','کنترل کیفیت','تضمین کیفیت','برنامه ریزی','تدارکات','فناوری اطلاعات','اداری و منابع انسانی','مالی','بازرگانی فروش','خدمات','انتظامات','انبار مواد مصرفی','انبار کالاهای در جریان','انبار مواد اولیه','انبار شهرک صنعتی توس','وصول مطالبات','پشتیبانی','5s','گروهی (مطابق قسمت توضیحات)','رمز ارز','روابط عمومی'];
                for(var c=0;c<arr1.length;c++){
                    $('#commentManagmentConsumerUnit').append($('<option>', {
                        value: arra1_value[c],
                        text: arr1[c]
                    }));
                }
            // var arr1 = ['--------','ریخته گری','ماشین کاری','پرداخت کاری','آب کاری','پی وی دی','رنگ کاری','فورج و پرس کاری','بافت شیلنگ','مونتاژ','خط لوله','تزریق پلاستیک','مدیریت','تحقیق و توسعه','مهندسی','قالب سازی','نگهداری و تعمیرات','کنترل کیفیت','تضمین کیفیت','برنامه ریزی','تدارکات','فناوری اطلاعات','اداری و منابع انسانی','مالی','بازرگانی فروش','خدمات','انتظامات','انبار مواد مصرفی','انبار کالاهای در جریان','انبار مواد اولیه','انبار شهرک صنعتی توس','وصول مطالبات','پشتیبانی','5s','گروهی (مطابق قسمت توضیحات)','رمز ارز','روابط عمومی'];
            // for(var c=0;c<arr1.length;c++){
            //     $('#commentManagmentConsumerUnit').append($('<option>', {
            //         value: c,
            //         text: arr1[c]
            //     }));
            // }

            var arr2 = ['','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','ثبت در حساب بستانکاری طرف مقابل'];
            var arr3 = ['--------','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','ثبت در حساب بستانکاری طرف مقابل'];
            for(var b=0;b<9;b++){
                $('#commentManagmentType').append($('<option>', {
                    value: arr2[b],
                    text: arr3[b]
                }));
            }
            break;
        case '78':  // امور خیریه
            $("#commentManagmentContractYN-div").css('display','');
            $("#commentManagmentContractNum-div").css('display','');
            $("#commentManagmentToward-div").css('display','');
            $("#commentManagmentRequestSource-div").css('display','');
            $("#commentManagmentRequestNumbers-div").css('display','');
            $("#commentManagmentCheckNumber-div").css('display','none');
            $("#commentManagmentCheckDate-div").css('display','none');
            $("#commentManagmentCheckCarcass-div").css('display','none');
            $("#commentManagmentCheckCarcassFile-div").css('display','none');
            $("#commentManagmentDeliveryDate-div").css('display','none');
            $("#commentManagmentConsumerUnit-div").css('display','none');
            $("#commentManagmentTwoLayer-div").css('display','none');

            var x = [0,22,12,39];
            var arr = ['--------','اداری و منابع انسانی','مدیریت','روابط عمومی'];
            for(var e=0;e<4;e++){
                $('#commentManagmentUnit').append($('<option>', {
                    value: x[e],
                    text: arr[e]
                }));
            }

            $('#commentManagmentConsumerUnit').append($('<option>', {
                value: 0,
                text: '--------'
            }));

            var arr2 = ['','تسویه حساب'];
            var arr3 = ['--------','تسویه حساب'];
            for(var b=0;b<2;b++){
                $('#commentManagmentType').append($('<option>', {
                    value: arr2[b],
                    text: arr3[b]
                }));
            }
            break;
        case '95':  // حقوقی
            $("#commentManagmentContractYN-div").css('display','');
            $("#commentManagmentContractNum-div").css('display','');
            $("#commentManagmentToward-div").css('display','');
            $("#commentManagmentRequestSource-div").css('display','');
            $("#commentManagmentRequestNumbers-div").css('display','');
            $("#commentManagmentCheckNumber-div").css('display','none');
            $("#commentManagmentCheckDate-div").css('display','none');
            $("#commentManagmentCheckCarcass-div").css('display','none');
            $("#commentManagmentCheckCarcassFile-div").css('display','none');
            $("#commentManagmentDeliveryDate-div").css('display','none');
            $("#commentManagmentConsumerUnit-div").css('display','');
            $("#commentManagmentTwoLayer-div").css('display','');
            $('#commentManagmentTwoLayer').append($('<option>', {
                value: 0,
                text: '--------'
            }));
            for(var e=0;e<res.length;e++){
                $('#commentManagmentTwoLayer').append($('<option>', {
                    value: res[e]['RowID'],
                    text: res[e]['layerName']
                }));
            }

            var x = [0,23,22,12];
            var arr = ['--------','مالی','اداری و منابع انسانی','مدیریت'];
            for(var e=0;e<4;e++){
                $('#commentManagmentUnit').append($('<option>', {
                    value: x[e],
                    text: arr[e]
                }));
            }

            var m = [0,37];
            var arr1 = ['--------','حقوقی'];
            for(var e=0;e<2;e++){
                $('#commentManagmentConsumerUnit').append($('<option>', {
                    value: m[e],
                    text: arr1[e]
                }));
            }

            var arr2 = ['','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','علی الحساب'];
            var arr3 = ['--------','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','علی الحساب'];
            for(var b=0;b<9;b++){
                $('#commentManagmentType').append($('<option>', {
                    value: arr2[b],
                    text: arr3[b]
                }));
            }
            break;
        case '167':  // پست
            $("#commentManagmentContractYN-div").css('display','');
            $("#commentManagmentContractNum-div").css('display','');
            $("#commentManagmentToward-div").css('display','');
            $("#commentManagmentRequestSource-div").css('display','');
            $("#commentManagmentRequestNumbers-div").css('display','');
            $("#commentManagmentCheckNumber-div").css('display','none');
            $("#commentManagmentCheckDate-div").css('display','none');
            $("#commentManagmentCheckCarcass-div").css('display','none');
            $("#commentManagmentCheckCarcassFile-div").css('display','none');
            $("#commentManagmentDeliveryDate-div").css('display','none');
            $("#commentManagmentConsumerUnit-div").css('display','');
            $("#commentManagmentTwoLayer-div").css('display','');
            $('#commentManagmentTwoLayer').append($('<option>', {
                value: 0,
                text: '--------'
            }));
            for(var e=0;e<res.length;e++){
                $('#commentManagmentTwoLayer').append($('<option>', {
                    value: res[e]['RowID'],
                    text: res[e]['layerName']
                }));
            }

            var x = [0,20,22,24,12];
            var arr = ['--------','تدارکات','اداری و منابع انسانی','بازرگانی فروش','مدیریت'];
            for(var e=0;e<5;e++){
                $('#commentManagmentUnit').append($('<option>', {
                    value: x[e],
                    text: arr[e]
                }));
            }

            var arr1 = ['--------','ریخته گری','ماشین کاری','پرداخت کاری','آب کاری','پی وی دی','رنگ کاری','فورج و پرس کاری','بافت شیلنگ','مونتاژ','خط لوله','تزریق پلاستیک','مدیریت','تحقیق و توسعه','مهندسی','قالب سازی','نگهداری و تعمیرات','کنترل کیفیت','تضمین کیفیت','برنامه ریزی','تدارکات','فناوری اطلاعات','اداری و منابع انسانی','مالی','بازرگانی فروش','خدمات','انتظامات','انبار مواد مصرفی','انبار کالاهای در جریان','انبار مواد اولیه','انبار شهرک صنعتی توس'];
            for(var c=0;c<31;c++){
                $('#commentManagmentConsumerUnit').append($('<option>', {
                    value: c,
                    text: arr1[c]
                }));
            }

            var arr2 = ['','تسویه حساب'];
            var arr3 = ['--------','تسویه حساب'];
            for(var b=0;b<2;b++){
                $('#commentManagmentType').append($('<option>', {
                    value: arr2[b],
                    text: arr3[b]
                }));
            }
            break;
        case '233':  // فتوکپی
            $("#commentManagmentContractYN-div").css('display','');
            $("#commentManagmentContractNum-div").css('display','');
            $("#commentManagmentToward-div").css('display','');
            $("#commentManagmentRequestSource-div").css('display','');
            $("#commentManagmentRequestNumbers-div").css('display','');
            $("#commentManagmentCheckNumber-div").css('display','none');
            $("#commentManagmentCheckDate-div").css('display','none');
            $("#commentManagmentCheckCarcass-div").css('display','none');
            $("#commentManagmentCheckCarcassFile-div").css('display','none');
            $("#commentManagmentDeliveryDate-div").css('display','none');
            $("#commentManagmentConsumerUnit-div").css('display','none');
            $("#commentManagmentTwoLayer-div").css('display','none');

            var x = [0,22,24,12];
            var arr = ['--------','اداری و منابع انسانی','بازرگانی فروش','مدیریت'];
            for(var e=0;e<4;e++){
                $('#commentManagmentUnit').append($('<option>', {
                    value: x[e],
                    text: arr[e]
                }));
            }

            $('#commentManagmentConsumerUnit').append($('<option>', {
                value: 0,
                text: '--------'
            }));

            var arr2 = ['','تسویه حساب'];
            var arr3 = ['--------','تسویه حساب'];
            for(var b=0;b<2;b++){
                $('#commentManagmentType').append($('<option>', {
                    value: arr2[b],
                    text: arr3[b]
                }));
            }
            break;
        case '236':  // مواد اولیه - عمده
            $("#commentManagmentContractYN-div").css('display','');
            $("#commentManagmentContractNum-div").css('display','');
            $("#commentManagmentToward-div").css('display','');
            $("#commentManagmentRequestSource-div").css('display','');
            $("#commentManagmentRequestNumbers-div").css('display','');
            $("#commentManagmentCheckNumber-div").css('display','none');
            $("#commentManagmentCheckDate-div").css('display','none');
            $("#commentManagmentCheckCarcass-div").css('display','none');
            $("#commentManagmentCheckCarcassFile-div").css('display','none');
            $("#commentManagmentDeliveryDate-div").css('display','none');
            $("#commentManagmentConsumerUnit-div").css('display','');
            $("#commentManagmentTwoLayer-div").css('display','');
            $('#commentManagmentTwoLayer').append($('<option>', {
                value: 0,
                text: '--------'
            }));
            for(var e=0;e<res.length;e++){
                $('#commentManagmentTwoLayer').append($('<option>', {
                    value: res[e]['RowID'],
                    text: res[e]['layerName']
                }));
            }

            var x = [0,23,20,12];
            var arr = ['--------','مالی','تدارکات','مدیریت'];
            for(var e=0;e<4;e++){
                $('#commentManagmentUnit').append($('<option>', {
                    value: x[e],
                    text: arr[e]
                }));
            }

            $('#commentManagmentConsumerUnit').append($('<option>', {
                value: 0,
                text: '--------'
            }));

            var arr2 = ['','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','علی الحساب','ثبت در حساب بستانکاری طرف مقابل'];
            var arr3 = ['--------','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','علی الحساب','ثبت در حساب بستانکاری طرف مقابل'];
            for(var b=0;b<10;b++){
                $('#commentManagmentType').append($('<option>', {
                    value: arr2[b],
                    text: arr3[b]
                }));
            }
            break;
        case '249':  // بسته بندی
            $("#commentManagmentContractYN-div").css('display','');
            $("#commentManagmentContractNum-div").css('display','');
            $("#commentManagmentToward-div").css('display','');
            $("#commentManagmentRequestSource-div").css('display','');
            $("#commentManagmentRequestNumbers-div").css('display','');
            $("#commentManagmentCheckNumber-div").css('display','none');
            $("#commentManagmentCheckDate-div").css('display','none');
            $("#commentManagmentCheckCarcass-div").css('display','none');
            $("#commentManagmentCheckCarcassFile-div").css('display','none');
            $("#commentManagmentDeliveryDate-div").css('display','none');
            $("#commentManagmentConsumerUnit-div").css('display','');
            $("#commentManagmentTwoLayer-div").css('display','');
            $('#commentManagmentTwoLayer').append($('<option>', {
                value: 0,
                text: '--------'
            }));
            for(var e=0;e<res.length;e++){
                $('#commentManagmentTwoLayer').append($('<option>', {
                    value: res[e]['RowID'],
                    text: res[e]['layerName']
                }));
            }

            var x = [0,20,12];
            var arr = ['--------','تدارکات','مدیریت'];
            for(var e=0;e<3;e++){
                $('#commentManagmentUnit').append($('<option>', {
                    value: x[e],
                    text: arr[e]
                }));
            }

            var arr1 = ['--------','ریخته گری','ماشین کاری','پرداخت کاری','آب کاری','پی وی دی','رنگ کاری','فورج و پرس کاری','بافت شیلنگ','مونتاژ','خط لوله','تزریق پلاستیک','مدیریت','تحقیق و توسعه','مهندسی','قالب سازی','نگهداری و تعمیرات','کنترل کیفیت','تضمین کیفیت','برنامه ریزی','تدارکات','فناوری اطلاعات','اداری و منابع انسانی','مالی','بازرگانی فروش','خدمات','انتظامات','انبار مواد مصرفی','انبار کالاهای در جریان','انبار مواد اولیه','انبار شهرک صنعتی توس','وصول مطالبات','پشتیبانی','5s','گروهی (مطابق قسمت توضیحات)','رمز ارز'];
            for(var c=0;c<36;c++){
                $('#commentManagmentConsumerUnit').append($('<option>', {
                    value: c,
                    text: arr1[c]
                }));
            }

            var arr2 = ['','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','ثبت در حساب بستانکاری طرف مقابل'];
            var arr3 = ['--------','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','ثبت در حساب بستانکاری طرف مقابل'];
            for(var b=0;b<9;b++){
                $('#commentManagmentType').append($('<option>', {
                    value: arr2[b],
                    text: arr3[b]
                }));
            }
            break;
        case '267':  // وجوه قرض الحسنه
            $("#commentManagmentContractYN-div").css('display','');
            $("#commentManagmentContractNum-div").css('display','');
            $("#commentManagmentToward-div").css('display','');
            $("#commentManagmentRequestSource-div").css('display','');
            $("#commentManagmentRequestNumbers-div").css('display','');
            $("#commentManagmentCheckNumber-div").css('display','none');
            $("#commentManagmentCheckDate-div").css('display','none');
            $("#commentManagmentCheckCarcass-div").css('display','none');
            $("#commentManagmentCheckCarcassFile-div").css('display','none');
            $("#commentManagmentDeliveryDate-div").css('display','none');
            $("#commentManagmentConsumerUnit-div").css('display','none');
            $("#commentManagmentTwoLayer-div").css('display','none');

            var x = [0,12,23];
            var arr = ['--------','مدیریت','مالی'];
            for(var e=0;e<3;e++){
                $('#commentManagmentUnit').append($('<option>', {
                    value: x[e],
                    text: arr[e]
                }));
            }

            $('#commentManagmentConsumerUnit').append($('<option>', {
                value: 0,
                text: '--------'
            }));

            var arr2 = ['','تسویه حساب'];
            var arr3 = ['--------','تسویه حساب'];
            for(var b=0;b<2;b++){
                $('#commentManagmentType').append($('<option>', {
                    value: arr2[b],
                    text: arr3[b]
                }));
            }
            break;
        case '279':  // پاک سازی
            $("#commentManagmentContractYN-div").css('display','');
            $("#commentManagmentContractNum-div").css('display','');
            $("#commentManagmentToward-div").css('display','');
            $("#commentManagmentRequestSource-div").css('display','');
            $("#commentManagmentRequestNumbers-div").css('display','');
            $("#commentManagmentCheckNumber-div").css('display','none');
            $("#commentManagmentCheckDate-div").css('display','none');
            $("#commentManagmentCheckCarcass-div").css('display','none');
            $("#commentManagmentCheckCarcassFile-div").css('display','none');
            $("#commentManagmentDeliveryDate-div").css('display','none');
            $("#commentManagmentConsumerUnit-div").css('display','');
            $("#commentManagmentTwoLayer-div").css('display','');
            $('#commentManagmentTwoLayer').append($('<option>', {
                value: 0,
                text: '--------'
            }));
            for(var e=0;e<res.length;e++){
                $('#commentManagmentTwoLayer').append($('<option>', {
                    value: res[e]['RowID'],
                    text: res[e]['layerName']
                }));
            }

            var x = [0,20,12];
            var arr = ['--------','تدارکات','مدیریت'];
            for(var e=0;e<3;e++){
                $('#commentManagmentUnit').append($('<option>', {
                    value: x[e],
                    text: arr[e]
                }));
            }

            var m = [0,25];
            var arr1 = ['--------','خدمات'];
            for(var e=0;e<2;e++){
                $('#commentManagmentConsumerUnit').append($('<option>', {
                    value: m[e],
                    text: arr1[e]
                }));
            }

            var arr2 = ['','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5'];
            var arr3 = ['--------','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5'];
            for(var b=0;b<8;b++){
                $('#commentManagmentType').append($('<option>', {
                    value: arr2[b],
                    text: arr3[b]
                }));
            }
            break;
        case '281':  // درخواست نرم افزاری جزئی
            $("#commentManagmentContractYN-div").css('display','');
            $("#commentManagmentContractNum-div").css('display','');
            $("#commentManagmentToward-div").css('display','');
            $("#commentManagmentRequestSource-div").css('display','');
            $("#commentManagmentRequestNumbers-div").css('display','');
            $("#commentManagmentCheckNumber-div").css('display','none');
            $("#commentManagmentCheckDate-div").css('display','none');
            $("#commentManagmentCheckCarcass-div").css('display','none');
            $("#commentManagmentCheckCarcassFile-div").css('display','none');
            $("#commentManagmentDeliveryDate-div").css('display','none');
            $("#commentManagmentConsumerUnit-div").css('display','none');
            $("#commentManagmentTwoLayer-div").css('display','');
            $('#commentManagmentTwoLayer').append($('<option>', {
                value: 0,
                text: '--------'
            }));
            for(var e=0;e<res.length;e++){
                $('#commentManagmentTwoLayer').append($('<option>', {
                    value: res[e]['RowID'],
                    text: res[e]['layerName']
                }));
            }

            var x = [0,21,12];
            var arr = ['--------','فناوری اطلاعات','مدیریت'];
            for(var e=0;e<2;e++){
                $('#commentManagmentUnit').append($('<option>', {
                    value: x[e],
                    text: arr[e]
                }));
            }

            $('#commentManagmentConsumerUnit').append($('<option>', {
                value: 0,
                text: '--------'
            }));

            var arr2 = ['','تسویه حساب','پیش پرداخت'];
            var arr3 = ['--------','تسویه حساب','پیش پرداخت'];
            for(var b=0;b<3;b++){
                $('#commentManagmentType').append($('<option>', {
                    value: arr2[b],
                    text: arr3[b]
                }));
            }
            break;
    }
    select_data_picker($("#commentManagmentConsumerUnit"),1);
}

function onchange_simulate_barnameh(selected_option="",layer1=""){
    var related_barname = $("input[name='drivers_fare']:checked").val()?$("input[name='drivers_fare']:checked").val():0;
    if(related_barname == 1){
        $("#commentManagmentUnit").find('option').remove().end();
        set_commentManagmentUnit('related_to_barnameh',selected_option);
    }
    else{
       var action="get_all_layers_one";
       var res=ajaxHandler({action:action});
       if(res)
        {
            var options="<option value='0'>------</option>";
            for(k in res){
                options+=`<option value="${res[k]['RowID']}">${res[k]['layerName']}</option>`; 
            }
            $("#commentManagmentOneLayer").find('option').remove().end();;
            $("#commentManagmentOneLayer").append(options);
            $("#commentManagmentOneLayer").selectpicker('refresh');
            $("#commentManagmentOneLayer").selectpicker('deselectAll');
            $("#commentManagmentOneLayer").val(layer1);
            $("#commentManagmentOneLayer").selectpicker('refresh');
       }
    }
}

function set_commentManagmentUnit(meta_data,selected_option=""){
    var action="set_commentManagmentUnit";
    var params={action:action,meta_data:meta_data}
    var res=ajaxHandler(params);
    if(res){
        var options='<option value="0">-------</option>';
        for(k in res){
           options += `<option value="${res[k]['RowID']}">${res[k]['unitName']}</option>`;
        }
        $("#commentManagmentUnit").append(options);
        if(parseInt(selected_option)>0){
            $("#commentManagmentUnit").val(selected_option.toString());
        }
    }
}

function ShowWorkflowCommentAgain(cid){
    ShowWorkflowComment(cid);
    var current_z_index=$("#managePartnersCartableModal").css('z-index');
    $("#commentWorkflowModal").css("z-index",parseInt(current_z_index)+1)
    
}

function showHideClearingFund() {
    var layer2 = $("#commentManagmentTwoLayer").val();
    $('#commentManagmentThreeLayer').empty();
    var res = Main.getSubLayers(layer2);
    switch (layer2) {
        case '13':
        case '14':
        case '318':
            $("#commentManagmentConsumerUnit-div").css("display","none");
            $("#commentManagmentConsumerUnit").val(0);
            $("#commentManagmentTotalAmount").attr("disabled","true");
            $("#commentManagmentAmount").attr("disabled","true");
            $("#commentManagmentCashSection").attr("disabled","true");
            $("#commentManagmentNonCashSection").attr("disabled","true");
            $("#commentManagmentPaymentMaturityCheck").attr("disabled","true");
            $("#commentManagmentTotalAmount").val(0);
            $("#commentManagmentAmount").val(0);
            $("#commentManagmentCashSection").val(0);
            $("#commentManagmentNonCashSection").val('');
            $("#commentManagmentPaymentMaturityCheck").val('');
            $("#commentManagmentThreeLayer-div").css('display', 'none');
            $("#commentManagmentClearingFund-div").css('display', 'none');
            $("#commentManagmentClearingFund").val('');
            break;
        case '17':
        case '18':
        case '19':
        case '20':
        case '237':
        case '326':
       
            $("#commentManagmentConsumerUnit-div").css("display","none");
            $("#commentManagmentTotalAmount").removeAttr("disabled");
            $("#commentManagmentAmount").removeAttr("disabled");
            $("#commentManagmentCashSection").removeAttr("disabled");
            $("#commentManagmentNonCashSection").removeAttr("disabled");
            $("#commentManagmentPaymentMaturityCheck").removeAttr("disabled");
            $("#commentManagmentTotalAmount").val('');
            $("#commentManagmentAmount").val('');
            $("#commentManagmentCashSection").val('');
            $("#commentManagmentNonCashSection").val('');
            $("#commentManagmentPaymentMaturityCheck").val('');
            $("#commentManagmentClearingFund-div").css('display', 'none');
            $("#commentManagmentClearingFund").val('');
            $("#commentManagmentThreeLayer-div").css('display', '');
            $('#commentManagmentThreeLayer').append($('<option>', {
                value: 0,
                text: '--------'
            }));
            for(var e=0;e<res.length;e++){
                $('#commentManagmentThreeLayer').append($('<option>', {
                    value: res[e]['RowID'],
                    text: res[e]['layerName']
                }));
            }
            break;
        case '15':
        case '16':
        case '21':
        case '22':
        case '60':
        case '61':
        case '62':
        case '63':
        case '148':
        case '83':
        case '84':
        case '91':
        case '93':
        case '99':
        case '149':
        case '220':
        case '221':
        case '276':
        case '290':
        case '298':
        case '282':
        case '284':
        case '285':
            $("#commentManagmentConsumerUnit-div").css("display","none");
            $("#commentManagmentConsumerUnit").val(0);
            $("#commentManagmentTotalAmount").removeAttr("disabled");
            $("#commentManagmentAmount").removeAttr("disabled");
            $("#commentManagmentCashSection").removeAttr("disabled");
            $("#commentManagmentNonCashSection").removeAttr("disabled");
            $("#commentManagmentPaymentMaturityCheck").removeAttr("disabled");
            $("#commentManagmentTotalAmount").val('');
            $("#commentManagmentAmount").val('');
            $("#commentManagmentCashSection").val('');
            $("#commentManagmentNonCashSection").val('');
            $("#commentManagmentPaymentMaturityCheck").val('');
            $("#commentManagmentThreeLayer-div").css('display', 'none');
            $("#commentManagmentClearingFund-div").css('display', 'none');
            $("#commentManagmentClearingFund").val('');
            break;
        case '23':
            $("#commentManagmentConsumerUnit-div").css("display","");
            $("#commentManagmentTotalAmount").removeAttr("disabled");
            $("#commentManagmentAmount").removeAttr("disabled");
            $("#commentManagmentCashSection").removeAttr("disabled");
            $("#commentManagmentNonCashSection").removeAttr("disabled");
            $("#commentManagmentPaymentMaturityCheck").removeAttr("disabled");
            $("#commentManagmentTotalAmount").val('');
            $("#commentManagmentAmount").val('');
            $("#commentManagmentCashSection").val('');
            $("#commentManagmentNonCashSection").val('');
            $("#commentManagmentPaymentMaturityCheck").val('');
            $("#commentManagmentThreeLayer-div").css('display', 'none');
            $("#commentManagmentClearingFund-div").css('display', '');
            break;
        case '51':
        case '52':
        case '53':
        case '54':
        case '55':
        case '56':
        case '70':
        case '71':
        case '80':
        case '85':
        case '36':
        case '38':
        case '41':
        case '47':
        case '48':
        case '49':
        case '81':
        case '88':
        case '92':
        case '100':
        case '243':
        case '250':
        case '251':
        case '252':
        case '259':
            $("#commentManagmentConsumerUnit-div").css("display","");
            $("#commentManagmentTotalAmount").removeAttr("disabled");
            $("#commentManagmentAmount").removeAttr("disabled");
            $("#commentManagmentCashSection").removeAttr("disabled");
            $("#commentManagmentNonCashSection").removeAttr("disabled");
            $("#commentManagmentPaymentMaturityCheck").removeAttr("disabled");
            $("#commentManagmentTotalAmount").val('');
            $("#commentManagmentAmount").val('');
            $("#commentManagmentCashSection").val('');
            $("#commentManagmentNonCashSection").val('');
            $("#commentManagmentPaymentMaturityCheck").val('');
            $("#commentManagmentClearingFund-div").css('display', 'none');
            $("#commentManagmentClearingFund").val('');
            $("#commentManagmentThreeLayer-div").css('display', '');
            $('#commentManagmentThreeLayer').append($('<option>', {
                value: 0,
                text: '--------'
            }));
            for(var e=0;e<res.length;e++){
                $('#commentManagmentThreeLayer').append($('<option>', {
                    value: res[e]['RowID'],
                    text: res[e]['layerName']
                }));
            }
            break;
			//*********************************
			//**********************************
			/* case '336':  // اجاره مستغلات
			//console.log(res);
            $("#commentManagmentContractYN-div").css('display','');
            $("#commentManagmentContractNum-div").css('display','');
            $("#commentManagmentToward-div").css('display','');
            $("#commentManagmentRequestSource-div").css('display','');
            $("#commentManagmentRequestNumbers-div").css('display','');
            $("#commentManagmentCheckNumber-div").css('display','none');
            $("#commentManagmentCheckDate-div").css('display','none');
            $("#commentManagmentCheckCarcass-div").css('display','none');
            $("#commentManagmentCheckCarcassFile-div").css('display','none');
            $("#commentManagmentDeliveryDate-div").css('display','none');
            $("#commentManagmentConsumerUnit-div").css('display','none');
            $("#commentManagmentTwoLayer-div").css('display','');
            $('#commentManagmentTwoLayer').append($('<option>', {
                value: 0,
                text: '--------'
            }));
            for(var e=0;e<res.length;e++){
                $('#commentManagmentTwoLayer').append($('<option>', {
                    value: res[e]['RowID'],
                    text: res[e]['layerName']
                }));
            }

            var x = [0,20,22,23,24,21,12];
            var arr = ['--------','تدارکات','اداری و منابع انسانی','مالی','بازرگانی فروش','فناوری اطلاعات','مدیریت'];
            for(var e=0;e<7;e++){
                $('#commentManagmentUnit').append($('<option>', {
                    value: x[e],
                    text: arr[e]
                }));
            }

            $('#commentManagmentConsumerUnit').append($('<option>', {
                value: 0,
                text: '--------'
            }));

            var arr2 = ['','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','علی الحساب','ثبت در حساب بستانکاری طرف مقابل'];
            var arr3 = ['--------','تسویه حساب','پیش پرداخت','پیش پرداخت 1','پیش پرداخت 2','پیش پرداخت 3','پیش پرداخت 4','پیش پرداخت 5','علی الحساب','ثبت در حساب بستانکاری طرف مقابل'];
            for(var b=0;b<10;b++){
                $('#commentManagmentType').append($('<option>', {
                    value: arr2[b],
                    text: arr3[b]
                }));
            }
            break; */
			//*********************************
        default:
            $("#commentManagmentConsumerUnit-div").css("display","");
            $("#commentManagmentTotalAmount").removeAttr("disabled");
            $("#commentManagmentAmount").removeAttr("disabled");
            $("#commentManagmentCashSection").removeAttr("disabled");
            $("#commentManagmentNonCashSection").removeAttr("disabled");
            $("#commentManagmentPaymentMaturityCheck").removeAttr("disabled");
            $("#commentManagmentTotalAmount").val('');
            $("#commentManagmentAmount").val('');
            $("#commentManagmentCashSection").val('');
            $("#commentManagmentNonCashSection").val('');
            $("#commentManagmentPaymentMaturityCheck").val('');
            $("#commentManagmentThreeLayer-div").css('display', 'none');
            $("#commentManagmentClearingFund-div").css('display', 'none');
            $("#commentManagmentClearingFund").val('');
            break;
			
    }
}

function getPayingBillInfo() {
    var type = $("#commentManagmentType").val();
    var PayType = $("input[name='commentManagmentPayType']:checked").val();
    var typeValue = $("input[name='commentManagmentCashCheck']:checked").val();
    var data1 = Main.getCommentTypeID(type);
    var checkOutType="";
    if(type.replaceAll(/\s/g,'')=="تسویهحساب"){//اگر نوع  پرداخت تسویه حساب بود
        $("#commentCheckoutType-div").show();
        $("#commentCheckoutType").val(0);
        
    }
    else{
        $("#commentCheckoutType-div").hide();
        $("#commentCheckoutType").val(0);
    }
    if (parseInt(data1.length) !== 0){
        if ( parseInt(data1[0]['RowID']) == 9 || parseInt(data1[0]['RowID']) == 12 ){ // پرداخت قبض بود
            $("#commentManagmentBillingID-div").css('display','');
            $("#commentManagmentPaymentID-div").css('display','');

            $("#commentManagmentFor-div").css('display','none');
            $("#commentManagmentCode-div").css('display','none');
            $("#commentManagmentAccNum-div").css('display','none');
            $("#commentManagmentCardNumber-div").css('display','none');
            $("#commentManagmentNonCashSection-div").css('display','none');
            $("#commentManagmentPaymentMaturityCheck-div").css('display','none');
            $("#commentManagmentCashSection-div").css('display','none');
            $("#commentManagmentPaymentMaturityCash-div").css('display','');

            $("#manageCommentHiddenBillPay").val(1);
            $("#commentManagmentFor").val('');
            $("#commentManagmentCode").val('');
            $("#commentManagmentAccNum").val(-1);
            $("#commentManagmentNonCashSection").val('');
            $("#commentManagmentPaymentMaturityCheck").val('');
            $("#commentManagmentCashSection").val('');
        }else if(parseInt(data1[0]['RowID']) == 13){  // ثبت در حساب بستانکاری طرف مقابل
            if (parseInt(PayType) == 1 && parseInt(typeValue) == 1){
                $("input[name='commentManagmentPayType']").prop('checked',false);
                $("input[name='commentManagmentCashCheck']").prop('checked',false);
                $("#commentManagmentCashCheck-div").css('display','none');
                notice1Sec("ثبت در حساب بستانکاری را نمی توان بصورت فورج چک پرداخت کرد !", "yellow");
                return false;
            }
            $("#commentManagmentCashSection-div").css('display','none');
            $("#commentManagmentPaymentMaturityCash-div").css('display','none');
            $("#commentManagmentNonCashSection-div").css('display','none');
            $("#commentManagmentPaymentMaturityCheck-div").css('display','none');
            $("#commentManagmentBillingID-div").css('display','none');
            $("#commentManagmentPaymentID-div").css('display','none');
            $("#commentManagmentFor-div").css('display','');
            $("#commentManagmentCode-div").css('display','');
            $("#commentManagmentAccNum-div").css('display','none');
            $("#commentManagmentCardNumber-div").css('display','none');

            $("#manageCommentHiddenBillPay").val(2);
            $("#commentManagmentBillingID").val('');
            $("#commentManagmentPaymentID").val('');
            $("#commentManagmentFor").val('');
            $("#commentManagmentCode").val('');
            $("#commentManagmentAccNum").val(-1);
            $("#commentManagmentCashSection").val('');
            $("#commentManagmentPaymentMaturityCash").val('');
            $("#commentManagmentNonCashSection").val('');
            $("#commentManagmentPaymentMaturityCheck").val('');
        }else {
            $("#manageCommentHiddenBillPay").val(0);
            $("#commentManagmentBillingID").val('');
            $("#commentManagmentPaymentID").val('');
            $("#commentManagmentFor").val('');
            $("#commentManagmentCode").val('');
            $("#commentManagmentAccNum").val(-1);
            $("#commentManagmentBillingID-div").css('display','none');
            $("#commentManagmentPaymentID-div").css('display','none');
            $("#commentManagmentAccNum-div").css('display','none');
            $("#commentManagmentCardNumber-div").css('display','none');

            if (parseInt(PayType) == 1){  // فورج بود
                if (parseInt(typeValue) == 0){  // نقدی بود
                    $("#commentManagmentPaymentMaturityCash-div").css('display','');
                    $("#commentManagmentNonCashSection-div").css('display','none');
                    $("#commentManagmentPaymentMaturityCheck-div").css('display','none');
                    $("#commentManagmentFor-div").css('display','');
                    $("#commentManagmentCode-div").css('display','');
                    $("#commentManagmentCardNumber-div").css('display','');
                }else {
                    $("#commentManagmentFor-div").css('display','');
                    $("#commentManagmentCode-div").css('display','');
                    $("#commentManagmentPaymentMaturityCash-div").css('display','none');
                    $("#commentManagmentPaymentMaturityCheck-div").css('display','');
                    $("#commentManagmentCardNumber-div").css('display','none');
                }
            }else {  // سهامی بود
                $("#commentManagmentCashSection-div").css('display','');
                $("#commentManagmentPaymentMaturityCash-div").css('display','');
                $("#commentManagmentNonCashSection-div").css('display','');
                $("#commentManagmentPaymentMaturityCheck-div").css('display','');
                $("#commentManagmentFor-div").css('display','');
                $("#commentManagmentCode-div").css('display','');
                $("#commentManagmentCardNumber-div").css('display','');
            }
        }
    }else {
        $("#manageCommentHiddenBillPay").val(0);
        $("#commentManagmentBillingID").val('');
        $("#commentManagmentPaymentID").val('');
        $("#commentManagmentFor").val('');
        $("#commentManagmentCode").val('');
        $("#commentManagmentAccNum").val(-1);
        $("#commentManagmentBillingID-div").css('display','none');
        $("#commentManagmentPaymentID-div").css('display','none');
        $("#commentManagmentAccNum-div").css('display','none');

        if (parseInt(PayType) == 1){  // فورج بود
            if (parseInt(typeValue) == 0){  // نقدی بود
                $("#commentManagmentPaymentMaturityCash-div").css('display','');
                $("#commentManagmentNonCashSection-div").css('display','none');
                $("#commentManagmentPaymentMaturityCheck-div").css('display','none');
                $("#commentManagmentFor-div").css('display','');
                $("#commentManagmentCode-div").css('display','');
                $("#commentManagmentCardNumber-div").css('display','');
            }else {
                $("#commentManagmentFor-div").css('display','none');
                $("#commentManagmentCode-div").css('display','none');
                $("#commentManagmentPaymentMaturityCash-div").css('display','none');
                $("#commentManagmentPaymentMaturityCheck-div").css('display','');
                $("#commentManagmentCardNumber-div").css('display','none');
            }
        }else {
            $("#commentManagmentNonCashSection-div").css('display','');
            $("#commentManagmentPaymentMaturityCheck-div").css('display','');
            $("#commentManagmentFor-div").css('display','');
            $("#commentManagmentCode-div").css('display','');
            $("#commentManagmentCashSection-div").css('display','');
            $("#commentManagmentPaymentMaturityCash-div").css('display','');
            $("#commentManagmentCardNumber-div").css('display','');
        }
    }
}

function transferToPayKesho() {
    var ch = $('#commentManageBody-table').find('input');
    var pid = new Array();
    for(var c=0;c<ch.length;c++){
        if(ch[c].checked){
            pid[pid.length] = ch[c].attributes.rid.value;
        }
    }
    if(pid.length > 1){
        notice1Sec("فقط یک اظهارنظر باید انتخاب شده باشد !","red");
        return false;
    }
    if(pid.length==0){
        notice1Sec("هیچ اظهارنظری انتخاب نشده است !","red");
        return false;
    }
    pid = pid[0];
    var action = "transferToPayKesho";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#transferPayComment-body").html('');
        $("#transferPayComment-body").html(res);
        $("#transferPayComment_IdHidden").val(pid);
        $('#transferPayCommentModal').modal('show');
    }
}

function doTransferPayComment() {
    var pid = $("#transferPayComment_IdHidden").val();
    var radioValue = $("input[name='transferToPayKeshoForjSahami']:checked").val();
    var desc = $("#transferToPayKeshoDescription").val();
    if(typeof radioValue == "undefined"){
        notice1Sec("کشو موردنظر را انتخاب نمایید !","red");
        return false;
    }
    if ($('#transferToPayKeshoTick').is(':checked')) {
        var tick = 1;
    }else{
        notice1Sec("ابتدا پرینت و مستندات اظهارنظر را دریافت نمایید !","red");
        return false;
    }
    var action = "doTransferPayComment";
    var param = {action:action,radioValue:radioValue,desc:desc,tick:tick,pid:pid};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec('درخواست با موفقیت انجام شد.',"green");
        $('#transferPayCommentModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        showPayCommentManageList();
        if (res == 'yes') {
            showFinalPayCommentManageList();
        }
        if (res == 'bale') {
            showFinancialConfirmationList();
        }
    }
}

function showContractChooseList() {
    var action = "showContractChooseList";
    var csDate = $("#contractSDateSearch").val();
    var ceDate = $("#contractEDateSearch").val();
    var cNum = $("#contractCNumberSearch").val();
    var cAccount = $("#contractAccountSearch").val();
    var cAmount = $("#contractAmountSearch").val();
    var credit = $("#contractCreditSearch").val();
    var param = {action:action,csDate:csDate,ceDate:ceDate,cNum:cNum,cAccount:cAccount,cAmount:cAmount,credit:credit};
    var res = manageAjaxRequest(param);
    if(res != false) {
        $("#showContractChooseList-body").html('');
        $("#showContractChooseList-body").html(res);
        var data = Main.getAccountNameList();
        var accountName = new Array();
        var accountNames = {aa: []};
        for (var d = 0; d < data.length; d++) {
            accountName[d] = data[d]['Name'];
            accountNames.aa.push({
                "id": data[d]['RowID'],
                "name": data[d]['Name'],
            });
        }
        $("#contractAccountSearch").typeahead({source: accountNames.aa});
        var cntsDate = new AMIB.persianCalendar('contractSDateSearch');  // جستجو قرارداد
        var cnteDate = new AMIB.persianCalendar('contractEDateSearch');  // جستجو قرارداد
        $('#showContractChooseListModal').modal('show');
    }
}

function downloadCheckCarcassFile(pid) {
    var action = "downloadCheckCarcassFile";
    var param = {action:action,pid:pid};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#downloadCheckCarcassFile-body").html('');
        $("#downloadCheckCarcassFile-body").html(res);
        $('#downloadCheckCarcassFileModal').modal('show');
    }
}

function showAttachedFundToComment() {
    var ch = $('#commentManageBody-table').find('input');
    var cid = new Array();
    for(var c=0;c<ch.length;c++){
        if(ch[c].checked){
            cid[cid.length] = ch[c].attributes.rid.value;
        }
    }
    if(cid.length > 1){
        notice1Sec("فقط یک اظهارنظر باید انتخاب شده باشد !","red");
        return false;
    }
    if(cid.length==0){
        notice1Sec("هیچ اظهارنظری انتخاب نشده است !","red");
        return false;
    }
    cid = cid[0];
    $("#coverFundListHiddenID").val(cid);
    var action = "showAttachedFundToComment";
    var param = {action:action,cid:cid};
    var res = manageAjaxRequest(param);
    if(res != false) {
        $("#showAttachedFundToComment-body").html('');
        $("#showAttachedFundToComment-body").html(res);
        $('#showAttachedFundToCommentModal').modal('show');
    }
}

function showAttachedFundToComment1(cid) {  // لیست تنخواه در اظهار نظرهای ارسال شده
    var action = "showAttachedFundToComment1";
    var param = {action:action,cid:cid};
    var res = manageAjaxRequest(param);
    if(res != false) {
        $("#showAttachedFundToSendComment-body").html('');
        $("#showAttachedFundToSendComment-body").html(res);
        $('#showAttachedFundToSendCommentModal').modal('show');
    }
}

function showAttachedFundToComment3(cid) {  // لیست تنخواه در اظهار نظرهای راکد
    var action = "showAttachedFundToComment3";
    var param = {action:action,cid:cid};
    var res = manageAjaxRequest(param);
    if(res != false) {
        $("#showAttachedFundToSendComment-body").html('');
        $("#showAttachedFundToSendComment-body").html(res);
        $('#showAttachedFundToSendCommentModal').modal('show');
    }
}

function attachedFundListDetails(fid) {
    var res = Main.getFundListDetailsShow(fid);
    $("#fundListDetails-show-body").html('');
    $("#fundListDetails-show-body").html(res);
    $('#showFundListDetailsModal').modal('show');
}

function showAttachFundListDetails(fdid) {
    var res = Main.getFundListAttachShow(fdid);
    $("#showFundListAttachmentFile-body").html('');
    $("#showFundListAttachmentFile-body").html(res);
    $('#showFundListAttachmentFileModal').modal('show');
}

function deleteAttachedFundList(fid) {
    var action = "deleteAttachedFundList";
    var param = {action:action,fid:fid};
    var res = manageAjaxRequest(param);
    if(res != false) {
        notice1Sec('با موفقیت حذف گردید.', "green");
        $("#showAttachedFundToComment-body").html('');
        $("#showAttachedFundToComment-body").html(res[0]);
        $('#showAttachedFundToCommentModal').modal('show');
        showPayCommentManageList();
        if (res[1] == 'yes') {
            showFundListManageList();
        }
    }
}

function printFundCover(cid) {
   
    var action = "printFundCover";
    var param = {action:action,cid:cid};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#hiddenCommentBody").html('');
        $("#hiddenCommentBody").html(res);
        $('.demoFund').printThis({
            //base: "http://localhost:8012/BOM/administrator.php"
            base:base_url
        });
    }
}

function printCommentFundCover(){
    var cid = $("#coverFundListHiddenID").val();
    printFundCover(cid);
}

function printReportFundCover(){
    var cid = $("#coverReportFundListHiddenID").val();
    printFundCover(cid);
}

function getCommentFundListExcel() {
    
    var cid = $("#coverFundListHiddenID").val();
    getFundListExcel(cid);
    // var action = "getFundListExcel";
    // var param = {action:action,cid:cid};
    // var res = manageAjaxRequest(param);
    // if(res != false){
    //     window.open(res);
    //     notice1Sec('فرمت اکسل با موفقیت دانلود شد','green');
    // }
}

function getReportFundListExcel() {
    
    var cid = $("#coverReportFundListHiddenID").val();
    getFundListExcel(cid);
    // var action = "getFundListExcel";
    // var param = {action:action,cid:cid};
    // var res = manageAjaxRequest(param);
    // if(res != false){
    //     window.open(res);
    //     notice1Sec('فرمت اکسل با موفقیت دانلود شد','green');
    // }
}

function getFundListExcel(cid) {
    
    //var cid = $("#coverFundListHiddenID").val();
    var action = "getFundListExcel";
    var param = {action:action,cid:cid};
    var res = manageAjaxRequest(param);
    if(res != false){
        window.open(res);
        notice1Sec('فرمت اکسل با موفقیت دانلود شد','green');
    }
}



function cancellationPayComment() {
    var ch = $('#commentManageBody-table').find('input');
    var cid = new Array();
    for(var c=0;c<ch.length;c++){
        if(ch[c].checked){
            cid[cid.length] = ch[c].attributes.rid.value;
        }
    }
    if(cid.length > 1){
        notice1Sec("فقط یک اظهارنظر باید انتخاب شده باشد !","red");
        return false;
    }
    if(cid.length==0){
        notice1Sec("هیچ اظهارنظری انتخاب نشده است !","red");
        return false;
    }
    cid = cid[0];
    $("#cancellationPayComment_deleteIdHidden").val(cid);
    $('#cancellationPayCommentModal').modal('show');
}

function doCancellationPayComment() {
    var cid = $("#cancellationPayComment_deleteIdHidden").val();
    var action = "doCancellationPayComment";
    var param = {action:action,cid:cid};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res, "green");
        $('#cancellationPayCommentModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
    }
}

//++++++++++++++++++++++ اجزا تنخواه +++++++++++++++++++++++

function showFundListManageList(page) {
    if(typeof page == "undefined"){
        page = 1;
    }
    var name = $("#fundListManageNameSearch").val();
    var code = $("#fundListManageCodeSearch").val();
    var amount = $("#fundListManageAmountSearch").val();
    var layer1 = $("#fundListManageLayerOneSearch").val();
    var layer2 = $("#fundListManageLayerTwoSearch").val();
    var layer3 = $("#fundListManageLayerThreeSearch").val();
    //console.log(layer1);
    //console.log(layer2);
    //console.log(layer3);

    var action = "showFundListManageList";
    var param = {action:action,page:page,name:name,code:code,amount:amount,layer1:layer1,layer2:layer2,layer3:layer3};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#fundListManageBody").html('');
        $("#fundListManageBody").html(res);
    }
}

function createFundList() {
    $("#fundListManageTwoLayer-div").css('display','none');
    $("#fundListManageThreeLayer-div").css('display','none');
    $("#fundListManageHiddenFid").val('');
    $("#fundListManageName").val(-1);
    $("#fundListManageOneLayer").val(-1);
    $('#fundListManageTwoLayer').empty();
    $('#fundListManageThreeLayer').empty();
    $('#fundListManagmentModal').modal('show');
}

function editFundList() {
    var ch = $('#fundListManageBody-table').find('input');
    var fid = new Array();
    for(var c=0;c<ch.length;c++){
        if(ch[c].checked){
            fid[fid.length] = ch[c].attributes.rid.value;
        }
    }
    if(fid.length > 1){
        notice1Sec("فقط یک تنخواه باید انتخاب شده باشد !","red");
        return false;
    }
    if(fid.length==0){
        notice1Sec("هیچ تنخواهی انتخاب نشده است !","red");
        return false;
    }
    fid = fid[0];
    var res = Main.getFundListInfo(fid);
    if(res != false) {
        $('#fundListManagmentModal').modal('show');
        $("#fundListManageOneLayer").val(res['layer1']);
        $("#fundListManageHiddenFid").val(res['fid']);
        $("#fundListManageName").val(res['fundName']);
        $('#fundListManageTwoLayer').empty();
        $('#fundListManageThreeLayer').empty();
        var rst = Main.getSubLayers(res['layer1']);
        var rst1 = Main.getSubLayers(res['layer2']);

        switch (res['layer1']) {
            case '1':  // مواد اولیه
            case '2':  // مواد مصرفی
            case '3':  // خدمات
            case '4':  // تنخواه
            case '5':  // قبوض شرکتی
            case '7':  // طرح توسعه
            case '8':  // سهامداران
            case '9':  // مالیاتی
            case '10':  // قراردادهای زیرساختی
            case '25':  // پرسنلی
            case '29':  // اقلام بازرگانی
            case '30':  // محصولات تولیدی
            case '42':  // واردات
            case '43':  // دارایی ثابت
            case '50':  // وسائط نقلیه
            case '68':  // تحقیق و توسعه
            case '74':  // تشریفات
                $("#fundListManageTwoLayer-div").css('display','');
                $('#fundListManageTwoLayer').append($('<option>', {
                    value: 0,
                    text: '--------'
                }));
                for(var e=0;e<rst.length;e++){
                    $('#fundListManageTwoLayer').append($('<option>', {
                        value: rst[e]['RowID'],
                        text: rst[e]['layerName']
                    }));
                }
                break;
            case '6':  // جرایم شرکتی
            case '24':  // چک برگشتی
            case '78':  // امور خیریه
                $("#fundListManageTwoLayer-div").css('display','none');
                break;
        }

        switch (res['layer2']) {
            case '51':
            case '52':
            case '53':
            case '54':
            case '55':
            case '56':
            case '80':
            case '85':
                $("#fundListManageThreeLayer-div").css('display', '');
                $('#fundListManageThreeLayer').append($('<option>', {
                    value: 0,
                    text: '--------'
                }));
                for(var e=0;e<rst1.length;e++){
                    $('#fundListManageThreeLayer').append($('<option>', {
                        value: rst1[e]['RowID'],
                        text: rst1[e]['layerName']
                    }));
                }
                break;
            default:
                $("#fundListManageThreeLayer-div").css('display', 'none');
                break;
        }

        if (jQuery.inArray(res['layer1'], subLayers) !== -1){  // دارای زیرگروه
            $("#fundListManageTwoLayer-div").css('display','');
            $("#fundListManageTwoLayer").val(res['layer2']);
        }else {
            $("#fundListManageTwoLayer-div").css('display','none');
            $("#fundListManageTwoLayer").val(0);
        }

        if (jQuery.inArray(res['layer2'], subsidiaryLayers) !== -1){  // دارای زیرگروه فرعی
            $("#fundListManageThreeLayer-div").css('display','');
            $("#fundListManageThreeLayer").val(res['layer3']);
        }else {
            $("#fundListManageThreeLayer-div").css('display','none');
            $("#fundListManageThreeLayer").val(0);
        }
    }
}

function doEditCreateFundList() {
    var fid = $("#fundListManageHiddenFid").val();
    var name = $("#fundListManageName").val();
    var layer1 = $("#fundListManageOneLayer").val();
    var layer2 = $('#fundListManageTwoLayer').val();
    var layer3 = $('#fundListManageThreeLayer').val();
    if(parseInt(name) == -1){
        notice1Sec("نوع تنخواه مشخص نشده است !", "yellow");
        return false;
    }
    if (parseInt(layer1) == -1){
        notice1Sec("سرگروه مشخص نشده است !","yellow");
        return false;
    }else if (jQuery.inArray(layer1, subLayers) !== -1){
        if (parseInt(layer2) == 0){
            notice1Sec("زیرگروه مشخص نشده است !","yellow");
            return false;
        }
    }
    if (jQuery.inArray(layer2, subsidiaryLayers) !== -1){
        if (parseInt(layer3) == 0){
            notice1Sec("زیرگروه فرعی مشخص نشده است !","yellow");
            return false;
        }
    }
    if (layer2 == null){
        layer2 = 0;
    }
    if (layer3 == null){
        layer3 = 0;
    }
    var action = "doEditCreateFundList";
    var param = {action:action,fid:fid,name:name,layer1:layer1,layer2:layer2,layer3:layer3};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res, "green");
        $('#fundListManagmentModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        showFundListManageList();
    }
}

function createFundListDetails(fid) {
    $("#fundListDetailsCDate").val('');
    $("#fundListDetailsDescription").val('');
    $("#fundListDetailsReqNum").val('');
    $("#fundListDetailsPlaceUse").val('');
    $("#fundListDetailsAmount").val('');
    $("#fundListDetailsHiddenFid").val(fid);
    var res = Main.getFundListDetailsInfo(fid);
    $("#fundListDetails-Info-body").html('');
    $("#fundListDetails-Info-body").html(res);
    $('#fundListDetailsManagmentModal').modal('show');
}

function doCreateFundListDetails() {
    var CDate = $("#fundListDetailsCDate").val();
    var Description = $("#fundListDetailsDescription").val();
    var ReqNum = $("#fundListDetailsReqNum").val();
    var PlaceUse = $("#fundListDetailsPlaceUse").val();
    var Amount = $("#fundListDetailsAmount").val();
    var fid = $("#fundListDetailsHiddenFid").val();
    if(!parseInt((CDate.trim()).length)){
        notice1Sec("تاریخ مشخص نشده است !", "yellow");
        return false;
    }
    if(!parseInt((Description.trim()).length)){
        notice1Sec("شرح مشخص نشده است !", "yellow");
        return false;
    }
    if(!parseInt((ReqNum.trim()).length) && !parseInt((PlaceUse.trim()).length)){
        notice1Sec("شماره درخواست یا محل استفاده باید مشخص شود !", "yellow");
        return false;
    }
    if(!parseInt((Amount.trim()).length)){
        notice1Sec("مبلغ مشخص نشده است !", "yellow");
        return false;
    }
    var action = "doCreateFundListDetails";
    var param = {action:action,fid:fid,CDate:CDate,Description:Description,ReqNum:ReqNum,PlaceUse:PlaceUse,Amount:Amount};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res, "green");
        $("#fundListDetailsCDate").val('');
        $("#fundListDetailsDescription").val('');
        $("#fundListDetailsReqNum").val('');
        $("#fundListDetailsPlaceUse").val('');
        $("#fundListDetailsAmount").val('');
        var res = Main.getFundListDetailsInfo(fid);
        $("#fundListDetails-Info-body").html('');
        $("#fundListDetails-Info-body").html(res);
        showFundListManageList();
    }
}

function deleteFundListDetails(fdid) {
    var fid = $("#fundListDetailsHiddenFid").val();
    var action = "deleteFundListDetails";
    var param = {action:action,fid:fid,fdid:fdid};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res, "green");
        var rst = Main.getFundListDetailsInfo(fid);
        $("#fundListDetails-Info-body").html('');
        $("#fundListDetails-Info-body").html(rst);
        showFundListManageList();
    }
}

function attachFundListDetails(fdid) {
    $("#fundListAddAttachment").val('');
    $("#fundListAddAttachmentID").val(fdid);
    var res = Main.getFundListAttachInfo(fdid);
    $("#fundListAttachmentFile-body").html('');
    $("#fundListAttachmentFile-body").html(res);
    $('#fundListAttachmentFileModal').modal('show');
}

function doAttachFileToFundList() {
    var fdid = $('#fundListAddAttachmentID').val();
    var fid = $("#fundListDetailsHiddenFid").val();
    var formData = new FormData();
    if($('#fundListAddAttachment').val() != '' || $('#fundListAddAttachment')[0].files.length != 0){
        var fileSelect = document.getElementById('fundListAddAttachment');
        var files = fileSelect.files;
        if(!window.File && window.FileReader && window.FileList && window.Blob){ //if browser doesn't supports File API
            notice1Sec("Your browser does not support new File API! Please upgrade.","yellow");
            return false;
        }else {
            var total_selected_files = files.length;
            for (var x = 0; x < total_selected_files; x++) {
                formData.append("files[]",files[x]);
            }
        }
    }
    formData.append("action","doAttachFileToFundList");
    formData.append("fid",fid);
    formData.append("fdid",fdid);

    var xhr = new XMLHttpRequest();
    xhr.open('POST', 'php/managemantproccess.php',true);
    xhr.onload = function () {
        if (xhr.status === 200) {
            var res = JSON.parse(xhr.responseText);
            if(res['res'] == "false"){
                notice1Sec(res['data'],'yellow');
            }else{
                notice1Sec('بارگذاری انجام شد.', "green");
                var rst = Main.getFundListAttachInfo(fdid);
                $("#fundListAttachmentFile-body").html('');
                $("#fundListAttachmentFile-body").html(rst);
                $("#fundListAddAttachment").val('');
            }
        }else{
            notice1Sec("خطایی رخ داده است !",'yellow');
        }
    };
    xhr.send(formData);
}

function deleteFundListAttach(fileID) {
    var fid = $("#fundListDetailsHiddenFid").val();
    var fdid = $('#fundListAddAttachmentID').val();
    var action = "deleteFundListAttach";
    var param = {action:action,fid:fid,fileID:fileID};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res, "green");
        var rst = Main.getFundListAttachInfo(fdid);
        $("#fundListAttachmentFile-body").html('');
        $("#fundListAttachmentFile-body").html(rst);
        showFundListManageList();
    }
}

function getFundSubLayerTwo() {
    var layer1 = $("#fundListManageOneLayer").val();
    $('#fundListManageTwoLayer').empty();
    $('#fundListManageThreeLayer').empty();
    $("#fundListManageThreeLayer-div").css('display', 'none');
    var res = Main.getSubLayers(layer1);
    switch (layer1) {
        case '-1':
            $("#fundListManageTwoLayer-div").css('display','none');
            break;
        case '1':  // مواد اولیه
        case '2':  // مواد مصرفی
        case '4':  // تنخواه
        case '5':  // قبوض شرکتی
        case '7':  // طرح توسعه
        case '8':  // سهامداران
        case '9':  // مالیاتی
        case '10':  // قراردادهای زیرساختی
        case '25':  // پرسنلی
        case '29':  // اقلام بازرگانی
        case '30':  // محصولات تولیدی
        case '42':  // واردات
        case '43':  // دارایی ثابت
        case '50':  // وسائط نقلیه
        case '68':  // تحقیق و توسعه
        case '74':  // تشریفات
        case '95':  // حقوقی
        case '167':  // پست
        case '236':  // مواد اولیه - عمده
        case '249':  // بسته بندی
        case '279':  // پاک سازی
        case '281':  // درخواست نرم افزاری جزئی
            $("#fundListManageTwoLayer-div").css('display','');
            $('#fundListManageTwoLayer').append($('<option>', {
                value: 0,
                text: '--------'
            }));
            for(var e=0;e<res.length;e++){
                $('#fundListManageTwoLayer').append($('<option>', {
                    value: res[e]['RowID'],
                    text: res[e]['layerName']
                }));
            }
            break;
        case '6':  // جرایم شرکتی
        case '24':  // چک برگشتی
        case '78':  // امور خیریه
        case '233':  // فتوکپی
        case '267':  // وجوه قرض الحسنه
            $("#fundListManageTwoLayer-div").css('display','none');
            break;
    }
}

function getFundSubLayerThree() {
    var layer2 = $("#fundListManageTwoLayer").val();
    $('#fundListManageThreeLayer').empty();
    var res = Main.getSubLayers(layer2);
    switch (layer2) {
        case '17':
        case '18':
        case '19':
        case '20':
        case '51':
        case '52':
        case '53':
        case '54':
        case '55':
        case '56':
        case '70':
        case '71':
        case '80':
        case '85':
        case '36':
        case '38':
        case '41':
        case '47':
        case '48':
        case '49':
        case '81':
        case '88':
        case '92':
        case '100':
        case '237':
        case '243':
        case '250':
        case '251':
        case '252':
        case '259':
        case '326':
            $("#fundListManageThreeLayer-div").css('display', '');
            $('#fundListManageThreeLayer').append($('<option>', {
                value: 0,
                text: '--------'
            }));
            for(var e=0;e<res.length;e++){
                $('#fundListManageThreeLayer').append($('<option>', {
                    value: res[e]['RowID'],
                    text: res[e]['layerName']
                }));
            }
            break;
        default:
            $("#fundListManageThreeLayer-div").css('display', 'none');
            break;
    }
}

function attachCommentToFund() {
    var ch = $('#fundListManageBody-table').find('input');
    var fid = new Array();
    for(var c=0;c<ch.length;c++){
        if(ch[c].checked){
            fid[fid.length] = ch[c].attributes.rid.value;
        }
    }
    if(fid.length==0){
        notice1Sec("هیچ تنخواهی انتخاب نشده است !","red");
        return false;
    }
    fid = fid.join(',');
    $("#attachCommentToFundUNCode").val('');
    $("#attachCommentToFundFid").val(fid);
    $('#attachCommentToFundListModal').modal('show');
}

function doAttachCommentToFundList() {
    var unCode = $("#attachCommentToFundUNCode").val();
    var fid = $("#attachCommentToFundFid").val();
    if(!parseInt((unCode.trim()).length)){
        notice1Sec("کد یکتا مشخص نشده است !", "yellow");
        return false;
    }
    var action = "doAttachCommentToFundList";
    var param = {action:action,unCode:unCode,fid:fid};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res, "green");
        $('#attachCommentToFundListModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        showPayCommentManageList();
        showFundListManageList();
    }
}

//++++++++++++++++++++++ مدیریت قراردادها +++++++++++++++++++++++

function create_pay_formula_row(input){
    var row_count_for_create=$('#row_count_for_create').val()
    if(row_count_for_create=="" || row_count_for_create==null || typeof(row_count_for_create)=="undefined"){
        row_count_for_create=1;
    }
     if(row_count_for_create>50 || row_count_for_create<=0){
        $('#row_count_for_create').focus();
        notice1Sec('فقط اعداد بین 1 تا 50 معتبر می باشد','yellow');

        return false;
     }
    var table=`<div style="grid-column:1 / span 2;border:1px solid gray;padding:10px;border-radius:10px;">
                <p style="color:red;display:none" id="max_allowed_amount"></p> 
                <table id="contract_formula_table" class="table table-bordered">
                    <tr class="bg-dark" style="color:#fff">      
                        <th style="width:5%">
                            #
                        </th>
                        <th style="width:50%">
                        شرح پرداخت
                        </th>
                        <th style="width:10%">
                            مبلغ پرداختی(ریال)
                        </th>
                        <th style="width:10%">
                            درصد افزایش مجاز
                        </th>
                        <th style="width:10%">
                            وضعیت پرداخت
                        </th>
                        <th style="width:15%">
                            حذف
                        </th>
                    </tr>
                
            </table></div>`;
    if($(input).parents("fieldset").find("#contract_formula_table").length==0)
    {
        $(input).parents("fieldset").append(table)
    }
    for(var i=0;i<row_count_for_create;i++){
        var rowCount=$("#contract_formula_table tr").length;
        var row=`<tr class="formula_row">
                    <td style="width:5%" class="row_counter"><span>${rowCount}</span></td>
                    <td style="width:50%"><input autocomplete="off" class="form-control pay_desc" style="width:100%" id="pay_desc_${rowCount}" type="text"/></td>
                    <td style="width:10%"><input autocomplete="off" class="form-control pay_amount" onkeyup="set_septaror(this)"  style="width:120px" id="pay_amount_${rowCount}"  type="text"></td>
                    <td style="width:10%"><input autocomplete="off" class=" form-control percent" style="width:120px"  id="percent_${rowCount}" type="number"  min="1" max="100" onkeyup="check_percent_number(this)"></td>
                    <td style="width:10%"><span style="color:red">پرداخت نشده</span></td>
                    <td style="width:15%">
                        <button row_id="0" onclick="remove_contract_payment_row(this)" class="btn btn-danger">
                            <i class="fa fa-trash"></i>
                        </button>
                    </td>
                </tr>`;
                $(input).parents("fieldset").find("#contract_formula_table").append(row)
    }
}

function set_septaror(input){
    var cutrrent_part_amount=$(input).val();
    cutrrent_part_amount= cutrrent_part_amount.replace(/\D/g,'');
    cutrrent_part_amount=numberformat2(cutrrent_part_amount,1);
    $(input).val(cutrrent_part_amount);
}

// function check_contract_amount(input){

//     var payed=$("#contractPayedManagmentAmountHidden").val()?$("#contractPayedManagmentAmountHidden").val():0;
//     $("#contractPayedManagmentAmountHidden").val(payed)
//     var current_value=$(input).val()?$(input).val():0

//     var cutrrent_part_amount=parseInt(numberformat2(current_value))
//     var remind_contract=parseInt(numberformat2($("#contractManagmentAmountHidden").val()))-parseInt(payed)-cutrrent_part_amount

//     if(parseInt(remind_contract)>=0){
//         $("#contractPayedManagmentAmountHidden").val(parseInt($("#contractPayedManagmentAmountHidden").val())+parseInt(cutrrent_part_amount));
//         $("#remind_pay_amount_input").val(remind_contract);
//     }
//     else{
       
//         notice1Sec("مجموع مبالغ وارد شده از مقدار کل قرارداد بیشتر است",'red')
//         $(input).focus();
//         return false
//     }


//    /* var cutrrent_part_amount=$(input).val()
//     cutrrent_part_amount= cutrrent_part_amount.replace(/\D/g,'');
//     $(input).val(cutrrent_part_amount)
//     var all_registerd_part_amounts=0;
//     var tbl=$(input).parents('table');
//     var contact_total_amount=Number($("#contractManagmentAmount").val().replace(/,/g, ""));
//     var total_payed=Number(numberformat2($("#total_payed_amount_spn").val()));
//     $(tbl).children().find('.pay_amount').each(function(){
//         var input_value=0;
//         if($(this).val()==null || $(this).val()=="" || typeof($(this).val())=="undefined"){
//             input_value=0;
//         }
//         else{
//             input_value=$(this).val();
//         }
        
//         if(total_payed>all_registerd_part_amounts){
//             all_registerd_part_amounts= parseInt(all_registerd_part_amounts)+parseInt(input_value)
//         }
//         else{
//             notice1Sec('error','red');
//         }

//     })*/
    
// }

function check_percent_number(input){
    var input_value=$(input).val();
    if(input_value>100 || input_value<0){
        notice1Sec('فقط مجاز به ثبت اعداد  بین 0 تا 100 می باشید','yellow');
        $(input).focus();
        $(input).val('');
        return false;
    }
}
function toggle_formula_btn(){
    var formula=$("#contractManagmentPayAmount").val();
    if(formula==1){
        $("#add_edit_formula").show();
       

    }
    if(formula==0){
        $("#add_edit_formula").hide();
        $("#contractPaymentType_box_container").hide();
        $("#contract_formula_table").remove();
        
    }
}

// function do_edit_create_contract_pay_method(){
//     var payemt_array=[];
//     var action="do_edit_create_contract_pay_method";
//     var contract_id=""
// }

function remove_contract_payment_row(input){
    event.preventDefault()
    var row_id=$(input).attr('row_id');
    var this_pay_value=$(input).parents('tr').find('input.pay_amount').val();
    var del_flag=1;
    if(row_id>0){
        var action="delete_contract_formula_row";
        var param={action:action,row_id:row_id}
        var res=ajaxHandler(param);
        if(res){
            del_flag=1;
        }
        else{
            del_flag=0;
        }
    }
    if(del_flag==1){
        $(input).parents('tr').remove();
       // var new_reg = parseInt($("#contractManagmentAmountHidden").val())+parseInt(numberformat2(this_pay_value))
    
        $("#contractPayedManagmentAmountHidden").val(parseInt( $("#contractPayedManagmentAmountHidden").val())-parseInt(numberformat2(this_pay_value)))
        var new_remind=parseInt($("#contractManagmentAmountHidden").val())-parseInt($("#contractPayedManagmentAmountHidden").val());
        $("#remind_pay_amount_input").val(new_remind)
        var table=$(input).parents('#contract_formula_table');
        var row_count=$("#contract_formula_table tr").length;
        $('#contract_formula_table tr td.row_counter span').each(function(j,a){
            var index=parseInt(j)+1;
            $(this).text(index);
            $(this).parents("tr").find('input.pay_desc').attr('id','pay_desc_'+index)
            $(this).parents("tr").find('input.pay_amount').attr('id','pay_amount_'+index)
            $(this).parents("tr").find('input.percent').attr('id','percent_'+index)
        })
        notice1Sec(res,'green');
    }
}

function manage_contract_payment_formula_box(input){
    var contract_id=$("#manageContractHiddenCid").val();
    var contract_number=$("#current_contract_number").val();
    var contract_amount=numberformat2($("#contractManagmentAmountHidden").val())?numberformat2($("#contractManagmentAmountHidden").val()):numberformat2($("#contractManagmentAmount").val()); //مبلغ کل قرارداد
 
    if($("#contractManagmentPayAmount_btn").val()==0){
        notice1Sec("قرارداد فاقد فرمول می باشد",'yellow')
        return false;
    }
    if($("#contractManagmentAmount").val()==0 || $("#contractManagmentAmount").val()=="" ||typeof($("#contractManagmentAmount").val())=="undefined"){
        notice1Sec(" مبلغ قرارداد وارد نشده است",'yellow')
        return false;
    }
    if(contract_id){
        get_contract_payed_records(contract_id,contract_number,contract_amount);//در صورتی که نوع تراکنش ویرایش قرارداد باشد
    }
    if(contract_amount.trim()=="" ||contract_amount.trim()==null || typeof(contract_amount.trim())=="undefined"){
       $("#contractManagmentAmountHidden").val(numberformat2($("#contractManagmentAmount").val())) 
    }
  //  contract_amount=contract_amount?numberformat2(contract_amount):0

   $("#contractPaymentType_box_container").show();
   var total_payed_rows=$("#contractPayedManagmentAmountHidden").val()?numberformat2($("#contractPayedManagmentAmountHidden").val()):0;//کل مبالغ  پرداخت شده   یا در انتظار پرداخت 
   var remind=parseInt(contract_amount)-parseInt(total_payed_rows)
   if($("#remind_pay_amount_input").length){
    $("#remind_pay_amount_input").remove();
   }

   $("#remind_pay_amount").append(`<input style="text-align:center;color:green;border:none;background:transparent" type="text" value="${numberformat2(remind,1)}" disabled readonly id="remind_pay_amount_input">`)

}

function get_contract_payed_records(contract_id,contract_number,contract_amount){
    var action="get_contract_payed_records";
    var param={action:action,contract_id:contract_id,contract_number:contract_number};
    var res=ajaxHandler(param);
    var all_payed_rows=0;
    if(res)
    {
        var table=`<div id="contract_formula_div" style="grid-column:1 / span 2;border:1px solid gray;padding:10px;border-radius:10px;">
        <table style="border:2px solid gray;border-radius:10px;" id="contract_formula_table" class="table table-bordered">
                <tr  style="color:#fff" class="bg-dark">      
                    <th style="width:5%">
                        #
                    </th>
                    <th style="width:50%">
                       شرح پرداخت
                    </th>
                    <th style="width:10%">
                         مبلغ پرداختی(ریال)
                    </th>
                    <th style="width:10%">
                        درصد افزایش مجاز
                    </th>
                    <th style="width:10%">
                        وضعیت پرداخت
                    </th>
                    <th style="width:15%">
                        حذف
                    </th>
                </tr>
                
            </table></div>`;
        //var input=$("$")  
        $("#contractPaymentType_box-ID").find("#contract_formula_div").remove();     
        $("#contractPaymentType_box-ID").find("#contract_formula_table").remove();     
        if($("#contractPaymentType_box-ID").find("#contract_formula_table").length==0)
        {
            $("#contractPaymentType_box-ID").append(table)
        }

        var res_f=res;
        // var total_payed=0;
        // var total_registerd=0
        for(var i=0;i<res_f.length;i++)
        {
           var payed=0;
           var className="bg-light";
            if(parseInt(res_f[i]['pid'])>0){
                payed=1;
                className="bg-inactive";
                
            }
            var rowCount=$("#contract_formula_table tr").length;
            var row=`<tr payed="${payed}" class="formula_row ${className}">
                        <td style="width:5%" class="row_counter"><span>${rowCount}</span></td>`
                           // total_registerd=parseInt(total_registerd)+parseInt(numberformat2(res_f[i]['amount_pay_part']))
                            if(payed==1){

                               // total_payed=parseInt(total_payed)+parseInt(res_f[i]['amount_pay_part']);

                                row+=`<td style="width:50%">
                                        <span>${res_f[i]['description_pay_part']===null?"":res_f[i]['description_pay_part']}</span>
                                    </td>
                                    <td style="width:10%">
                                        <span>${res_f[i]['amount_pay_part']===null?"":numberformat2(res_f[i]['amount_pay_part'],1)}</span>
                                    </td>
                                    <td style="width:10%">
                                        <span>${res_f[i]['percentage_increase_allowable_temperature']===null?"":res_f[i]['percentage_increase_allowable_temperature']}</span>
                                    </td>
                                    <td style="width:10%">
                                        <span style="color:green">پرداخت شده </span>
                                    </td>
                                    <td style="width:15%">
                                        <span ">
                                            <button disabled row_id="${res_f[i]['RowID']}"  class="btn btn-danger">
                                                <i class="fa fa-trash"></i>
                                            </button>
                                        </span>
                                    </td>`
                            }
                            else{
                                row+=`<td style="width:50%">
                                        <input autocomplete="off" class="form-control pay_desc" value="${res_f[i]['description_pay_part']}" style="width:100%" id="pay_desc_${rowCount}" type="text"/>
                                        <input class="hidden_row_id" type="hidden" id="formula_id_${rowCount}" value="${res_f[i]['RowID']}">
                                    </td>
                                    <td style="width:10%">
                                        <input autocomplete="off" class="form-control pay_amount" onkeyup="set_septaror(this)"   value="${res_f[i]['amount_pay_part']}" style="width:120px" id="pay_amount_${rowCount}"  type="text">
                                    </td>
                                    <td style="width:10%">
                                        <input autocomplete="off" class=" form-control percent" value="${res_f[i]['percentage_increase_allowable_temperature']}"style="width:120px"  id="percent_${rowCount}" type="number"  min="1" max="100" onkeyup="check_percent_number(this)">
                                    </td>
                                    <td style="width:10%">
                                        <span style="color:red">پرداخت نشده </span>
                                    </td>
                                    <td style="width:15%">
                                        <button row_id="${res_f[i]['RowID']}" onclick="remove_contract_payment_row(this)" class="btn btn-danger">
                                            <i class="fa fa-trash"></i>
                                        </button>
                                    </td>`;
                                }
                                all_payed_rows=parseInt(numberformat2(all_payed_rows))+parseInt(numberformat2(res_f[i]['amount_pay_part']))
                        row+=`</tr>`;
                    $("#contractPaymentType_box-ID").find("#contract_formula_table").append(row)
                   
        }
      
    }
    $("#contractPayedManagmentAmountHidden").val(all_payed_rows);// دریافت مجموع ردیف های ثبت شده 
    //$("#contractPaymentType_box-ID").append(`<input type="hidden" id="total_payed_amount_hidden" value="${total_payed}>`)

    // if($("#total_payed_amount_spn").length){
    //     $("#total_payed_amount_spn").remove();
    // }

    // $("#remind_pay_amount").append(`<input id="total_payed_amount_spn"  readonly disabled style="text-align: center;border: none;color: green;"value="${numberformat2(parseInt(contract_amount)-parseInt(total_registerd),1)}">`)
    // $("#contractManagmentAmountHidden").val(parseInt(contract_amount)-parseInt(total_registerd))
}

function toggle_paeyment_formula_box(input){
    if($(input).val()==1){
        $("#calculateContractPaymentType-div").slideDown(1000);
    }
    if($(input).val()==0){
        $("#calculateContractPaymentType-div").slideUp(1000);
    }
}

function manage_payment_type(input){
   if($(input).val()==1){
        $("#contractManagmentPayTypePercentDay-div").hide();
    }
    if($(input).val()==0){
        $("#contractManagmentPayTypePercentDay-div").show();
    }
}
// function edit_create_contract_pay_amount_type(){
   
    
//     if($("#contract_manage_mode").val()=="edit"){
//         var contact_id="manageContractHiddenCid";
//         var param={action:action,contact_id:contact_id}
       
//     }
//     else if($("#contract_manage_mode").val()=="new"){
//         var action ="create_contract_pay_amount_type";
//         var param={action:action,}
        
//     }
//     var res = manageAjaxRequest(param);
//     // if(res != false){
//     //     $("#automaticSendCommentManagmentDate").val(res[0]['autoSendStartDate'])
//     //     $("#automaticSendCommentManagmentDays").val(res[0]['autoSendDayes'])
//     //     $("#automaticSendCommentManagmentReceiver").val(res[0]['absentReceiver'])
//     //     $("#َautomaticSendCommentManagmentsubstitute").val(res[0]['substituteReceiver'])
//     //     $("#َautomaticSendCommentManagmentDesc").val(res[0]['autoSendDesc'])
       
//     //     $("#َautoSendRowID").val("");
//     //     $("#َautoSendRowID").val(RowID);
//    //}
// }

function showContractManageList(page) {
    if(typeof page == "undefined"){
        page = 1;
    }
    var csDate = $("#contractManageSDateSearch").val();
    var ceDate = $("#contractManageEDateSearch").val();
    var cNum = $("#contractManageCNumberSearch").val();
    var cAccount = $("#contractManageAccountSearch").val();
    var cAmount = $("#contractManageAmountSearch").val();
    var credit = $("#contractManageCreditSearch").val();
    var status = $("#contractManageStatusSearch").val();

    var action = "showContractManageList";
    var param = {action:action,page:page,csDate:csDate,ceDate:ceDate,cNum:cNum,cAccount:cAccount,cAmount:cAmount,credit:credit,status:status};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#contractManagementBody").html('');
        $("#contractManagementBody").html(res);
    }
}

function createContract() {

    $("#manageContractHiddenCid").val('');
    $("#contractManagmentNumber").val('');
    $("#contractManagmentSubject").val('');
    $("#contractManagmentAccount").val('');
    $("#contractManagmentCode").val('');
    $('#contractManagmentAccNum').children('option:not(:first)').remove();
    $("#contractManagmentAccNum").val(-1);
    $("#contractManagmentAmount").val('');
    $("#contractManagmentCredit").val('');
    $("#contractManagmentSDate").val('');
    $("#contractManagmentEDate").val('');
    $("#contractManagmentHourAmount").val('');
    $("#contractManagmentMaxHour").val('');
    $("input[name='contractManagmentCType']").prop('checked',false);
	if($("#contractManagmentAmount-div").is(":hidden")){
		$("#contractManagmentAmount-div").show()
	}
    $("#contractManagmentPayAmount").val(0);
    $('#contractManagmentModal').modal('show');
        
    if($("#contractPaymentType_box-ID").find("#contract_formula_table").length>0){
        $("#contractPaymentType_box-ID").find("#contract_formula_div").remove();     
        $("#contractPaymentType_box-ID").find("#contract_formula_table").remove(); 
    }
    $("#contractManagmentPayAmount").val(0)
    $("#add_edit_formula").hide();
    $("#contractPaymentType_box_container").hide();
    $("#manageContractHiddenCid").val('');
    $("#contract_manage_mode").val('');;
    $("#current_contract_number").val('');
    $("#contractManagmentAmountHidden").val('');
    $("#contractPayedManagmentAmountHidden").val('');
    $("#contractPayedManagmentRegestersAmountHidden").val('');
    if($("#total_payed_amount_spn").length){
        $("#total_payed_amount_spn").remove();
    }
    
    $("#remind_pay_amount").append(`<input id="total_payed_amount_spn"  readonly disabled style="text-align: center;border: none;color: green;"value="">`)
}

function assignPersianDate(s=true){
    if(s==true){
        $('#contractAddendumDate').MdPersianDateTimePicker({
            targetTextSelector: '#contractAddendumDate',
            disableBeforeDate: new Date(),
        });
    }
}
function numberformat(input,seprator=0){
    let number=$(input).val().replace(/\D/g,'');
    if(seprator==1){
        number = number.replace(/\B(?=(\d{3})+(?!\d))/g, ',');
    }
     $(input).val(number)
}

function numberformat2(number_value,seprator=0){
    let number=number_value.toString().replace(/\D/g,'');
    if(seprator==1){
        number = number.replace(/\B(?=(\d{3})+(?!\d))/g, ',');
    }
     return number;
}
function set_input_hidden_value(input){
    $("#contractManagmentAmountHidden").val(numberformat2($(input).val()))
}

function getContractAddendumDetailes(){
    var action="getContractAddendumDetailes";
    var param={action:action}
    var res = manageAjaxRequest(param);
    if(res !=false && typeof(res)!="undefined"){
    
        return res;
    }
    else{
        return " <p class='alert alert-primary' role='alert'>قرارداد فاقد الحاقیه می باشد</p>";
    }

}
function bs_confirm(modal_title,moda_body,myfunction,arguments =[]){
    if($("#confirm-delete").length){
        $(this).remove();
    }
    var args=arguments.join(",")
    var htm=`<div class="modal fade" id="confirm-delete" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" style="background:rgba(20,20,20,0.7)">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header" style="background:#3f53e3;color:#fff">
                ${modal_title}
            </div>
            <div class="modal-body" style="padding:20px 20px">
                <p>
                    ${moda_body}
                </p>
            </div>
            <div class="modal-footer" style="display:flex;justify-content:space-around;align-items:center">
                <button style="width:70px;" id="modal_confirm"type="button" class="btn btn-success" data-dismiss="modal">تایید</button>
                <a style="width:70px;color:#fff" class="btn btn-danger btn-ok">انصراف</a>
            </div>
        </div>
    </div>`;
    $('body').append(htm)
    $("#confirm-delete").modal('show');
    $("#modal_confirm").on("click",function(){window[myfunction](args)})
}

function bs_prompt(modal_title,propmt_placeholder,myfunction,arguments =[],passData=0,message="",msg_color="#000"){
    if($("#bs_prompt").length)
    {
        $("#bs_prompt").modal('hide');
        $("#bs_prompt").remove();
    }
    $("#FormControlTextarea").val('');
    var args=arguments.join(",")
    //console.log(args);
    var htm=`<div class="modal fade" id="bs_prompt" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" style="background:rgba(128,128,128,0.7)">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header" style="background:#3f53e3;color:#fff">
                ${modal_title}
            </div>
            <div class="modal-body" style="padding:20px 20px">
                <p style="color:${msg_color}">${message}</p>
                <div class="mb-3">
                    <label for="exampleFormControlTextarea1" class="form-label">${propmt_placeholder}</label>
                    <textarea placeholder="${propmt_placeholder}" class="form-control" id="FormControlTextarea" rows="3"></textarea>
                    </div>
                </div>
            <div class="modal-footer" style="display:flex;justify-content:space-around;align-items:center">
                <button style="width:70px;" id="modal_confirm"type="button" class="btn btn-success" data-dismiss="modal">تایید</button>
                <a style="width:70px;color:#fff" onclick="$('#bs_prompt').modal('hide')" class="btn btn-danger btn-ok">انصراف</a>
            </div>
        </div>
    </div>`;
    $('body').append(htm)
    $("#bs_prompt").modal('show');
 
    $("#modal_confirm").on("click",function(){
        if(passData==1){
            if($("#FormControlTextarea").val()=="" || $("#FormControlTextarea").val()==null || typeof($("#FormControlTextarea").val())=="undefined")
            {
                $("#FormControlTextarea").focus();
                return false;
            }
        }
       sessionStorage.setItem('bs_prompt_data',$("#FormControlTextarea").val());
        window[myfunction](args)
    })
    if($("#bs_prompt").length){
        $(this).remove();
       
    }   
}
function confirmDelete(addendum_id){

    Swal.fire({
        title: "حذف",
        text: "الحاقیه حذف شود ؟",
        icon: "warning",
        showCancelButton: true,
        confirmButtonColor: "#3085d6",
        cancelButtonColor: "#d33",
        confirmButtonText: "بله, حذف شود!",
        cancelButtonText: "انصراف"
        }).then((result) => {
        if (result.isConfirmed) {
            deleteAddendum(addendum_id)
        }
    });
}
function updateAddendum(addendum_id){
     if(addendum_id ==""){
        notice1Sec('شناسه الحاقیه به درستی دریافت نشده است',"red");
        return false
    }

    var action ="updateAddendumContract";
    var param={action:action,addendum_id:addendum_id}
    
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#contractAddendumDate").val(res[0]['Addendum_date'])
        $("#contractAddendumDuty").val(res[0]['Addendum_duty'])
        $("#contractAddendumCost").val(res[0]['Addendum_price'])
        $("#addendum_id").val(addendum_id);
        $("#contract_select").val(res[0]['contract_id']);
        $("#contract_select").selectpicker('refresh');
        numberformat($("#contractAddendumCost"),seprator=1)
        $('#addendum_modal_box').show();
        $("#addendum_add_btn").hide();

   }
}
//-----------------------------------------------addendum workflow---------------------------------------------------------
function sendAddendum(addendum_row_id,status){

    var action ="sendAddendum";
    var params={action:action,addendum_id:addendum_row_id,addendum_status:status}
    var res = manageAjaxRequest(params);

    var options=`<option value="0">گیرنده را انتخاب نمایید</option>`;
    for(k in res){
        options+=`<option value="${res[k]['RowID']}">${res[k]['receiver_name']}</option>`
    }
    if($("#addendum_send_modal").length){
        $("#addendum_send_modal").remove();
    }
    var send_modal=`
        <div class="modal fade" style="background:rgba(128,128,128,0.5)" id="addendum_send_modal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div style="max-width:700px" class="modal-dialog">
            <div class="modal-content">
            <div class="modal-header bg-info">
                <h5 class="modal-title text-light" id="send_addendum_modal_title">ارسال الحاقیه </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true" style="font-size:1.5rem;color:red">X</span>
                </button>
            </div>
            <div class="modal-body">
                <form>
                <div class="form-group row">
                    <label for="addendum_confirm" class="col-md-4 col-form-label"> انتخاب نمایید :</label>
                    <div class="col-md-6">
                        <label>
                            <span class="p-2">تایید</span>
                            <input type="radio"  value="1" name="addendum_confirm" id="addendum_confirm_1">
                        </label>
                        <label>
                            <span class="p-2">عدم تایید</span>
                            <input type="radio"  value="0" name="addendum_confirm" id="addendum_confirm_0">
                        </label>
                    </div>
                </div>
                <div class="receiver_box form-group row">
                    <label for="receiver" class="col-form-label col-md-4"> گیرنده :</label>
                    <div class="col-md-6">
                        <select class="form-control" id="addendum_receiver">${options}</select>
                    </div>
                </div>
                <div class="form-group row">
                    <label for="message" class="col-form-label col-md-4">توضیحات:</label>
                    <div class="col-md-6">
                        <textarea class="form-control" id="addendum_message"></textarea>
                    </div>
                </div>
                </form>
              
            </div>
            <div class="modal-footer d-flex justify-content-around">
                <button type="button" class="btn btn-primary" onclick="do_send_addendum(${addendum_row_id},${status})">ارسال </button>
                <button type="button" class="btn btn-danger" data-dismiss="modal">انصراف</button>
            </div>
            ${ getAddendumSendHistory(addendum_row_id)}
            </div>
           
        </div>
        </div>
        `
        $('body').append(send_modal);
    $("#addendum_send_modal").modal({backdrop: 'static', keyboard: false},'show');
    if(status==2){
        $('input[name="addendum_confirm"]').on('click',function(){
            if($(this).val()==1){
                $(this).parents("#addendum_send_modal").find(".receiver_box").html('')
            }
            else{
                $(this).parents("#addendum_send_modal").find(".receiver_box").html(`
                    <label for="receiver" class="col-form-label col-md-4"> گیرنده :</label>
                    <div class="col-md-6">
                        <select class="form-control" id="addendum_receiver">${options}</select>
                    </div>
                `)
            }
        
        })
    }

}
async function do_send_addendum(addendum_row_id,status){
    var action = "do_send_addendum";
    var confirm_status_checked = $("input[name='addendum_confirm']:checked");

    var confirm_status='';
    var receiver =status==2? 0: $("#addendum_receiver").val();
    var addendum_message = $("#addendum_message").val();
    if(confirm_status_checked.length==0){
        custom_alerts('وضعیت تایید یا عدم تایید مشخص نشده است','e',0,'خطا')
        return false;
    }
    else
    {
        confirm_status=$(confirm_status_checked).val();
    }
    if(status!=2){
        if(parseInt(receiver)==0){
            custom_alerts('  گیرنده مشخص نشده است ','e',0,'خطا')
            return false;
        }
    }

    if(status==0){
        if(confirm_status==0){
            custom_alerts('شما آغاز کننده ثبت الحاقیه می باشید و مجاز به عدم تایید نمی باشید','e',0,'خطا');
            return false;
        }
    }
    else{
        if(confirm_status==0){
            if(addendum_message.trim()==""){
                custom_alerts( 'در صورت عدم تایید  باید توضیحات را وارد نمایید','e',0,'خطا')
                return false;
            }
        }
    }
    if(status==2)
    {
       if(addendum_message.trim()==""){
                custom_alerts( 'در صورت  تایید نهایی ثبت  توضیحات الزامی می باشدد','e',0,'خطا')
                return false;
        }
    }

    var params = {action:action,addendum_id:addendum_row_id,addendum_status:status,confirm_status:confirm_status,receiver:receiver,addendum_message:addendum_message}
    var res = await manageAjaxRequestCustom(params);
    if(res['res']=='false'){
        custom_alerts(res['data'],'e',0,'خطا');
        return;
    }
    else{
        Swal.fire({
            title: "ارسال موفق",
            text:res['data'],
            icon: "success",
            timer:5000
          });
          $("#addendum_send_modal").modal('hide');
          $("#addendum_send_modal").remove();
          $(".modal-backdrop").hide()
          contractAddendum()
        return;
    }
}

function getAddendumSendHistory(addendum_row_id){
    var action="showAddendumSendHistory";
    var params={action:action,addendum_id:addendum_row_id};
    var res = ajaxHandler(params);
    return res;
}

function sendAddendumHistory(addendum_row_id){
    var action="showAddendumSendHistory";
    var params={action:action,addendum_id:addendum_row_id};
    var res = ajaxHandler(params);
    $("#addendum_send_modal_history").remove();
    var modal=`<div class="modal fade" style="background:rgba(128,128,128,0.5)" id="addendum_send_modal_history" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div style="max-width:700px" class="modal-dialog">
        <div class="modal-content">
        <div class="modal-header bg-info">
            <h5 class="modal-title text-light" id="send_addendum_modal_title">سوابق ارسال</h5>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true" style="font-size:1.5rem;color:red">X</span>
            </button>
        </div>
        <div class="modal-body">
            <form>
                ${ getAddendumSendHistory(addendum_row_id)}
           
            </form>
        </div>
            <div class="modal-footer d-flex justify-content-around">
                <button type="button" class="btn btn-danger" data-dismiss="modal">بستن</button>
            </div>
        </div>
    </div>
    </div>`;
    $('body').append(modal)
    $('#addendum_send_modal_history').modal({backdrop: 'static', keyboard: false},'show')

}

//-----------------------------------------------addendum workflow---------------------------------------------------------
function editAutoSendRecord(RowID){
    // RowID
    // absentReceiver
    // substituteReceiver
    // autoSendStartDate
    // autoSendDayes
    // autoSendDesc
    // insertedUser
    // status
    
    var action ="editAutoSendRecord";
    var param={action:action,autoSend_id:RowID}
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#automaticSendCommentManagmentDate").val(res[0]['autoSendStartDate'])
        $("#automaticSendCommentManagmentDays").val(res[0]['autoSendDayes'])
        $("#automaticSendCommentManagmentReceiver").val(res[0]['absentReceiver'])
        $("#َautomaticSendCommentManagmentsubstitute").val(res[0]['substituteReceiver'])
        $("#َautomaticSendCommentManagmentDesc").val(res[0]['autoSendDesc'])
       
        $("#َautoSendRowID").val("");
        $("#َautoSendRowID").val(RowID);
   }
}
function deleteAddendum(addendum_id){
    if(addendum_id ==""){
        notice1Sec('شناسه الحاقیه به درستی دریافت نشده است',"red");
        return false
    }

    var action ="deleteAddendumContract";
    var param={action:action,addendum_id:addendum_id}
    
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec("عملیات با موفقیت انجام شد","green")
        contractAddendum();
        return ;
   }

}

function get_all_contract(){
    var action="get_all_contract";
    var res=ajaxHandler({action:action});
    //console.log(typeof(res));
    //console.log(res);

    if(res==0 || typeof(res)=='object')
    {
        return res
    }
}
function contractAddendum(){
    var contracts = get_all_contract();
    //console.log(typeof contracts)
    //console.log(contracts)
    if(contracts){
    
        var options=`<option value="0">قرارداد را  انتخاب نمایید </option>`;
        for(k in contracts){
            options+=`<option value="${contracts[k]['RowID']}">${contracts[k]['contract_info']}</option>`;
        }
    }

    $("#contractAddendumManagmentModal").remove();
    var addendum_modal=
    `
    <div class="modal fade" id="contractAddendumManagmentModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div  style="max-width:85vw;" class="modal-dialog" role="document">
    <div class="modal-content" style="min-height:50vh">
      <div class="bg-info modal-header">
        <h5 class="modal-title  text-light" id="exampleModalLabel">مدیریت الحاقیه ها</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span style="color:red;font-size:1rem" aria-hidden="true">X</span>
        </button>
      </div>`
      if(contracts!=0){

      addendum_modal+=`<div class="w-100 p-4">
            <button id="addendum_add_btn" onclick="show_addendum_add(this)" style="background:#5e5c5c3d;width:100%;color:#fff;font-size:2rem" class="btn" >+</button>
        </div>
      <div style="display:none" id="addendum_modal_box" class="modal-body">
        <form>
            <div id="addendum_form_box">
                 <div class="form-group row">
                    <label for="recipient-name" class="col-md-4">شماره قرارداد</label>
                    <div class="col-md-8">
                        <select class="form-control" id="contract_select"> ${options}</select>
                    </div>
                </div>
 
                <div class="form-group row">
                    <label for="recipient-name" class="col-md-4">تاریخ</label>
                    <div class="col-md-8">
                        <input type="text" class="form-control" id="contractAddendumDate">
                    </div>
                </div>
                
                <div class="form-group row">
                    <label for="message-text" class="col-md-4">مبلغ الحاقیه</label>
                    <div class="col-md-8">
                        <input class="form-control" id="contractAddendumCost">
                    </div>
                </div>

                <div class="form-group row">
                    <label for="message-text" class="col-md-4">شرح مسئولیت الحاقیه</label>
                    <div class="col-md-8">
                    <textarea class="form-control" id="contractAddendumDuty"></textarea>
                    <input type="hidden" value="" id="addendum_id">
                    </div>
                </div>
            </div>
        </form>
        <div class="modal-footer d-flex justify-content-around">
        
        <button type="button" class="btn btn-primary" onclick="doEditCreateContractAddendum()">ذخیره و تایید</button>
        <button type="button" class="btn btn-danger">انصراف</button>
      </div>
      </div>`
      }
      addendum_modal+=
      `<div class="p-4" id="addendum_detailes">
        ${getContractAddendumDetailes()}
        
      </div>
    </div>
  </div>
  
</div>
    `;
    $('body').append(addendum_modal);
    if($("#addendum_detailes_tbl")){
        create_data_table("addendum_detailes_tbl");
       
    }
    select_data_picker($("#contract_select"))
    $('#contractAddendumDate').MdPersianDateTimePicker({
        targetTextSelector: '#contractAddendumDate',
        disableBeforeDate: new Date(),
    });

    $("#contractAddendumManagmentModal").modal({backdrop:'static',keyboard:false},'show')
    
}

function open_contract_detailes(contract_id){
    if($("#contractDetailsModal")){
        $("#contractDetailsModal").remove();
    }
    var modal=`<div style="background:rgba(128,128,128,0.5)"class="modal fade" id="contractDetailsModal" tabindex="-1" role="dialog" aria-labelledby="contractDetailsModal" aria-hidden="true">
                    <div style="max-width:800px" class="modal-dialog" role="document">
                        <div class="modal-content">
                        <div class="modal-header bg-secondary">
                            <h5 class="text-light modal-title" id="exampleModalLabel">سایر اطلاعات قرارداد</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span style="color:red;fontsize:1.5rem" aria-hidden="true">X</span>
                            </button>
                        </div>
                        <div class="modal-body">
                            <div id="contractDetailsBody"></div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-dismiss="modal">بستن</button>

                        </div>
                        </div>
                    </div>
                    </div>`
    $('body').append(modal)
    ShowContractDetails(contract_id)
    $('#contractDetailsModal').modal({backdrop:'static',keyboard:false},'show');
}

function show_addendum_add(input){
    $(input).parents('#contractAddendumManagmentModal').find('#addendum_modal_box').show();
    $(input).hide();
}

function doEditCreateContractAddendum(){
    var cid = $("#contract_select").val()
    var addendumDuty = $("#contractAddendumDuty").val(); 
    var addendumCost = $("#contractAddendumCost").val(); 
    var addendumDate = $("#contractAddendumDate").val(); 
    var action =  "doEditCreateContractAddendum";
    var addendum_id = $("#addendum_id").val()?$("#addendum_id").val():0;
    var param = {action:action,addendumDuty:addendumDuty,addendumCost:addendumCost,addendumDate:addendumDate,contract_id:cid,addendum_id:addendum_id}
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#addendum_detailes").html('');
        $("#addendum_detailes").html(getContractAddendumDetailes());
    }

}

function editContract() {
    var ch = $('#contractManageBody-table').find('input');
    var cid = new Array();
    for(var c=0;c<ch.length;c++){
        if(ch[c].checked){
            cid[cid.length] = ch[c].attributes.rid.value;
        }
    }
    if(cid.length > 1){
        notice1Sec("فقط یک قرارداد باید انتخاب شده باشد !","red");
        return false;
    }
    if(cid.length==0){
        notice1Sec("هیچ قرادادی انتخاب نشده است !","red");
        return false;
    }
    cid = cid[0];
    var res = Main.getContractInfo(cid);
    if(res[0] != false){

        $('#contractManagmentModal').modal('show');
        $("#manageContractHiddenCid").val(cid);
        $("#contractManagmentNumber").val(res[0]['number']);
        $("#current_contract_number").val(res[0]['number']);
        $("#contractManagmentSubject").val(res[0]['subject']);
        $("#contractManagmentAccount").val(res[0]['accountName']);
        $("#contractManagmentCode").val(res[0]['codeTafzili']);
        $("#contractManagmentAmount").val(res[0]['totalAmount']);
        $("#contractManagmentCredit").val(res[0]['creditPeriod']);
        $("#contractManagmentSDate").val(res[0]['csDate']);
        $("#contractManagmentEDate").val(res[0]['ceDate']);
        $("#contractManagmentHourAmount").val(res[0]['hourAmount']);
        $("#contractManagmentMaxHour").val(res[0]['maxHour']);
        $("#contractManagmentAmountHidden").val(numberformat2(res[0]['totalAmount']));
        $("#contractPaymentType_box_container").hide();
        //$('#contractManagmentPayAmount option[value="'+res[0]['has_payment_formula']+'"]').prop('selected', true)
 
        if(res[0]['has_payment_formula']!=null){
            
            $('#contractManagmentPayAmount').val(res[0]['has_payment_formula']); 
        }
        else
        {
            $('#contractManagmentPayAmount').val(0);
           
        }
        
        $("#contractPaymentType_box").hide();
        if($("#contractManagmentPayAmount").val()==0){
          
            $("#add_edit_formula").hide();
        }
        else{
            $("#add_edit_formula").show();
        }
        if(res[0]['pay_method_type']!=null){
            $("#contractManagmentPayType").val(res[0]['pay_method_type']);
        }
        else{
            $("#contractManagmentPayType").val(0);
        }
        $('#contractManagmentAccNum').children('option:not(:first)').remove();
        var data1 = Main.getAccountNumListWithName(res[0]['accountName']);
        if (parseInt(data1.length) !== 0){
            for (var b=0;b<data1[0].length;b++) {
                $('#contractManagmentAccNum').append($('<option>',
                    {
                        value: data1[2]+','+b,
                        text : data1[0][b]
                    }));
            }
        }
        $("#contractManagmentAccNum").val(res[0]['accNum']);
        $("input[name=contractManagmentCType][value="+res[0]['contractType']+"]").prop('checked',true);
        if (parseInt(res[0]['contractType']) == 0){
            $("#contractManagmentHourAmount-div").css('display','none');
            $("#contractManagmentMaxHour-div").css('display','none');
            $("#contractManagmentAmount-div").css('display','block');
        }
        else 
        {
            $("#contractManagmentHourAmount-div").css('display','');
            $("#contractManagmentMaxHour-div").css('display','');
            $("#contractManagmentAmount-div").css('display','none');
        }
        
    }

}

function doEditCreateContract() {
    var cid = $("#manageContractHiddenCid").val();
    var cType = $("input[name='contractManagmentCType']:checked").val();  // عادی یا ساعتی
    var number = $("#contractManagmentNumber").val();
    var subject = $("#contractManagmentSubject").val();
    var accName = $("#contractManagmentAccount").val();
    var code = $("#contractManagmentCode").val();
    var accNum = $("#contractManagmentAccNum").val();
    var amount = $("#contractManagmentAmount").val();
    var HourAmount = $("#contractManagmentHourAmount").val();
    var MaxHour = $("#contractManagmentMaxHour").val();
    var credit = $("#contractManagmentCredit").val();
    var sDate = $("#contractManagmentSDate").val();
    var eDate = $("#contractManagmentEDate").val();
    var has_contract_formula=$("#contractManagmentPayAmount").val();
    var pay_method_type=$("#contractManagmentPayType").val();

    //var contractManagmentPayAmount = $("#contractManagmentPayAmount").val();
    if(!parseInt((number.trim()).length)){
        notice1Sec("شماره قرارداد مشخص نشده است !","yellow");
        return false;
    }
    if(!parseInt((subject.trim()).length)){
        notice1Sec("موضوع قرارداد مشخص نشده است !","yellow");
        return false;
    }
    if(!parseInt((accName.trim()).length)){
        notice1Sec("طرف مقابل مشخص نشده است !","yellow");
        return false;
    }
    if(parseInt(accNum) == -1){
        notice1Sec("شماره حساب مشخص نشده است !","yellow");
        return false;
    }

    if(typeof cType == "undefined"){
        notice1Sec("نوع قرارداد مشخص نشده است !","yellow");
        return false;
    }else {
        if (parseInt(cType) == 0) {  // عادی
            if (!parseInt((amount.trim()).length)) {
                notice1Sec("مبلغ قرارداد مشخص نشده است !", "yellow");
                return false;
            }
            HourAmount = '';
            MaxHour = '';
        } else {
            if (!parseInt((HourAmount.trim()).length)) {
                notice1Sec("مبلغ هر ساعت حضور مشخص نشده است !", "yellow");
                return false;
            }
            if (!parseInt((MaxHour.trim()).length)) {
                notice1Sec("ماکسیمم ساعات حضور مشخص نشده است !", "yellow");
                return false;
            }
            amount = '';
        }
    }
    if(!parseInt((credit.trim()).length)){
        notice1Sec("مدت قرارداد مشخص نشده است !","yellow");
        return false;
    }
    if(pay_method_type==0){
        notice1Sec('روش پرداخت انتخاب نشده است',"yellow");
        $("#contractManagmentPayType").focus();
        return false;
    }

    var formula_array=[];
    var table_rows=$("#contract_formula_table tr.formula_row");
    var flag=0;
    var message="";
    var all_pay_amount=0;
    if($("#contractManagmentPayAmount").val()==1)//فرارداد دارای فرمول می باشد----------------
    {
        var m= $(table_rows).each(function(){
            var payed=$(this).attr('payed');
            if(payed!=1)
            {
                var pay_desc= $(this).find('td').find('input.pay_desc').val()
                var formula_row_id=$(this).find('td').find('input.hidden_row_id').val()?$(this).find('td').find('input.hidden_row_id').val():-1
                var pay_amount= numberformat2($(this).find('td').find('input.pay_amount').val())
                var pay_percent= $(this).find('td').find('input.percent').val()
                all_pay_amount=parseInt(all_pay_amount)+parseInt(numberformat2(pay_amount));
                if($.trim(pay_desc)=="")
                {
                    message='شرح ردیف پرداخت را کامل نمایید';
                    $(this).find('td').find('input.pay_desc').focus();
                    flag++;
                    return false;

                }
                if($.trim(pay_amount)=="")
                {
                    message='مبلغ  ردیف پرداخت را کامل نمایید';
                    $(this).find('td').find('input.pay_amount').focus();
                    flag++;
                    return false;
                }
                if($.trim(pay_percent)>100)
                {
                    message='مقدار درصد بالاتر از 100 می باشد';
                    $(this).find('td').find('input.percent').focus();
                    flag++;
                    return false;
                }
                
                var array_handler={pay_desc:pay_desc,pay_RowID:formula_row_id,pay_amount:pay_amount,pay_percent:pay_percent}
                formula_array.push(array_handler);
            }
        })
        if(parseInt(all_pay_amount)>parseInt(numberformat2(amount))){
            notice1Sec("مجموع مبالغ وارد شده از مقدار کل قرارداد بیشتر است",'red')
            $(input).focus();
            return false 
        }
    }
    if(flag>0){
        notice1Sec(message,"red")
        return false;
    }
    
    var action = "doEditCreateContract";
    var param = {action:action,cid:cid,number:number,accName:accName,code:code,accNum:accNum,amount:amount,credit:credit,sDate:sDate,eDate:eDate,subject:subject,cType:cType,HourAmount:HourAmount,MaxHour:MaxHour,pay_method_type:pay_method_type,has_contract_formula:has_contract_formula,formula_array:formula_array};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res, "green");
        $('#contractManagmentModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        showContractManageList();
    }
}

function archiveExtensionContract() {
    var ch = $('#contractManageBody-table').find('input');
    var cid = new Array();
    for(var c=0;c<ch.length;c++){
        if(ch[c].checked){
            cid[cid.length] = ch[c].attributes.rid.value;
        }
    }
    if(cid.length > 1){
        notice1Sec("فقط یک قرارداد باید انتخاب شده باشد !","red");
        return false;
    }
    if(cid.length==0){
        notice1Sec("هیچ قرادادی انتخاب نشده است !","red");
        return false;
    }
    cid = cid[0];
    var res = Main.getContractType(cid);
    $("#manageContractArchiveExtensionHiddenType").val(res[0]['contractType']);
    $("#manageContractArchiveExtensionHiddenCid").val(cid);
    $("input[name='contractArchiveExtensionCType']").prop('checked',false);
    $("#contractArchiveExtensionDescription").val('');
    $("#contractArchiveExtensionHourAmount").val('');
    $("#contractArchiveExtensionMaxHour").val('');
    $("#contractArchiveExtensionCredit").val('');
    $("#contractArchiveExtensionAmount").val('');
    $("#contractArchiveExtensionEDate").val('');
    $("#contractArchiveExtensionDescription-div").css('display','none');
    $("#contractArchiveExtensionHourAmount-div").css('display','none');
    $("#contractArchiveExtensionMaxHour-div").css('display','none');
    $("#contractArchiveExtensionCredit-div").css('display','none');
    $("#contractArchiveExtensionAmount-div").css('display','none');
    $("#contractArchiveExtensionEDate-div").css('display','none');
    $('#contractArchiveExtensionModal').modal('show');
}

function doArchiveExtensionContract() {
    var cid = $("#manageContractArchiveExtensionHiddenCid").val();
    var cntType = $("#manageContractArchiveExtensionHiddenType").val();  // عادی یا ساعتی
    var cType = $("input[name='contractArchiveExtensionCType']:checked").val();  // بایگانی یا تمدید
    var desc = $("#contractArchiveExtensionDescription").val();
    var hourAmount = $("#contractArchiveExtensionHourAmount").val();
    var maxHour = $("#contractArchiveExtensionMaxHour").val();
    var credit = $("#contractArchiveExtensionCredit").val();
    var amount = $("#contractArchiveExtensionAmount").val();
    var eDate = $("#contractArchiveExtensionEDate").val();
    if (parseInt(cType) == 1 && parseInt(cntType) == 0) {  // تمدید و عادی بود
        if (!parseInt((credit.trim()).length)) {
            notice1Sec("مدت قرارداد مشخص نشده است !", "yellow");
            return false;
        }
        if (!parseInt((eDate.trim()).length)) {
            notice1Sec("تاریخ اتمام قرارداد مشخص نشده است !", "yellow");
            return false;
        }
    }else if (parseInt(cType) == 1 && parseInt(cntType) == 1){   // تمدید و ساعتی بود
        if (!parseInt((credit.trim()).length)) {
            notice1Sec("مدت قرارداد مشخص نشده است !", "yellow");
            return false;
        }
        if (!parseInt((eDate.trim()).length)) {
            notice1Sec("تاریخ اتمام قرارداد مشخص نشده است !", "yellow");
            return false;
        }
        if (parseInt((hourAmount.trim()).length) > 0 && !parseInt((maxHour.trim()).length)) {
            notice1Sec("مبلغ هر ساعت حضور و ماکسیمم ساعات حضور در ماه باید مشخص شده باشد !", "yellow");
            return false;
        }
        if (parseInt((maxHour.trim()).length) > 0 && !parseInt((hourAmount.trim()).length)) {
            notice1Sec("مبلغ هر ساعت حضور و ماکسیمم ساعات حضور در ماه باید مشخص شده باشد !", "yellow");
            return false;
        }
    }

    var action = "doArchiveExtensionContract";
    var param = {action:action,cid:cid,cType:cType,cntType:cntType,desc:desc,hourAmount:hourAmount,maxHour:maxHour,amount:amount,eDate:eDate,credit:credit};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
        $('#contractArchiveExtensionModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        showContractManageList();
    }
}

function ShowContractDetails(cid) {
    var action = "ShowContractDetails";
    var param = {action:action,cid:cid};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#contractDetailsBody").html('');
        $("#contractDetailsBody").html(res);
        $('#contractDetailsModal').modal('show');
    }
}

function contractAttachFile() {
    var ch = $('#contractManageBody-table').find('input');
    var cid = new Array();
    for(var c=0;c<ch.length;c++){
        if(ch[c].checked){
            cid[cid.length] = ch[c].attributes.rid.value;
        }
    }
    if(cid.length > 1){
        notice1Sec("فقط یک قرارداد باید انتخاب شده باشد !","red");
        return false;
    }
    if(cid.length==0){
        notice1Sec("هیچ قرادادی انتخاب نشده است !","red");
        return false;
    }
    cid = cid[0];
    $("#contractManagmentAttachmentID").val(cid);
    $("#contractManagmentAttachmentName").val('');
    $("#contractManagmentAttachment").val('');
    var res = Main.getAttachedContractFile(cid);
    $("#contractAttachmentFile-body").html('');
    $("#contractAttachmentFile-body").html(res);
    $('#contractAttachmentFileModal').modal('show');
}

function doAttachFileToContract() {
    var cid = $('#contractManagmentAttachmentID').val();
    var info = $('#contractManagmentAttachmentName').val();
    var formData = new FormData();
    if($('#contractManagmentAttachment').val() != '' || $('#contractManagmentAttachment')[0].files.length != 0){
        var fileSelect = document.getElementById('contractManagmentAttachment');
        var files = fileSelect.files;
        if(!window.File && window.FileReader && window.FileList && window.Blob){ //if browser doesn't supports File API
            notice1Sec("Your browser does not support new File API! Please upgrade.","yellow");
            return false;
        }else {
            var total_selected_files = files.length;
            for (var x = 0; x < total_selected_files; x++) {
                formData.append("files[]",files[x]);
            }
        }
    }else {
        notice1Sec("هیچ فایلی انتخاب نشده است !","yellow");
        return false;
    }
    if(!parseInt((info.trim()).length)){
        notice1Sec("نام فایل مشخص نشده است !","yellow");
        return false;
    }
    formData.append("action","doAttachFileToContract");
    formData.append("cid",cid);
    formData.append("info",info);

    var xhr = new XMLHttpRequest();
    xhr.open('POST', 'php/managemantproccess.php',true);
    xhr.onload = function () {
        if (xhr.status === 200) {
            var res = JSON.parse(xhr.responseText);
            if(res['res'] == "false"){
                notice1Sec(res['data'],'yellow');
            }else{
                notice1Sec('بارگذاری انجام شد.', "green");
                var rst = Main.getAttachedContractFile(cid);
                $("#contractAttachmentFile-body").html('');
                $("#contractAttachmentFile-body").html(rst);
                $("#contractManagmentAttachmentName").val('');
                $("#contractManagmentAttachment").val('');
                showContractManageList();
            }
        }else{
            notice1Sec("خطایی رخ داده است !",'yellow');
        }
    };
    xhr.send(formData);
}

function deleteAttachContractFile(fid){
    var cid = $('#contractManagmentAttachmentID').val();
    var action = "deleteAttachContractFile";
    var param = {action:action,fid:fid};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res, "green");
        var rst = Main.getAttachedContractFile(cid);
        $("#contractAttachmentFile-body").html('');
        $("#contractAttachmentFile-body").html(rst);
        showContractManageList();
    }
}

function ShowAttachmentFileContract(cid) {
    var action = "ShowAttachmentFileContract";
    var param = {action:action,cid:cid};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#showContractAttachmentFile-body").html('');
        $("#showContractAttachmentFile-body").html(res);
        $('#showContractAttachmentFileModal').modal('show');
    }
}

function contractCommentDates() {
    var ch = $('#contractManageBody-table').find('input');
    var cid = new Array();
    for(var c=0;c<ch.length;c++){
        if(ch[c].checked){
            cid[cid.length] = ch[c].attributes.rid.value;
        }
    }
    if(cid.length > 1){
        notice1Sec("فقط یک قرارداد باید انتخاب شده باشد !","red");
        return false;
    }
    if(cid.length==0){
        notice1Sec("هیچ قرادادی انتخاب نشده است !","red");
        return false;
    }
    cid = cid[0];
    $("#contractCommentDatesID").val(cid);
    $("#contractCommentDatesNew").val('');
    var res = Main.getContractCommentDates(cid);
    $("#contractCommentDates-body").html('');
    $("#contractCommentDates-body").html(res);
    $('#contractCommentDatesModal').modal('show');
}
function toggle_box(box_id,input){
    var vis=$("#"+box_id).is(":visible");
    if(vis){
        $("#"+box_id).slideUp(1000);
        $(input).removeClass('fa-minus text-danger').addClass('fa-plus text-success')
    }
    else{
        $("#"+box_id).slideDown(1000);
        $(input).addClass('fa-minus text-danger').removeClass('fa-plus text-success')
    }

}
function get_exported_payComments(cid,input,payed=0){
    if($("#payed_comment_list").length){
        $("#payed_comment_list").remove();
        $(input).css({'transform':'rotate(0deg)','color':'green !important'})
        return;
    }
    var action = "get_exported_payComments";
    var param = {action:action,cid:cid,payed:payed};
    var res = manageAjaxRequest(param);
    $(input).parents('div.has_dropdown').append(res);
    $(input).css({'transform':'rotate(-90deg)','color':'red !important'})
}
function doCreateContractCommentDates() {
    var cid = $("#contractCommentDatesID").val();
    var ccDate = $("#contractCommentDatesNew").val();
    if(!parseInt((ccDate.trim()).length)){
        notice1Sec("تاریخ مشخص نشده است !","yellow");
        return false;
    }
    var action = "doCreateContractCommentDates";
    var param = {action:action,cid:cid,ccDate:ccDate};
    var res = manageAjaxRequest(param);
    if(res != false){
        var rst = Main.getContractCommentDates(cid);
        $("#contractCommentDates-body").html('');
        $("#contractCommentDates-body").html(rst);
        $("#contractCommentDatesNew").val('');
        showContractManageList();
    }
}

function deleteContractCommentDate(dateID) {
    var cid = $("#contractCommentDatesID").val();
    var action = "deleteContractCommentDate";
    var param = {action:action,dateID:dateID};
    var res = manageAjaxRequest(param);
    if(res != false){
        var rst = Main.getContractCommentDates(cid);
        $("#contractCommentDates-body").html('');
        $("#contractCommentDates-body").html(rst);
        $("#contractCommentDatesNew").val('');
        showContractManageList();
    }
}

function ShowContractPayComments(cid) {
    var action = "ShowContractPayComments";
    var param = {action:action,cid:cid};
    var res = manageAjaxRequest(param);
    if(res != false) {
        $("#showContractPayComments-body").html('');
        $("#showContractPayComments-body").html(res);
        $('#showContractPayCommentsModal').modal('show');
    }
}

function doChooseContractNumber() {
    var ch = $('#contractChooseList-tableID').find('input');
    var cid = new Array();
    for(var c=0;c<ch.length;c++){
        if(ch[c].checked){
            cid[cid.length] = ch[c].attributes.rid.value;
        }
    }
    if(cid.length > 1){
        $("#commentManagmentContractNum").val('');
        notice1Sec("فقط یک قرارداد باید انتخاب شده باشد !","red");
        return false;
    }
    if(cid.length==0){
        $("#commentManagmentContractNum").val('');
        notice1Sec("هیچ قرادادی انتخاب نشده است !","red");
        return false;
    }
    cid = cid[0];
    var action = "getContractAccountInfo";
    var param = {action:action,cid:cid};
    var res = manageAjaxRequest(param);
	//console.log(res);
    if(res != false) {
        $("#commentManagmentContractNum").val(res[0]['number']);
        $("#commentManagmentFor").val(res[0]['accountName']);
        $("#commentManagmentCode").val(res[0]['codeTafzili']);
        $("#commentManagmentContractID").val(cid)

        $('#commentManagmentAccNum').children('option:not(:first)').remove();
        $("#commentManagmentAccNum").val(-1);
        var data1 = Main.getAccountNumListWithName(res[0]['accountName']);
        if (parseInt(data1.length) !== 0){
            for (var b=0;b<data1[0].length;b++) {
                $('#commentManagmentAccNum').append($('<option>',
                    {
                        value: data1[2]+','+b,
                        text : data1[0][b]
                    }));
            }
        }
        $("#commentManagmentFor").attr("disabled","true");
        $("#commentManagmentAccNum").attr("disabled","true");
        $("#commentManagmentAccNum-div").css('display','');
		
        $("#commentManagmentAccNum").val(res[0]['accNum']);
		
        $("#commentManagmentRequestSource").val(4);
        check_pay_comment_amount()
    }
}

function removeContractInfo() {
    var yn = $("#commentManagmentContractYN").val();
    if (parseInt(yn) == 0){
        $("#commentManagmentFor").removeAttr("disabled");
        $("#commentManagmentAccNum").removeAttr("disabled");
        $("#commentManagmentAccNum-div").css('display','none');
        $('#commentManagmentAccNum').children('option:not(:first)').remove();
        $("#commentManagmentAccNum").val(-1);
        $("#commentManagmentRequestSource").val(-1);
        $("#commentManagmentFor").val('');
        $("#commentManagmentCode").val('');
        $("#commentManagmentContractNum").val('');
    }
}

function getContractAccountNumber() {
    $('#contractManagmentAccNum').children('option:not(:first)').remove();
    $("#contractManagmentAccNum").val(-1);
    var cfor = $("#contractManagmentAccount").val();
    var data1 = Main.getAccountNumListWithName(cfor);
    if (parseInt(data1.length) !== 0){
        for (var b=0;b<data1[0].length;b++) {
            $('#contractManagmentAccNum').append($('<option>',
                {
                    value: data1[2]+','+b,
                    text : data1[0][b]
                }));
        }
        $("#contractManagmentCode").val(data1[1]);
    }else {
        $("#contractManagmentCode").val('');
    }
}

function ShowCommentCheckInContract(cid) {
    var action = "ShowCommentCheckInContract";
    var param = {action:action,cid:cid};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#comment-InContract-Checks-body").html('');
        $("#comment-InContract-Checks-body").html(res);
        $('#commentCheckInContractModal').modal('show');
    }
}

//++++++++++++++++++++++ دریافتی از مشتری +++++++++++++++++++++++

function showReceivedCustomerManageList(page) {
    if(typeof page == "undefined"){
        page = 1;
    }
    var rsDate = $("#receivedCustomerSDateSearch").val();
    var reDate = $("#receivedCustomerEDateSearch").val();
    var RType = $("#receivedCustomerRTypeSearch").val();
    var RMethod = $("#receivedCustomerRMethodSearch").val();
    var CName = $("#receivedCustomerCNameSearch").val();
    var RAmount = $("#receivedCustomerRAmountSearch").val();

    var action = "showReceivedCustomerManageList";
    var param = {action:action,page:page,rsDate:rsDate,reDate:reDate,RType:RType,RMethod:RMethod,CName:CName,RAmount:RAmount};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#receivedCustomerManageBody").html('');
        $("#receivedCustomerManageBody").html(res);
    }
}

function createReceivedCustomer() {
    $("#manageReceivedCustomerHiddenRid").val('');
    $("input[name='receivedCustomerReceiverType']").prop('checked',false);
    $("#receivedCustomerReceivedMethod").val(-1);
    $("#receivedCustomerCompanyBanks").val(-1);
    $("#receivedCustomerCompanyPos").val(-1);
    $("#receivedCustomerCheckSerial").val('');
    $("#receivedCustomerCheckDate").val('');
    $("#receivedCustomerCheckOwner").val('');
    $("#receivedCustomerCheckOwnerCode").val('');
    $("#receivedCustomerCstName").val('');
    $("#receivedCustomerCstCode").val('');
    $("#receivedCustomerAmount").val('');
    $("#receivedCustomerRDate").val('');
    $("#receivedCustomerDescription").val('');
    $("#receivedCustomerCompanyBanks-div").css('display','none');
    $("#receivedCustomerCompanyPos-div").css('display','none');
    $("#receivedCustomerCheckSerial-div").css('display','none');
    $("#receivedCustomerCheckDate-div").css('display','none');
    $("#receivedCustomerCheckOwner-div").css('display','none');
    $("#receivedCustomerCheckOwnerCode-div").css('display','none');
    $('#receivedCustomerManagmentModal').modal('show');
}

function editReceivedCustomer() {
    var ch = $('#receivedCustomerManageBody-table').find('input');
    var reid = new Array();
    for(var c=0;c<ch.length;c++){
        if(ch[c].checked){
            reid[reid.length] = ch[c].attributes.rid.value;
        }
    }
    if(reid.length > 1){
        notice1Sec("فقط یک دریافتی باید انتخاب شده باشد !","red");
        return false;
    }
    if(reid.length==0){
        notice1Sec("هیچ دریافتی انتخاب نشده است !","red");
        return false;
    }
    reid = reid[0];
    var res = Main.getReceivedCustomerInfo(reid);
    if(res != false){
        $('#receivedCustomerManagmentModal').modal('show');
        $("#manageReceivedCustomerHiddenRid").val(reid);
        $("input[name=receivedCustomerReceiverType][value="+res['receiveType']+"]").prop('checked',true);
        $("#receivedCustomerReceivedMethod").val(res['receiveMethod']);
        if (parseInt(res['receiveMethod']) == 3){  // چک
            $("#receivedCustomerCompanyBanks-div").css('display','none');
            $("#receivedCustomerCompanyPos-div").css('display','none');
            $("#receivedCustomerCheckSerial-div").css('display','');
            $("#receivedCustomerCheckDate-div").css('display','');
            $("#receivedCustomerCheckOwner-div").css('display','');
            $("#receivedCustomerCheckOwnerCode-div").css('display','');

        }else if (parseInt(res['receiveMethod']) == 1){  // واریزی به بانک ها
            $("#receivedCustomerCompanyBanks-div").css('display','');
            $("#receivedCustomerCompanyPos-div").css('display','none');
            $("#receivedCustomerCheckSerial-div").css('display','none');
            $("#receivedCustomerCheckDate-div").css('display','none');
            $("#receivedCustomerCheckOwner-div").css('display','none');
            $("#receivedCustomerCheckOwnerCode-div").css('display','none');
        }else if (parseInt(res['receiveMethod']) == 2){  // POS
            $("#receivedCustomerCompanyBanks-div").css('display','none');
            $("#receivedCustomerCompanyPos-div").css('display','');
            $("#receivedCustomerCheckSerial-div").css('display','none');
            $("#receivedCustomerCheckDate-div").css('display','none');
            $("#receivedCustomerCheckOwner-div").css('display','none');
            $("#receivedCustomerCheckOwnerCode-div").css('display','none');
        }else {  // نقدی
            $("#receivedCustomerCompanyBanks-div").css('display','none');
            $("#receivedCustomerCompanyPos-div").css('display','none');
            $("#receivedCustomerCheckSerial-div").css('display','none');
            $("#receivedCustomerCheckDate-div").css('display','none');
            $("#receivedCustomerCheckOwner-div").css('display','none');
            $("#receivedCustomerCheckOwnerCode-div").css('display','none');
        }
        $("#receivedCustomerCompanyBanks").val(res['bankID']);
        $("#receivedCustomerCompanyPos").val(res['posID']);
        $("#receivedCustomerCheckSerial").val(res['checkSerial']);
        $("#receivedCustomerCheckDate").val(res['checkDate']);
        $("#receivedCustomerCheckOwner").val(res['checkOwner']);
        $("#receivedCustomerCheckOwnerCode").val(res['checkOwnerCode']);

        $("#receivedCustomerCstName").val(res['depositor']);
        $("#receivedCustomerCstCode").val(res['codeTafzili']);

        $("#receivedCustomerAmount").val(res['receiveAmount']);
        $("#receivedCustomerRDate").val(res['receiveDate']);
        $("#receivedCustomerDescription").val(res['description']);
    }
}

function doEditCreateReceivedCustomer() {
    var rid = $("#manageReceivedCustomerHiddenRid").val();
    var RType = $("input[name='receivedCustomerReceiverType']:checked").val();  // بابت فروش یا چک برگشتی
    var RMethod = $("#receivedCustomerReceivedMethod").val();
    var CstName = $("#receivedCustomerCstName").val();
    var CstCode = $("#receivedCustomerCstCode").val();
    var amount = $("#receivedCustomerAmount").val();
    var rDate = $("#receivedCustomerRDate").val();
    var desc = $("#receivedCustomerDescription").val();
    var bank = $("#receivedCustomerCompanyBanks").val();
    var pos = $("#receivedCustomerCompanyPos").val();
    var serial = $("#receivedCustomerCheckSerial").val();
    var chDate = $("#receivedCustomerCheckDate").val();
    var chOwner = $("#receivedCustomerCheckOwner").val();
    var chOwnerC = $("#receivedCustomerCheckOwnerCode").val();

    if(typeof RType == "undefined"){
        notice1Sec("نوع دریافتی مشخص نشده است !","yellow");
        return false;
    }
    if (parseInt(RMethod) == -1){
        notice1Sec("روش دریافتی مشخص نشده است !","yellow");
        return false;
    }
    if (parseInt(RMethod) == 1 && parseInt(bank) == -1){
        notice1Sec("بانک مشخص نشده است !","yellow");
        return false;
    }
    if (parseInt(RMethod) == 2 && parseInt(pos) == -1){
        notice1Sec("pos مشخص نشده است !","yellow");
        return false;
    }
    if (parseInt(RMethod) == 3 && !parseInt((serial.trim()).length)){
        notice1Sec("شماره چک مشخص نشده است !","yellow");
        return false;
    }
    if (parseInt(RMethod) == 3 && !parseInt((chDate.trim()).length)){
        notice1Sec("تاریخ چک مشخص نشده است !","yellow");
        return false;
    }
    if (!parseInt((CstName.trim()).length)){
        notice1Sec("نام مشتری مشخص نشده است !","yellow");
        return false;
    }
    if (!parseInt((CstCode.trim()).length)){
        notice1Sec("کد تفضیلی مشخص نشده است !","yellow");
        return false;
    }
    if (!parseInt((amount.trim()).length)){
        notice1Sec("مبلغ (دریافتی/چک) مشخص نشده است !","yellow");
        return false;
    }
    if (!parseInt((rDate.trim()).length)){
        notice1Sec("تاریخ دریافتی مشخص نشده است !","yellow");
        return false;
    }

    var action = "doEditCreateReceivedCustomer";
    var param = {action:action,rid:rid,RType:RType,RMethod:RMethod,amount:amount,rDate:rDate,
                 CstName:CstName,CstCode:CstCode,desc:desc,bank:bank,pos:pos,serial:serial,
                 chDate:chDate,chOwner:chOwner,chOwnerC:chOwnerC};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res, "green");
        $("#receivedCustomerCheckSerial").val('');
        $("#receivedCustomerCheckDate").val('');
        $("#receivedCustomerCheckOwner").val('');
        $("#receivedCustomerCheckOwnerCode").val('');
        $("#receivedCustomerAmount").val('');
        $("#receivedCustomerRDate").val('');
        $("#receivedCustomerDescription").val('');
        $("#receivedCustomerCompanyBanks").val(-1);
        $("#receivedCustomerCompanyPos").val(-1);

        showReceivedCustomerManageList();
    }
}

function getCheckNumber() {
    var method = $("#receivedCustomerReceivedMethod").val();
    if (parseInt(method) == 3){  // چک
        $("#receivedCustomerCompanyBanks-div").css('display','none');
        $("#receivedCustomerCompanyPos-div").css('display','none');
        $("#receivedCustomerCheckSerial-div").css('display','');
        $("#receivedCustomerCheckDate-div").css('display','');
        $("#receivedCustomerCheckOwner-div").css('display','');
        $("#receivedCustomerCheckOwnerCode-div").css('display','');

        $("#receivedCustomerCheckSerial").val('');
        $("#receivedCustomerCheckDate").val('');
        $("#receivedCustomerCheckOwner").val('');
        $("#receivedCustomerCheckOwnerCode").val('');
        $("#receivedCustomerCompanyBanks").val(-1);
        $("#receivedCustomerCompanyPos").val(-1);
        $("#receivedCustomerAmount-txt").html('مبلغ چک');
    }else if (parseInt(method) == 1){   // واریزی به بانک ها
        $("#receivedCustomerCompanyBanks-div").css('display','');
        $("#receivedCustomerCompanyPos-div").css('display','none');
        $("#receivedCustomerCheckSerial-div").css('display','none');
        $("#receivedCustomerCheckDate-div").css('display','none');
        $("#receivedCustomerCheckOwner-div").css('display','none');
        $("#receivedCustomerCheckOwnerCode-div").css('display','none');

        $("#receivedCustomerCheckSerial").val('');
        $("#receivedCustomerCheckDate").val('');
        $("#receivedCustomerCheckOwner").val('');
        $("#receivedCustomerCheckOwnerCode").val('');
        $("#receivedCustomerCompanyBanks").val(-1);
        $("#receivedCustomerCompanyPos").val(-1);
        $("#receivedCustomerAmount-txt").html('مبلغ دریافتی');
    }else if (parseInt(method) == 2){  //POS
        $("#receivedCustomerCompanyBanks-div").css('display','none');
        $("#receivedCustomerCompanyPos-div").css('display','');
        $("#receivedCustomerCheckSerial-div").css('display','none');
        $("#receivedCustomerCheckDate-div").css('display','none');
        $("#receivedCustomerCheckOwner-div").css('display','none');
        $("#receivedCustomerCheckOwnerCode-div").css('display','none');

        $("#receivedCustomerCheckSerial").val('');
        $("#receivedCustomerCheckDate").val('');
        $("#receivedCustomerCheckOwner").val('');
        $("#receivedCustomerCheckOwnerCode").val('');
        $("#receivedCustomerCompanyBanks").val(-1);
        $("#receivedCustomerCompanyPos").val(-1);
        $("#receivedCustomerAmount-txt").html('مبلغ دریافتی');
    }else {
        $("#receivedCustomerCompanyBanks-div").css('display','none');
        $("#receivedCustomerCompanyPos-div").css('display','none');
        $("#receivedCustomerCheckSerial-div").css('display','none');
        $("#receivedCustomerCheckDate-div").css('display','none');
        $("#receivedCustomerCheckOwner-div").css('display','none');
        $("#receivedCustomerCheckOwnerCode-div").css('display','none');

        $("#receivedCustomerCheckSerial").val('');
        $("#receivedCustomerCheckDate").val('');
        $("#receivedCustomerCheckOwner").val('');
        $("#receivedCustomerCheckOwnerCode").val('');
        $("#receivedCustomerCompanyBanks").val(-1);
        $("#receivedCustomerCompanyPos").val(-1);
        $("#receivedCustomerAmount-txt").html('مبلغ دریافتی');
    }
}

function getCustomerCodeTafzili() {
    var depositor = $("#receivedCustomerCstName").val();
    var data = Main.getDepositorCode(depositor);
    if (parseInt(data.length) !== 0){
        $("#receivedCustomerCstCode").val('');
        $("#receivedCustomerCstCode").val(data[0]['codeTafzili']);
    }else {
        $("#receivedCustomerCstCode").val('');
    }
}

function receivedCustomerCheckInfo(rcid) {
    var action = "receivedCustomerCheckInfo";
    var param = {action:action,rcid:rcid};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#receivedCustomerCheckInfoBody").html('');
        $("#receivedCustomerCheckInfoBody").html(res);
        $('#receivedCustomerCheckInfoModal').modal('show');
    }
}

function getExcelReceivedCustomer() {
    var rsDate = $("#receivedCustomerSDateSearch").val();
    var reDate = $("#receivedCustomerEDateSearch").val();
    var RType = $("#receivedCustomerRTypeSearch").val();
    var RMethod = $("#receivedCustomerRMethodSearch").val();
    var CName = $("#receivedCustomerCNameSearch").val();
    var RAmount = $("#receivedCustomerRAmountSearch").val();
    var action = "getExcelReceivedCustomer";
    var param = {action:action,rsDate:rsDate,reDate:reDate,RType:RType,RMethod:RMethod,CName:CName,RAmount:RAmount};
    var res = manageAjaxRequest(param);
    if(res != false){
        window.open(res);
    }
}

function attachReceivedCustomerFile() {
    var ch = $('#receivedCustomerManageBody-table').find('input');
    var reid = new Array();
    for (var c = 0; c < ch.length; c++) {
        if (ch[c].checked) {
            reid[reid.length] = ch[c].attributes.rid.value;
        }
    }
    if (reid.length > 1) {
        notice1Sec("فقط یک دریافتی باید انتخاب شده باشد !", "red");
        return false;
    }
    if (reid.length == 0) {
        notice1Sec("هیچ دریافتی انتخاب نشده است !", "red");
        return false;
    }
    reid = reid[0];
    $("#receivedCustomerManageAttachmentID").val(reid);
    $("#receivedCustomerManageAttachmentName").val('');
    $("#receivedCustomerManageAttachmentFile").val('');
    var res = Main.getAttachedReceivedCustomerFile(reid);
    $("#receivedCustomerAttachmentFile-body").html('');
    $("#receivedCustomerAttachmentFile-body").html(res);
    $('#receivedCustomerAttachmentFileModal').modal('show');
}

function doAttachReceivedCustomerFile() {
    var reid = $('#receivedCustomerManageAttachmentID').val();
    var info = $('#receivedCustomerManageAttachmentName').val();
    var formData = new FormData();
    if($('#receivedCustomerManageAttachmentFile').val() != '' || $('#receivedCustomerManageAttachmentFile')[0].files.length != 0){
        var fileSelect = document.getElementById('receivedCustomerManageAttachmentFile');
        var files = fileSelect.files;
        if(!window.File && window.FileReader && window.FileList && window.Blob){ //if browser doesn't supports File API
            notice1Sec("Your browser does not support new File API! Please upgrade.","yellow");
            return false;
        }else {
            var total_selected_files = files.length;
            for (var x = 0; x < total_selected_files; x++) {
                formData.append("files[]",files[x]);
            }
        }
    }
    formData.append("action","doAttachReceivedCustomerFile");
    formData.append("reid",reid);
    formData.append("info",info);

    var xhr = new XMLHttpRequest();
    xhr.open('POST', 'php/managemantproccess.php',true);
    xhr.onload = function () {
        if (xhr.status === 200) {
            var res = JSON.parse(xhr.responseText);
            if(res['res'] == "false"){
                notice1Sec(res['data'],'yellow');
            }else{
                notice1Sec('بارگذاری انجام شد.', "green");
                var rst = Main.getAttachedReceivedCustomerFile(reid);
                $("#receivedCustomerAttachmentFile-body").html('');
                $("#receivedCustomerAttachmentFile-body").html(rst);
                $("#receivedCustomerManageAttachmentName").val('');
                $("#receivedCustomerManageAttachmentFile").val('');
                showReceivedCustomerManageList();
            }
        }else{
            notice1Sec("خطایی رخ داده است !",'yellow');
        }
    };
    xhr.send(formData);
}

function deleteAttachReceivedCustomerFile(fid) {
    var crid = $('#receivedCustomerManageAttachmentID').val();
    var action = "deleteAttachReceivedCustomerFile";
    var param = {action:action,fid:fid};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res, "green");
        var rst = Main.getAttachedReceivedCustomerFile(crid);
        $("#receivedCustomerAttachmentFile-body").html('');
        $("#receivedCustomerAttachmentFile-body").html(rst);
        showReceivedCustomerManageList();
    }
}

function ShowAttachFileReceivedCustomer(crid) {
    var action = "ShowAttachFileReceivedCustomer";
    var param = {action:action,crid:crid};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#showReceivedCustomerAttachFile-body").html('');
        $("#showReceivedCustomerAttachFile-body").html(res);
        $('#showReceivedCustomerAttachFileModal').modal('show');
    }
}

function showCustomerReceiveComments() {
    var action = "showCustomerReceiveComments";
    var csDate = $("#receivedCustomerSDateSearch").val();
    var ceDate = $("#receivedCustomerEDateSearch").val();
    var toward = $("#customerReceiveTowardSearch").val();
    var cAccount = $("#customerReceiveAccountSearch").val();
    var cAmount = $("#customerReceiveAmountSearch").val();
    var param = {action:action,csDate:csDate,ceDate:ceDate,toward:toward,cAccount:cAccount,cAmount:cAmount};
    var res = manageAjaxRequest(param);
    if(res != false) {
        $("#showCustomerReceiveComments-body").html('');
        $("#showCustomerReceiveComments-body").html(res);
        var data = Main.getAccountNameList();
        var accountName = new Array();
        var accountNames = {aa: []};
        for (var d = 0; d < data.length; d++) {
            accountName[d] = data[d]['Name'];
            accountNames.aa.push({
                "id": data[d]['RowID'],
                "name": data[d]['Name'],
            });
        }
        $("#customerReceiveAccountSearch").typeahead({source: accountNames.aa});
        $('#showCustomerReceiveCommentsModal').modal('show');
    }
}

function ShowCommentCheckInCustomerReceive(cid) {
    var action = "ShowCommentCheckInCustomerReceive";
    var param = {action:action,cid:cid};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#comment-InCustomerReceive-Checks-body").html('');
        $("#comment-InCustomerReceive-Checks-body").html(res);
        $('#commentCheckInCustomerReceiveModal').modal('show');
    }
}

//++++++++++++++++++++++ مدیریت طرف حساب ها +++++++++++++++++++++++

function showAccountManageList(page) {
    if(typeof page == "undefined"){
        page = 1;
    }
    var aName = $("#accountManageAccNameSearch").val();
    var aCode = $("#accountManageCodeSearch").val();
    var action = "showAccountManageList";
    var param = {action:action,aName:aName,aCode:aCode,page:page};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#accountManageBody").html('');
        $("#accountManageBody").html(res);
        $("#manageAccountHiddenPage").val(page);
    }
}

function addAccountNumber() {
    var ANumber = $('#accountManagmentAccountNumber').val();
    $('#manageAccountHiddenTempAccNum').val('');
    if(parseInt((ANumber.trim()).length) !== 0) {
        var str = "-";
        var str1 = "_";
        var str2 = ".";
        var str3 = ",";
        var str4 = "*";
        var str5 = "IR";
        var str6 = "ir";
        if(!(ANumber.indexOf(str) == -1) || !(ANumber.indexOf(str1) == -1) || !(ANumber.indexOf(str2) == -1) || !(ANumber.indexOf(str3) == -1) ||!(ANumber.indexOf(str4) == -1) ||!(ANumber.indexOf(str5) == -1) ||!(ANumber.indexOf(str6) == -1)){
            $('#accountManagmentAccountNumber').val('');
            notice1Sec("شماره حساب اشتباه وارد شده است !","yellow");
            return false;
        }
        if ($('#accountManagmentBankType').is(':checked')) {
            if ( (parseInt((ANumber.trim()).length) < 17 || parseInt((ANumber.trim()).length) > 17) ){
                $('#accountManagmentAccountNumber').val('');
                notice1Sec("شماره حساب اشتباه وارد شده است !","yellow");
                return false;
            }else {
                $('#accountManagmentBank').val('پاسارگاد - ');
            }
        }else {
            if ( (parseInt((ANumber.trim()).length) < 24 || parseInt((ANumber.trim()).length) > 24) && parseInt(ANumber) !== 0){
                $('#accountManagmentAccountNumber').val('');
                notice1Sec("باید شماره شبا یا صفر وارد کنید!","yellow");
                return false;
            }else {
                $('#accountManagmentBank').val('');
            }
        }
        $("#accountManagmentBank-span").css('display','');
        $("#accountManagmentAccountNumber-span").css('display','none');
        $("#accountManagmentBank").removeAttr("disabled");
        $("#accountManagmentAccountNumber").attr("disabled","true");
        $("#accountManagmentBankType").attr("disabled","true");
        if ($('#accountManagmentAccountNumbers').val() == '') {
            $('#accountManagmentAccountNumbers').val($('#accountManagmentAccountNumber').val());
        }else{
            $('#accountManagmentAccountNumbers').val($('#accountManagmentAccountNumbers').val() + ',' + $('#accountManagmentAccountNumber').val());
        }
        $('#accountManagmentAccountNumber').val('');
        $('#manageAccountHiddenTempAccNum').val(ANumber);
    }else {
        notice1Sec("شماره حساب نمی تواند خالی باشد !","yellow");
        return false;
    }
}

function addBankName() {
    var bankk = $('#accountManagmentBank').val();
    var tempAnum = $('#manageAccountHiddenTempAccNum').val();
    var str = "پاسارگاد";
    var str1 = "ندارد";
    if(parseInt((bankk.trim()).length) !== 0) {
        if ((tempAnum) == 0){
            if(bankk.indexOf(str1) == -1){
                $('#accountManagmentBank').val('');
                notice1Sec("باید کلمه (ندارد) را بنویسید !","yellow");
                return false;
            }
        }
        if ($('#accountManagmentBankType').is(':checked')) {
            if(bankk.indexOf(str) == -1){
                notice1Sec("نام بانک اشتباه وارد شده است !","yellow");
                return false;
            }
        }else {
            if(!(bankk.indexOf(str) == -1)){
                notice1Sec("نام بانک اشتباه وارد شده است !","yellow");
                return false;
            }
        }
        $("#accountManagmentBank-span").css('display','none');
        $("#accountManagmentAccountNumber-span").css('display','');
        $("#accountManagmentAccountNumber").removeAttr("disabled");
        $("#accountManagmentBankType").prop('checked', false);
        $("#accountManagmentBankType").removeAttr("disabled");
        $("#accountManagmentBank").attr("disabled","true");
        if ($('#accountManagmentAccountNumbers').val() == '') {
            $('#accountManagmentAccountNumbers').val($('#accountManagmentBank').val());
        } else {
            $('#accountManagmentAccountNumbers').val($('#accountManagmentAccountNumbers').val() + ',' + $('#accountManagmentBank').val());
        }
        $('#accountManagmentBank').val('');
    }else {
        notice1Sec("نام بانک نمی تواند خالی باشد !","yellow");
        return false;
    }
}

function createActiveProject() {
    // $("#manageAccountHiddenAid").val('');
    // $("#accountManagmentName").val('');
    // $("#accountManagmentCode").val('');
    // $("#accountManagmentAccountNumber").val('');
    // $("#accountManagmentAccountNumbers").val('');
    // $("#accountManagmentBank").val('');

    // $("#accountManagmentName").removeAttr("disabled");
    // $("#accountManagmentCode").removeAttr("disabled");
    // $("#accountManagmentBank-span").css('display','none');
    // $("#accountManagmentAccountNumber-span").css('display','');
    // $("#accountManagmentBankType").prop('checked', false);
    // $("#accountManagmentBankType").removeAttr("disabled");
    // $("#accountManagmentAccountNumber").removeAttr("disabled");
    // $("#accountManagmentAccountNumbers").attr("disabled","true");
    // $("#accountManagmentBank").attr("disabled","true");
    $('#activeProjectManagmentModal').modal('show');
}


function createAccount() {
    $("#manageAccountHiddenAid").val('');
    $("#accountManagmentName").val('');
    $("#accountManagmentCode").val('');
    $("#accountManagmentAccountNumber").val('');
    $("#accountManagmentAccountNumbers").val('');
    $("#accountManagmentBank").val('');
    $("#accountManagmentCodeMelli").val('');
    $("#accountManagmentName").removeAttr("disabled");
    $("#accountManagmentCode").removeAttr("disabled");
    $("#accountManagmentBank-span").css('display','none');
    $("#accountManagmentAccountNumber-span").css('display','');
    $("#accountManagmentBankType").prop('checked', false);
    $("#accountManagmentBankType").removeAttr("disabled");
    $("#accountManagmentAccountNumber").removeAttr("disabled");
    $("#accountManagmentAccountNumbers").attr("disabled","true");
    $("#accountManagmentBank").attr("disabled","true");
    $('#accountManagmentModal').modal('show');
    $("input[type='checkbox'][name='accountRules_check']").prop('checked',false);
}

function editAccount() {
    var ch = $('#accountManageBody-table').find('input');
    var aid = new Array();
    for(var c=0;c<ch.length;c++){
        if(ch[c].checked){
            aid[aid.length] = ch[c].attributes.rid.value;
        }
    }
    if(aid.length > 1){
        notice1Sec("فقط یک طرف حساب باید انتخاب شده باشد !","red");
        return false;
    }
    if(aid.length==0){
        notice1Sec("هیچ طرف حسابی انتخاب نشده است !","red");
        return false;
    }
    aid = aid[0];
    var res = Main.getAccountInfo(aid);
    
    if(res != false){
        $('#accountManagmentModal').modal('show');
        var role=res['role'];
       
        if(role !='null'){ 
            role=role.split(",");
        for(k in role){
            switch(role[k]){
                case "1":
                    $("#accountroles_check-0").prop('checked',true)
                    break;
                case "2":
                    $("#accountroles_check-1").prop('checked',true)
                    break;
                case "3":
                    $("#accountroles_check-2").prop('checked',true)
                    break;
                
            }
        }
    }
       // $("#accountManagmentName").attr("disabled","true");
       // $("#accountManagmentCode").attr("disabled","true");
        var uid = $("#manageAccountHiddenUid").val();
        if (parseInt(uid) === 1){
            $("#accountManagmentAccountNumbers").removeAttr("disabled");
        }
        $("#accountManagmentBank-span").css('display','none');
        $("#accountManagmentAccountNumber-span").css('display','');
        $("#accountManagmentBankType").prop('checked', false);
        $("#accountManagmentBankType").removeAttr("disabled");
        $("#accountManagmentAccountNumber").removeAttr("disabled");
        $("#accountManagmentBank").attr("disabled","true");
        $("#accountManagmentAccountNumber").val('');
        $("#accountManagmentBank").val('');
        $("#manageAccountHiddenAid").val(res['aid']);
        $("#accountManagmentName").val(res['Name']);
        $("#accountManagmentCode").val(res['code']);
        $("#accountManagmentCodeMelli").val(res['codeMelli']);
        $("#accountManagmentAccountNumbers").val(res['aNumBankName']);
    }
}

function doEditCreateAccount() {
    var aid = $("#manageAccountHiddenAid").val();
    var Name = $("#accountManagmentName").val();
    var code = $("#accountManagmentCode").val();
    var acc_role_flag=0; 
    var codeMelli = $("#accountManagmentCodeMelli").val();
    var an = $("#accountManagmentAccountNumbers").val();
    var role_array=[];
    if(!parseInt((Name.trim()).length)){
        notice1Sec("نام طرف حساب مشخص نشده است !","yellow");
        return false;
    }

    if(!parseInt((code.trim()).length) || !$.isNumeric(code)){
        notice1Sec("کد تفضیلی مشخص نشده است یا عددی نیست !","yellow");
        return false;
    }
    $("#accountroles-div").children().find('input[type="checkbox"]').each(function(){
        if($(this).is(':checked')){
            acc_role_flag++;
            role_array.push($(this).val());
        }
    })
   
    if(acc_role_flag==0){
        notice1Sec("حداقل یکی از موارد نقش طرف حساب باید انتخاب شود","yellow");
        return false;
    }

    if(!parseInt((an.trim()).length)){
        notice1Sec("شماره حساب/حساب ها مشخص نشده است !","yellow");
        return false;
    }

   role_array=role_array.join(",")
    var action = "doEditCreateAccount";
    var param = {action:action,aid:aid,Name:Name,code:code,an:an,codeMelli:codeMelli,role_array:role_array};
    var res = manageAjaxRequest(param);
    if(res != false){
        var page = $("#manageAccountHiddenPage").val();
        commentManagement(page);
        $('#accountManageTabID-alink').addClass('active');
        $('#commentManageTabID-alink').removeClass('active');
        $('#unitManageTabID-alink').removeClass('active');
        $('#depositorsManageTabID-alink').removeClass('active');
        $('#payCommentManageTabID-alink').removeClass('active');

        $('#accountManageTabID').addClass('active');
        $('#commentManageTabID').removeClass('active');
        $('#unitManageTabID').removeClass('active');
        $('#depositorsManageTabID').removeClass('active');
        $('#payCommentManageTabID').removeClass('active');
        notice1Sec(res,"green");
        $('#accountManagmentModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        showAccountManageList(page);
   
    }
}

function ShowAccountInfo(aid) {
    var action = "ShowAccountInfo";
    var param = {action:action,aid:aid};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#account-manage-Info-body").html('');
        $("#account-manage-Info-body").html(res);
        $('#accountManageInfoModal').modal('show');
    }
}

//++++++++++++++++++++++ مدیریت واحد های مربوطه +++++++++++++++++++++++

function showUnitManageList(page) {
    if(typeof page == "undefined"){
        page = 1;
    }
    var action = "showUnitManageList";
    var param = {action:action,page:page};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#commentUnitManageBody").html('');
        $("#commentUnitManageBody").html(res);
        $("#unitManagmentUsers").selectpicker();
    }
}

function createCommentUnit() {
    $("#manageUnitHiddenUid").val('');
    $("#unitManagmentUName").val('');
    $("#unitManagmentUDesc").val('');
    $("#unitManagmentUsers").selectpicker('deselectAll');
    $('#unitManagmentModal').modal('show');
}

function editCommentUnit() {
    var ch = $('#commentUnitManageBody-table').find('input');
    var uid = new Array();
    for(var c=0;c<ch.length;c++){
        if(ch[c].checked){
            uid[uid.length] = ch[c].attributes.rid.value;
        }
    }
    if(uid.length > 1){
        notice1Sec("فقط یک واحد باید انتخاب شده باشد !","red");
        return false;
    }
    if(uid.length==0){
        notice1Sec("هیچ واحدی انتخاب نشده است !","red");
        return false;
    }
    uid = uid[0];
    var res = Main.getCommentUnitInfo(uid);
    if(res != false){
        $('#unitManagmentModal').modal('show');
        $("#manageUnitHiddenUid").val(res['uid']);
        $("#unitManagmentUName").val(res['unitName']);
        $("#unitManagmentUDesc").val(res['unitDesc']);
        $("#unitManagmentUsers").val(res['uids'].split(','));
        $("#unitManagmentUsers").selectpicker('refresh');
    }
}

function doEditCreateCommentUnit() {
    var uid = $("#manageUnitHiddenUid").val();
    var Uname = $("#unitManagmentUName").val();
    var Udesc = $("#unitManagmentUDesc").val();
    var users = $('#unitManagmentUsers').val();
    users = users.join(',');
    if(!parseInt((Uname.trim()).length)){
        notice1Sec("نام واحد مشخص نشده است !","yellow");
        return false;
    }
    var action = "doEditCreateCommentUnit";
    var param = {action:action,uid:uid,Uname:Uname,Udesc:Udesc,users:users};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
        $('#unitManagmentModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        showUnitManageList();
    }
}

//++++++++++++++++++++++ پرداخت اظهارنظر +++++++++++++++++++++++

function showFinalPayCommentManageList(page) {
    if(typeof page == "undefined"){
        page = 1;
    }
    var pcaName = $("#payCommentManageAccNameSearch").val();
    var pcToward = $("#payCommentManageTowardSearch").val();
    var pcAmount = $("#payCommentManageAmountSearch").val();
    var typeDay = $("#payCommentManageTypeDaySearch").val();
    var action = "showFinalPayCommentManageList";
    var param = {action:action,pcaName:pcaName,pcToward:pcToward,pcAmount:pcAmount,typeDay:typeDay,page:page};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#payCommentManageBody").html('');
        $("#payCommentManageBody").html(res);
    }
}

function showSortPayCommentManageList(page) {   // مرتب سازی بر اساس سررسید نقدی
    if(typeof page == "undefined"){
        page = 1;
    }
    var pcaName = $("#payCommentManageAccNameSearch").val();
    var pcToward = $("#payCommentManageTowardSearch").val();
    var pcAmount = $("#payCommentManageAmountSearch").val();
    var typeDay = $("#payCommentManageTypeDaySearch").val();
    var sort = 1;
    var action = "showSortPayCommentManageList";
    var param = {action:action,pcaName:pcaName,pcToward:pcToward,pcAmount:pcAmount,typeDay:typeDay,sort:sort,page:page};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#payCommentManageBody").html('');
        $("#payCommentManageBody").html(res);
    }
}

function showSortPayCommentCheckManageList(page) {  // مرتب سازی بر اساس سررسید چک
    if(typeof page == "undefined"){
        page = 1;
    }
    var pcaName = $("#payCommentManageAccNameSearch").val();
    var pcToward = $("#payCommentManageTowardSearch").val();
    var pcAmount = $("#payCommentManageAmountSearch").val();
    var typeDay = $("#payCommentManageTypeDaySearch").val();
    var sort = 2;
    var action = "showSortPayCommentManageList";
    var param = {action:action,pcaName:pcaName,pcToward:pcToward,pcAmount:pcAmount,typeDay:typeDay,sort:sort,page:page};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#payCommentManageBody").html('');
        $("#payCommentManageBody").html(res);
    }
}

function createDepositRegistration(pid) {
    var res = Main.getCatComment(pid);
    if (parseInt(res[0]['payType']) == 1){
        $("#depositManagmentDBank-div").css('display','none');
    }else {
        $("#depositManagmentDBank-div").css('display','');
    }
    $("#manageDepositHiddenDid").val(pid);
    $("#depositManagmentDdate").val('');
    $("#depositManagmentDepositor").val('');
    $("#depositManagmentDCode").val('');
    $("#depositManagmentDBank").val('');
    $("#depositManagmentDAmount").val('');
    $("#depositManagmentDescription").val('');
    $('#depositManagmentPaymentReceipt').val('');
    var res = Main.getCommentDepositInfo(pid,1,0,1,0);
    $("#depositManagment-Info-body").html('');
    $("#depositManagment-Info-body").html(res);
    $('#depositManagmentModal').modal('show');
}

function checkLeftOverCash() {
    var pid = $("#manageDepositHiddenDid").val();
    var DAmount = $("#depositManagmentDAmount").val();
    var action = "checkLeftOverCash";
    var param = {action:action,pid:pid,DAmount:DAmount};
    var res = manageAjaxRequest(param);
    if(res != false){
        if (res == 'yes'){
            $('#checkLeftOverCashModal').modal('show');
        }else {
            doCreateDepositRegistration();
        }
    }
}

function doCreateDepositRegistration() {
    var pid = $("#manageDepositHiddenDid").val();
    var Ddate = $("#depositManagmentDdate").val();
    var Depositor = $("#depositManagmentDepositor").val();
    var DCode = $("#depositManagmentDCode").val();
    var DBank = $("#depositManagmentDBank").val();
    var DAmount = $("#depositManagmentDAmount").val();
    var Description = $("#depositManagmentDescription").val();
    var formData = new FormData();
    var rst = Main.getCatComment(pid);
    if (parseInt(rst[0]['payType']) == 0){  //فورج
        if(!parseInt((DBank.trim()).length)){
            notice1Sec("نام بانک مشخص نشده است !","yellow");
            return false;
        }
    }
    if(!parseInt((Ddate.trim()).length)){
        notice1Sec("تاریخ واریز مشخص نشده است !","yellow");
        return false;
    }
    if(!parseInt((Depositor.trim()).length) || !parseInt((DCode.trim()).length)){
        notice1Sec("واریزکننده مشخص نشده است !","yellow");
        return false;
    }
    if(!parseInt((DAmount.trim()).length)){
        notice1Sec("مبلغ مشخص نشده است !","yellow");
        return false;
    }
    if($('#depositManagmentPaymentReceipt').val() != '' || $('#depositManagmentPaymentReceipt')[0].files.length != 0){
        var fileSelect = document.getElementById('depositManagmentPaymentReceipt');
        var files = fileSelect.files;
        if(!window.File && window.FileReader && window.FileList && window.Blob){ //if browser doesn't supports File API
            notice1Sec("Your browser does not support new File API! Please upgrade.","yellow");
            return false;
        }else {
            var total_selected_files = files.length;
            for (var x = 0; x < total_selected_files; x++) {
                formData.append("files[]",files[x]);
            }
        }
    }else {
        notice1Sec("رسید بارگذاری نشده است !!!","yellow");
        return false;
    }
    formData.append("action","doCreateDepositRegistration");
    formData.append("pid",pid);
    formData.append("Ddate",Ddate);
    formData.append("Depositor",Depositor);
    formData.append("DCode",DCode);
    formData.append("DBank",DBank);
    formData.append("DAmount",DAmount);
    formData.append("Description",Description);

    var xhr = new XMLHttpRequest();
    xhr.open('POST', 'php/managemantproccess.php',true);
    xhr.onload = function () {
        if (xhr.status === 200) {
            var res = JSON.parse(xhr.responseText);
            if(res['res'] == "false"){
                notice1Sec(res['data'],'yellow');
            }else{
                $("#depositManagmentDdate").val('');
                $("#depositManagmentDepositor").val('');
                $("#depositManagmentDCode").val('');
                $("#depositManagmentDBank").val('');
                $("#depositManagmentDAmount").val('');
                $("#depositManagmentDescription").val('');
                $("#depositManagmentPaymentReceipt").val('');
                notice1Sec(res['data'], "green");
                var result = Main.getCommentDepositInfo(pid,1,0,1,0);
                $("#depositManagment-Info-body").html('');
                $("#depositManagment-Info-body").html(result);
                showFinalPayCommentManageList();
            }
        }else{
            notice1Sec("خطایی رخ داده است !",'yellow');
        }
    };
    xhr.send(formData);
}

function createPayCommentCheck(cid) {  //+++++++ افزودن چک به اظهارنظر +++++++
    $("#addCheckToCommentManageHiddenCid").val(cid);
    $("#addCheckToCommentManageCDate").val('');
    $("#addCheckToCommentManageCAmount").val('');
    $("#addCheckToCommentManageCNum").val('');
    $("#addCheckToCommentManageCType").val(0);
    $("#addCheckToCommentManageDesc").val('');
    $("#addCheckToCommentManageDesc-div").css('display','none');

    var res = Main.getCommentCheckInfo(cid);
    $("#payCommentCheck-body").html('');
    $("#payCommentCheck-body").html(res);
    $('#addCheckToCommentManagmentModal').modal('show');
}

function checkLeftOverCheki() {
    var cid = $("#addCheckToCommentManageHiddenCid").val();
    var CAmount = $("#addCheckToCommentManageCAmount").val();
    var action = "checkLeftOverCheki";
    var param = {action:action,cid:cid,CAmount:CAmount};
    var res = manageAjaxRequest(param);
    if(res != false){
        if (res == 'yes'){
            $('#checkLeftOverChekiModal').modal('show');
        }else {
            doAddCheckToComment();
        }
    }
}

function doAddCheckToComment() {
    var cid = $('#addCheckToCommentManageHiddenCid').val();
    var CDate = $('#addCheckToCommentManageCDate').val();
    var CAmount = $('#addCheckToCommentManageCAmount').val();
    var CNum = $('#addCheckToCommentManageCNum').val();
    var CType = $('#addCheckToCommentManageCType').val();
    var desc = $('#addCheckToCommentManageDesc').val();
    if(!parseInt((CDate.trim()).length)){
        notice1Sec("تاریخ چک مشخص نشده است !","yellow");
        return false;
    }
    if(!parseInt((CAmount.trim()).length)){
        notice1Sec("مبلغ چک مشخص نشده است !","yellow");
        return false;
    }
    if(!parseInt((CNum.trim()).length)){
        notice1Sec("شماره چک مشخص نشده است !","yellow");
        return false;
    }
    if (parseInt(CType) > 0){
        if(!parseInt((desc.trim()).length)){
            notice1Sec("توضیحات چک مشخص نشده است !","yellow");
            return false;
        }
    }
    var action = "doAddCheckToComment";
    var param = {action:action,cid:cid,CDate:CDate,CAmount:CAmount,CNum:CNum,CType:CType,desc:desc};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
        $("#addCheckToCommentManageCDate").val('');
        $("#addCheckToCommentManageCAmount").val('');
        $("#addCheckToCommentManageCNum").val('');
        var res = Main.getCommentCheckInfo(cid);
        $("#payCommentCheck-body").html('');
        $("#payCommentCheck-body").html(res);
        showFinalPayCommentManageList();
    }
}

function deletePaymentReceipt(did) {
    var pid = $("#manageDepositHiddenDid").val();
    var action = "deletePaymentReceipt";
    var param = {action:action,did:did};
    var res = manageAjaxRequest(param);
    if(res != false){
        var result = Main.getCommentDepositInfo(pid,1,0,0,0);
        $("#depositManagment-Info-body").html('');
        $("#depositManagment-Info-body").html(result);
        notice1Sec(res, "green");
    }
}

function downloadPaymentReceipt(did) {
    var action = "downloadPaymentReceipt";
    var param = {action:action,did:did};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#paymentReceiptDownload-body").html('');
        $("#paymentReceiptDownload-body").html(res);
        $('#paymentReceiptDownloadModal').modal('show');
    }
}

function getDepositorCodeTafzili() {
    var depositor = $("#depositManagmentDepositor").val();
    var data = Main.getDepositorCode(depositor);
    if (parseInt(data.length) !== 0){
        $("#depositManagmentDCode").val('');
        $("#depositManagmentDCode").val(data[0]['codeTafzili']);
    }else {
        $("#depositManagmentDCode").val('');
    }
}

function getDepositorNameWithCode() {
    var code = $("#depositManagmentDCode").val();
    var data = Main.getDepositorNameWC(code);
    if (parseInt(data.length) !== 0){
        $("#depositManagmentDepositor").val('');
        $("#depositManagmentDepositor").val(data[0]['Name']);
    }else {
        $("#depositManagmentDepositor").val('');
    }
}

function ShowOtherInfoPayComment(did) {
    var action = "ShowOtherInfoPayComment";
    var param = {action:action,did:did};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#payComment-manage-Info-body").html('');
        $("#payComment-manage-Info-body").html(res);
        $('#payCommentManageInfoModal').modal('show');
    }
}

function payCommentFinalApproval(pid){
    var action = "checkMabaleghVarizi";
    var param = {action:action,pid:pid};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#payCommentFinalApprovalIdHidden1").val(pid);
        $('#checkMabaleghVariziModal').modal('show');
    }else {
        $("#payCommentFinalApprovalIdHidden").val(pid);
        $('#payCommentFinalApprovalModal').modal('show');
    }
}

function doFinalApprovalComment() {
    var pid = $("#payCommentFinalApprovalIdHidden").val();
    var action = "doFinalApprovalComment";
    var param = {action:action,pid:pid};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec('درخواست با موفقیت انجام شد.',"green");
        $('#payCommentFinalApprovalModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        showFinalPayCommentManageList();
        if (res == 'yes') {
            showFinancialConfirmationList();
        }
    }
}

function doFinalApprovalComment1() {
    var pid = $("#payCommentFinalApprovalIdHidden1").val();
    var action = "doFinalApprovalComment";
    var param = {action:action,pid:pid};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec('درخواست با موفقیت انجام شد.',"green");
        $('#checkMabaleghVariziModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        showFinalPayCommentManageList();
        if (res == 'yes') {
            showFinancialConfirmationList();
        }
    }
}

function sendDepositToMali(did){
    $("#sendDepositToMaliIdHidden").val(did);
    $('#sendDepositToMaliModal').modal('show');
}

function doSendDepositToMali() {
    var pid = $("#manageDepositHiddenDid").val();
    var did = $("#sendDepositToMaliIdHidden").val();
    var action = "doSendDepositToMali";
    var param = {action:action,pid:pid,did:did};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec('درخواست با موفقیت انجام شد.',"green");
        $('#sendDepositToMaliModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        var result = Main.getCommentDepositInfo(pid,1,0,1,0);
        $("#depositManagment-Info-body").html('');
        $("#depositManagment-Info-body").html(result);
        if (res == 'yes') {
            showTempFinancialKeshoList();
        }

    }
}

function sendPayCommentInPC(cid) {
    $("#payCommentManagmentHiddenCid").val(cid);
    $("#payCommentManagmentReceiver").selectpicker('deselectAll');
    $("#payCommentManagmentConfirmedDesc").val('');
    $('#sendPayCommentManagmentModal').modal('show');
}

function doSendPayCommentInPC() {
    var cid = $("#payCommentManagmentHiddenCid").val();
    var receiver = $("#payCommentManagmentReceiver").val();
    receiver = receiver.join(',');
    var desc = $("#payCommentManagmentConfirmedDesc").val();

    if (!parseInt((receiver.trim()).length)){
        notice1Sec("گیرنده مشخص نشده است !","yellow");
        return false;
    }
    if (!parseInt((desc.trim()).length)) {
        notice1Sec("توضیحات مشخص نشده است !", "yellow");
        return false;
    }
    var action = "doSendPayCommentInPC";
    var param = {action:action,cid:cid,receiver:receiver,desc:desc};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res, "green");
        $('#sendPayCommentManagmentModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        showPayCommentManageList();
        showFinalPayCommentManageList();
    }
}

function getCheckType() {
    var ctype = $("#addCheckToCommentManageCType").val();
    if (parseInt(ctype) == 0){
        $("#addCheckToCommentManageDesc-div").css('display','none');
    }else {
        $("#addCheckToCommentManageDesc-div").css('display','');
    }
}

function createPayCommentExcel() {
    var action = "createPayCommentExcel";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    if(res != false){
        window.open(res);
    }
}

function createDepositExcel() {
    var pid = $("#manageDepositHiddenDid").val();
    var action = "createDepositExcel";
    var param = {action:action,pid:pid};
    var res = manageAjaxRequest(param);
    if(res != false){
        window.open(res);
    }
}

//++++++++++++++++++++++ واریزکنندگان +++++++++++++++++++++++

function showDepositorManageList(page) {
    if(typeof page == "undefined"){
        page = 1;
    }
    var Name = $("#depositorManageNameSearch").val();
    var Code = $("#depositorManageCodeSearch").val();
    var action = "showDepositorManageList";
    var param = {action:action,Name:Name,Code:Code,page:page};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#depositorsManageBody").html('');
        $("#depositorsManageBody").html(res);
        $("#manageDepositorHiddenPage").val(page);
    }
}

function createDepositor() {
    $("#manageDepositorHiddenDid").val('');
    $("#depositorManagmentName").val('');
    $("#depositorManagmentCode").val('');
    $('#depositorManagmentModal').modal('show');
}

function editDepositor(did) {
    var res = Main.getDepositorInfo(did);
    if(res != false){
        $('#depositorManagmentModal').modal('show');
        $("#manageDepositorHiddenDid").val(res['did']);
        $("#depositorManagmentName").val(res['Name']);
        $("#depositorManagmentCode").val(res['codeTafzili']);
    }
}

function doEditCreateDepositor() {
    var did = $("#manageDepositorHiddenDid").val();
    var Name = $("#depositorManagmentName").val();
    var code = $("#depositorManagmentCode").val();
    if (!parseInt((Name.trim()).length)) {
        notice1Sec("نام واریز کننده مشخص نشده است !", "yellow");
        return false;
    }
    if (!parseInt((code.trim()).length) || !$.isNumeric(code)) {
        notice1Sec("کد تفضیلی مشخص نشده است یا عددی نیست !", "yellow");
        return false;
    }
    var action = "doEditCreateDepositor";
    var param = {action:action,did:did,Name:Name,code:code};
    var res = manageAjaxRequest(param);
    if (res != false) {
        notice1Sec(res, "green");
        $('#accountManagmentModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        var page = $("#manageDepositorHiddenPage").val();
        commentManagement(page);
        $('#depositorsManageTabID-alink').addClass('active');
        $('#payCommentManageTabID-alink').removeClass('active');
        $('#accountManageTabID-alink').removeClass('active');
        $('#commentManageTabID-alink').removeClass('active');
        $('#unitManageTabID-alink').removeClass('active');

        $('#depositorsManageTabID').addClass('active');
        $('#payCommentManageTabID').removeClass('active');
        $('#accountManageTabID').removeClass('active');
        $('#commentManageTabID').removeClass('active');
        $('#unitManageTabID').removeClass('active');
        showDepositorManageList(page);
    }
}

//++++++++++++++++++++++ گزارش پرداخت اظهارنظر +++++++++++++++++++++++

function reportPayCommentManage() {
    var action = "reportPayCommentManage";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    if(res != false) {
        $("#reportPayCommentManageID").html('');
        $("#reportPayCommentManageID").html(res);

        $("#reportPayCommentManageOneLayer-div").css('display','none');
        $("#reportPayCommentManageTwoLayer-div").css('display','none');
        $("#reportPayCommentManageThreeLayer-div").css('display','none');

        var data = Main.getAccountNameList();
        var accountName = new Array();
        var accountNames = {aa: []};
        for (var d = 0; d < data.length; d++) {
            accountName[d] = data[d]['Name'];
            accountNames.aa.push({
                "id": data[d]['RowID'],
                "name": data[d]['Name'],
            });
        }
        $("#reportPayCommentManageAccNameSearch").typeahead({source: accountNames.aa});
        var rpsDate = new AMIB.persianCalendar( 'reportPayCommentManageSDateSearch' );
        var rpeDate = new AMIB.persianCalendar( 'reportPayCommentManageEDateSearch' );
        var rpcsDate = new AMIB.persianCalendar( 'reportPayCommentManageSDateCashSearch' );
        var rpceDate = new AMIB.persianCalendar( 'reportPayCommentManageEDateCashSearch' );
        var rpnsDate = new AMIB.persianCalendar( 'reportPayCommentManageSDateNCashSearch' );
        var rpneDate = new AMIB.persianCalendar( 'reportPayCommentManageEDateNCashSearch' );
        $("#reportPayCommentManagePaySendSearch").selectpicker();
        $("#reportPayCommentManagePaySendSearch").val(0);
        $("#reportPayCommentManagePaySendSearch").selectpicker('refresh');
        showReportPayCommentManageList();
    }
}

function showReportPayCommentManageList(page) {
    if(typeof page == "undefined"){
        page = 1;
    }
    var unCode = $("#reportPayCommentManageUncodeSearch").val();
    var rcsDate = $("#reportPayCommentManageSDateSearch").val();
    var rceDate = $("#reportPayCommentManageEDateSearch").val();

    var rpcsDate = $('#reportPayCommentManageSDateCashSearch').val();
    var rpceDate = $('#reportPayCommentManageEDateCashSearch').val();
    var rpnsDate = $('#reportPayCommentManageSDateNCashSearch').val();
    var rpneDate = $('#reportPayCommentManageEDateNCashSearch').val();

    var layer1 = $('#reportPayCommentManageOneLayer').val();
    var layer2 = $('#reportPayCommentManageTwoLayer').val();
    var layer3 = $('#reportPayCommentManageThreeLayer').val();

    if (layer2 == null){
        layer2 = 0;
    }
    if (layer3 == null){
        layer3 = 0;
    }

    var dUnit = $('#reportPayCommentManageUnitSearch').val();
    var mUnit = $('#reportPayCommentManageConsumerUnitSearch').val();
    var c_type = $('#reportPayCommentManagetypeSearch').val();

    var rcaName = $("#reportPayCommentManageAccNameSearch").val();
    var rcToward = $("#reportPayCommentManageTowardSearch").val();
    var rcAmount = $("#reportPayCommentManageAmountSearch").val();
    var rcPaytype = $("#reportPayCommentManagePaytypeSearch").val();
    var rcSortType = $("#reportPayCommentManageSortTypeSearch").val();
    var rcPaySend = $("#reportPayCommentManagePaySendSearch").val();
    var rcPaySend = rcPaySend.join(",");
    var action = "showReportPayCommentManageList";
    var param = {action:action,unCode:unCode,rcsDate:rcsDate,rceDate:rceDate,rcaName:rcaName,rcToward:rcToward,rcAmount:rcAmount,rcPaytype:rcPaytype,rcPaySend:rcPaySend,c_type,c_type,
                 rcSortType:rcSortType,rpcsDate:rpcsDate,rpceDate:rpceDate,rpnsDate:rpnsDate,rpneDate:rpneDate,dUnit:dUnit,mUnit:mUnit,layer1:layer1,layer2:layer2,layer3:layer3,page:page};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#reportPayCommentManageBody").html('');
        $("#reportPayCommentManageBody").html(res);
    }
}

function payCommentReportExcel() {
    var unCode = $("#reportPayCommentManageUncodeSearch").val();
    var rcsDate = $("#reportPayCommentManageSDateSearch").val();
    var rceDate = $("#reportPayCommentManageEDateSearch").val();
    var c_type = $('#reportPayCommentManagetypeSearch').val();
    var rpcsDate = $('#reportPayCommentManageSDateCashSearch').val();
    var rpceDate = $('#reportPayCommentManageEDateCashSearch').val();
    var rpnsDate = $('#reportPayCommentManageSDateNCashSearch').val();
    var rpneDate = $('#reportPayCommentManageEDateNCashSearch').val();

    var dUnit = $('#reportPayCommentManageUnitSearch').val();
    var mUnit = $('#reportPayCommentManageConsumerUnitSearch').val();

    var rcaName = $("#reportPayCommentManageAccNameSearch").val();
    var rcToward = $("#reportPayCommentManageTowardSearch").val();
    var rcAmount = $("#reportPayCommentManageAmountSearch").val();
    var rcPaytype = $("#reportPayCommentManagePaytypeSearch").val();
    var rcPaySend = $("#reportPayCommentManagePaySendSearch").val();
    var rcPaySend = rcPaySend.join(",");
    var action = "payCommentReportExcel";
    var param = {action:action,unCode:unCode,rcsDate:rcsDate,rceDate:rceDate,rcaName:rcaName,rcToward:rcToward,
        rcAmount:rcAmount,rcPaytype:rcPaytype,rcPaySend:rcPaySend,rpcsDate:rpcsDate,
        rpceDate:rpceDate,rpnsDate:rpnsDate,rpneDate:rpneDate,dUnit:dUnit,mUnit:mUnit,c_type:c_type};

    var res = manageAjaxRequest(param);
    if(res != false){
        window.open(res);
    }
}

function showSeparationTotalAmount() {
    var unCode = $("#reportPayCommentManageUncodeSearch").val();
    var rcsDate = $("#reportPayCommentManageSDateSearch").val();
    var rceDate = $("#reportPayCommentManageEDateSearch").val();

    var rpcsDate = $('#reportPayCommentManageSDateCashSearch').val();
    var rpceDate = $('#reportPayCommentManageEDateCashSearch').val();
    var rpnsDate = $('#reportPayCommentManageSDateNCashSearch').val();
    var rpneDate = $('#reportPayCommentManageEDateNCashSearch').val();

    var rcaName = $("#reportPayCommentManageAccNameSearch").val();
    var rcToward = $("#reportPayCommentManageTowardSearch").val();
    var rcAmount = $("#reportPayCommentManageAmountSearch").val();
    var rcPaytype = $("#reportPayCommentManagePaytypeSearch").val();
    var rcPaySend = $("#reportPayCommentManagePaySendSearch").val();
    var rcPaySend = rcPaySend.join(",");

    var action = "showSeparationTotalAmount";
    var param = {action:action,unCode:unCode,rcsDate:rcsDate,rceDate:rceDate,rcaName:rcaName,rcToward:rcToward,rcAmount:rcAmount,rcPaytype:rcPaytype,rcPaySend:rcPaySend,rpcsDate:rpcsDate,rpceDate:rpceDate,rpnsDate:rpnsDate,rpneDate:rpneDate};
    var res = manageAjaxRequest(param);
    if(res != false) {
        $("#showSeparationTotalAmount-body").html('');
        $("#showSeparationTotalAmount-body").html(res);
/*        var data = Main.getAccountNameList();
        var accountName = new Array();
        var accountNames = {aa: []};
        for (var d = 0; d < data.length; d++) {
            accountName[d] = data[d]['Name'];
            accountNames.aa.push({
                "id": data[d]['RowID'],
                "name": data[d]['Name'],
            });
        }
        $("#customerReceiveAccountSearch").typeahead({source: accountNames.aa});
        var crsDate = new AMIB.persianCalendar('customerReceiveSDateSearch');  // جستجو اظهارنظر
        var creDate = new AMIB.persianCalendar('customerReceiveEDateSearch');  // جستجو اظهارنظر*/
        $('#showSeparationTotalAmountModal').modal('show');
    }
}

function showSeparationSubTotalAmount(fid) {
    var unCode = $("#reportPayCommentManageUncodeSearch").val();
    var rcsDate = $("#reportPayCommentManageSDateSearch").val();
    var rceDate = $("#reportPayCommentManageEDateSearch").val();

    var rpcsDate = $('#reportPayCommentManageSDateCashSearch').val();
    var rpceDate = $('#reportPayCommentManageEDateCashSearch').val();
    var rpnsDate = $('#reportPayCommentManageSDateNCashSearch').val();
    var rpneDate = $('#reportPayCommentManageEDateNCashSearch').val();

    var rcaName = $("#reportPayCommentManageAccNameSearch").val();
    var rcToward = $("#reportPayCommentManageTowardSearch").val();
    var rcAmount = $("#reportPayCommentManageAmountSearch").val();
    var rcPaytype = $("#reportPayCommentManagePaytypeSearch").val();
    var rcPaySend = $("#reportPayCommentManagePaySendSearch").val();
    var rcPaySend = rcPaySend.join(",");

    var action = "showSeparationSubTotalAmount";
    var param = {action:action,fid:fid,unCode:unCode,rcsDate:rcsDate,rceDate:rceDate,rcaName:rcaName,rcToward:rcToward,rcAmount:rcAmount,rcPaytype:rcPaytype,rcPaySend:rcPaySend,rpcsDate:rpcsDate,rpceDate:rpceDate,rpnsDate:rpnsDate,rpneDate:rpneDate};
    var res = manageAjaxRequest(param);
    if(res != false) {
        $("#showSeparationSubTotalAmount-body").html('');
        $("#showSeparationSubTotalAmount-body").html(res);
        $('#showSeparationSubTotalAmountModal').modal('show');
    }
}

function showSeparationSubgroupTotalAmount(fid) {
    var unCode = $("#reportPayCommentManageUncodeSearch").val();
    var rcsDate = $("#reportPayCommentManageSDateSearch").val();
    var rceDate = $("#reportPayCommentManageEDateSearch").val();

    var rpcsDate = $('#reportPayCommentManageSDateCashSearch').val();
    var rpceDate = $('#reportPayCommentManageEDateCashSearch').val();
    var rpnsDate = $('#reportPayCommentManageSDateNCashSearch').val();
    var rpneDate = $('#reportPayCommentManageEDateNCashSearch').val();

    var rcaName = $("#reportPayCommentManageAccNameSearch").val();
    var rcToward = $("#reportPayCommentManageTowardSearch").val();
    var rcAmount = $("#reportPayCommentManageAmountSearch").val();
    var rcPaytype = $("#reportPayCommentManagePaytypeSearch").val();
    var rcPaySend = $("#reportPayCommentManagePaySendSearch").val();
    var rcPaySend = rcPaySend.join(",");

    var action = "showSeparationSubgroupTotalAmount";
    var param = {action:action,fid:fid,unCode:unCode,rcsDate:rcsDate,rceDate:rceDate,rcaName:rcaName,rcToward:rcToward,rcAmount:rcAmount,rcPaytype:rcPaytype,rcPaySend:rcPaySend,rpcsDate:rpcsDate,rpceDate:rpceDate,rpnsDate:rpnsDate,rpneDate:rpneDate};
    var res = manageAjaxRequest(param);
    if(res != false) {
        $("#showSeparationSubgroupTotalAmount-body").html('');
        $("#showSeparationSubgroupTotalAmount-body").html(res);
        $('#showSeparationSubgroupTotalAmountModal').modal('show');
    }
}

function payCommentReportSearch() {
    $('#payCommentSearchManageModal').modal('show');
}

function payCommentReportRefreshSearch() {
    $("#reportPayCommentManageUncodeSearch").val('');
    $("#reportPayCommentManageSDateSearch").val('');
    $("#reportPayCommentManageEDateSearch").val('');
    $('#reportPayCommentManageSDateCashSearch').val('');
    $('#reportPayCommentManageEDateCashSearch').val('');
    $('#reportPayCommentManageSDateNCashSearch').val('');
    $('#reportPayCommentManageEDateNCashSearch').val('');
    $('#reportPayCommentManageUnitSearch').val(-1);
    $('#reportPayCommentManageConsumerUnitSearch').val(-1);
    $("#reportPayCommentManageAccNameSearch").val('');
    $("#reportPayCommentManageTowardSearch").val('');
    $("#reportPayCommentManageAmountSearch").val('');
    $("#reportPayCommentManagePaySendSearch").val(0);
    $("#reportPayCommentManagePaytypeSearch").val(-1);
    $("#reportPayCommentManageSortTypeSearch").val(-1);
    $("#reportPayCommentManagePaySendSearch").selectpicker('refresh');
}

function showDepositsList(pid) {
    $("#depositsListInfoHiddenPid").val(pid);
    var res = Main.getCommentDepositInfo(pid,0,1,0,0);
    $("#deposits-manage-Info-body").html('');
    $("#deposits-manage-Info-body").html(res);
    
    $('#depositsListInfoModal').modal('show');
    create_data_table('OtherInfoDeposit-tableID')
}

function ShowCommentCheck(cid) {
    var action = "ShowCommentCheck";
    var param = {action:action,cid:cid};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#comment-manage-Checks-body").html('');
        $("#comment-manage-Checks-body").html(res);
        $('#commentManageChecksModal').modal('show');
    }
}

function showCommentAccountInfo(cid) {
    var action = "showCommentAccountInfo";
    var param = {action:action,cid:cid};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#commentAccount-manage-Info-body").html('');
        $("#commentAccount-manage-Info-body").html(res);
        $('#commentAccountInfoModal').modal('show');
    }
}

function downloadPaymentReceiptReport(did) {
    var action = "downloadPaymentReceiptReport";
    var param = {action:action,did:did};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#paymentReceiptDownloadReport-body").html('');
        $("#paymentReceiptDownloadReport-body").html(res);
        $('#paymentReceiptDownloadReportModal').modal('show');
    }
}

function ShowAttachmentFileRptComment(pid) {
    var action = "ShowAttachmentFileRptComment";
    var param = {action:action,pid:pid};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#commentAttachmentFileRpt-body").html('');
        $("#commentAttachmentFileRpt-body").html(res);
        $('#commentAttachmentFileRptModal').modal('show');
    }
}

function ShowWorkflowRptComment(pid) {
    var action = "ShowWorkflowRptComment";
    var param = {action:action,pid:pid};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#commentWorkflowRpt-body").html('');
        $("#commentWorkflowRpt-body").html(res);
        $('#commentWorkflowRptModal').modal('show');
    }
}

function showAttachedFundToComment2(cid) {  // لیست تنخواه در گزارش اظهارنظرات
    var action = "showAttachedFundToComment2";
    var param = {action:action,cid:cid};
    var res = manageAjaxRequest(param);
    //console.log(res);
    if(res != false) {
        $("#showAttachedFundToReportComment-body").html('');
        $("#showAttachedFundToReportComment-body").html(res);
        $('#showAttachedFundToReportCommentModal').modal('show');
        $("#coverReportFundListHiddenID").val(cid);

    }
}

function attachedFundListDetailsReport(fid) {
    var res = Main.getFundListDetailsReport(fid);
    $("#fundListDetails-Report-body").html('');
    $("#fundListDetails-Report-body").html(res);
    $('#showFundListDetailsReportModal').modal('show');
}

function reportAttachFundListDetails(fdid) {
    var res = Main.getFundListAttachReport(fdid);
    $("#reportFundListAttachmentFile-body").html('');
    $("#reportFundListAttachmentFile-body").html(res);
    $('#reportFundListAttachmentFileModal').modal('show');
}

function printReportPayComment(cid){
    var action = "doPrintReportPayComment";
    var param = {action:action,cid:cid};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#hiddenPayCommentBody").html('');
        $("#hiddenPayCommentBody").html(res);
        $('.demoRPC').printThis({
            // base: "http://localhost:8012/BOM/administrator.php"
            base:base_url
        });
    }
}

function downloadCheckCarcassFileRpt(pid) {
    var action = "downloadCheckCarcassFileRpt";
    var param = {action:action,pid:pid};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#downloadCheckCarcassFileRpt-body").html('');
        $("#downloadCheckCarcassFileRpt-body").html(res);
        $('#downloadCheckCarcassFileRptModal').modal('show');
    }
}

function depositsListInfoExcel() {
    var pid = $("#depositsListInfoHiddenPid").val();
    var action = "depositsListInfoExcel";
    var param = {action:action,pid:pid};
    var res = manageAjaxRequest(param);
    if(res != false){
        window.open(res);
    }
}

function getReportSubLayerTwo() {
    var layer1 = $("#reportPayCommentManageOneLayer").val();
    $('#reportPayCommentManageTwoLayer').empty();
    $('#reportPayCommentManageThreeLayer').empty();
    $("#reportPayCommentManageThreeLayer-div").css('display', 'none');
    var res = Main.getSubLayers(layer1);
    switch (layer1) {
        case '-1':
            $("#reportPayCommentManageTwoLayer-div").css('display','');
            break;
        case '1':  // مواد اولیه
        case '2':  // مواد مصرفی
        case '4':  // تنخواه
        case '5':  // قبوض شرکتی
        case '7':  // طرح توسعه
        case '8':  // سهامداران
        case '9':  // مالیاتی
        case '10':  // قراردادهای زیرساختی
        case '25':  // پرسنلی
        case '29':  // اقلام بازرگانی
        case '30':  // محصولات تولیدی
        case '42':  // واردات
        case '43':  // دارایی ثابت
        case '50':  // وسائط نقلیه
        case '68':  // تحقیق و توسعه
        case '74':  // تشریفات
        case '95':  // حقوقی
        case '167':  // پست
        case '236':  // مواد اولیه - عمده
        case '249':  // بسته بندی
        case '279':  // پاک سازی
            $("#reportPayCommentManageTwoLayer-div").css('display','');
            $('#reportPayCommentManageTwoLayer').append($('<option>', {
                value: 0,
                text: '--------'
            }));
            for(var e=0;e<res.length;e++){
                $('#reportPayCommentManageTwoLayer').append($('<option>', {
                    value: res[e]['RowID'],
                    text: res[e]['layerName']
                }));
            }
            break;
        case '6':  // جرایم شرکتی
        case '24':  // چک برگشتی
        case '78':  // امور خیریه
        case '233':  // فتوکپی
        case '267':  // وجوه قرض الحسنه
            $("#reportPayCommentManageTwoLayer-div").css('display','none');
            break;
    }
}

function getReportSubLayerThree() {
    var layer2 = $("#reportPayCommentManageTwoLayer").val();
    $('#reportPayCommentManageThreeLayer').empty();
    var res = Main.getSubLayers(layer2);
    switch (layer2) {
        case '13':
        case '14':
        case '15':
        case '16':
        case '21':
        case '22':
        case '23':
        case '60':
        case '61':
        case '62':
        case '63':
        case '148':
        case '83':
        case '84':
        case '91':
        case '93':
        case '99':
        case '149':
        case '282':
        case '284':
        case '285':
            $("#reportPayCommentManageThreeLayer-div").css('display', 'none');
            break;
        case '17':
        case '18':
        case '19':
        case '20':
        case '51':
        case '52':
        case '53':
        case '54':
        case '55':
        case '56':
        case '70':
        case '71':
        case '80':
        case '85':
        case '36':
        case '38':
        case '41':
        case '47':
        case '48':
        case '49':
        case '81':
        case '88':
        case '92':
        case '100':
        case '243':
        case '250':
        case '251':
        case '252':
        case '259':
        case '237':
            $("#reportPayCommentManageThreeLayer-div").css('display', '');
            $('#reportPayCommentManageThreeLayer').append($('<option>', {
                value: 0,
                text: '--------'
            }));
            for(var e=0;e<res.length;e++){
                $('#reportPayCommentManageThreeLayer').append($('<option>', {
                    value: res[e]['RowID'],
                    text: res[e]['layerName']
                }));
            }
            break;
        default:
            $("#reportPayCommentManageThreeLayer-div").css('display', 'none');
            break;
    }
}

//++++++++++++++++++++++ گزارش اظهارنظرهای حذف شده +++++++++++++++++++++++

function deletedPayCommentReport() {
    var action = "deletedPayCommentReport";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    if(res != false) {
        $("#deletedPayCommentReportID").html('');
        $("#deletedPayCommentReportID").html(res);
        var data = Main.getAccountNameList();
        var accountName = new Array();
        var accountNames = {aa: []};
        for (var d = 0; d < data.length; d++) {
            accountName[d] = data[d]['Name'];
            accountNames.aa.push({
                "id": data[d]['RowID'],
                "name": data[d]['Name'],
            });
        }
        $("#deletedPayCommentReportAccNameSearch").typeahead({source: accountNames.aa});
        var rdsDate = new AMIB.persianCalendar( 'deletedPayCommentReportSDateSearch' );
        var rdeDate = new AMIB.persianCalendar( 'deletedPayCommentReportEDateSearch' );
        showDeletedPayCommentReportList();
    }
}

function showDeletedPayCommentReportList(page) {
    if(typeof page == "undefined"){
        page = 1;
    }
    var csDate = $("#deletedPayCommentReportSDateSearch").val();
    var ceDate = $("#deletedPayCommentReportEDateSearch").val();
    var cUnit = $("#deletedPayCommentReportUnitSearch").val();
    var coUnit = $("#deletedPayCommentReportConsumerUnitSearch").val();
    var caName = $("#deletedPayCommentReportAccNameSearch").val();
    var cToward = $("#deletedPayCommentReportTowardSearch").val();
    var Uncode = $("#deletedPayCommentReportUncodeSearch").val();
    var amount = $("#deletedPayCommentReportAmountSearch").val();
    var action = "showDeletedPayCommentReportList";
    var param = {action:action,csDate:csDate,ceDate:ceDate,cUnit:cUnit,coUnit:coUnit,caName:caName,cToward:cToward,Uncode:Uncode,amount:amount,page:page};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#deletedPayCommentReportBody").html('');
        $("#deletedPayCommentReportBody").html(res);
    }
}

function ShowOtherInfoDeletedComment(cid) {
    var action = "ShowOtherInfoDeletedComment";
    var param = {action:action,cid:cid};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#comment-deleted-Info-body").html('');
        $("#comment-deleted-Info-body").html(res);
        $('#deletedCommentManageInfoModal').modal('show');
    }
}

function ShowAttachmentFileDeletedComment(pid) {
    var action = "ShowAttachmentFileDeletedComment";
    var param = {action:action,pid:pid};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#deletedCommentAttachmentFile-body").html('');
        $("#deletedCommentAttachmentFile-body").html(res);
        $('#deletedCommentAttachmentFileModal').modal('show');
    }
}

function ShowWorkflowDeletedComment(pid) {
    var action = "ShowWorkflowDeletedComment";
    var param = {action:action,pid:pid};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#deletedCommentWorkflow-body").html('');
        $("#deletedCommentWorkflow-body").html(res);
        $('#deletedCommentWorkflowModal').modal('show');
    }
}

function printDeletedComment(cid){
    var action = "doPrintDeletedComment";
    var param = {action:action,cid:cid};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#hiddenDeletedCommentBody").html('');
        $("#hiddenDeletedCommentBody").html(res);
        $('.demod').printThis({
            // base: "http://localhost:8012/BOM/administrator.php"
            base:base_url
        });
    }
}

function downloadCheckCarcassFileDeletedComment(pid) {
    var action = "downloadCheckCarcassFileDeletedComment";
    var param = {action:action,pid:pid};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#downloadCheckCarcassFileDel-body").html('');
        $("#downloadCheckCarcassFileDel-body").html(res);
        $('#downloadCheckCarcassFileDelModal').modal('show');
    }
}

function showAttachedFundToDeletedComment(cid) {  // لیست تنخواه در اظهار نظرهای حذف شده
    var action = "showAttachedFundToDeletedComment";
    var param = {action:action,cid:cid};
    var res = manageAjaxRequest(param);
    if(res != false) {
        $("#showAttachedFundToDeletedComment-body").html('');
        $("#showAttachedFundToDeletedComment-body").html(res);
        $('#showAttachedFundToDeletedCommentModal').modal('show');
    }
}

function attachedFundListDetailsDeletedComment(fid) {
    var res = Main.getFundListDetailsDeletedComment(fid);
    $("#fundListDetails-DeletedComment-body").html('');
    $("#fundListDetails-DeletedComment-body").html(res);
    $('#showFundListDetailsDeletedCommentModal').modal('show');
}

function showAttachFundListDetailsDeletedComment(fdid) {
    var res = Main.getFundListAttachShow(fdid);
    $("#showFundListAttachmentDeletedCommentFile-body").html('');
    $("#showFundListAttachmentDeletedCommentFile-body").html(res);
    $('#showFundListAttachmentDeletedCommentFileModal').modal('show');
}

//++++++++++++++++++++++ اظهارنظرهای دارای مازاد پرداختی +++++++++++++++++++++++

function overpaymentComments() {
    var action = "overpaymentComments";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    if(res != false) {
        $("#overpaymentCommentsID").html('');
        $("#overpaymentCommentsID").html(res);
        var data = Main.getAccountNameList();
        var accountName = new Array();
        var accountNames = {aa: []};
        for (var d = 0; d < data.length; d++) {
            accountName[d] = data[d]['Name'];
            accountNames.aa.push({
                "id": data[d]['RowID'],
                "name": data[d]['Name'],
            });
        }
        $("#overpaymentCommentsAccNameSearch").typeahead({source: accountNames.aa});
        var opcsDate = new AMIB.persianCalendar( 'overpaymentCommentsSDateSearch' );
        var opceDate = new AMIB.persianCalendar( 'overpaymentCommentsEDateSearch' );
        showOverpaymentCommentsList();
    }
}

function showOverpaymentCommentsList(page) {
    if(typeof page == "undefined"){
        page = 1;
    }
    var csDate = $("#overpaymentCommentsSDateSearch").val();
    var ceDate = $("#overpaymentCommentsEDateSearch").val();
    var cUnit = $("#overpaymentCommentsUnitSearch").val();
    var coUnit = $("#overpaymentCommentsConsumerUnitSearch").val();
    var caName = $("#overpaymentCommentsAccNameSearch").val();
    var cToward = $("#overpaymentCommentsTowardSearch").val();
    var Uncode = $("#overpaymentCommentsUncodeSearch").val();
    var amount = $("#overpaymentCommentsAmountSearch").val();
    var action = "showOverpaymentCommentsList";
    var param = {action:action,csDate:csDate,ceDate:ceDate,cUnit:cUnit,coUnit:coUnit,caName:caName,cToward:cToward,Uncode:Uncode,amount:amount,page:page};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#overpaymentCommentsBody").html('');
        $("#overpaymentCommentsBody").html(res);
    }
}

function ShowOtherInfoOverpaymentComments(cid) {
    var action = "ShowOtherInfoOverpaymentComments";
    var param = {action:action,cid:cid};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#overpaymentCommentsInfo-body").html('');
        $("#overpaymentCommentsInfo-body").html(res);
        $('#overpaymentCommentsInfoModal').modal('show');
    }
}

function downloadCheckCarcassFileOverpayment(pid) {
    var action = "downloadCheckCarcassFileOverpayment";
    var param = {action:action,pid:pid};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#downloadCheckCarcassFileOverpayment-body").html('');
        $("#downloadCheckCarcassFileOverpayment-body").html(res);
        $('#downloadCheckCarcassFileOverpaymentModal').modal('show');
    }
}

function showDepositsOverpaymentList(pid) {
    var res = Main.getCommentDepositInfo(pid,0,1,0,0);
    $("#depositsOverpayment-manage-Info-body").html('');
    $("#depositsOverpayment-manage-Info-body").html(res);
    $('#depositsOverpaymentListInfoModal').modal('show');
}

function ShowOverpaymentCommentCheck(cid) {
    var action = "ShowOverpaymentCommentCheck";
    var param = {action:action,cid:cid};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#comment-Overpayment-Checks-body").html('');
        $("#comment-Overpayment-Checks-body").html(res);
        $('#commentOverpaymentChecksModal').modal('show');
    }
}

function returnMoneyComment() {
    var ch = $('#overpaymentCommentsBody-table').find('input');
    var rtid = new Array();
    for(var c=0;c<ch.length;c++){
        if(ch[c].checked){
            rtid[rtid.length] = ch[c].attributes.rid.value;
        }
    }
    if(rtid.length > 1){
        notice1Sec("فقط یک اظهارنظر باید انتخاب شده باشد !","red");
        return false;
    }
    if(rtid.length==0){
        notice1Sec("هیچ اظهارنظری انتخاب نشده است !","red");
        return false;
    }
    rtid = rtid[0];

    var data = Main.getAccountNameList();
    var accountName = new Array();
    var accountNames = {aa: []};
    for (var d = 0; d < data.length; d++) {
        accountName[d] = data[d]['Name'];
        accountNames.aa.push({
            "id": data[d]['RowID'],
            "name": data[d]['Name'],
        });
    }
    $("#returnMoneyCommentAccName").typeahead({source: accountNames.aa});
    $("#returnMoneyCommentAccName-div").css('display','none');
    $("#returnMoneyCommentBanks-div").css('display','none');
    $("#returnMoneyCommentHiddenRTid").val(rtid);
    $("#returnMoneyCommentType").val(-1);
    $("#returnMoneyCommentBanks").val(-1);
    $("#returnMoneyCommentAccName").val('');
    $("#returnMoneyCommentAmount").val('');
    $('#returnMoneyCommentModal').modal('show');
}

function getReturnMoneyCommentType() {
    var type = $("#returnMoneyCommentType").val();
    if (parseInt(type) == 0){
        $("#returnMoneyCommentAccName-div").css('display','');
        $("#returnMoneyCommentBanks-div").css('display','none');
        $("#returnMoneyCommentBanks").val(-1);
    }else {
        $("#returnMoneyCommentAccName-div").css('display','none');
        $("#returnMoneyCommentBanks-div").css('display','');
        $("#returnMoneyCommentAccName").val('');
    }
}

function doReturnMoneyComment() {
    var rtid = $("#returnMoneyCommentHiddenRTid").val();
    var type = $("#returnMoneyCommentType").val();
    var accName = $("#returnMoneyCommentAccName").val();
    var bank = $("#returnMoneyCommentBanks").val();
    var amount = $("#returnMoneyCommentAmount").val();
    if (parseInt(type) == -1){
        notice1Sec("نحوه عودت وجه مشخص نشده است !","red");
        return false;
    }
    if (parseInt(type) == 0){  // مشتریان
        if (!parseInt((accName.trim()).length)) {
            notice1Sec("نام مشتری مشخص نشده است !", "yellow");
            return false;
        }
    }else {  // بانک های شرکت
        if (parseInt(bank) == -1){
            notice1Sec("بانک مشخص نشده است !","red");
            return false;
        }
    }
    if (!parseInt((amount.trim()).length)) {
        notice1Sec("مبلغ عودت وجه مشخص نشده است !", "yellow");
        return false;
    }
    var action = "doReturnMoneyComment";
    var param = {action:action,rtid:rtid,type:type,accName:accName,bank:bank,amount:amount};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
        $('#returnMoneyCommentModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        showOverpaymentCommentsList();
    }
}

function fractionMoneyComment() {
    var ch = $('#overpaymentCommentsBody-table').find('input');
    var frid = new Array();
    for(var c=0;c<ch.length;c++){
        if(ch[c].checked){
            frid[frid.length] = ch[c].attributes.rid.value;
        }
    }
    if(frid.length > 1){
        notice1Sec("فقط یک اظهارنظر باید انتخاب شده باشد !","red");
        return false;
    }
    if(frid.length==0){
        notice1Sec("هیچ اظهارنظری انتخاب نشده است !","red");
        return false;
    }
    frid = frid[0];
    $("#fractionMoneyCommentHiddenFRid").val(frid);
    $("#fractionMoneyCommentUnCode").val('');
    $("#fractionMoneyCommentAmount").val('');
    $('#fractionMoneyCommentModal').modal('show');
}

function doFractionMoneyComment() {
    var frid = $("#fractionMoneyCommentHiddenFRid").val();
    var code = $("#fractionMoneyCommentUnCode").val();
    var amount = $("#fractionMoneyCommentAmount").val();
    if (!parseInt((code.trim()).length)) {
        notice1Sec("کد یکتا مشخص نشده است !", "yellow");
        return false;
    }
    if (!parseInt((amount.trim()).length)) {
        notice1Sec("مبلغ کسر وجه مشخص نشده است !", "yellow");
        return false;
    }
    var action = "doFractionMoneyComment";
    var param = {action:action,frid:frid,code:code,amount:amount};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
        $('#fractionMoneyCommentModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        showOverpaymentCommentsList();
    }
}

//++++++++++++++++++++++ تاییدیه مالی +++++++++++++++++++++++

function showFinancialConfirmationList(page) {
    if(typeof page == "undefined"){
        page = 1;
    }
    var fcsDate = $("#financialConfirmationSDateSearch").val();
    var fceDate = $("#financialConfirmationEDateSearch").val();
    var fcaName = $("#financialConfirmationAccNameSearch").val();
    var fcToward = $("#financialConfirmationTowardSearch").val();
    var fcAmount = $("#financialConfirmationAmountSearch").val();
    var action = "showFinancialConfirmationList";
    var param = {action:action,fcsDate:fcsDate,fceDate:fceDate,fcaName:fcaName,fcToward:fcToward,fcAmount:fcAmount,page:page};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#financialConfirmationBody").html('');
        $("#financialConfirmationBody").html(res);
    }
}

// function sort_table(col_name,page=1){
//     showFinancialConfirmationList(page,col_name)
// }

function showDepositsInFinancialList(pid) {
    var res = Main.getCommentDepositInfo(pid,0,0,0,0);
    $("#deposits-InFinancial-Info-body").html('');
    $("#deposits-InFinancial-Info-body").html(res);
    $('#depositsInFinancialListModal').modal('show');
}

function ShowCommentCheckInFinancial(cid) {
    var action = "ShowCommentCheckInFinancial";
    var param = {action:action,cid:cid};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#comment-InFinancial-Checks-body").html('');
        $("#comment-InFinancial-Checks-body").html(res);
        $('#commentCheckInFinancialModal').modal('show');
    }
}

function ShowOtherInfoPayCommentInFinancial(did) {
    var action = "ShowOtherInfoPayCommentInFinancial";
    var param = {action:action,did:did};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#payComment-InFinancial-Info-body").html('');
        $("#payComment-InFinancial-Info-body").html(res);
        $('#payCommentInFinancialInfoModal').modal('show');
    }
}

function downloadCheckCarcassFileInFinancial(pid) {
    var action = "downloadCheckCarcassFileInFinancial";
    var param = {action:action,pid:pid};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#downloadCheckCarcassFileFinancial-body").html('');
        $("#downloadCheckCarcassFileFinancial-body").html(res);
        $('#downloadCheckCarcassFileFinancialModal').modal('show');
    }
}

function payCommentFinancialApproval(pid) {
    $("#payCommentFinancialApprovalIdHidden").val(pid);
    $('#payCommentFinancialApprovalModal').modal('show');
}

function doFinancialApprovalComment() {
    var pid = $("#payCommentFinancialApprovalIdHidden").val();
    var action = "doFinancialApprovalComment";
    var param = {action:action,pid:pid};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
        $('#payCommentFinancialApprovalModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        showFinancialConfirmationList();
    }
}

function getBankCheckExcel() {
    var action = "getBankCheckExcel";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    if(res != false){
        window.open(res);
    }
}

//++++++++++++++++++++++ کشو موقت مالی +++++++++++++++++++++++

function showTempFinancialKeshoList(page) {
    if(typeof page == "undefined"){
        page = 1;
    }
    var action = "showTempFinancialKeshoList";
    var param = {action:action,page:page};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#tempFinancialKeshoBody").html('');
        $("#tempFinancialKeshoBody").html(res);
    }
}

function showDepositsInTempFinancialList(pid) {
    var res = Main.getCommentDepositInfo(pid,0,0,0,1);
    $("#deposits-InTempFinancial-Info-body").html('');
    $("#deposits-InTempFinancial-Info-body").html(res);
    $('#depositsInTempFinancialListModal').modal('show');
}

function confirmedDepositVsMali(did,pid) {
    var action = "confirmedDepositVsMali";
    var param = {action:action,did:did};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
        var result = Main.getCommentDepositInfo(pid,0,0,0,1);
        $("#deposits-InTempFinancial-Info-body").html('');
        $("#deposits-InTempFinancial-Info-body").html(result);
    }
}

function payCommentTempFinancialApproval(pid) {
    $("#payCommentTempFinancialApprovalIdHidden").val(pid);
    $('#payCommentTempFinancialApprovalModal').modal('show');
}

function doTempFinancialApprovalComment() {
    var pid = $("#payCommentTempFinancialApprovalIdHidden").val();
    var action = "doTempFinancialApprovalComment";
    var param = {action:action,pid:pid};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
        $('#payCommentTempFinancialApprovalModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        showTempFinancialKeshoList();
    }
}

//++++++++++++++++++++++ مستندات سازمانی +++++++++++++++++++++++

function organizationalDocumentationManage() {
    var action = "organizationalDocumentationManage";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    if(res != false) {
        $("#organizationalDocumentationManageID").html('');
        $("#organizationalDocumentationManageID").html(res[0]);
        if(jQuery.inArray(1, res[1]) !== -1) {
            $("#regulationsManageAccessID").selectpicker();
            var rsDate = new AMIB.persianCalendar('regulationsManageSDateSearch');
            var rdDate = new AMIB.persianCalendar('regulationsManageEDateSearch');
            var rssDate = new AMIB.persianCalendar('regulationsManageSDate');
            var rdsDate = new AMIB.persianCalendar('regulationsManageEDate');
            showRegulationsManageList();
        }
        if(jQuery.inArray(2, res[1]) !== -1) {
            $("#regulationsManageAccessID").selectpicker();
            var rscDate = new AMIB.persianCalendar('warrantyManageSDateSearch');
            var rdcDate = new AMIB.persianCalendar('warrantyManageEDateSearch');
           // var rsscDate = new AMIB.persianCalendar('warrantyManageSDate');
           // var rdscDate = new AMIB.persianCalendar('warrantyManageEDate');
            //showCircularsManageList();
            showWarrantyManageList();

        }
        if(jQuery.inArray(3, res[1]) !== -1) {
            var lgsDate = new AMIB.persianCalendar('legalContractManageSDateSearch');
            var lgeDate = new AMIB.persianCalendar('legalContractManageEDateSearch');
            var lgcsDate = new AMIB.persianCalendar('legalContractsManageSdate');
            var lgceDate = new AMIB.persianCalendar('legalContractsManageEdate');
            var data = Main.getAccountNameList();
            var accountName = new Array();
            var accountNames = {aa: []};
            for (var d = 0; d < data.length; d++) {
                accountName[d] = data[d]['Name'];
                accountNames.aa.push({
                    "id": data[d]['RowID'],
                    "name": data[d]['Name'],
                });
            }
            $("#legalContractsManageSideTwoFS").typeahead({source: accountNames.aa});
            $("#legalContractsManageCodeTafzili").prop('disabled', true);
            $("#legalContractsManageCodeTafzili-div").css('display','none');
            $("#legalContractsManageSideTwo-div").css('display','none');
            $("#legalContractsManageSideTwoFS-div").css('display','none');
            showLegalContractsManageList();
        }
    }
}

//++++++++++++++++++++++ آئین نامه ها و دستورالعمل ها +++++++++++++++++++++++

function showRegulationsManageList(page) {
    if(typeof page == "undefined"){
        page = 1;
    }
    var Name = $("#regulationsManageFNameSearch").val();
    var Code = $("#regulationsManageFCodeSearch").val();
    var SDate = $("#regulationsManageSDateSearch").val();
    var EDate = $("#regulationsManageEDateSearch").val();
    var status = $("#regulationsManageStatusSearch").val();
    var action = "showRegulationsManageList";
    var param = {action:action,Name:Name,Code:Code,SDate:SDate,EDate:EDate,status:status,page:page};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#regulationsManageBody").html('');
        $("#regulationsManageBody").html(res);
    }
}

function createRegulations() {
    $("#regulationsManageHiddenRid").val('');
    $("#regulationsManageFName").val('');
    $("#regulationsManageFCode").val('');
    $("#regulationsManageSDate").val('');
    $("#regulationsManageEDate").val('');
    $("#regulationsManageDescription").val('');
    $("#regulationsManageAccessID").selectpicker('deselectAll');
    $('#regulationsManageModal').modal('show');
}

function editRegulations() {
    var ch = $('#regulationsManageBody-table').find('input');
    var rid = new Array();
    for(var c=0;c<ch.length;c++){
        if(ch[c].checked){
            rid[rid.length] = ch[c].attributes.rid.value;
        }
    }
    if(rid.length > 1){
        notice1Sec("فقط یک فایل باید انتخاب شده باشد !","red");
        return false;
    }
    if(rid.length==0){
        notice1Sec("هیچ فایلی انتخاب نشده است !","red");
        return false;
    }
    rid = rid[0];
    var res = Main.getRegulationsInfo(rid);
    if(res != false){
        $('#regulationsManageModal').modal('show');
        $("#regulationsManageHiddenRid").val(res['rid']);
        $("#regulationsManageFName").val(res['Name']);
        $("#regulationsManageFCode").val(res['Code']);
        $("#regulationsManageSDate").val(res['startDate']);
        $("#regulationsManageEDate").val(res['endDate']);
        $("#regulationsManageDescription").val(res['description']);
        $("#regulationsManageAccessID").val(res['accessID'].split(','));
        $("#regulationsManageAccessID").selectpicker('refresh');
    }
}

function doEditCreateRegulations() {
    var rid = $("#regulationsManageHiddenRid").val();
    var fname = $("#regulationsManageFName").val();
    var fcode = $("#regulationsManageFCode").val();
    var SDate = $("#regulationsManageSDate").val();
    var EDate = $("#regulationsManageEDate").val();
    var desc = $("#regulationsManageDescription").val();
    var accID = $("#regulationsManageAccessID").val();
    var accID = accID.join(",");
    if (!parseInt((fname.trim()).length)){
        notice1Sec("نام فایل مشخص نشده است !","yellow");
        return false;
    }
    if (!parseInt((fcode.trim()).length)){
        notice1Sec("کد فایل مشخص نشده است !","yellow");
        return false;
    }
    if (!parseInt((SDate.trim()).length)){
        notice1Sec("تاریخ شروع مشخص نشده است !","yellow");
        return false;
    }
    if (!parseInt((EDate.trim()).length)){
        notice1Sec("تاریخ پایان مشخص نشده است !","yellow");
        return false;
    }
    if (!parseInt((accID.trim()).length)){
        notice1Sec("افراد مجاز جهت دانلود فایل مشخص نشده است !","yellow");
        return false;
    }
    var action = "doEditCreateRegulations";
    var param = {action:action,rid:rid,fname:fname,fcode:fcode,SDate:SDate,EDate:EDate,desc:desc,accID:accID};
    var res = manageAjaxRequest(param);
    if (res != false) {
        notice1Sec(res, "green");
        $('#regulationsManageModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        showRegulationsManageList();
    }
}

function deleteRegulations() {
    var ch = $('#regulationsManageBody-table').find('input');
    var rid = new Array();
    for(var c=0;c<ch.length;c++){
        if(ch[c].checked){
            rid[rid.length] = ch[c].attributes.rid.value;
        }
    }
    if(rid.length > 1){
        notice1Sec("فقط یک فایل باید انتخاب شده باشد !","red");
        return false;
    }
    if(rid.length==0){
        notice1Sec("هیچ فایلی انتخاب نشده است !","red");
        return false;
    }
    rid = rid[0];
    $("#regulationsManage_deleteIdHidden").val(rid);
    $('#manageDeleteRegulationsModal').modal('show');
}

function dodeleteRegulations() {
    var rid = $("#regulationsManage_deleteIdHidden").val();
    var action = "dodeleteRegulations";
    var param = {action:action,rid:rid};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
        $('#manageDeleteRegulationsModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        showRegulationsManageList();
    }
}

function attachFileToRegulations() {
    var ch = $('#regulationsManageBody-table').find('input');
    var rid = new Array();
    for(var c=0;c<ch.length;c++){
        if(ch[c].checked){
            rid[rid.length] = ch[c].attributes.rid.value;
        }
    }
    if(rid.length > 1){
        notice1Sec("فقط یک فایل باید انتخاب شده باشد !","red");
        return false;
    }
    if(rid.length==0){
        notice1Sec("هیچ فایلی انتخاب نشده است !","red");
        return false;
    }
    rid = rid[0];
    $("#regulationsManageAttachmentID").val(rid);
    $("#regulationsManageAttachmentName").val('');
    $("#regulationsManageAttachment").val('');
    var res = Main.getAttachedRegulationsFile(rid);
    $("#regulationsAttachmentFile-body").html('');
    $("#regulationsAttachmentFile-body").html(res);
    $('#regulationsAttachmentFileModal').modal('show');
}

function doAttachFileToRegulations() {
    var rid = $('#regulationsManageAttachmentID').val();
    var info = $('#regulationsManageAttachmentName').val();
    var formData = new FormData();
    if($('#regulationsManageAttachment').val() != '' || $('#regulationsManageAttachment')[0].files.length != 0){
        var fileSelect = document.getElementById('regulationsManageAttachment');
        var files = fileSelect.files;
        if(!window.File && window.FileReader && window.FileList && window.Blob){ //if browser doesn't supports File API
            notice1Sec("Your browser does not support new File API! Please upgrade.","yellow");
            return false;
        }else {
            var total_selected_files = files.length;
            for (var x = 0; x < total_selected_files; x++) {
                formData.append("files[]",files[x]);
            }
        }
    }else {
        notice1Sec("هیچ فایلی انتخاب نشده است !","yellow");
        return false;
    }
    if(!parseInt((info.trim()).length)){
        notice1Sec("نام فایل مشخص نشده است !","yellow");
        return false;
    }
    formData.append("action","doAttachFileToRegulations");
    formData.append("rid",rid);
    formData.append("info",info);

    var xhr = new XMLHttpRequest();
    xhr.open('POST', 'php/managemantproccess.php',true);
    xhr.onload = function () {
        if (xhr.status === 200) {
            var res = JSON.parse(xhr.responseText);
            if(res['res'] == "false"){
                notice1Sec(res['data'],'yellow');
            }else{
                notice1Sec('بارگذاری انجام شد.', "green");
                var rst = Main.getAttachedRegulationsFile(rid);
                $("#regulationsAttachmentFile-body").html('');
                $("#regulationsAttachmentFile-body").html(rst);
                $("#regulationsManageAttachmentName").val('');
                $("#regulationsManageAttachment").val('');
                showRegulationsManageList();
            }
        }else{
            notice1Sec("خطایی رخ داده است !",'yellow');
        }
    };
    xhr.send(formData);
}

function deleteAttachRegulationsFile(fid){
    var rid = $('#regulationsManageAttachmentID').val();
    var action = "deleteAttachRegulationsFile";
    var param = {action:action,fid:fid};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res, "green");
        var rst = Main.getAttachedRegulationsFile(rid);
        $("#regulationsAttachmentFile-body").html('');
        $("#regulationsAttachmentFile-body").html(rst);
        showRegulationsManageList();
    }
}

function downloadRegulationsFile(rid) {
    var action = "downloadRegulationsFile";
    var param = {action:action,rid:rid};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#showRegulationsAttachmentFile-body").html('');
        $("#showRegulationsAttachmentFile-body").html(res);
        $('#showRegulationsAttachmentFileModal').modal('show');
    }
}

//++++++++++++++++++++++ بخشنامه ها +++++++++++++++++++++++

// function showCircularsManageList(page) {
//     if(typeof page == "undefined"){
//         page = 1;
//     }
//     var Name = $("#circularsManageFNameSearch").val();
//     var Code = $("#circularsManageFCodeSearch").val();
//     var SDate = $("#circularsManageSDateSearch").val();
//     var EDate = $("#circularsManageEDateSearch").val();
//     var status = $("#circularsManageStatusSearch").val();
//     var type = $("#circularsManageTypeSearch").val();
//     var action = "showCircularsManageList";
//     var param = {action:action,Name:Name,Code:Code,SDate:SDate,EDate:EDate,status:status,type:type,page:page};
//     var res = manageAjaxRequest(param);
//     if(res != false){
//         $("#circularsManageBody").html('');
//         $("#circularsManageBody").html(res);
//     }
// }

function showWarrantyManageList (page) {
    if(typeof page == "undefined"){
        page = 1;
    }
    var Name = $("#circularsManageFNameSearch").val();
    var Code = $("#circularsManageFCodeSearch").val();
    var SDate = $("#circularsManageSDateSearch").val();
    var EDate = $("#circularsManageEDateSearch").val();
    var status = $("#circularsManageStatusSearch").val();
    var type = $("#circularsManageTypeSearch").val();
    var action = "showWarrantyManageList";
    var param = {action:action,Name:Name,Code:Code,SDate:SDate,EDate:EDate,status:status,type:type,page:page};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#circularsManageBody").html('');
        $("#circularsManageBody").html(res);
    }
}

function createCirculars() {
    $("#circularsManageHiddenCid").val('');
    $("#circularsManageFType").val(0);
    $("#circularsManageFName").val('');
    $("#circularsManageFCode").val('');
    $("#circularsManageSDate").val('');
    $("#circularsManageEDate").val('');
    $("#circularsManageDescription").val('');
    $("#circularsManageAccessID").selectpicker('deselectAll');
    $('#circularsManageModal').modal('show');
}

function editCirculars() {
    var ch = $('#circularsManageBody-table').find('input');
    var cid = new Array();
    for(var c=0;c<ch.length;c++){
        if(ch[c].checked){
            cid[cid.length] = ch[c].attributes.rid.value;
        }
    }
    if(cid.length > 1){
        notice1Sec("فقط یک فایل باید انتخاب شده باشد !","red");
        return false;
    }
    if(cid.length==0){
        notice1Sec("هیچ فایلی انتخاب نشده است !","red");
        return false;
    }
    cid = cid[0];
    var res = Main.getCircularsInfo(cid);
    if(res != false){
        $('#circularsManageModal').modal('show');
        $("#circularsManageHiddenCid").val(res['cid']);
        $("#circularsManageFType").val(res['type']);
        $("#circularsManageFName").val(res['Name']);
        $("#circularsManageFCode").val(res['Code']);
        $("#circularsManageSDate").val(res['startDate']);
        $("#circularsManageEDate").val(res['endDate']);
        $("#circularsManageDescription").val(res['description']);
        $("#circularsManageAccessID").val(res['accessID'].split(','));
        $("#circularsManageAccessID").selectpicker('refresh');
    }
}

function doEditCreateCirculars() {
    var cid = $("#circularsManageHiddenCid").val();
    var type = $("#circularsManageFType").val();
    var fname = $("#circularsManageFName").val();
    var fcode = $("#circularsManageFCode").val();
    var SDate = $("#circularsManageSDate").val();
    var EDate = $("#circularsManageEDate").val();
    var desc = $("#circularsManageDescription").val();
    var accID = $("#circularsManageAccessID").val();
    var accID = accID.join(",");
    if (parseInt(type) == 0){
        notice1Sec("نوع فایل مشخص نشده است !","yellow");
        return false;
    }
    if (!parseInt((fname.trim()).length)){
        notice1Sec("نام فایل مشخص نشده است !","yellow");
        return false;
    }
    if (!parseInt((fcode.trim()).length)){
        notice1Sec("کد فایل مشخص نشده است !","yellow");
        return false;
    }
    if (!parseInt((SDate.trim()).length)){
        notice1Sec("تاریخ شروع مشخص نشده است !","yellow");
        return false;
    }
    if (!parseInt((EDate.trim()).length)){
        notice1Sec("تاریخ پایان مشخص نشده است !","yellow");
        return false;
    }
    if (!parseInt((accID.trim()).length)){
        notice1Sec("افراد مجاز جهت دانلود فایل مشخص نشده است !","yellow");
        return false;
    }
    var action = "doEditCreateCirculars";
    var param = {action:action,cid:cid,fname:fname,fcode:fcode,SDate:SDate,EDate:EDate,desc:desc,accID:accID,type:type};
    var res = manageAjaxRequest(param);
    if (res != false) {
        notice1Sec(res, "green");
        $('#circularsManageModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        //showCircularsManageList();
        showWarrantyManageList();
    }
}

function deleteCirculars() {
    var ch = $('#circularsManageBody-table').find('input');
    var cid = new Array();
    for(var c=0;c<ch.length;c++){
        if(ch[c].checked){
            cid[cid.length] = ch[c].attributes.rid.value;
        }
    }
    if(cid.length > 1){
        notice1Sec("فقط یک فایل باید انتخاب شده باشد !","red");
        return false;
    }
    if(cid.length==0){
        notice1Sec("هیچ فایلی انتخاب نشده است !","red");
        return false;
    }
    cid = cid[0];
    $("#circularsManage_deleteIdHidden").val(cid);
    $('#manageDeleteCircularsModal').modal('show');
}

function dodeleteCirculars() {
    var cid = $("#circularsManage_deleteIdHidden").val();
    var action = "dodeleteCirculars";
    var param = {action:action,cid:cid};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
        $('#manageDeleteCircularsModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        //showCircularsManageList();
        showWarrantyManageList();
    }
}

function attachFileToCirculars() {
    var ch = $('#circularsManageBody-table').find('input');
    var cid = new Array();
    for(var c=0;c<ch.length;c++){
        if(ch[c].checked){
            cid[cid.length] = ch[c].attributes.rid.value;
        }
    }
    if(cid.length > 1){
        notice1Sec("فقط یک فایل باید انتخاب شده باشد !","red");
        return false;
    }
    if(cid.length==0){
        notice1Sec("هیچ فایلی انتخاب نشده است !","red");
        return false;
    }
    cid = cid[0];
    $("#circularsManageAttachmentID").val(cid);
    $("#circularsManageAttachmentName").val('');
    $("#circularsManageAttachment").val('');
    var res = Main.getAttachedCircularsFile(cid);
    $("#circularsAttachmentFile-body").html('');
    $("#circularsAttachmentFile-body").html(res);
    $('#circularsAttachmentFileModal').modal('show');
}

function doAttachFileToCirculars() {
    var cid = $('#circularsManageAttachmentID').val();
    var info = $('#circularsManageAttachmentName').val();
    var formData = new FormData();
    if($('#circularsManageAttachment').val() != '' || $('#circularsManageAttachment')[0].files.length != 0){
        var fileSelect = document.getElementById('circularsManageAttachment');
        var files = fileSelect.files;
        if(!window.File && window.FileReader && window.FileList && window.Blob){ //if browser doesn't supports File API
            notice1Sec("Your browser does not support new File API! Please upgrade.","yellow");
            return false;
        }else {
            var total_selected_files = files.length;
            for (var x = 0; x < total_selected_files; x++) {
                formData.append("files[]",files[x]);
            }
        }
    }else {
        notice1Sec("هیچ فایلی انتخاب نشده است !","yellow");
        return false;
    }
    if(!parseInt((info.trim()).length)){
        notice1Sec("نام فایل مشخص نشده است !","yellow");
        return false;
    }
    formData.append("action","doAttachFileToCirculars");
    formData.append("cid",cid);
    formData.append("info",info);

    var xhr = new XMLHttpRequest();
    xhr.open('POST', 'php/managemantproccess.php',true);
    xhr.onload = function () {
        if (xhr.status === 200) {
            var res = JSON.parse(xhr.responseText);
            if(res['res'] == "false"){
                notice1Sec(res['data'],'yellow');
            }else{
                notice1Sec('بارگذاری انجام شد.', "green");
                var rst = Main.getAttachedCircularsFile(cid);
                $("#circularsAttachmentFile-body").html('');
                $("#circularsAttachmentFile-body").html(rst);
                $("#circularsManageAttachmentName").val('');
                $("#circularsManageAttachment").val('');
                //showCircularsManageList();
                showWarrantyManageList();
            }
        }else{
            notice1Sec("خطایی رخ داده است !",'yellow');
        }
    };
    xhr.send(formData);
}

function deleteAttachCircularsFile(fid){
    var cid = $('#circularsManageAttachmentID').val();
    var action = "deleteAttachCircularsFile";
    var param = {action:action,fid:fid};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res, "green");
        var rst = Main.getAttachedCircularsFile(cid);
        $("#circularsAttachmentFile-body").html('');
        $("#circularsAttachmentFile-body").html(rst);
        //showCircularsManageList();
        showWarrantyManageList();
    }
}

function downloadCircularsFile(cid) {
    var action = "downloadCircularsFile";
    var param = {action:action,cid:cid};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#showCircularsAttachmentFile-body").html('');
        $("#showCircularsAttachmentFile-body").html(res);
        $('#showCircularsAttachmentFileModal').modal('show');
    }
}

//++++++++++++++++++++++ قراردادهای حقوقی +++++++++++++++++++++++

function showLegalContractsManageList(page) {
    if(typeof page == "undefined"){
        page = 1;
    }
    var Subject = $("#legalContractManageSubjectSearch").val();
    var CID = $("#legalContractManageCIDSearch").val();
    var SDate = $("#legalContractManageSDateSearch").val();
    var EDate = $("#legalContractManageEDateSearch").val();
    var type = $("#legalContractManageTypeSearch").val();
    var status = $("#legalContractManageStatusSearch").val();
    var action = "showLegalContractsManageList";
    var param = {action:action,Subject:Subject,CID:CID,SDate:SDate,EDate:EDate,type:type,status:status,page:page};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#legalContractsManageBody").html('');
        $("#legalContractsManageBody").html(res);
    }
}

function createLegalContract() {
    $("#legalContractsManageHiddenLid").val('');
    $("#legalContractsManageType").val(-1);
    $("#legalContractsManageUnit").val(0);
    $("#legalContractsManageCID").val('');
    $("#legalContractsManageSubject").val('');
    $("#legalContractsManageSideOne").val('');
    $("#legalContractsManageSideTwo").val('');
    $("#legalContractsManageSideTwoFS").val('');
    $("#legalContractsManageCodeTafzili").val('');
    $("#legalContractsManageSdate").val('');
    $("#legalContractsManageEdate").val('');
    $("#legalContractsManagePhone").val('');
    $("#legalContractsManageMobile").val('');
    //$("#legalContractsManageTermContract").val('');
    $("#legalContractsManageAmount").val('');
    $("#legalContractsManageDesc").val('');
    $("#legalContractsManageCodeTafzili-div").css('display','none');
    $("#legalContractsManageSideTwo-div").css('display','none');
    $("#legalContractsManageSideTwoFS-div").css('display','none');
    $('#legalContractsManageModal').modal('show');
}

function editLegalContract() {
    var ch = $('#legalContractsManageBody-table').find('input');
    var lcid = new Array();
    for(var c=0;c<ch.length;c++){
        if(ch[c].checked){
            lcid[lcid.length] = ch[c].attributes.rid.value;
        }
    }
    if(lcid.length > 1){
        notice1Sec("فقط یک قرارداد باید انتخاب شده باشد !","red");
        return false;
    }
    if(lcid.length==0){
        notice1Sec("هیچ قراردادی انتخاب نشده است !","red");
        return false;
    }
    lcid = lcid[0];
    var res = Main.getLegalContractInfo(lcid);
    if(res != false){
        $('#legalContractsManageModal').modal('show');
        $("#legalContractsManageHiddenLid").val(res['lcid']);
        $("#legalContractsManageType").val(res['type']);
        $("#legalContractsManageUnit").val(res['unitID']);
        $("#legalContractsManageCID").val(res['ContractID']);
        $("#legalContractsManageSubject").val(res['subjectContract']);
        $("#legalContractsManageSideOne").val(res['sideOne']);
        if (parseInt(res['type']) == 2){  // حقیقی بود
            $("#legalContractsManageSideTwo").val(res['sideTwo']);
            $("#legalContractsManageCodeTafzili-div").css('display','none');
            $("#legalContractsManageSideTwo-div").css('display','');
            $("#legalContractsManageSideTwoFS-div").css('display','none');
        }else {
            $("#legalContractsManageSideTwoFS").val(res['sideTwo']);
            $("#legalContractsManageCodeTafzili-div").css('display','');
            $("#legalContractsManageSideTwo-div").css('display','none');
            $("#legalContractsManageSideTwoFS-div").css('display','');
        }
        $("#legalContractsManageCodeTafzili").val(res['codeTafzili']);
        $("#legalContractsManageSdate").val(res['startDate']);
        $("#legalContractsManageEdate").val(res['endDate']);
        $("#legalContractsManagePhone").val(res['phone']);
        $("#legalContractsManageMobile").val(res['mobile']);
        //$("#legalContractsManageTermContract").val(res['Term_contract']);
        $("#legalContractsManageAmount").val(res['Amount']);
        $("#legalContractsManageDesc").val(res['description']);
    }
}

function doEditCreateLegalContract() {
    var lcid = $("#legalContractsManageHiddenLid").val();
    var type = $("#legalContractsManageType").val();
    var unit = $("#legalContractsManageUnit").val();
    var cid = $("#legalContractsManageCID").val();
    var subject = $("#legalContractsManageSubject").val();
    var sideOne = $("#legalContractsManageSideOne").val();
    var sideTwo = $("#legalContractsManageSideTwo").val();
    var sideTwoFS = $("#legalContractsManageSideTwoFS").val();
    var codeTafzili = $("#legalContractsManageCodeTafzili").val();
    var Sdate = $("#legalContractsManageSdate").val();
    var Edate = $("#legalContractsManageEdate").val();
    var Phone = $("#legalContractsManagePhone").val();
    var Mobile = $("#legalContractsManageMobile").val();
    //var TermContract = $("#legalContractsManageTermContract").val();
    var amount = $("#legalContractsManageAmount").val();
    var desc = $("#legalContractsManageDesc").val();

    if (parseInt(type) == -1){
        notice1Sec("نوع قرارداد مشخص نشده است !","yellow");
        return false;
    }
    if (parseInt(unit) == 0){
        notice1Sec("واحد قرارداد مشخص نشده است !","yellow");
        return false;
    }
    if (!parseInt((cid.trim()).length)){
        notice1Sec("شماره قرارداد مشخص نشده است !","yellow");
        return false;
    }
    if (!parseInt((subject.trim()).length)){
        notice1Sec("موضوع قرارداد مشخص نشده است !","yellow");
        return false;
    }
    if (!parseInt((sideOne.trim()).length)){
        notice1Sec("طرف اول قرارداد مشخص نشده است !","yellow");
        return false;
    }

    if (parseInt(type) == 2){  // حقیقی
        if (!parseInt((sideTwo.trim()).length)){
            notice1Sec("طرف دوم قرارداد مشخص نشده است !","yellow");
            return false;
        }
    }else {  // فورج یا سهامی
        if (!parseInt((sideTwoFS.trim()).length)){
            notice1Sec("طرف دوم قرارداد مشخص نشده است !","yellow");
            return false;
        }
        sideTwo = sideTwoFS;
    }


    if (!parseInt((Sdate.trim()).length)){
        notice1Sec("تاریخ شروع مشخص نشده است !","yellow");
        return false;
    }
    if (!parseInt((Edate.trim()).length)){
        notice1Sec("تاریخ پایان مشخص نشده است !","yellow");
        return false;
    }
    if (!parseInt((amount.trim()).length)){
        notice1Sec("مبلغ قرارداد مشخص نشده است !","yellow");
        return false;
    }
    var action = "doEditCreateLegalContract";
    var param = {action:action,lcid:lcid,cid:cid,subject:subject,sideOne:sideOne,sideTwo:sideTwo,codeTafzili:codeTafzili,Sdate:Sdate,Edate:Edate,Phone:Phone,Mobile:Mobile,amount:amount,desc:desc,type:type,unit:unit};
    var res = manageAjaxRequest(param);
    if (res != false) {
        notice1Sec(res, "green");
        $('#legalContractsManageModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        showLegalContractsManageList();
    }
}

function getSideTwoCodeTafzili() {
    var cfor = $("#legalContractsManageSideTwoFS").val();
    var action = "getSideTwoCodeTafzili";
    var param = {action:action,cfor:cfor};
    var res = manageAjaxRequest(param);
    if (res != false) {
        $("#legalContractsManageCodeTafzili").val(res[0]['code']);
    }
}

function changeLegalContractsFields() {
    var type = $("#legalContractsManageType").val();
    $("#legalContractsManageCodeTafzili").val('');
    $("#legalContractsManageSideTwo").val('');
    $("#legalContractsManageSideTwoFS").val('');
    if (parseInt(type) == -1){
        $("#legalContractsManageCodeTafzili-div").css('display','none');
        $("#legalContractsManageSideTwo-div").css('display','none');
        $("#legalContractsManageSideTwoFS-div").css('display','none');
    }else if (parseInt(type) == 2){
        $("#legalContractsManageCodeTafzili-div").css('display','none');
        $("#legalContractsManageSideTwo-div").css('display','');
        $("#legalContractsManageSideTwoFS-div").css('display','none');
    }else {
        $("#legalContractsManageCodeTafzili-div").css('display','');
        $("#legalContractsManageSideTwo-div").css('display','none');
        $("#legalContractsManageSideTwoFS-div").css('display','');
    }
}

function deleteLegalContract() {
    var ch = $('#legalContractsManageBody-table').find('input');
    var lcid = new Array();
    for(var c=0;c<ch.length;c++){
        if(ch[c].checked){
            lcid[lcid.length] = ch[c].attributes.rid.value;
        }
    }
    if(lcid.length > 1){
        notice1Sec("فقط یک قرارداد باید انتخاب شده باشد !","red");
        return false;
    }
    if(lcid.length==0){
        notice1Sec("هیچ قراردادی انتخاب نشده است !","red");
        return false;
    }
    lcid = lcid[0];
    $("#legalContract_deleteIdHidden").val(lcid);
    $('#manageDeleteLegalContractModal').modal('show');
}

function dodeleteLegalContract() {
    var lcid = $("#legalContract_deleteIdHidden").val();
    var action = "dodeleteLegalContract";
    var param = {action:action,lcid:lcid};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
        $('#manageDeleteLegalContractModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        showLegalContractsManageList();
    }
}

function attachFileToLegalContract() {
    var ch = $('#legalContractsManageBody-table').find('input');
    var lcid = new Array();
    for(var c=0;c<ch.length;c++){
        if(ch[c].checked){
            lcid[lcid.length] = ch[c].attributes.rid.value;
        }
    }
    if(lcid.length > 1){
        notice1Sec("فقط یک قرارداد باید انتخاب شده باشد !","red");
        return false;
    }
    if(lcid.length==0){
        notice1Sec("هیچ قراردادی انتخاب نشده است !","red");
        return false;
    }
    lcid = lcid[0];
    $("#legalContractManageAttachmentID").val(lcid);
    $("#legalContractManageAttachmentName").val('');
    $("#legalContractManageAttachment").val('');
    var res = Main.getAttachedLegalContractFile(lcid);
    $("#legalContractAttachmentFile-body").html('');
    $("#legalContractAttachmentFile-body").html(res);
    $('#legalContractAttachmentFileModal').modal('show');
}

function doAttachFileToLegalContract() {
    var lcid = $('#legalContractManageAttachmentID').val();
    var info = $('#legalContractManageAttachmentName').val();
    var formData = new FormData();
    if($('#legalContractManageAttachment').val() != '' || $('#legalContractManageAttachment')[0].files.length != 0){
        var fileSelect = document.getElementById('legalContractManageAttachment');
        var files = fileSelect.files;
        if(!window.File && window.FileReader && window.FileList && window.Blob){ //if browser doesn't supports File API
            notice1Sec("Your browser does not support new File API! Please upgrade.","yellow");
            return false;
        }else {
            var total_selected_files = files.length;
            for (var x = 0; x < total_selected_files; x++) {
                formData.append("files[]",files[x]);
            }
        }
    }else {
        notice1Sec("هیچ فایلی انتخاب نشده است !","yellow");
        return false;
    }
    if(!parseInt((info.trim()).length)){
        notice1Sec("نام فایل مشخص نشده است !","yellow");
        return false;
    }
    formData.append("action","doAttachFileToLegalContract");
    formData.append("lcid",lcid);
    formData.append("info",info);

    var xhr = new XMLHttpRequest();
    xhr.open('POST', 'php/managemantproccess.php',true);
    xhr.onload = function () {
        if (xhr.status === 200) {
            var res = JSON.parse(xhr.responseText);
            if(res['res'] == "false"){
                notice1Sec(res['data'],'yellow');
            }else{
                notice1Sec('بارگذاری انجام شد.', "green");
                var rst = Main.getAttachedLegalContractFile(lcid);
                $("#legalContractAttachmentFile-body").html('');
                $("#legalContractAttachmentFile-body").html(rst);
                $("#legalContractManageAttachmentName").val('');
                $("#legalContractManageAttachment").val('');
                showLegalContractsManageList();
            }
        }else{
            notice1Sec("خطایی رخ داده است !",'yellow');
        }
    };
    xhr.send(formData);
}

function deleteAttachLegalContractFile(fid){
    var lcid = $('#legalContractManageAttachmentID').val();
    var action = "deleteAttachLegalContractFile";
    var param = {action:action,fid:fid};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res, "green");
        var rst = Main.getAttachedLegalContractFile(lcid);
        $("#legalContractAttachmentFile-body").html('');
        $("#legalContractAttachmentFile-body").html(rst);
        showLegalContractsManageList();
    }
}

function downloadLegalContractsFile(lcid) {
    var action = "downloadLegalContractsFile";
    var param = {action:action,lcid:lcid};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#showLegalContractAttachFile-body").html('');
        $("#showLegalContractAttachFile-body").html(res);
        $('#showLegalContractAttachFileModal').modal('show');
    }
}

//++++++++++++++++++++++ شناسنامه ماشین ها +++++++++++++++++++++++

function carInformationManage() {
    var action = "carInformationManage";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    if(res != false) {
        $("#carInformationManageID").html('');
        $("#carInformationManageID").html(res[0]);
        if(jQuery.inArray(1, res[1]) !== -1) {
            $("#carInformationManageLastKilometer-div").css('display','none');
            $("#createConsumingMaterialsType").selectpicker();
            $('#carInformationManageTDDate').MdPersianDateTimePicker({targetTextSelector: '#carInformationManageTDDate'});
            $('#carInformationManageTIDate').MdPersianDateTimePicker({targetTextSelector: '#carInformationManageTIDate'});
            $('#carInformationManageBIDate').MdPersianDateTimePicker({targetTextSelector: '#carInformationManageBIDate'});
            $('#createConsumingMaterialsChangeDate').MdPersianDateTimePicker({targetTextSelector: '#createConsumingMaterialsChangeDate'});
            showCarInformationManageList();
        }
        if(jQuery.inArray(2, res[1]) !== -1) {
            showConsumingMaterialsManageList();
        }
    }
}

function showCarInformationManageList(page) {
    if(typeof page == "undefined"){
        page = 1;
    }
    var action = "showCarInformationManageList";
    var param = {action:action,page:page};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#carInformationManageBody").html('');
        $("#carInformationManageBody").html(res);
    }
}

function createCar() {
    $("#manageCarHiddenCid").val('');
    $("#carInformationManageName").val('');
    $("#carInformationManagePlaque").val('');
    $("#carInformationManageChassis").val('');
    $("#carInformationManageSerial").val('');
    $("#carInformationManageFuelType").val(0);
    $("#carInformationManageCarType").val(-1);
    $("#carInformationManageLastKilometer").val('');
    $("#carInformationManageTDDate").val('');
    $("#carInformationManageTIDate").val('');
    $("#carInformationManageBIDate").val('');
    $("#carInformationManageTDFile").val('');
    $("#carInformationManageTIFile").val('');
    $("#carInformationManageBIFile").val('');
    $("#carInformationManageDocument").val('');
    $("#carInformationManageGreenPage").val('');
    $("#carInformationManageLastStatus").val('');
    $('#carInformationManageModal').modal('show');
}

function editCar() {
    var ch = $('#carInformationManageBody-table').find('input');
    var caid = new Array();
    for(var c=0;c<ch.length;c++){
        if(ch[c].checked){
            caid[caid.length] = ch[c].attributes.rid.value;
        }
    }
    if(caid.length > 1){
        notice1Sec("فقط یک ماشین باید انتخاب شده باشد !","red");
        return false;
    }
    if(caid.length==0){
        notice1Sec("هیچ ماشینی انتخاب نشده است !","red");
        return false;
    }
    caid = caid[0];
    var res = Main.getCarInfo(caid);
    if(res != false){
        $('#carInformationManageModal').modal('show');
        $("#manageCarHiddenCid").val(res['caid']);
        $("#carInformationManageName").val(res['carName']);
        $("#carInformationManagePlaque").val(res['plaque']);
        $("#carInformationManageChassis").val(res['chassis']);
        $("#carInformationManageSerial").val(res['serial']);
        $("#carInformationManageFuelType").val(res['fuelType']);
        $("#carInformationManageCarType").val(res['carType']);
        $("#carInformationManageLastKilometer").val(res['lastKilometer']);
        $("#carInformationManageTDDate").val(res['technicalDiagDate']);
        $("#carInformationManageTIDate").val(res['insuranceDate']);
        $("#carInformationManageBIDate").val(res['insuranceBodyDate']);
        $("#carInformationManageTDFile").val('');
        $("#carInformationManageTIFile").val('');
        $("#carInformationManageBIFile").val('');
        $("#carInformationManageDocument").val('');
        $("#carInformationManageGreenPage").val('');
        $("#carInformationManageLastStatus").val('');
        $("#carInformationManageLastKilometer-div").css('display','none');
    }
}

function doEditCreateCar() {
    var caid = $("#manageCarHiddenCid").val();
    var name = $("#carInformationManageName").val();
    var plaque = $("#carInformationManagePlaque").val();
    var chassis = $("#carInformationManageChassis").val();
    var serial = $("#carInformationManageSerial").val();
    var fuelType = $("#carInformationManageFuelType").val();
    var carType = $("#carInformationManageCarType").val();
    var lastKilometer = $("#carInformationManageLastKilometer").val();
    var TDDate = $("#carInformationManageTDDate").val();
    var TIDate = $("#carInformationManageTIDate").val();
    var BIDate = $("#carInformationManageBIDate").val();

    var formData = new FormData();
    if(!parseInt((name.trim()).length)){
        notice1Sec("نام ماشین مشخص نشده است !","yellow");
        return false;
    }
    if(!parseInt((plaque.trim()).length)){
        notice1Sec("شماره پلاک مشخص نشده است !","yellow");
        return false;
    }
    if(!parseInt((chassis.trim()).length)){
        notice1Sec("شماره شاسی مشخص نشده است !","yellow");
        return false;
    }
    if(!parseInt((serial.trim()).length)){
        notice1Sec("شماره سریال مشخص نشده است !","yellow");
        return false;
    }
    if(parseInt(fuelType) == 0){
        notice1Sec("نوع سوخت انتخاب نشده است !","yellow");
        return false;
    }
    if(parseInt(carType) == -1){
        notice1Sec("نوع کاربری انتخاب نشده است !","yellow");
        return false;
    }
    if(!parseInt((TIDate.trim()).length)){
        notice1Sec("تاریخ اتمام بیمه شخص ثالث مشخص نشده است !","yellow");
        return false;
    }
    if (parseInt(carType) == 1){  //شخصی
        if (!parseInt((lastKilometer.trim()).length)) {
            notice1Sec("آخرین کیلومتر مشخص نشده است !","yellow");
            return false;
        }
    }
    if($('#carInformationManageTDFile').val() != '' || $('#carInformationManageTDFile')[0].files.length != 0){
        var fileSelect = document.getElementById('carInformationManageTDFile');
        var files = fileSelect.files;
        if(!window.File && window.FileReader && window.FileList && window.Blob){ //if browser doesn't supports File API
            notice1Sec("Your browser does not support new File API! Please upgrade.","yellow");
            return false;
        }else {
            var total_selected_files = files.length;
            for (var x = 0; x < total_selected_files; x++) {
                formData.append("files[]",files[x]);
            }
        }
    }
    if($('#carInformationManageTIFile').val() != '' || $('#carInformationManageTIFile')[0].files.length != 0){
        var fileSelect = document.getElementById('carInformationManageTIFile');
        var files = fileSelect.files;
        if(!window.File && window.FileReader && window.FileList && window.Blob){ //if browser doesn't supports File API
            notice1Sec("Your browser does not support new File API! Please upgrade.","yellow");
            return false;
        }else {
            var total_selected_files = files.length;
            for (var x = 0; x < total_selected_files; x++) {
                formData.append("files1[]",files[x]);
            }
        }
    }else {
        notice1Sec("بیمه شخص ثالث بارگذاری نشده است !!!","yellow");
        return false;
    }
    if($('#carInformationManageBIFile').val() != '' || $('#carInformationManageBIFile')[0].files.length != 0){
        var fileSelect = document.getElementById('carInformationManageBIFile');
        var files = fileSelect.files;
        if(!window.File && window.FileReader && window.FileList && window.Blob){ //if browser doesn't supports File API
            notice1Sec("Your browser does not support new File API! Please upgrade.","yellow");
            return false;
        }else {
            var total_selected_files = files.length;
            for (var x = 0; x < total_selected_files; x++) {
                formData.append("files2[]",files[x]);
            }
        }
    }
    if($('#carInformationManageDocument').val() != '' || $('#carInformationManageDocument')[0].files.length != 0){
        var fileSelect = document.getElementById('carInformationManageDocument');
        var files = fileSelect.files;
        if(!window.File && window.FileReader && window.FileList && window.Blob){ //if browser doesn't supports File API
            notice1Sec("Your browser does not support new File API! Please upgrade.","yellow");
            return false;
        }else {
            var total_selected_files = files.length;
            for (var x = 0; x < total_selected_files; x++) {
                formData.append("files3[]",files[x]);
            }
        }
    }
    if($('#carInformationManageGreenPage').val() != '' || $('#carInformationManageGreenPage')[0].files.length != 0){
        var fileSelect = document.getElementById('carInformationManageGreenPage');
        var files = fileSelect.files;
        if(!window.File && window.FileReader && window.FileList && window.Blob){ //if browser doesn't supports File API
            notice1Sec("Your browser does not support new File API! Please upgrade.","yellow");
            return false;
        }else {
            var total_selected_files = files.length;
            for (var x = 0; x < total_selected_files; x++) {
                formData.append("files4[]",files[x]);
            }
        }
    }else {
        notice1Sec("برگ سبز بارگذاری نشده است !!!","yellow");
        return false;
    }
    if($('#carInformationManageLastStatus').val() != '' || $('#carInformationManageLastStatus')[0].files.length != 0){
        var fileSelect = document.getElementById('carInformationManageLastStatus');
        var files = fileSelect.files;
        if(!window.File && window.FileReader && window.FileList && window.Blob){ //if browser doesn't supports File API
            notice1Sec("Your browser does not support new File API! Please upgrade.","yellow");
            return false;
        }else {
            var total_selected_files = files.length;
            for (var x = 0; x < total_selected_files; x++) {
                formData.append("files5[]",files[x]);
            }
        }
    }

    formData.append("action","doEditCreateCar");
    formData.append("caid",caid);
    formData.append("name",name);
    formData.append("plaque",plaque);
    formData.append("chassis",chassis);
    formData.append("serial",serial);
    formData.append("fuelType",fuelType);
    formData.append("carType",carType);
    formData.append("lastKilometer",lastKilometer);
    formData.append("TDDate",TDDate);
    formData.append("TIDate",TIDate);
    formData.append("BIDate",BIDate);

    var xhr = new XMLHttpRequest();
    xhr.open('POST', 'php/managemantproccess.php',true);
    xhr.onload = function () {
        if (xhr.status === 200) {
            var res = JSON.parse(xhr.responseText);
            if(res['res'] == "false"){
                notice1Sec(res['data'],'yellow');
            }else{
                notice1Sec(res['data'], "green");
                $('#carInformationManageModal').modal('hide');
                $('body').removeClass('modal-open');
                $('.modal-backdrop').remove();
                showCarInformationManageList();
            }
        }else{
            notice1Sec("خطایی رخ داده است !",'yellow');
        }
    };
    xhr.send(formData);
}

function getCarType() {
    var carType = $("#carInformationManageCarType").val();
    if (parseInt(carType) == 0){  //اداری
        $("#carInformationManageLastKilometer-div").css('display','none');
        $("#carInformationManageLastKilometer").val('');
    }else {  // شخصی
        $("#carInformationManageLastKilometer-div").css('display','');
        $("#carInformationManageLastKilometer").val('');
    }
}

function showAttachedFileToCar(caid) {
    var action = "showAttachedFileToCar";
    var param = {action:action,caid:caid};
    var res = manageAjaxRequest(param);
    if(res != false) {
        $("#showAttachedFileToCar-body").html('');
        $("#showAttachedFileToCar-body").html(res[0]);
        $("#showAttachedFileToCarModal-title").html(res[1]);
        $('#showAttachedFileToCarModal').modal('show');
    }
}

function downloadTechnicalDiagFile(caid) {
    var action = "downloadTechnicalDiagFile";
    var param = {action:action,caid:caid};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#downloadTechnicalDiagFile-body").html('');
        $("#downloadTechnicalDiagFile-body").html(res);
        $('#downloadTechnicalDiagFileModal').modal('show');
    }
}

function downloadThirdInsuranceFile(caid) {
    var action = "downloadThirdInsuranceFile";
    var param = {action:action,caid:caid};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#downloadThirdInsuranceFile-body").html('');
        $("#downloadThirdInsuranceFile-body").html(res);
        $('#downloadThirdInsuranceFileModal').modal('show');
    }
}

function downloadBodyInsuranceFile(caid) {
    var action = "downloadBodyInsuranceFile";
    var param = {action:action,caid:caid};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#downloadBodyInsuranceFile-body").html('');
        $("#downloadBodyInsuranceFile-body").html(res);
        $('#downloadBodyInsuranceFileModal').modal('show');
    }
}

function downloadCarDocumentFile(caid) {
    var action = "downloadCarDocumentFile";
    var param = {action:action,caid:caid};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#downloadCarDocumentFile-body").html('');
        $("#downloadCarDocumentFile-body").html(res);
        $('#downloadCarDocumentFileModal').modal('show');
    }
}

function downloadGreenPageFile(caid) {
    var action = "downloadGreenPageFile";
    var param = {action:action,caid:caid};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#downloadGreenPageFileFile-body").html('');
        $("#downloadGreenPageFileFile-body").html(res);
        $('#downloadGreenPageFileModal').modal('show');
    }
}

function downloadLastStatusFile(caid) {
    var action = "downloadLastStatusFile";
    var param = {action:action,caid:caid};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#downloadLastStatusFile-body").html('');
        $("#downloadLastStatusFile-body").html(res);
        $('#downloadLastStatusFileModal').modal('show');
    }
}

function showPayCommentForThisCar(carLayer) {
    var layer = $("#carPayCommentsLayerSearch").val();
    if (typeof layer == 'undefined'){
        layer = -1;
    }
    var action = "showPayCommentForThisCar";
    var param = {action:action,carLayer:carLayer,layer:layer};
    var res = manageAjaxRequest(param);
    if(res != false) {
        $("#showPayCommentForTHisCar-body").html('');
        $("#showPayCommentForTHisCar-body").html(res[0]);
        $("#showPayCommentForTHisCarModal-title").html(res[1]);
        var rstlayer = Main.getCarThreeLayers(carLayer);
        $('#carPayCommentsLayerSearch').append($('<option>', {
            value: -1,
            text: 'همه'
        }));
        for(var e=0;e<rstlayer.length;e++){
            $('#carPayCommentsLayerSearch').append($('<option>', {
                value: rstlayer[e]['RowID'],
                text: rstlayer[e]['layerName']
            }));
        }
        $("#carPayCommentsLayerSearch").val(layer);
        $('#showPayCommentForTHisCarModal').modal('show');
    }
}

function showDepositsInCarList(pid) {
    var res = Main.getCommentDepositInfo(pid,0,0,0,0);
    $("#deposits-InCar-Info-body").html('');
    $("#deposits-InCar-Info-body").html(res);
    $('#depositsInCarListModal').modal('show');
}

function ShowCommentCheckInCar(cid) {
    var action = "ShowCommentCheckInCar";
    var param = {action:action,cid:cid};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#comment-InCar-Checks-body").html('');
        $("#comment-InCar-Checks-body").html(res);
        $('#commentCheckInCarModal').modal('show');
    }
}

function ShowOtherInfoCarComment(cid) {
    var action = "ShowOtherInfoCarComment";
    var param = {action:action,cid:cid};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#comment-car-Info-body").html('');
        $("#comment-car-Info-body").html(res);
        $('#carCommentManageInfoModal').modal('show');
    }
}

function downloadCheckCarcassCarFile(pid) {
    var action = "downloadCheckCarcassCarFile";
    var param = {action:action,pid:pid};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#downloadCheckCarcassCarFile-body").html('');
        $("#downloadCheckCarcassCarFile-body").html(res);
        $('#downloadCheckCarcassCarFileModal').modal('show');
    }
}

function ShowAttachmentFileCarComment(pid) {
    var action = "ShowAttachmentFileCarComment";
    var param = {action:action,pid:pid};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#commentAttachmentCarFile-body").html('');
        $("#commentAttachmentCarFile-body").html(res);
        $('#commentAttachmentCarFileModal').modal('show');
    }
}

function ShowWorkflowCarComment(pid) {
    var action = "ShowWorkflowCarComment";
    var param = {action:action,pid:pid};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#carCommentWorkflow-body").html('');
        $("#carCommentWorkflow-body").html(res);
        $('#carCommentWorkflowModal').modal('show');
    }
}

function printCarPayComment(cid){
    var action = "doPrintCarPayComment";
    var param = {action:action,cid:cid};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#hiddenCarCommentBody").html('');
        $("#hiddenCarCommentBody").html(res);
        $('.cardemo').printThis({
            //base: "http://localhost:8012/BOM/administrator.php"
            base:base_url
        });
    }
}

function showAttachedFundToCarComment(cid,carLayer) {
    var action = "showAttachedFundToCarComment";
    var param = {action:action,cid:cid,carLayer:carLayer};
    var res = manageAjaxRequest(param);
    if(res != false) {
        $("#showAttachedFundToCarComment-body").html('');
        $("#showAttachedFundToCarComment-body").html(res);
        $('#showAttachedFundToCarCommentModal').modal('show');
    }
}

function attachedCarFundListDetails(fid) {
    var res = Main.getCarFundListDetailsShow(fid);
    $("#fundListDetails-Car-body").html('');
    $("#fundListDetails-Car-body").html(res);
    $('#showCarFundListDetailsModal').modal('show');
}

function showAttachCarFundListDetails(fdid) {
    var res = Main.getFundListAttachShow(fdid);
    $("#showCarFundListAttachmentFile-body").html('');
    $("#showCarFundListAttachmentFile-body").html(res);
    $('#showCarFundListAttachmentFileModal').modal('show');
}

function enterExitCar() {
    $("#carEnterExitManageCarType").val(-1);
    $("#carEnterExitManageEorE").val(-1);
    $("#carEnterExitManageTime").val('');
    $("#carEnterExitManageKM").val('');
    $("#carEnterExitManageDName").val(-1);
    $(function() {
        $('#carEnterExitManageTime-col').datetimepicker({
            pickDate: false
        });
    });
    $('#carEnterExitManageTime-col').addClass('input-append');
    $('#carEnterExitManageModal').modal('show');
    select_data_picker($("#carEnterExitManageDName"),1);
    select_data_picker($("#carEnterExitManageCarType"),1);
}

function doEnterExitCar() {
    var CarType = $("#carEnterExitManageCarType").val();
    var EorE = $("#carEnterExitManageEorE").val();
    var cTime = $("#carEnterExitManageTime").val();
    var km = $("#carEnterExitManageKM").val();
    var dName = $("#carEnterExitManageDName").val();

    if (parseInt(CarType) == -1){
        notice1Sec("ماشین انتخاب نشده است !","yellow");
        return false;
    }
    if (parseInt(EorE) == -1){
        notice1Sec("نوع رفت و آمد انتخاب نشده است !","yellow");
        return false;
    }
    if (!parseInt((cTime.trim()).length)){
        notice1Sec("ساعت ورود/خروج مشخص نشده است !","yellow");
        return false;
    }
    if (!parseInt((km.trim()).length)){
        notice1Sec("کیلومتر ماشین مشخص نشده است !","yellow");
        return false;
    }
    if (parseInt(dName) == -1){
        notice1Sec("راننده مشخص نشده است !","yellow");
        return false;
    }
    var action = "doEnterExitCar";
    var param = {action:action,CarType:CarType,EorE:EorE,cTime:cTime,km:km,dName:dName};
    var res = manageAjaxRequest(param);
    if (res != false) {
        notice1Sec(res, "green");
        $('#carEnterExitManageModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
    }
}

function deleteEnterExitCar(eeID) {
    var caid = $("#enterExitCarListHiddenCaid").val();
    var sDate = $("#carManageSDateSearch").val();
    var eDate = $("#carManageEDateSearch").val();
    var dName = $("#carManageDNameSearch").val();
    var eeType = $("#carManageEETypeSearch").val();
    var action = "deleteEnterExitCar";
    var param = {action:action,eeID:eeID};
    var res = manageAjaxRequest(param);
    if (res != false) {
        notice1Sec(res, "green");
        var rst = Main.getEnterExitCarList(caid,sDate,eDate,dName,eeType);
        $("#enterExitCarListBody").html('');
        $("#enterExitCarListBody").html(rst[0]);
        $("#enterExitCarListModal-title").html(rst[1]);
        $('#carManageSDateSearch').MdPersianDateTimePicker({targetTextSelector: '#carManageSDateSearch'});
        $('#carManageEDateSearch').MdPersianDateTimePicker({targetTextSelector: '#carManageEDateSearch'});
    }
}

function editEnterExitCar(eeID){
    var res = Main.getEnterExitCarInfo(eeID);
    if(res != false){
        $('#carEditEnterExitManageModal').modal('show');
        $(function() {
            $('#carEditEnterExitManageTime-col').datetimepicker({
                pickDate: false
            });
        });
        $('#carEditEnterExitManageTime-col').addClass('input-append');
        $("#carEditEnterExitHiddenEEid").val(res['eeID']);
        $("#carEditEnterExitManageEorE").val(res['eeType']);
        $("#carEditEnterExitManageTime").val(res['eeTime']);
        $("#carEditEnterExitManageKM").val(res['kilometer']);
        $("#carEditEnterExitManageDName").val(res['driverName']);
    }
}

function doEditEnterExitCar() {
    var caid = $("#enterExitCarListHiddenCaid").val();
    var sDate = $("#carManageSDateSearch").val();
    var eDate = $("#carManageEDateSearch").val();
    var dNameS = $("#carManageDNameSearch").val();
    var eeType = $("#carManageEETypeSearch").val();
    var eeID = $("#carEditEnterExitHiddenEEid").val();
    var EorE = $("#carEditEnterExitManageEorE").val();
    var cTime = $("#carEditEnterExitManageTime").val();
    var km = $("#carEditEnterExitManageKM").val();
    var dName = $("#carEditEnterExitManageDName").val();
    if (parseInt(EorE) == -1){
        notice1Sec("نوع رفت و آمد انتخاب نشده است !","yellow");
        return false;
    }
    if (!parseInt((cTime.trim()).length)){
        notice1Sec("ساعت ورود/خروج مشخص نشده است !","yellow");
        return false;
    }
    if (!parseInt((km.trim()).length)){
        notice1Sec("کیلومتر ماشین مشخص نشده است !","yellow");
        return false;
    }
    if (parseInt(dName) == -1){
        notice1Sec("راننده مشخص نشده است !","yellow");
        return false;
    }
    var action = "doEditEnterExitCar";
    var param = {action:action,eeID:eeID,EorE:EorE,cTime:cTime,km:km,dName:dName};
    var res = manageAjaxRequest(param);
    if (res != false) {
        notice1Sec(res, "green");
        var rst = Main.getEnterExitCarList(caid,sDate,eDate,dNameS,eeType);
        $("#enterExitCarListBody").html('');
        $("#enterExitCarListBody").html(rst[0]);
        $("#enterExitCarListModal-title").html(rst[1]);
        $('#carManageSDateSearch').MdPersianDateTimePicker({targetTextSelector: '#carManageSDateSearch'});
        $('#carManageEDateSearch').MdPersianDateTimePicker({targetTextSelector: '#carManageEDateSearch'});

        $('#carEditEnterExitManageModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
    }
}

function showEnterExitThisCar(caid) {
    var res = Main.getEnterExitCarList(caid,'','','',-1);
    $("#enterExitCarListBody").html('');
    $("#enterExitCarListBody").html(res[0]);
    $("#enterExitCarListModal-title").html(res[1]);
    $("#enterExitCarListHiddenCaid").val(caid);
    $('#carManageSDateSearch').MdPersianDateTimePicker({targetTextSelector: '#carManageSDateSearch'});
    $('#carManageEDateSearch').MdPersianDateTimePicker({targetTextSelector: '#carManageEDateSearch'});
    $('#enterExitCarListModal').modal('show');
}

function showEnterExitThisCarSearch(caid) {
    var sDate = $("#carManageSDateSearch").val();
    var eDate = $("#carManageEDateSearch").val();
    var dName = $("#carManageDNameSearch").val();
    var eeType = $("#carManageEETypeSearch").val();
    var res = Main.getEnterExitCarList(caid,sDate,eDate,dName,eeType);
    $("#enterExitCarListBody").html('');
    $("#enterExitCarListBody").html(res[0]);
    $("#enterExitCarListModal-title").html(res[1]);
    $('#carManageSDateSearch').MdPersianDateTimePicker({targetTextSelector: '#carManageSDateSearch'});
    $('#carManageEDateSearch').MdPersianDateTimePicker({targetTextSelector: '#carManageEDateSearch'});
}

function doUpdateKilometer() {
    var ch = $('#showUpdateKilometerAlarmModal-table').find('input:checked');
    var information = new Array();
    for(var c=0;c<ch.length;c++){
        var counter = ch[c].attributes.rid.value;
        var newKM = $("#newLastKilometer-"+counter).val();
        if (!parseInt((newKM.trim()).length)){
            notice1Sec("کیلومتر ها نمی توانند خالی باشند !","yellow");
            return false;
        }
        var caid = $("#caid-"+counter+"-Hidden").val();
        information[information.length] = [newKM,caid];
    }
    var myJsonString = JSON.stringify(information);
    var action = "doUpdateKilometer";
    var param = {action:action,myJsonString:myJsonString};
    var res = manageAjaxRequest(param);
    if (res != false) {
        notice1Sec(res, "green");
        $('#updateKilometerAlarmModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
    }
}

function createConsumingMaterials() {
    var ch = $('#carInformationManageBody-table').find('input');
    var caid = new Array();
    for(var c=0;c<ch.length;c++){
        if(ch[c].checked){
            caid[caid.length] = ch[c].attributes.rid.value;
        }
    }
    if(caid.length > 1){
        notice1Sec("فقط یک ماشین باید انتخاب شده باشد !","red");
        return false;
    }
    if(caid.length==0){
        notice1Sec("هیچ ماشینی انتخاب نشده است !","red");
        return false;
    }
    caid = caid[0];
    $("#consumingMaterialsHiddenCaid").val(caid);
    $("#createConsumingMaterialsCurKM").val('');
    $("#createConsumingMaterialsChangeDate").val('');
    $("#createConsumingMaterialsType").selectpicker('deselectAll');
    $("#createConsumingMaterialsType").selectpicker('refresh');
    $('#createConsumingMaterialsModal').modal('show');
}

function doCreateConsumingMaterials() {
    var caid = $("#consumingMaterialsHiddenCaid").val();
    var curKM = $("#createConsumingMaterialsCurKM").val();
    var changeDate = $("#createConsumingMaterialsChangeDate").val();
    var mType = $("#createConsumingMaterialsType").val();
    var mType = mType.join(",");

    if (!parseInt((mType.trim()).length)) {
        notice1Sec("ماده مصرفی انتخاب نشده است !","yellow");
        return false;
    }
    if (!parseInt((curKM.trim()).length)){
        notice1Sec("کیلومتر فعلی مشخص نشده است !","yellow");
        return false;
    }
    if (!parseInt((changeDate.trim()).length)){
        notice1Sec("تاریخ تعویض مشخص نشده است !","yellow");
        return false;
    }
    var action = "doCreateConsumingMaterials";
    var param = {action:action,caid:caid,mType:mType,curKM:curKM,changeDate:changeDate};
    var res = manageAjaxRequest(param);
    if (res != false) {
        notice1Sec(res, "green");
        $("#createConsumingMaterialsType").val(-1);
        $("#createConsumingMaterialsCurKM").val('');
        $("#createConsumingMaterialsChangeDate").val('');
    }
}

function showConsumingMaterials(caid) {
    var res = Main.getConsumingMaterialsList(caid);
    $("#consumingMaterialsBody").html('');
    $("#consumingMaterialsBody").html(res[0]);
    $("#showConsumingMaterialsModal-title").html(res[1]);
    $('#showConsumingMaterialsModal').modal('show');
}

function createExtraEquipment() {
    var ch = $('#carInformationManageBody-table').find('input');
    var cid = new Array();
    for(var c=0;c<ch.length;c++){
        if(ch[c].checked){
            cid[cid.length] = ch[c].attributes.rid.value;
        }
    }
    if(cid.length > 1){
        notice1Sec("فقط یک ماشین باید انتخاب شده باشد !","red");
        return false;
    }
    if(cid.length==0){
        notice1Sec("هیچ ماشینی انتخاب نشده است !","red");
        return false;
    }
    cid = cid[0];
    $("#extraEquipmentAttachmentID").val(cid);
    $("#extraEquipmentName").val('');
    $("#extraEquipmentAttachment").val('');
    $("#extraEquipmentDescription").val('');
    var res = Main.getExtraEquipment(cid);
    $("#extraEquipment-body").html('');
    $("#extraEquipment-body").html(res);
    $('#extraEquipmentModal').modal('show');
}

function doCreateExtraEquipment() {
    var cid = $('#extraEquipmentAttachmentID').val();
    var name = $('#extraEquipmentName').val();
    var desc = $('#extraEquipmentDescription').val();
    var formData = new FormData();
    if($('#extraEquipmentAttachment').val() != '' || $('#extraEquipmentAttachment')[0].files.length != 0){
        var fileSelect = document.getElementById('extraEquipmentAttachment');
        var files = fileSelect.files;
        if(!window.File && window.FileReader && window.FileList && window.Blob){ //if browser doesn't supports File API
            notice1Sec("Your browser does not support new File API! Please upgrade.","yellow");
            return false;
        }else {
            var total_selected_files = files.length;
            if (parseInt(total_selected_files) > 1){
                notice1Sec("فقط یک فایل قابل انتخاب می باشد !","yellow");
                return false;
            }
            for (var x = 0; x < total_selected_files; x++) {
                formData.append("files[]",files[x]);
            }
        }
    }
    if (!parseInt((name.trim()).length)){
        notice1Sec("نام تجهیزات مشخص نشده است !","yellow");
        return false;
    }
    if (!parseInt((desc.trim()).length)){
        notice1Sec("مشخصات مشخص نشده است !","yellow");
        return false;
    }
    formData.append("action","doCreateExtraEquipment");
    formData.append("cid",cid);
    formData.append("name",name);
    formData.append("desc",desc);

    var xhr = new XMLHttpRequest();
    xhr.open('POST', 'php/managemantproccess.php',true);
    xhr.onload = function () {
        if (xhr.status === 200) {
            var res = JSON.parse(xhr.responseText);
            if(res['res'] == "false"){
                notice1Sec(res['data'],'yellow');
            }else{
                notice1Sec('درخواست با موفقیت انجام شد.', "green");
                var rst = Main.getExtraEquipment(cid);
                $("#extraEquipment-body").html('');
                $("#extraEquipment-body").html(rst);
                $("#extraEquipmentName").val('');
                $("#extraEquipmentAttachment").val('');
                $("#extraEquipmentDescription").val('');
            }
        }else{
            notice1Sec("خطایی رخ داده است !",'yellow');
        }
    };
    xhr.send(formData);
}

function deleteExtraEquipment(eid) {
    var cid = $('#extraEquipmentAttachmentID').val();
    var action = "deleteExtraEquipment";
    var param = {action:action,eid:eid};
    var res = manageAjaxRequest(param);
    if (res != false) {
        notice1Sec(res, "green");
        var rst = Main.getExtraEquipment(cid);
        $("#extraEquipment-body").html('');
        $("#extraEquipment-body").html(rst);
    }
}

function showExtraEquipment(caid) {
    var action = "showExtraEquipment";
    var param = {action:action,caid:caid};
    var res = manageAjaxRequest(param);
    if(res != false) {
        $("#showExtraEquipment-body").html('');
        $("#showExtraEquipment-body").html(res[0]);
        $("#showExtraEquipmentModal-title").html(res[1]);
        $('#showExtraEquipmentModal').modal('show');
    }
}

function showConsumingMaterialsManageList(page) {
    if(typeof page == "undefined"){
        page = 1;
    }
    var action = "showConsumingMaterialsManageList";
    var param = {action:action,page:page};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#consumingMaterialsManageBody").html('');
        $("#consumingMaterialsManageBody").html(res);
    }
}

function consumingMaterialsCreate() {
    $("#consumingMaterialsCreateHiddenCMid").val('');
    $("#consumingMaterialsCreateCarName").val(-1);
    $("#consumingMaterialsCreateType").val(-1);
    $("#consumingMaterialsCreateBrand").val('');
    $("#consumingMaterialsCreateChangeKM").val('');
    $("#consumingMaterialsCreateCarName").prop('disabled', false);
    $("#consumingMaterialsCreateType").prop('disabled', false);
    $('#consumingMaterialsCreateModal').modal('show');
}

function consumingMaterialsEdit() {
    var ch = $('#consumingMaterialsManageBody-table').find('input');
    var cmid = new Array();
    for(var c=0;c<ch.length;c++){
        if(ch[c].checked){
            cmid[cmid.length] = ch[c].attributes.rid.value;
        }
    }
    if(cmid.length > 1){
        notice1Sec("فقط یک ماده مصرفی باید انتخاب شده باشد !","red");
        return false;
    }
    if(cmid.length==0){
        notice1Sec("هیچ ماده مصرفی انتخاب نشده است !","red");
        return false;
    }
    cmid = cmid[0];
    var res = Main.getCarConsumingMaterials(cmid);
    if(res != false){
        $('#consumingMaterialsCreateModal').modal('show');
        $("#consumingMaterialsCreateCarName").prop('disabled', true);
        $("#consumingMaterialsCreateType").prop('disabled', true);
        $("#consumingMaterialsCreateHiddenCMid").val(res['cmid']);
        $("#consumingMaterialsCreateCarName").val(res['carID']);
        $("#consumingMaterialsCreateType").val(res['materialID']);
        $("#consumingMaterialsCreateBrand").val(res['brand']);
        $("#consumingMaterialsCreateChangeKM").val(res['km']);
    }
}

function doConsumingMaterialsCreate() {
    var cmid = $("#consumingMaterialsCreateHiddenCMid").val();
    var carName = $("#consumingMaterialsCreateCarName").val();
    var type = $("#consumingMaterialsCreateType").val();
    var brand = $("#consumingMaterialsCreateBrand").val();
    var changeKM = $("#consumingMaterialsCreateChangeKM").val();

    if (parseInt(carName) == -1){
        notice1Sec("خودرو انتخاب نشده است !","yellow");
        return false;
    }
    if (parseInt(type) == -1){
        notice1Sec("ماده مصرفی انتخاب نشده است !","yellow");
        return false;
    }
    if (!parseInt((changeKM.trim()).length)){
        notice1Sec("کیلومتر تا تعویض بعدی مشخص نشده است !","yellow");
        return false;
    }
    var action = "doConsumingMaterialsCreate";
    var param = {action:action,cmid:cmid,carName:carName,type:type,brand:brand,changeKM:changeKM};
    var res = manageAjaxRequest(param);
    if (res != false) {
        notice1Sec(res, "green");
        if (isNaN(parseInt(cmid))) {
            $("#consumingMaterialsCreateType").val(-1);
            $("#consumingMaterialsCreateBrand").val('');
            $("#consumingMaterialsCreateChangeKM").val('');
        }else {
            $('#consumingMaterialsCreateModal').modal('hide');
            $('body').removeClass('modal-open');
            $('.modal-backdrop').remove();
        }
        showConsumingMaterialsManageList();
    }
}

//++++++++++++++++++++++ انتظامات +++++++++++++++++++++++

function securityAccessManage() {
    var action = "securityAccessManage";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    if(res != false) {
        $("#securityAccessManageID").html('');
        $("#securityAccessManageID").html(res[0]);
        if(jQuery.inArray(1, res[1]) !== -1) {
            var rsDate = new AMIB.persianCalendar('RecordEventsManageSDateSearch');
            var rdDate = new AMIB.persianCalendar('RecordEventsManageEDateSearch');
            $(function() {
                $('#recordEventsManageTime-col').datetimepicker({
                    pickDate: false
                });
            });
            $('#recordEventsManageTime-col').addClass('input-append');
            showRecordEventsList();
        }
        if(jQuery.inArray(2, res[1]) !== -1) {
            var rscDate = new AMIB.persianCalendar('agencyManageSDateSearch');
            var rdcDate = new AMIB.persianCalendar('agencyManageEDateSearch');
            $('#agencyManageCreateDate').MdPersianDateTimePicker({targetTextSelector: '#agencyManageCreateDate'});
            $('#finalTickAgencySDate').MdPersianDateTimePicker({targetTextSelector: '#finalTickAgencySDate'});
            $('#finalTickAgencyEDate').MdPersianDateTimePicker({targetTextSelector: '#finalTickAgencyEDate'});
            $("#agencyManagePassenger"+"-div").css("display", "none");
            $("#agencyManageGuest"+"-div").css("display", "none");
            $("#agencyManagePassenger").selectpicker();
            showAgencyManageList();
        }
        if(jQuery.inArray(3, res[1]) !== -1) {
            showRestaurantManageList();
        }
        if(jQuery.inArray(4, res[1]) !== -1) {
            showFoodManageList();
        }
        if(jQuery.inArray(5, res[1]) !== -1) {
            showDrinkManageList();
        }
        if(jQuery.inArray(6, res[1]) !== -1) {
            showServiceRouteManageList();
        }
        if(jQuery.inArray(7, res[1]) !== -1) {
            var olsDate = new AMIB.persianCalendar('overtimeLunchManageSDateSearch');
            var oldDate = new AMIB.persianCalendar('overtimeLunchManageEDateSearch');
            $('#overtimeLunchDetailsDate').MdPersianDateTimePicker({targetTextSelector: '#overtimeLunchDetailsDate'});
            $('#overtimeLunchManageDate').MdPersianDateTimePicker({targetTextSelector: '#overtimeLunchManageDate'});
            $('#overtimeLunchGuestDate').MdPersianDateTimePicker({targetTextSelector: '#overtimeLunchGuestDate'});
            $('#finalTickLunchSDate').MdPersianDateTimePicker({targetTextSelector: '#finalTickLunchSDate'});
            $('#finalTickLunchEDate').MdPersianDateTimePicker({targetTextSelector: '#finalTickLunchEDate'});
            $("#overtimeLunchManagePersonnel").selectpicker();
            showOvertimeLunchManageList();
            select_data_picker("#overtimeLunchManagePersonnelSearch")
        }
    }
}

//******************** ثبت وقایع انتظامات ********************

function showRecordEventsList(page) {
    if(typeof page == "undefined"){
        page = 1;
    }
    var sDate = $("#RecordEventsManageSDateSearch").val();
    var eDate = $("#RecordEventsManageEDateSearch").val();
    var desc = $("#RecordEventsManageDescSearch").val();
    var action = "showRecordEventsList";
    var param = {action:action,sDate:sDate,eDate:eDate,desc:desc,page:page};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#recordEventManageBody").html('');
        $("#recordEventManageBody").html(res);
    }
}

function createEvents() {
    $("#recordEventsManageHiddenEid").val('');
    $("#recordEventsManageTime").val('');
    $("#recordEventsManageDesc").val('');
    $('#recordEventsManageDate').MdPersianDateTimePicker({
        targetTextSelector: '#recordEventsManageDate',
       
        disableAfterDate: new Date(),
    });
   // $("#recordEventsManageDate")
    $('#recordEventsManageModal').modal('show');
}

function editEvents(infoID) {
    var res = Main.getEventsInfo(infoID);
    if(res != false){
        $('#recordEventsManageModal').modal('show');
        $("#recordEventsManageHiddenEid").val(res['infoID']);
        $("#recordEventsManageTime").val(res['cTime']);
        $("#recordEventsManageDesc").val(res['event']);
        $("#recordEventsManageDate").val(res['event_date']);
        $('#recordEventsManageDate').MdPersianDateTimePicker({
            targetTextSelector: '#recordEventsManageDate',
           
            disableAfterDate: new Date(),
        });
    }
}

function doEditCreateEvents() {
   var eid = $("#recordEventsManageHiddenEid").val();
   var cTime = $("#recordEventsManageTime").val();
   var cDate=$("#recordEventsManageDate").val();
   var desc = $("#recordEventsManageDesc").val();
    if (!parseInt((cTime.trim()).length)){
        notice1Sec("ساعت مشخص نشده است !","yellow");
        return false;
    }
    if (!parseInt((cDate.trim()).length)){
        notice1Sec("تاریخ مشخص نشده است !","yellow");
        return false;
    }
    if (!parseInt((desc.trim()).length)){
        notice1Sec("شرح واقعه مشخص نشده است !","yellow");
        return false;
    }
    var action = "doEditCreateEvents";
    var param = {action:action,eid:eid,cTime:cTime,desc:desc,cDate:cDate};
    var res = manageAjaxRequest(param);
    if (res != false) {
        notice1Sec(res, "green");
        if (isNaN(parseInt(eid))) {
            $("#recordEventsManageTime").val('');
            $("#recordEventsManageDesc").val('');
        }else {
            $('#recordEventsManageModal').modal('hide');
            $('body').removeClass('modal-open');
            $('.modal-backdrop').remove();
        }
        showRecordEventsList();
    }
}

//******************** مدیریت آژانس ها ********************

function showAgencyManageList(page) {
    if(typeof page == "undefined"){
        page = 1;
    }
    var sDate = $("#agencyManageSDateSearch").val();
    var eDate = $("#agencyManageEDateSearch").val();
    var billNum = $("#agencyManageBillNumSearch").val();
    var agencyType = $("#agencyManageAgencyTypeSearch").val();
    var serviceType = $("#agencyManageServiceTypeSearch").val();
    var personnel = $("#agencyManagePersonnelSearch").val();
    var action = "showAgencyManageList";
    var param = {action:action,sDate:sDate,eDate:eDate,billNum:billNum,agencyType:agencyType,serviceType:serviceType,personnel:personnel,page:page};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#agencyManageBody").html('');
        $("#agencyManageBody").html(res);
    }
}

function createAgency() {
    $("#agencyManageHiddenAid").val('');
    $("#agencyManageCreateDate").val('');
    $("#agencyManageBillNumber").val('');
    $("#agencyManageAgencyID").val(-1);
    $("#agencyManageServiceID").val(-1);
    $("#agencyManageStopMinute").val('');
    $("#agencyManageAmount").val('');
    $("#agencyManageDescription").val('');
    $("#agencyManageGuest").val('');
    $("#agencyManagePassenger").selectpicker('deselectAll');
    $("#agencyManagePassenger").selectpicker('refresh');
    $("#agencyManagePassenger"+"-div").css("display", "none");
    $("#agencyManageGuest"+"-div").css("display", "none");
    $('#agencyManageModal').modal('show');
}

function editAgency() {
    var ch = $('#agencyManageBody-table').find('input');
    var aid = new Array();
    for(var c=0;c<ch.length;c++){
        if(ch[c].checked){
            aid[aid.length] = ch[c].attributes.rid.value;
        }
    }
    if(aid.length > 1){
        notice1Sec("فقط یک آژانس باید انتخاب شده باشد !","red");
        return false;
    }
    if(aid.length==0){
        notice1Sec("هیچ آژانسی انتخاب نشده است !","red");
        return false;
    }
    aid = aid[0];
    var res = Main.getAgencyInfo(aid);
    if(res != false){
        $('#agencyManageModal').modal('show');
        $("#agencyManageHiddenAid").val(res['aid']);
        $("#agencyManageCreateDate").val(res['createDate']);
        $("#agencyManageBillNumber").val(res['bNumber']);
        $("#agencyManageAgencyID").val(res['agencyID']);
        $("#agencyManageServiceID").val(res['serviceID']);
        $("#agencyManageStopMinute").val(res['stopMinute']);
        $("#agencyManageAmount").val(res['amount']);
        $("#agencyManageDescription").val(res['description']);
        if (parseInt(res['serviceID']) == 0 || parseInt(res['serviceID']) == 1 || parseInt(res['serviceID']) == 3){ // ماموریت یا اضافه کار یا شیفت کاری
            $("#agencyManagePassenger").val(res['passenger'].split(','));
            $("#agencyManagePassenger").selectpicker('refresh');
            $("#agencyManageGuest").val('');
            $("#agencyManagePassenger"+"-div").css("display", "");
            $("#agencyManageGuest"+"-div").css("display", "none");
        }else if (parseInt(res['serviceID']) == 2){  // میهمان
            $("#agencyManagePassenger").selectpicker('deselectAll');
            $("#agencyManagePassenger").selectpicker('refresh');
            $("#agencyManageGuest").val(res['guest']);
            $("#agencyManagePassenger"+"-div").css("display", "none");
            $("#agencyManageGuest"+"-div").css("display", "");
        }else {
            $("#agencyManagePassenger").selectpicker('deselectAll');
            $("#agencyManagePassenger").selectpicker('refresh');
            $("#agencyManageGuest").val('');
            $("#agencyManagePassenger"+"-div").css("display", "none");
            $("#agencyManageGuest"+"-div").css("display", "none");
        }
    }
}

function doEditCreateAgency() {
    var aid = $("#agencyManageHiddenAid").val();
    var cDate = $("#agencyManageCreateDate").val();
    var billNum = $("#agencyManageBillNumber").val();
    var agencyID = $("#agencyManageAgencyID").val();
    var serviceID = $("#agencyManageServiceID").val();
    var stopMinute = $("#agencyManageStopMinute").val();
    var amount = $("#agencyManageAmount").val();
    var guest = $("#agencyManageGuest").val();
    var passenger = $("#agencyManagePassenger").val();
    var passenger = passenger.join(",");
    var desc = $("#agencyManageDescription").val();
    if (!parseInt((cDate.trim()).length)){
        notice1Sec("تاریخ مشخص نشده است !","yellow");
        return false;
    }
    if (!parseInt((billNum.trim()).length)){
        notice1Sec("شماره قبض مشخص نشده است !","yellow");
        return false;
    }
    if (parseInt(agencyID) == -1){
        notice1Sec("نام آژانس مشخص نشده است !","yellow");
        return false;
    }
    if (parseInt(serviceID) == -1){
        notice1Sec("نوع سرویس مشخص نشده است !","yellow");
        return false;
    }
    if (!parseInt((stopMinute.trim()).length)){
        notice1Sec("توقف به دقیقه مشخص نشده است !","yellow");
        return false;
    }
    if (parseInt(serviceID) == 0 || parseInt(serviceID) == 1 || parseInt(serviceID) == 3) {  //  ماموریت یا اضافه کار یا شیفت کاری
        if (!parseInt((passenger.trim()).length)) {
            notice1Sec("نام مسافر/مسافران مشخص نشده است !", "yellow");
            return false;
        }
    }
    if (parseInt(serviceID) == 2){  // میهمان
        if (!parseInt((guest.trim()).length)) {
            notice1Sec("نام میهمان/میهمانان مشخص نشده است !", "yellow");
            return false;
        }
    }
    var action = "doEditCreateAgency";
    var param = {action:action,aid:aid,cDate:cDate,billNum:billNum,agencyID:agencyID,serviceID:serviceID,stopMinute:stopMinute,amount:amount,passenger:passenger,guest:guest,desc:desc};
    var res = manageAjaxRequest(param);
    if (res != false) {
        notice1Sec(res, "green");
        if (isNaN(parseInt(aid))) {
            $("#agencyManageCreateDate").val('');
            $("#agencyManageBillNumber").val('');
            $("#agencyManageAgencyID").val(-1);
            $("#agencyManageServiceID").val(-1);
            $("#agencyManageStopMinute").val('');
            $("#agencyManageAmount").val('');
            $("#agencyManageGuest").val('');
            $("#agencyManageDescription").val('');
            $("#agencyManagePassenger").selectpicker('deselectAll');
            $("#agencyManagePassenger").selectpicker('refresh');
        }else {
            $('#agencyManageModal').modal('hide');
            $('body').removeClass('modal-open');
            $('.modal-backdrop').remove();
        }
        showAgencyManageList();
    }
}

function attachedFileToAgency(aid) {
    $("#agencyAttachmentFileAttachedID").val(aid);
    $("#agencyAttachmentFileAttached").val('');
    var res = Main.getAttachedAgencyFile(aid);
    $("#agencyAttachmentFile-body").html('');
    $("#agencyAttachmentFile-body").html(res);
    $('#agencyAttachmentFileModal').modal('show');
}

function doAttachedFileToAgency() {
    var aid = $('#agencyAttachmentFileAttachedID').val();
    var formData = new FormData();
    if($('#agencyAttachmentFileAttached').val() != '' || $('#agencyAttachmentFileAttached')[0].files.length != 0){
        var fileSelect = document.getElementById('agencyAttachmentFileAttached');
        var files = fileSelect.files;
        if(!window.File && window.FileReader && window.FileList && window.Blob){ //if browser doesn't supports File API
            notice1Sec("Your browser does not support new File API! Please upgrade.","yellow");
            return false;
        }else {
            var total_selected_files = files.length;
            if (parseInt(total_selected_files) > 1){
                notice1Sec("فقط یک فایل قابل انتخاب می باشد !","yellow");
                return false;
            }
            for (var x = 0; x < total_selected_files; x++) {
                formData.append("files[]",files[x]);
            }
        }
    }
    formData.append("action","doAttachedFileToAgency");
    formData.append("aid",aid);

    var xhr = new XMLHttpRequest();
    xhr.open('POST', 'php/managemantproccess.php',true);
    xhr.onload = function () {
        if (xhr.status === 200) {
            var res = JSON.parse(xhr.responseText);
            if(res['res'] == "false"){
                notice1Sec(res['data'],'yellow');
            }else{
                notice1Sec('بارگذاری انجام شد.', "green");
                var rst = Main.getAttachedAgencyFile(aid);
                $("#agencyAttachmentFile-body").html('');
                $("#agencyAttachmentFile-body").html(rst);
                $("#agencyAttachmentFileAttached").val('');
            }
        }else{
            notice1Sec("خطایی رخ داده است !",'yellow');
        }
    };
    xhr.send(formData);
}

function deleteAttachAgencyFile(aid) {
    var action = "deleteAttachAgencyFile";
    var param = {action:action,aid:aid};
    var res = manageAjaxRequest(param);
    if (res != false) {
        notice1Sec(res, "green");
        var res = Main.getAttachedAgencyFile(aid);
        $("#agencyAttachmentFile-body").html('');
        $("#agencyAttachmentFile-body").html(res);
    }
}

function getPassengerOrGuest() {
    var serviceID = $("#agencyManageServiceID").val();
    if (parseInt(serviceID) == 2){ // میهمان
        $("#agencyManagePassenger"+"-div").css("display", "none");
        $("#agencyManageGuest"+"-div").css("display", "");
        $("#agencyManagePassenger").selectpicker('deselectAll');
        $("#agencyManagePassenger").selectpicker('refresh');
    }else if (parseInt(serviceID) == -1 || parseInt(serviceID) == 4 || parseInt(serviceID) == 5){
        $("#agencyManagePassenger"+"-div").css("display", "none");
        $("#agencyManageGuest"+"-div").css("display", "none");
        $("#agencyManageGuest").val('');
        $("#agencyManagePassenger").selectpicker('deselectAll');
        $("#agencyManagePassenger").selectpicker('refresh');
    }else {
        $("#agencyManagePassenger"+"-div").css("display", "");
        $("#agencyManageGuest"+"-div").css("display", "none");
        $("#agencyManageGuest").val('');
    }
}

function printAgency(){
    var sDate = $("#agencyManageSDateSearch").val();
    var eDate = $("#agencyManageEDateSearch").val();
    var billNum = $("#agencyManageBillNumSearch").val();
    var agencyType = $("#agencyManageAgencyTypeSearch").val();
    var serviceType = $("#agencyManageServiceTypeSearch").val();
    var personnel = $("#agencyManagePersonnelSearch").val();
    var action = "printAgency";
    var param = {action:action,sDate:sDate,eDate:eDate,billNum:billNum,agencyType:agencyType,serviceType:serviceType,personnel:personnel};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#hiddenAgencyPrintBody").html('');
        $("#hiddenAgencyPrintBody").html(res);
        $('.demoAgency').printThis({
            // base: "http://localhost:8012/BOM/administrator.php"
            base:base_url
        });
    }
}
function getAgencyExcel2(){
    getAgencyExcel(1);
}

function getAgencyExcel(group_method=0) {
    var sDate = $("#agencyManageSDateSearch").val();
    var eDate = $("#agencyManageEDateSearch").val();
    var billNum = $("#agencyManageBillNumSearch").val();
    var agencyType = $("#agencyManageAgencyTypeSearch").val();
    var serviceType = $("#agencyManageServiceTypeSearch").val();
    var personnel = $("#agencyManagePersonnelSearch").val();
    var action = "getAgencyExcel";
    var group_method=group_method;
    var param = {action:action,sDate:sDate,eDate:eDate,billNum:billNum,agencyType:agencyType,serviceType:serviceType,personnel:personnel,group_method:group_method};
    var res = manageAjaxRequest(param);
    if(res != false){
        window.open(res);
    }
}

function getUnitAgencyAmountExcel() {
    var sDate = $("#agencyManageSDateSearch").val();
    var eDate = $("#agencyManageEDateSearch").val();
    var agencyType = $("#agencyManageAgencyTypeSearch").val();
    var serviceType = $("#agencyManageServiceTypeSearch").val();
    var action = "getUnitAgencyAmountExcel";
    var param = {action:action,sDate:sDate,eDate:eDate,agencyType:agencyType,serviceType:serviceType};
    var res = manageAjaxRequest(param);
    if(res != false){
        window.open(res);
    }
}

function finalTickAgency() {
    $("#finalTickAgencySDate").val('');
    $("#finalTickAgencyEDate").val('');
    $('#finalTickAgencyModal').modal('show');
}

function doFinalTickAgency() {
    var sDate = $("#finalTickAgencySDate").val();
    var eDate = $("#finalTickAgencyEDate").val();
    if (!parseInt((sDate.trim()).length)){
        notice1Sec("بازه زمانی درست انتخاب نشده است !","yellow");
        return false;
    }
    if (!parseInt((eDate.trim()).length)){
        notice1Sec("بازه زمانی درست انتخاب نشده است !","yellow");
        return false;
    }
    var action = "doFinalTickAgency";
    var param = {action:action,sDate:sDate,eDate:eDate};
    var res = manageAjaxRequest(param);
    if (res != false) {
        notice1Sec(res, "green");
        $("#finalTickAgencySDate").val('');
        $("#finalTickAgencyEDate").val('');
        showAgencyManageList();
    }
}

//******************** رستوران ها ********************

function showRestaurantManageList(page) {
    if(typeof page == "undefined"){
        page = 1;
    }
    var action = "showRestaurantManageList";
    var param = {action:action,page:page};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#restaurantManageBody").html('');
        $("#restaurantManageBody").html(res);
    }
}

function createRestaurant() {
    $("#restaurantManageHiddenRid").val('');
    $("#restaurantManageRName").val('');
    $('#restaurantManageModal').modal('show');
}

function editRestaurant() {
    var ch = $('#restaurantManageBody-table').find('input');
    var rid = new Array();
    for(var c=0;c<ch.length;c++){
        if(ch[c].checked){
            rid[rid.length] = ch[c].attributes.rid.value;
        }
    }
    if(rid.length > 1){
        notice1Sec("فقط یک رستوران باید انتخاب شده باشد !","red");
        return false;
    }
    if(rid.length==0){
        notice1Sec("هیچ رستورانی انتخاب نشده است !","red");
        return false;
    }
    rid = rid[0];
    var res = Main.getRestaurantInfo(rid);
    if(res != false){
        $('#restaurantManageModal').modal('show');
        $("#restaurantManageHiddenRid").val(res['rid']);
        $("#restaurantManageRName").val(res['restaurant_Name']);
    }
}

function doEditCreateRestaurant() {
    var rid = $("#restaurantManageHiddenRid").val();
    var rName = $("#restaurantManageRName").val();
    if (!parseInt((rName.trim()).length)){
        notice1Sec("نام رستوران مشخص نشده است !","yellow");
        return false;
    }
    var action = "doEditCreateRestaurant";
    var param = {action:action,rid:rid,rName:rName};
    var res = manageAjaxRequest(param);
    if (res != false) {
        notice1Sec(res, "green");
        $('#restaurantManageModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        showRestaurantManageList();
    }
}

//******************** غذا ها ********************

function showFoodManageList(page) {
    if(typeof page == "undefined"){
        page = 1;
    }
    var action = "showFoodManageList";
    var param = {action:action,page:page};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#foodManageBody").html('');
        $("#foodManageBody").html(res);
    }
}

function createFood() {
    $("#foodManageHiddenFid").val('');
    $("#foodManageFName").val('');
    $("#foodManageAmount").val('');
    $('#foodManageModal').modal('show');
}

function editFood() {
    var ch = $('#foodManageBody-table').find('input');
    var fid = new Array();
    for(var c=0;c<ch.length;c++){
        if(ch[c].checked){
            fid[fid.length] = ch[c].attributes.rid.value;
        }
    }
    if(fid.length > 1){
        notice1Sec("فقط یک غذا باید انتخاب شده باشد !","red");
        return false;
    }
    if(fid.length==0){
        notice1Sec("هیچ غذایی انتخاب نشده است !","red");
        return false;
    }
    fid = fid[0];
    var res = Main.getFoodInfo(fid);
    if(res != false){
        $('#foodManageModal').modal('show');
        $("#foodManageHiddenFid").val(res['fid']);
        $("#foodManageFName").val(res['food_Name']);
        $("#foodManageAmount").val(res['amount']);
    }
}

function doEditCreateFood() {
    var fid = $("#foodManageHiddenFid").val();
    var fName = $("#foodManageFName").val();
    var amount = $("#foodManageAmount").val();
    if (!parseInt((fName.trim()).length)){
        notice1Sec("نام غذا مشخص نشده است !","yellow");
        return false;
    }
    if (!parseInt((amount.trim()).length)){
        notice1Sec("قیمت غذا مشخص نشده است !","yellow");
        return false;
    }
    var action = "doEditCreateFood";
    var param = {action:action,fid:fid,fName:fName,amount:amount};
    var res = manageAjaxRequest(param);
    if (res != false) {
        notice1Sec(res, "green");
        $('#foodManageModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        showFoodManageList();
    }
}

//******************** نوشیدنی ها ********************

function showDrinkManageList(page) {
    if(typeof page == "undefined"){
        page = 1;
    }
    var action = "showDrinkManageList";
    var param = {action:action,page:page};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#drinkManageBody").html('');
        $("#drinkManageBody").html(res);
    }
}

function createDrink() {
    $("#drinkManageHiddenDid").val('');
    $("#drinkManageDName").val('');
    $("#drinkManageAmount").val('');
    $('#drinkManageModal').modal('show');
}

function editDrink() {
    var ch = $('#drinkManageBody-table').find('input');
    var did = new Array();
    for(var c=0;c<ch.length;c++){
        if(ch[c].checked){
            did[did.length] = ch[c].attributes.rid.value;
        }
    }
    if(did.length > 1){
        notice1Sec("فقط یک نوشیدنی باید انتخاب شده باشد !","red");
        return false;
    }
    if(did.length==0){
        notice1Sec("هیچ نوشیدنی انتخاب نشده است !","red");
        return false;
    }
    did = did[0];
    var res = Main.getDrinkInfo(did);
    if(res != false){
        $('#drinkManageModal').modal('show');
        $("#drinkManageHiddenDid").val(res['did']);
        $("#drinkManageDName").val(res['drink_Name']);
        $("#drinkManageAmount").val(res['amount']);
    }
}

function doEditCreateDrink() {
    var did = $("#drinkManageHiddenDid").val();
    var dName = $("#drinkManageDName").val();
    var amount = $("#drinkManageAmount").val();
    if (!parseInt((dName.trim()).length)){
        notice1Sec("نام نوشیدنی مشخص نشده است !","yellow");
        return false;
    }
    if (!parseInt((amount.trim()).length)){
        notice1Sec("قیمت نوشیدنی مشخص نشده است !","yellow");
        return false;
    }
    var action = "doEditCreateDrink";
    var param = {action:action,did:did,dName:dName,amount:amount};
    var res = manageAjaxRequest(param);
    if (res != false) {
        notice1Sec(res, "green");
        $('#drinkManageModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        showDrinkManageList();
    }
}

//******************** مسیرهای سرویس دهی ********************

function showServiceRouteManageList(page) {
    if(typeof page == "undefined"){
        page = 1;
    }
    var action = "showServiceRouteManageList";
    var param = {action:action,page:page};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#serviceRouteManageBody").html('');
        $("#serviceRouteManageBody").html(res);
    }
}

function createServiceRoute() {
    $("#serviceRouteManageHiddenSRid").val('');
    $("#serviceRouteManageRName").val('');
    $('#serviceRouteManageModal').modal('show');
}

function editServiceRoute() {
    var ch = $('#serviceRouteManageBody-table').find('input');
    var srid = new Array();
    for(var c=0;c<ch.length;c++){
        if(ch[c].checked){
            srid[srid.length] = ch[c].attributes.rid.value;
        }
    }
    if(srid.length > 1){
        notice1Sec("فقط یک مسیر باید انتخاب شده باشد !","red");
        return false;
    }
    if(srid.length==0){
        notice1Sec("هیچ مسیری انتخاب نشده است !","red");
        return false;
    }
    srid = srid[0];
    var res = Main.getServiceRouteInfo(srid);
    if(res != false){
        $('#serviceRouteManageModal').modal('show');
        $("#serviceRouteManageHiddenSRid").val(res['srid']);
        $("#serviceRouteManageRName").val(res['routeName']);
    }
}

function doEditCreateServiceRoute() {
    var srid = $("#serviceRouteManageHiddenSRid").val();
    var rName = $("#serviceRouteManageRName").val();
    if (!parseInt((rName.trim()).length)){
        notice1Sec("نام مسیر مشخص نشده است !","yellow");
        return false;
    }
    var action = "doEditCreateServiceRoute";
    var param = {action:action,srid:srid,rName:rName};
    var res = manageAjaxRequest(param);
    if (res != false) {
        notice1Sec(res, "green");
        $('#serviceRouteManageModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        showServiceRouteManageList();
    }
}

function personnelServiceRoute() {
    var action = "getPersonnelServiceRoute";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    if (res != false) {
        $("#personnelServiceRouteBody").html('');
        $("#personnelServiceRouteBody").html(res);
        $('#personnelServiceRouteModal').modal('show');
    }
}

function doPersonnelServiceRoute() {
    var ch = $('#personnelServiceRoute-tableID').find('input:checked');
    var information = new Array();
    for(var c=0;c<ch.length;c++){
        var grade = ch[c].attributes.rid.value;
        var routeID = $("#personnelServiceRoute-"+grade).val();
        if (parseInt(routeID) == 0){
            notice1Sec("یک یا چند مسیر مشخص نشده است !","yellow");
            return false;
        }
        var olid = $("#psrid-"+grade+"-Hidden").val();
        information[information.length] = [olid,routeID];
    }
    var myJsonString = JSON.stringify(information);
    var action = "doPersonnelServiceRoute";
    var param = {action:action,myJsonString:myJsonString};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
        $('#personnelServiceRouteModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        showServiceRouteManageList();
    }
}

//******************** ثبت ناهار اضافه کار ********************

function showOvertimeLunchManageList(page) {
    if(typeof page == "undefined"){
        page = 1;
    }
    var sDate = $("#overtimeLunchManageSDateSearch").val();
    var eDate = $("#overtimeLunchManageEDateSearch").val();
    var personnel = $("#overtimeLunchManagePersonnelSearch").val();
    var restaurant = $("#overtimeLunchManageRestaurantSearch").val();
    var meal = $("#overtimeLunchManageMealSearch").val();
    var action = "showOvertimeLunchManageList";
    var param = {action:action,sDate:sDate,eDate:eDate,personnel:personnel,restaurant:restaurant,meal:meal,page:page};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#overtimeLunchManageBody").html('');
        $("#overtimeLunchManageBody").html(res);
    }
}

function getPersonnelOfUnit() {
    var unit = $("#overtimeLunchManageUnit").val();
    $('#overtimeLunchManagePersonnel').empty();
    var rstPOU = Main.personnelOfUnit(unit);
    for(var e=0;e<rstPOU.length;e++){
        $('#overtimeLunchManagePersonnel').append($('<option>', {
            value: rstPOU[e]['RowID'],
            text: rstPOU[e]['Fname']+' '+rstPOU[e]['Lname']
        }));
    }
    $("#overtimeLunchManagePersonnel").selectpicker('deselectAll');
    $("#overtimeLunchManagePersonnel").selectpicker('refresh');
}

function createOvertimeLunchPersonnel() {
    $("#overtimeLunchManageDate").val('');
    $("#overtimeLunchManageUnit").val(0);
    $('#overtimeLunchManagePersonnel').empty();
    //personnelOfUnit();
    getPersonnelOfUnit();
    $("#overtimeLunchManagePersonnel").selectpicker('refresh');
    $("#overtimeLunchManageMeal").val(-1);
    $('#overtimeLunchPersonnelModal').modal('show');

    
}
function toggle_restaurant_div(input){
    if($(input).val()==2){
        $("#overtimeLunchManagerestaurant-div").hide()
        $("#overtimeLunchManagerestaurant").val(0);
    }
    else{
        $("#overtimeLunchManagerestaurant-div").show();
    }
}

function doCreateOvertimeLunchPersonnel() {
    var olDate = $("#overtimeLunchManageDate").val();
    var unit = $("#overtimeLunchManageUnit").val();
    var unit = 0;
    var meal = $("#overtimeLunchManageMeal").val();
    var personnel = $("#overtimeLunchManagePersonnel").val();
    var restaurant = $("#overtimeLunchManagerestaurant").val()
    var personnel = personnel.join(",");
    // if (parseInt(unit) == 0){
    //     notice1Sec("واحد مشخص نشده است !","yellow");
    //     return false;
    // }
    if (!parseInt((personnel.trim()).length)){
        notice1Sec("پرسنل مشخص نشده است !","yellow");
        return false;
    }
    if (parseInt(meal) == -1){
        notice1Sec("وعده مشخص نشده است !","yellow");
        return false;
    }
    if (parseInt(meal) != 2){
        if (parseInt(restaurant) == 0){
            notice1Sec("رستوران مشخص نشده است!","yellow");
            return false;
        }
   }
   else{
    restaurant=0;
   }
    var action = "doCreateOvertimeLunchPersonnel";
    var param = {action:action,personnel:personnel,olDate:olDate,unit:unit,meal:meal,restaurant:restaurant};
    var res = manageAjaxRequest(param);
    if (res != false) {
        notice1Sec(res, "green");
        $("#overtimeLunchManageUnit").val(0);
        $("#overtimeLunchManageMeal").val(-1);
        $('#overtimeLunchManagePersonnel').empty();
        $("#overtimeLunchManagePersonnel").selectpicker('refresh');
        showOvertimeLunchManageList();
    }
}

function createOvertimeLunchGuest() {
    $("#overtimeLunchGuestDate").val('');
    $("#overtimeLunchGuestUnit").val(0);
    $("#overtimeLunchGuestFName").val('');
    $("#overtimeLunchGuestLName").val('');
    $("#overtimeLunchGuestDesc").val('');
    $('#overtimeLunchGuestModal').modal('show');
}

function doCreateOvertimeLunchGuest() {
    var olDate = $("#overtimeLunchGuestDate").val();
    var unit = $("#overtimeLunchGuestUnit").val();
    var fname = $("#overtimeLunchGuestFName").val();
    var lname = $("#overtimeLunchGuestLName").val();
    var restaurant = $("#overtimeLunchManagerestaurantGest").val();

    var desc = $("#overtimeLunchGuestDesc").val();
    if (parseInt(unit) == 0){
        notice1Sec("واحد مشخص نشده است !","yellow");
        return false;
    }
    if (!parseInt((fname.trim()).length)){
        notice1Sec("نام میهمان مشخص نشده است !","yellow");
        return false;
    }
    if (!parseInt((lname.trim()).length)){
        notice1Sec("نام خانوادگی میهمان مشخص نشده است !","yellow");
        return false;
    }
    if (!parseInt((restaurant.trim()).length)){
        notice1Sec("رستوران  مشخص نشده است !","yellow");
        return false;
    }
    var action = "doCreateOvertimeLunchGuest";
    var param = {action:action,olDate:olDate,unit:unit,fname:fname,lname:lname,desc:desc,restaurant:restaurant};
    var res = manageAjaxRequest(param);
    if (res != false) {
        notice1Sec(res, "green");
        $("#overtimeLunchGuestUnit").val(0);
        $("#overtimeLunchGuestFName").val('');
        $("#overtimeLunchGuestLName").val('');
        $("#overtimeLunchGuestDesc").val('');
        showOvertimeLunchManageList();
    }
}

function createOvertimeLunchDetails() {
    $("#overtimeLunchDetailsDate").val('');
    $("#overtimeLunchDetailsBreadNum").val('');
    $("#overtimeLunchDetailsBody").html('');
    $('#overtimeLunchDetailsModal').modal('show');
}

function getLunchOfPersonnel() {
    var ddate = $("#overtimeLunchDetailsDate").val();
    var action = "getLunchOfPersonnel";
    var param = {action:action,ddate:ddate};
    var res = manageAjaxRequest(param);
    if (res != false) {
        $("#overtimeLunchDetailsBody").html('');
        $("#overtimeLunchDetailsBody").html(res[0]);
        $("#overtimeLunchDetailsBreadNum").val(res[1]);
    }
}

function changeRestaurantType() {
    var resID = $("#OvertimeLunchRestaurant-1").val();
    var ddate = $("#overtimeLunchDetailsDate").val();
    var action = "changeRestaurantType";
    var param = {action:action,ddate:ddate};
    var res = manageAjaxRequest(param);
    if (res != false) {
        for (var x = 2; x <= res; x++) {
            $("#OvertimeLunchRestaurant-"+x).val(resID);
        }
    }
}

// function changeFoodType() {
//     var resID = $("#OvertimeLunchFood-1").val();
//     var ddate = $("#overtimeLunchDetailsDate").val();
//     var action = "changeRestaurantType";
//     var param = {action:action,ddate:ddate};
//     var res = manageAjaxRequest(param);
//     if (res != false) {
//         for (var x = 2; x <= res; x++) {
//             $("#OvertimeLunchFood-"+x).val(resID);
//         }
//     }
// }
function changeFoodType(input) {
    //var resID = $("#OvertimeLunchFood-1").val();
    var resID = $(input).val();
    var counter_array=$(input).attr('id').split("-");
    var counter=counter_array[1];
    var ddate = $("#overtimeLunchDetailsDate").val();
    var action = "changeRestaurantType";
    var param = {action:action,ddate:ddate};
    var res = manageAjaxRequest(param);
    if (res != false) {
        for (var x = counter; x <= res; x++) {
            $("#OvertimeLunchFood-"+x).val(resID);
        }
    }
}

function changeDrinkType() {
    var resID = $("#OvertimeLunchDrink-1").val();
    var ddate = $("#overtimeLunchDetailsDate").val();
    var action = "changeRestaurantType";
    var param = {action:action,ddate:ddate};
    var res = manageAjaxRequest(param);
    if (res != false) {
        for (var x = 2; x <= res; x++) {
            $("#OvertimeLunchDrink-"+x).val(resID);
        }
    }
}

function doCreateOvertimeLunchDetails() {
    var BreadNum = $("#overtimeLunchDetailsBreadNum").val();
    var ch = $('#lunchOfPersonnelHtm-tableID').find('input:checked');
    var information = new Array();
    for(var c=0;c<ch.length;c++){
        var grade = ch[c].attributes.rid.value;
        var food_status = ch[c].attributes.food_status.value;
        var restaurantID = $("#OvertimeLunchRestaurant-"+grade).val();
        var foodID = $("#OvertimeLunchFood-"+grade).val();
        var drinkID = $("#OvertimeLunchDrink-"+grade).val();
        var olid = $("#olid-"+grade+"-Hidden").val();
        information[information.length] = [olid,restaurantID,foodID,drinkID,food_status];
    }
    var myJsonString = JSON.stringify(information);
    var action = "doCreateOvertimeLunchDetails";
    var param = {action:action,myJsonString:myJsonString,BreadNum:BreadNum};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
        $('#overtimeLunchDetailsModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        showOvertimeLunchManageList();
    }
}

function deleteOvertimeLunch(olid) {
    var action = "deleteOvertimeLunch";
    var param = {action:action,olid:olid};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
        showOvertimeLunchManageList();
    }
}

function printOvertimeLunch(){
    var sDate = $("#overtimeLunchManageSDateSearch").val();
    var eDate = $("#overtimeLunchManageEDateSearch").val();
    var personnel = $("#overtimeLunchManagePersonnelSearch").val();
    var restaurant = $("#overtimeLunchManageRestaurantSearch").val();
    var meal = $("#overtimeLunchManageMealSearch").val();
    var action = "printOvertimeLunch";
    var param = {action:action,sDate:sDate,eDate:eDate,personnel:personnel,restaurant:restaurant,meal:meal};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#hiddenAgencyPrintBody").html('');
        $("#hiddenAgencyPrintBody").html(res);
        $('.demoOvertimeLunch').printThis({
            //base: "http://localhost:8012/BOM/administrator.php"
            base:base_url
        });
    }
}

function getOvertimeLunchExcel() {
    var sDate = $("#overtimeLunchManageSDateSearch").val();
    var eDate = $("#overtimeLunchManageEDateSearch").val();
    var personnel = $("#overtimeLunchManagePersonnelSearch").val();
    var restaurant = $("#overtimeLunchManageRestaurantSearch").val();
    var meal = $("#overtimeLunchManageMealSearch").val();
    var action = "getOvertimeLunchExcel";
    var param = {action:action,sDate:sDate,eDate:eDate,personnel:personnel,restaurant:restaurant,meal:meal};
    var res = manageAjaxRequest(param);
    if(res != false){
        window.open(res);
    }
}

function finalTickLunch() {
    $("#finalTickLunchSDate").val('');
    $("#finalTickLunchEDate").val('');
    $('#finalTickLunchModal').modal('show');
}

function doFinalTickLunch() {
    var sDate = $("#finalTickLunchSDate").val();
    var eDate = $("#finalTickLunchEDate").val();
    if (!parseInt((sDate.trim()).length)){
        notice1Sec("بازه زمانی درست انتخاب نشده است !","yellow");
        return false;
    }
    if (!parseInt((eDate.trim()).length)){
        notice1Sec("بازه زمانی درست انتخاب نشده است !","yellow");
        return false;
    }
    var action = "doFinalTickLunch";
    var param = {action:action,sDate:sDate,eDate:eDate};
    var res = manageAjaxRequest(param);
    if (res != false) {
        notice1Sec(res, "green");
        $("#finalTickLunchSDate").val('');
        $("#finalTickLunchEDate").val('');
        showOvertimeLunchManageList();
    }
}

function getUnitOvertimeLunchExcel() {
    var sDate = $("#overtimeLunchManageSDateSearch").val();
    var eDate = $("#overtimeLunchManageEDateSearch").val();
    var action = "getUnitOvertimeLunchExcel";
    var param = {action:action,sDate:sDate,eDate:eDate};
    var res = manageAjaxRequest(param);
    if(res != false){
        window.open(res);
    }
}

//++++++++++++++++++++++ مدیریت پروژه ها +++++++++++++++++++++++

function projectManagement() {
    var action = "projectManagement";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#projectManagementID").html('');
        $("#projectManagementID").html(res);

        $(document).ready(function(){
            $("input[type='radio']").click(function(){
                var radioValue = $("input[name='confirmProjectWorkflowFileType']:checked").val();
                var rValue = $("input[name='confirmProjectFieldsFileType']:checked").val();
                if (parseInt(radioValue) == 0){  // عدم تایید
                    $("#confirmProjectWorkflowFileDesc"+"-div").css("display", "");
                    $("#confirmProjectWorkflowFileWarning"+"-div").css("display", "none");
                }else {
                    $("#confirmProjectWorkflowFileDesc").val('');
                    $("#confirmProjectWorkflowFileDesc"+"-div").css("display", "none");
                    $("#confirmProjectWorkflowFileWarning"+"-div").css("display", "");
                }
                if (parseInt(rValue) == 0){  // عدم تایید
                    $("#confirmProjectFieldsFileDesc"+"-div").css("display", "");
                    $("#confirmProjectFieldsFileWarning"+"-div").css("display", "none");
                }else {
                    $("#confirmProjectFieldsFileDesc").val('');
                    $("#confirmProjectFieldsFileDesc"+"-div").css("display", "none");
                    $("#confirmProjectFieldsFileWarning"+"-div").css("display", "");
                }
            });
        });

        $("#projectManagementUnits").selectpicker();
        showProjectManagementList();
    }
}

function showProjectManagementList(page) {
    if(typeof page == "undefined"){
        page = 1;
    }
    var action = "showProjectManagementList";
    var param = {action:action,page:page};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#projectManagementBody").html('');
        $("#projectManagementBody").html(res);
    }
}

function createProject() {
    $("#projectManagementHiddenPid").val('');
    $("#projectManagementName").val('');
    $("#projectManagementOwner").val(0);
    $("#projectManagementDescription").val('');
    $("#projectManagementUnits").selectpicker('deselectAll');
    $("#projectManagementUnits").selectpicker('refresh');
    $('#projectManagementModal').modal('show');
}

function editProject() {
    var ch = $('#projectManagementBody-table').find('input');
    var pid = new Array();
    for(var c=0;c<ch.length;c++){
        if(ch[c].checked){
            pid[pid.length] = ch[c].attributes.rid.value;
        }
    }
    if(pid.length > 1){
        notice1Sec("فقط یک پروژه باید انتخاب شده باشد !","red");
        return false;
    }
    if(pid.length==0){
        notice1Sec("هیچ پروژه ای انتخاب نشده است !","red");
        return false;
    }
    pid = pid[0];
    var res = Main.getProjectInfo(pid);
    if(res != false){
        $('#projectManagementModal').modal('show');
        $("#projectManagementHiddenPid").val(res['pid']);
        $("#projectManagementName").val(res['projectName']);
        $("#projectManagementOwner").val(res['projectOwner']);
        $("#projectManagementDescription").val(res['description']);
        $("#projectManagementUnits").val(res['projectUnits'].split(','));
        $("#projectManagementUnits").selectpicker('refresh');
    }
}

function doEditCreateProject() {
    var pid = $("#projectManagementHiddenPid").val();
    var name = $("#projectManagementName").val();
    var owner = $("#projectManagementOwner").val();
    var desc = $("#projectManagementDescription").val();
    var units = $("#projectManagementUnits").val();
    var units = units.join(",");
    if (!parseInt((name.trim()).length)){
        notice1Sec("موضوع پروژه مشخص نشده است !","yellow");
        return false;
    }
    if (parseInt(owner) == 0){
        notice1Sec("مالک پروژه مشخص نشده است !","yellow");
        return false;
    }
    if (!parseInt((units.trim()).length)){
        notice1Sec("واحد های مرتبط مشخص نشده است !","yellow");
        return false;
    }
    var action = "doEditCreateProject";
    var param = {action:action,pid:pid,name:name,owner:owner,desc:desc,units:units};
    var res = manageAjaxRequest(param);
    if (res != false) {
        notice1Sec(res, "green");
        showProjectManagementList();
    }
}

function projectWorkflowAttachment() {
    var ch = $('#projectManagementBody-table').find('input');
    var pid = new Array();
    for(var c=0;c<ch.length;c++){
        if(ch[c].checked){
            pid[pid.length] = ch[c].attributes.rid.value;
        }
    }
    if(pid.length > 1){
        notice1Sec("فقط یک پروژه باید انتخاب شده باشد !","red");
        return false;
    }
    if(pid.length==0){
        notice1Sec("هیچ پروژه ای انتخاب نشده است !","red");
        return false;
    }
    pid = pid[0];
    $("#projectWorkflowAttachmentID").val(pid);
    $("#projectWorkflowAttachmentName").val('');
    $("#projectWorkflowAttachmentFile").val('');
    var res = Main.getProjectWorkflowFile(pid);
    $("#projectWorkflowAttachment-body").html('');
    $("#projectWorkflowAttachment-body").html(res);
    $('#projectWorkflowAttachmentModal').modal('show');
}

function doAttachFileToProject() {
    var pid = $('#projectWorkflowAttachmentID').val();
    var info = $('#projectWorkflowAttachmentName').val();
    var formData = new FormData();
    if($('#projectWorkflowAttachmentFile').val() != '' || $('#projectWorkflowAttachmentFile')[0].files.length != 0){
        var fileSelect = document.getElementById('projectWorkflowAttachmentFile');
        var files = fileSelect.files;
        if(!window.File && window.FileReader && window.FileList && window.Blob){ //if browser doesn't supports File API
            notice1Sec("Your browser does not support new File API! Please upgrade.","yellow");
            return false;
        }else {
            var total_selected_files = files.length;
            for (var x = 0; x < total_selected_files; x++) {
                formData.append("files[]",files[x]);
            }
        }
    }
    formData.append("action","doAttachFileToProject");
    formData.append("pid",pid);
    formData.append("info",info);

    var xhr = new XMLHttpRequest();
    xhr.open('POST', 'php/managemantproccess.php',true);
    xhr.onload = function () {
        if (xhr.status === 200) {
            var res = JSON.parse(xhr.responseText);
            if(res['res'] == "false"){
                notice1Sec(res['data'],'yellow');
            }else{
                notice1Sec('بارگذاری انجام شد.', "green");
                var rst = Main.getProjectWorkflowFile(pid);
                $("#projectWorkflowAttachment-body").html('');
                $("#projectWorkflowAttachment-body").html(rst);
                $("#projectWorkflowAttachmentName").val('');
                $("#projectWorkflowAttachmentFile").val('');
            }
        }else{
            notice1Sec("خطایی رخ داده است !",'yellow');
        }
    };
    xhr.send(formData);
}

function deleteProjectWorkflowFile(fid){
    var pid = $('#projectWorkflowAttachmentID').val();
    var action = "deleteProjectWorkflowFile";
    var param = {action:action,fid:fid};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res, "green");
        var rst = Main.getProjectWorkflowFile(pid);
        $("#projectWorkflowAttachment-body").html('');
        $("#projectWorkflowAttachment-body").html(rst);
    }
}

function projectFieldsAttachment() {
    var ch = $('#projectManagementBody-table').find('input');
    var pid = new Array();
    for(var c=0;c<ch.length;c++){
        if(ch[c].checked){
            pid[pid.length] = ch[c].attributes.rid.value;
        }
    }
    if(pid.length > 1){
        notice1Sec("فقط یک پروژه باید انتخاب شده باشد !","red");
        return false;
    }
    if(pid.length==0){
        notice1Sec("هیچ پروژه ای انتخاب نشده است !","red");
        return false;
    }
    pid = pid[0];
    $("#projectFieldsAttachmentID").val(pid);
    $("#projectFieldsAttachmentName").val('');
    $("#projectFieldsAttachmentFile").val('');
    var res = Main.getProjectFieldsFile(pid);
    $("#projectFieldsAttachment-body").html('');
    $("#projectFieldsAttachment-body").html(res);
    $('#projectFieldsAttachmentModal').modal('show');
}

function doAttachFieldsFileToProject() {
    var pid = $('#projectFieldsAttachmentID').val();
    var info = $('#projectFieldsAttachmentName').val();
    var formData = new FormData();
    if($('#projectFieldsAttachmentFile').val() != '' || $('#projectFieldsAttachmentFile')[0].files.length != 0){
        var fileSelect = document.getElementById('projectFieldsAttachmentFile');
        var files = fileSelect.files;
        if(!window.File && window.FileReader && window.FileList && window.Blob){ //if browser doesn't supports File API
            notice1Sec("Your browser does not support new File API! Please upgrade.","yellow");
            return false;
        }else {
            var total_selected_files = files.length;
            for (var x = 0; x < total_selected_files; x++) {
                formData.append("files[]",files[x]);
            }
        }
    }
    formData.append("action","doAttachFieldsFileToProject");
    formData.append("pid",pid);
    formData.append("info",info);

    var xhr = new XMLHttpRequest();
    xhr.open('POST', 'php/managemantproccess.php',true);
    xhr.onload = function () {
        if (xhr.status === 200) {
            var res = JSON.parse(xhr.responseText);
            if(res['res'] == "false"){
                notice1Sec(res['data'],'yellow');
            }else{
                notice1Sec('بارگذاری انجام شد.', "green");
                var rst = Main.getProjectFieldsFile(pid);
                $("#projectFieldsAttachment-body").html('');
                $("#projectFieldsAttachment-body").html(rst);
                $("#projectFieldsAttachmentName").val('');
                $("#projectFieldsAttachmentFile").val('');
            }
        }else{
            notice1Sec("خطایی رخ داده است !",'yellow');
        }
    };
    xhr.send(formData);
}

function deleteProjectFieldsFile(fid){
    var pid = $('#projectFieldsAttachmentID').val();
    var action = "deleteProjectFieldsFile";
    var param = {action:action,fid:fid};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res, "green");
        var rst = Main.getProjectFieldsFile(pid);
        $("#projectFieldsAttachment-body").html('');
        $("#projectFieldsAttachment-body").html(rst);
    }
}

function showProjectWorkflow(pid){
    var res = Main.getProjectWorkflowInfo(pid);
    $("#showProjectWorkflowModal-body").html('');
    $("#showProjectWorkflowModal-body").html(res);
    $('#showProjectWorkflowModal').modal('show');
}

function confirmProjectWorkflowFile(pwid) {
    $("#confirmProjectWorkflowFileHiddenPwid").val(pwid);
    $("input[name='confirmProjectWorkflowFileType']").prop('checked',false);
    $("#confirmProjectWorkflowFileDesc").val('');
    $("#confirmProjectWorkflowFileDesc"+"-div").css("display", "none");
    $("#confirmProjectWorkflowFileWarning"+"-div").css("display", "none");
    $('#confirmProjectWorkflowFileModal').modal('show');
}

function doConfirmProjectWorkflowFile() {
    var pwid = $("#confirmProjectWorkflowFileHiddenPwid").val();
    var desc = $("#confirmProjectWorkflowFileDesc").val();
    var radioValue = $("input[name='confirmProjectWorkflowFileType']:checked").val();
    if (parseInt(radioValue) == 0 && !parseInt((desc.trim()).length) ){
        notice1Sec("نظرات خود را ثبت نمایید !","yellow");
        return false;
    }
    var action = "doConfirmProjectWorkflowFile";
    var param = {action:action,pwid:pwid,desc:desc,radioValue:radioValue};
    var res = manageAjaxRequest(param);
    if (res != false) {
        notice1Sec(res, "green");
        $("input[name='confirmProjectWorkflowFileType']").prop('checked',false);
        $("#confirmProjectWorkflowFileDesc").val('');
    }
}

function showProjectWorkflowComments(pwid) {
    var res = Main.getProjectWorkflowComment(pwid);
    $("#showProjectWorkflowComment-body").html('');
    $("#showProjectWorkflowComment-body").html(res);
    $('#showProjectWorkflowCommentModal').modal('show');
}

function showProjectFields(pid){
    var res = Main.getProjectFieldsInfo(pid);
    $("#showProjectFieldsModal-body").html('');
    $("#showProjectFieldsModal-body").html(res);
    $('#showProjectFieldsModal').modal('show');
}

function confirmProjectFieldsFile(pwid) {
    $("#confirmProjectFieldsFileHiddenPwid").val(pwid);
    $("input[name='confirmProjectFieldsFileType']").prop('checked',false);
    $("#confirmProjectFieldsFileDesc").val('');
    $("#confirmProjectFieldsFileDesc"+"-div").css("display", "none");
    $("#confirmProjectFieldsFileWarning"+"-div").css("display", "none");
    $('#confirmProjectFieldsFileModal').modal('show');
}

function doConfirmProjectFieldsFile() {
    var pwid = $("#confirmProjectFieldsFileHiddenPwid").val();
    var desc = $("#confirmProjectFieldsFileDesc").val();
    var radioValue = $("input[name='confirmProjectFieldsFileType']:checked").val();
    if (parseInt(radioValue) == 0 && !parseInt((desc.trim()).length) ){
        notice1Sec("نظرات خود را ثبت نمایید !","yellow");
        return false;
    }
    var action = "doConfirmProjectFieldsFile";
    var param = {action:action,pwid:pwid,desc:desc,radioValue:radioValue};
    var res = manageAjaxRequest(param);
    if (res != false) {
        notice1Sec(res, "green");
        $("input[name='confirmProjectFieldsFileType']").prop('checked',false);
        $("#confirmProjectFieldsFileDesc").val('');
    }
}

function showProjectFieldsComments(pwid) {
    var res = Main.getProjectFieldsComment(pwid);
    $("#showProjectFieldsComment-body").html('');
    $("#showProjectFieldsComment-body").html(res);
    $('#showProjectFieldsCommentModal').modal('show');
}

function projectBossTick() {
    var ch = $('#projectManagementBody-table').find('input');
    var pid = new Array();
    for(var c=0;c<ch.length;c++){
        if(ch[c].checked){
            pid[pid.length] = ch[c].attributes.rid.value;
        }
    }
    if(pid.length > 1){
        notice1Sec("فقط یک پروژه باید انتخاب شده باشد !","red");
        return false;
    }
    if(pid.length == 0){
        notice1Sec("هیچ پروژه ای انتخاب نشده است !","red");
        return false;
    }
    pid = pid[0];
    $("#projectBossTick_PidHidden").val(pid);
    $('#projectBossTickModal').modal('show');
}

function doProjectBossTick() {
    var pid = $("#projectBossTick_PidHidden").val();
    var action = "doProjectBossTick";
    var param = {action:action,pid:pid};
    var res = manageAjaxRequest(param);
    if (res != false) {
        notice1Sec(res, "green");
        $('#projectBossTickModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
    }
}

function projectFinalTick() {
    var ch = $('#projectManagementBody-table').find('input');
    var pid = new Array();
    for(var c=0;c<ch.length;c++){
        if(ch[c].checked){
            pid[pid.length] = ch[c].attributes.rid.value;
        }
    }
    if(pid.length > 1){
        notice1Sec("فقط یک پروژه باید انتخاب شده باشد !","red");
        return false;
    }
    if(pid.length == 0){
        notice1Sec("هیچ پروژه ای انتخاب نشده است !","red");
        return false;
    }
    pid = pid[0];
    $("#projectFinalTick_PidHidden").val(pid);
    $('#projectFinalTickModal').modal('show');
}

function doProjectFinalTick() {
    var pid = $("#projectFinalTick_PidHidden").val();
    var action = "doProjectFinalTick";
    var param = {action:action,pid:pid};
    var res = manageAjaxRequest(param);
    if (res != false) {
        notice1Sec(res, "green");
        $('#projectFinalTickModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
    }
}

//++++++++++++++++++++++ مدیریت بودجه +++++++++++++++++++++++

function budgetManagement() {
    var action = "budgetManagement";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    if(res != false) {
        $("#budgetManagementID").html('');
        $("#budgetManagementID").html(res[0]);
        if(jQuery.inArray(1, res[1]) !== -1) {
            var vDate = new AMIB.persianCalendar('budgetManagementValidDate');
            showBudgetManagementList();
        }
        if(jQuery.inArray(2, res[1]) !== -1) {
            $(document).ready(function(){
                $("input[type='radio']").click(function(){
                    var radioValue = $("input[name='budgetComponentsProductionCommentType']:checked").val();
                    var rValue = $("input[name='budgetComponentsPlanningCommentType']:checked").val();
                    if (parseInt(radioValue) == 0){  // عدم تایید
                        $("#budgetComponentsProductionCommentDesc"+"-div").css("display", "");
                        $("#budgetComponentsProductionCommentWarning"+"-div").css("display", "none");
                    }else {
                        $("#budgetComponentsProductionCommentDesc").val('');
                        $("#budgetComponentsProductionCommentDesc"+"-div").css("display", "none");
                        $("#budgetComponentsProductionCommentWarning"+"-div").css("display", "");
                    }
                    if (parseInt(rValue) == 0){  // عدم تایید
                        $("#budgetComponentsPlanningCommentDesc"+"-div").css("display", "");
                        $("#budgetComponentsPlanningCommentWarning"+"-div").css("display", "none");
                    }else {
                        $("#budgetComponentsPlanningCommentDesc").val('');
                        $("#budgetComponentsPlanningCommentDesc"+"-div").css("display", "none");
                        $("#budgetComponentsPlanningCommentWarning"+"-div").css("display", "");
                    }
                });
            });
            showBudgetComponentsList();
        }
        if(jQuery.inArray(3, res[1]) !== -1) {
            $("#budgetPriceManageComponentSearch").selectpicker();
        }
    }
}

//******************** بودجه سال ********************

function showBudgetManagementList(page) {
    if(typeof page == "undefined"){
        page = 1;
    }
    var action = "showBudgetManagementList";
    var param = {action:action,page:page};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#budgetManagementBody").html('');
        $("#budgetManagementBody").html(res);
    }
}

function createBudget() {
    $("#budgetManagementHiddenBid").val('');
    $("#budgetManagementYear").val(0);
    $("#budgetManagementValidDate").val('');
    $("#budgetManagementDescription").val('');
    $("#budgetManagementYear").prop('disabled', false);
    $('#budgetManagementModal').modal('show');
}

function editBudget() {
    var ch = $('#budgetManagementBody-table').find('input');
    var bid = new Array();
    for(var c=0;c<ch.length;c++){
        if(ch[c].checked){
            bid[bid.length] = ch[c].attributes.rid.value;
        }
    }
    if(bid.length > 1){
        notice1Sec("فقط یک بودجه باید انتخاب شده باشد !","red");
        return false;
    }
    if(bid.length==0){
        notice1Sec("هیچ بودجه ای انتخاب نشده است !","red");
        return false;
    }
    bid = bid[0];
    var res = Main.getBudgetInfo(bid);
    if(res != false){
        $('#budgetManagementModal').modal('show');
        $("#budgetManagementHiddenBid").val(res['bid']);
        $("#budgetManagementYear").val(res['year']);
        $("#budgetManagementValidDate").val(res['validDate']);
        $("#budgetManagementDescription").val(res['description']);
        $("#budgetManagementYear").prop('disabled', true);
    }
}

function doEditCreateBudget() {
    var bid = $("#budgetManagementHiddenBid").val();
    var year = $("#budgetManagementYear").val();
    var validDate = $("#budgetManagementValidDate").val();
    var desc = $("#budgetManagementDescription").val();
    if (parseInt(year) == 0){
        notice1Sec("سال بودجه مشخص نشده است !","yellow");
        return false;
    }
    if (!parseInt((validDate.trim()).length)){
        notice1Sec("تاریخ اعتبار مشخص نشده است !","yellow");
        return false;
    }
    var action = "doEditCreateBudget";
    var param = {action:action,bid:bid,year:year,validDate:validDate,desc:desc};
    var res = manageAjaxRequest(param);
    if (res != false) {
        notice1Sec(res, "green");
        $('#budgetManagementModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        budgetManagement();
    }
}

function showGoodsWithoutBudget(bid) {
    var action = "showGoodsWithoutBudget";
    var param = {action:action,bid:bid};
    var res = manageAjaxRequest(param);
    if(res != false) {
        $("#showGoodsWithoutBudget-body").html('');
        $("#showGoodsWithoutBudget-body").html(res);
        $('#showGoodsWithoutBudgetModal').modal('show');
    }
}

function showBudgetComponentsDetailsFinal(bid) {
    var gCode = $("#budgetFinalGCodeSearch").val();
    var gName = $("#budgetFinalGNameSearch").val();
    var brand = $("#budgetFinalBrandSearch").val();
    var ggroup = $("#budgetFinalGGroupSearch").val();
    var sgroup = $("#budgetFinalSGroupSearch").val();
    var series = $("#budgetFinalSeriesSearch").val();
    var action = "showBudgetComponentsDetailsFinal";
    var param = {action:action,bid:bid,gCode:gCode,gName:gName,brand:brand,ggroup:ggroup,sgroup:sgroup,series:series};
    var res = manageAjaxRequest(param);
    if(res != false) {
        $("#showBudgetComponentsDetailsFinal-body").html('');
        $("#showBudgetComponentsDetailsFinal-body").html(res);
        $('#showBudgetComponentsDetailsFinalModal').modal('show');
    }
}

function showBudgetComponentsFinal(bid) {
    var bcDate = $("#budgetComponentsFinalCdateSearch").val();
    var bcName = $("#budgetComponentsFinalBcNameSearch").val();
    var bcCode = $("#budgetComponentsFinalBcCodeSearch").val();
    var action = "showBudgetComponentsFinal";
    var param = {action:action,bid:bid,bcDate:bcDate,bcName:bcName,bcCode:bcCode};
    var res = manageAjaxRequest(param);
    if(res != false) {
        $("#showBudgetComponentsFinal-body").html('');
        $("#showBudgetComponentsFinal-body").html(res);
        var ccDate = new AMIB.persianCalendar('budgetComponentsFinalCdateSearch');
        $('#showBudgetComponentsFinalModal').modal('show');
    }
}

function showDetailsOfBudgetComponents(bcid) {
    var action = "showDetailsOfBudgetComponents";
    var param = {action:action,bcid:bcid};
    var res = manageAjaxRequest(param);
    if(res != false) {
        $("#showDetailsOfBudgetComponents-body").html('');
        $("#showDetailsOfBudgetComponents-body").html(res);
        $('#showDetailsOfBudgetComponentsModal').modal('show');
    }
}

function returnBudgetComponents(bcid) {
    $('#returnBudgetComponentsIdHidden').val(bcid);
    $('#returnBudgetComponentsModal').modal('show');
}

function doReturnBudgetComponents() {
    var bcid = $('#returnBudgetComponentsIdHidden').val();
    var action = "doReturnBudgetComponents";
    var param = {action:action,bcid:bcid};
    var res = manageAjaxRequest(param);
    if (res != false) {
        notice1Sec(res, "green");
        $('#returnBudgetComponentsModal').modal('hide');
        $('#showBudgetComponentsFinalModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        showBudgetComponentsList();
    }
}

function attachFileToBudget(bid) {
    $("#attachmentFileToBudgetID").val(bid);
    $("#attachmentFileToBudgetName").val('');
    $("#attachmentFileToBudgetFile").val('');
    var res = Main.getAttachedBudgetFile(bid);
    $("#attachmentFileToBudget-body").html('');
    $("#attachmentFileToBudget-body").html(res);
    $('#attachmentFileToBudgetModal').modal('show');
}

function doAttachFileToBudget() {
    var bid = $('#attachmentFileToBudgetID').val();
    var bcid = $('#budegtDetailesSelect').val();
    var info = $('#attachmentFileToBudgetName').val();
    var formData = new FormData();
    if($('#attachmentFileToBudgetFile').val() != '' || $('#attachmentFileToBudgetFile')[0].files.length != 0){
        var fileSelect = document.getElementById('attachmentFileToBudgetFile');
        var files = fileSelect.files;
        if(!window.File && window.FileReader && window.FileList && window.Blob){ //if browser doesn't supports File API
            notice1Sec("Your browser does not support new File API! Please upgrade.","yellow");
            return false;
        }else {
            var total_selected_files = files.length;
            for (var x = 0; x < total_selected_files; x++) {
                formData.append("files[]",files[x]);
            }
        }
    }else {
        notice1Sec("هیچ فایلی انتخاب نشده است !","yellow");
        return false;
    }
    if(!parseInt((info.trim()).length)){
        notice1Sec("نام فایل مشخص نشده است !","yellow");
        return false;
    }
    if(!parseInt((bcid.trim()).length)){
        notice1Sec("جزییات بودجه مشخص نشده است !","yellow");
        return false;
    }
    formData.append("action","doAttachFileToBudget");
    formData.append("bid",bid);
    formData.append("bcid",bcid);
    formData.append("info",info);

    var xhr = new XMLHttpRequest();
    xhr.open('POST', 'php/managemantproccess.php',true);
    xhr.onload = function () {
        if (xhr.status === 200) {
            var res = JSON.parse(xhr.responseText);
            if(res['res'] == "false"){
                notice1Sec(res['data'],'yellow');
            }else{
                notice1Sec('بارگذاری انجام شد.', "green");
                var rst = Main.getAttachedBudgetFile(bid);
                $("#attachmentFileToBudget-body").html('');
                $("#attachmentFileToBudget-body").html(rst);
                $("#attachmentFileToBudgetName").val('');
                $("#attachmentFileToBudgetFile").val('');
            }
        }else{
            notice1Sec("خطایی رخ داده است !",'yellow');
        }
    };
    xhr.send(formData);
}

function deleteAttachBudgetFile(fid){
    var bid = $('#attachmentFileToBudgetID').val();
    var action = "deleteAttachBudgetFile";
    var param = {action:action,fid:fid};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res, "green");
        var rst = Main.getAttachedBudgetFile(bid);
        $("#attachmentFileToBudget-body").html('');
        $("#attachmentFileToBudget-body").html(rst);
    }
}

//******************** اجزای بودجه ********************

function showBudgetComponentsList(page) {
    if(typeof page == "undefined"){
        page = 1;
    }
    var action = "showBudgetComponentsList";
    var param = {action:action,page:page};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#budgetComponentsManageBody").html('');
        $("#budgetComponentsManageBody").html(res);
    }
}

function createBudgetComponents() {
    $('#budgetComponentsManageHiddenID').val('');
    $('#budgetComponentsManageYear').val(-1);
    $('#budgetComponentsManageName').val('');
    $('#budgetComponentsManageDescription').val('');
    $("#budgetComponentsManageYear").prop('disabled', false);
    $('#budgetComponentsManageModal').modal('show');
}

function editBudgetComponents() {
    var ch = $('#budgetComponentsManage-table').find('input');
    var bcid = new Array();
    for(var c=0;c<ch.length;c++){
        if(ch[c].checked){
            bcid[bcid.length] = ch[c].attributes.rid.value;
        }
    }
    if(bcid.length > 1){
        notice1Sec("فقط یک اجزای بودجه باید انتخاب شده باشد !","red");
        return false;
    }
    if(bcid.length==0){
        notice1Sec("هیچ اجزای بودجه ای انتخاب نشده است !","red");
        return false;
    }
    bcid = bcid[0];
    var res = Main.getBudgetComponentsInfo(bcid);
    if(res != false){
        $('#budgetComponentsManageModal').modal('show');
        $("#budgetComponentsManageHiddenID").val(res['bcid']);
        $("#budgetComponentsManageYear").val(res['budgetID']);
        $("#budgetComponentsManageName").val(res['Name']);
        $("#budgetComponentsManageDescription").val(res['description']);
        $("#budgetComponentsManageYear").prop('disabled', true);
    }
}

function doEditCreateBudgetComponents() {
    var bcid = $('#budgetComponentsManageHiddenID').val();
    var year = $('#budgetComponentsManageYear').val();
    var name = $('#budgetComponentsManageName').val();
    var desc = $('#budgetComponentsManageDescription').val();
    if (parseInt(year) == -1){
        notice1Sec("سال بودجه انتخاب نشده است !","yellow");
        return false;
    }
    if (!parseInt((name.trim()).length) ){
        notice1Sec("نام را ثبت نمایید !","yellow");
        return false;
    }
    var action = "doEditCreateBudgetComponents";
    var param = {action:action,bcid:bcid,desc:desc,year:year,name:name};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
        $('#budgetComponentsManageModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        showBudgetComponentsList();
    }
}

function createBudgetComponentsDetails(bcid) {
    $('#budgetComponentsDetailsHiddenBid').val(bcid);
    $('#budgetComponentsDetailsBrand').val(-1);
    $("#budgetComponentsDetailsGGroup").val(-1);
    $("#budgetComponentsDetailsSGroup").val(-1);
    $("#budgetComponentsDetailsSeries").val(-1);
    $("#budgetComponentsDetails-body").html('');
    $('#budgetComponentsDetailsModal').modal('show');
}

function doCreateBudgetComponentsDetails() {
    var ch = $('#budgetComponentsDetailsHtm-tableID').find('input:checked');
    var bccid = $("#budgetComponentsDetailsHiddenBid").val();
    if (parseInt(ch.length) == 0){
        notice1Sec("ابتدا جدول را ایجاد نمایید !","yellow");
        return false;
    }
    var information = new Array();
    for(var c=0;c<ch.length;c++){
        var grade = ch[c].attributes.rid.value;
        var farvardin = $("#budgetComponentsOne-"+grade).val();
        var ordibehesht = $("#budgetComponentsTwo-"+grade).val();
        var khordad = $("#budgetComponentsThree-"+grade).val();
        var tir = $("#budgetComponentsFour-"+grade).val();
        var mordad = $("#budgetComponentsFive-"+grade).val();
        var shahrivar = $("#budgetComponentsSix-"+grade).val();
        var mehr = $("#budgetComponentsSeven-"+grade).val();
        var aban = $("#budgetComponentsEight-"+grade).val();
        var azar = $("#budgetComponentsNine-"+grade).val();
        var dey = $("#budgetComponentsTen-"+grade).val();
        var bahman = $("#budgetComponentsEleven-"+grade).val();
        var esfand = $("#budgetComponentsTwelve-"+grade).val();
        if (!parseInt((farvardin.trim()).length) || !parseInt((ordibehesht.trim()).length) || !parseInt((khordad.trim()).length) || !parseInt((tir.trim()).length) || !parseInt((mordad.trim()).length) || !parseInt((shahrivar.trim()).length) || !parseInt((mehr.trim()).length) || !parseInt((aban.trim()).length) || !parseInt((azar.trim()).length) || !parseInt((dey.trim()).length) || !parseInt((bahman.trim()).length) || !parseInt((esfand.trim()).length) ){
            notice1Sec("یک یا چند مورد مشخص نشده است !","yellow");
            return false;
        }
        if (!$.isNumeric(farvardin) || !$.isNumeric(ordibehesht) || !$.isNumeric(khordad) || !$.isNumeric(tir) || !$.isNumeric(mordad) || !$.isNumeric(shahrivar) || !$.isNumeric(mehr) || !$.isNumeric(aban) || !$.isNumeric(azar) || !$.isNumeric(dey) || !$.isNumeric(bahman) || !$.isNumeric(esfand) ){
            notice1Sec("یک یا چند مورد عددی نیست !","yellow");
            return false;
        }
        var bcid = $("#bcid-"+grade+"-Hidden").val();
        information[information.length] = [farvardin,ordibehesht,khordad,tir,mordad,shahrivar,mehr,aban,azar,dey,bahman,esfand,bcid];
    }
    var myJsonString = JSON.stringify(information);
    var action = "doCreateBudgetComponentsDetails";
    var param = {action:action,myJsonString:myJsonString,bccid:bccid};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
        $('#budgetComponentsDetailsModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
    }
}

function getGoodsInThisGroup() {
    var bcid = $('#budgetComponentsDetailsHiddenBid').val();
    var brand = $('#budgetComponentsDetailsBrand').val();
    var ggroup = $("#budgetComponentsDetailsGGroup").val();
    var sgroup = $("#budgetComponentsDetailsSGroup").val();
    var Series = $("#budgetComponentsDetailsSeries").val();
    var action = "getGoodsInThisGroup";
    var param = {action:action,bcid:bcid,brand:brand,ggroup:ggroup,sgroup:sgroup,Series:Series};
    var res = manageAjaxRequest(param);
    if (res != false) {
        $("#budgetComponentsDetails-body").html('');
        $("#budgetComponentsDetails-body").html(res);
    }
}

function showBudgetComponentsDetails(bcid) {
    var action = "showBudgetComponentsDetails";
    var gCode = $("#budgetManageGCodeSearch").val();
    var gName = $("#budgetManageGNameSearch").val();
    var brand = $("#budgetManageBrandSearch").val();
    var ggroup = $("#budgetManageGGroupSearch").val();
    var sgroup = $("#budgetManageSGroupSearch").val();
    var series = $("#budgetManageSeriesSearch").val();
    $("#budgetComponentsManageHiddenBCID").val(bcid);
    var param = {action:action,bcid:bcid,gCode:gCode,gName:gName,brand:brand,ggroup:ggroup,sgroup:sgroup,series:series};
    var res = manageAjaxRequest(param);
    if(res != false) {
        $("#showBudgetComponentsDetails-body").html('');
        $("#showBudgetComponentsDetails-body").html(res);
        $("#budgetManageBcidHiddenSearch").val(bcid);
        $("#budgetManageGCodeHiddenSearch").val(gCode);
        $("#budgetManageGNameHiddenSearch").val(gName);
        $("#budgetManageBrandHiddenSearch").val(brand);
        $("#budgetManageGGroupHiddenSearch").val(ggroup);
        $("#budgetManageSGroupHiddenSearch").val(sgroup);
        $("#budgetManageSeriesHiddenSearch").val(series);
        $('#showBudgetComponentsDetailsModal').modal('show');
    }
}

function showBudgetComponentsDetails1(bcid,gCode,gName,brand,ggroup,sgroup,series) {
    var action = "showBudgetComponentsDetails";
    var param = {action:action,bcid:bcid,gCode:gCode,gName:gName,brand:brand,ggroup:ggroup,sgroup:sgroup,series:series};
    var res = manageAjaxRequest(param);
    if(res != false) {
        $("#showBudgetComponentsDetails-body").html('');
        $("#showBudgetComponentsDetails-body").html(res);
    }
}

function recordPlanningComment(bcdid) {
    var res = Main.getPlanningComment(bcdid);
    if (parseInt(res['planningTick']) == 2){
        $("input[name='budgetComponentsPlanningCommentType']").prop('checked',false);
        $("#budgetComponentsPlanningCommentDesc").val('');
        $("#budgetComponentsPlanningCommentWarning"+"-div").css("display", "none");
        $("#budgetComponentsPlanningCommentDesc"+"-div").css("display", "none");
    }else if (parseInt(res['planningTick']) == 0){
        $("input[name=budgetComponentsPlanningCommentType][value="+0+"]").prop('checked',true);
        $("#budgetComponentsPlanningCommentDesc").val(res['planningDescription']);
        $("#budgetComponentsPlanningCommentWarning"+"-div").css("display", "none");
        $("#budgetComponentsPlanningCommentDesc"+"-div").css("display", "");
    }else {
        $("input[name=budgetComponentsPlanningCommentType][value="+1+"]").prop('checked',true);
        $("#budgetComponentsPlanningCommentDesc").val('');
        $("#budgetComponentsPlanningCommentWarning"+"-div").css("display", "");
        $("#budgetComponentsPlanningCommentDesc"+"-div").css("display", "none");
    }
    $("#budgetComponentsPlanningCommentHiddenBcdid").val(bcdid);
    $('#budgetComponentsPlanningCommentModal').modal('show');
}

function doRecordPlanningComment() {
    var bcdid = $("#budgetComponentsPlanningCommentHiddenBcdid").val();
    var desc = $("#budgetComponentsPlanningCommentDesc").val();
    var radioValue = $("input[name='budgetComponentsPlanningCommentType']:checked").val();
    if(typeof radioValue == "undefined"){
        notice1Sec("تایید یا عدم تایید را انتخاب نمایید !","yellow");
        return false;
    }
    if (parseInt(radioValue) == 0 && !parseInt((desc.trim()).length) ){
        notice1Sec("نظرات خود را ثبت نمایید !","yellow");
        return false;
    }
    var action = "doRecordPlanningComment";
    var param = {action:action,bcdid:bcdid,desc:desc,radioValue:radioValue};
    var res = manageAjaxRequest(param);
    if (res != false) {
        notice1Sec(res, "green");
        var bcid = $("#budgetManageBcidHiddenSearch").val();
        var gCode = $("#budgetManageGCodeHiddenSearch").val();
        var gName = $("#budgetManageGNameHiddenSearch").val();
        var brand = $("#budgetManageBrandHiddenSearch").val();
        var ggroup = $("#budgetManageGGroupHiddenSearch").val();
        var sgroup = $("#budgetManageSGroupHiddenSearch").val();
        var series = $("#budgetManageSeriesHiddenSearch").val();
        $('#budgetComponentsPlanningCommentModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        showBudgetComponentsDetails1(bcid,gCode,gName,brand,ggroup,sgroup,series);
    }
}

function recordProductionComment(bcdid) {
    var res = Main.getProductionComment(bcdid);
    if (parseInt(res['productionTick']) == 2){
        $("input[name='budgetComponentsProductionCommentType']").prop('checked',false);
        $("#budgetComponentsProductionCommentDesc").val('');
        $("#budgetComponentsProductionCommentWarning"+"-div").css("display", "none");
        $("#budgetComponentsProductionCommentDesc"+"-div").css("display", "none");
    }else if (parseInt(res['productionTick']) == 0){
        $("input[name=budgetComponentsProductionCommentType][value="+0+"]").prop('checked',true);
        $("#budgetComponentsProductionCommentDesc").val(res['productionDescription']);
        $("#budgetComponentsProductionCommentWarning"+"-div").css("display", "none");
        $("#budgetComponentsProductionCommentDesc"+"-div").css("display", "");
    }else {
        $("input[name=budgetComponentsProductionCommentType][value="+1+"]").prop('checked',true);
        $("#budgetComponentsProductionCommentDesc").val('');
        $("#budgetComponentsProductionCommentWarning"+"-div").css("display", "");
        $("#budgetComponentsProductionCommentDesc"+"-div").css("display", "none");
    }
    $("#budgetComponentsProductionCommentHiddenBcdid").val(bcdid);
    $('#budgetComponentsProductionCommentModal').modal('show');
}

function doRecordProductionComment() {
    var bcdid = $("#budgetComponentsProductionCommentHiddenBcdid").val();
    var desc = $("#budgetComponentsProductionCommentDesc").val();
    var radioValue = $("input[name='budgetComponentsProductionCommentType']:checked").val();
    if(typeof radioValue == "undefined"){
        notice1Sec("تایید یا عدم تایید را انتخاب نمایید !","yellow");
        return false;
    }
    if (parseInt(radioValue) == 0 && !parseInt((desc.trim()).length) ){
        notice1Sec("نظرات خود را ثبت نمایید !","yellow");
        return false;
    }
    var action = "doRecordProductionComment";
    var param = {action:action,bcdid:bcdid,desc:desc,radioValue:radioValue};
    var res = manageAjaxRequest(param);
    if (res != false) {
        notice1Sec(res, "green");
        var bcid = $("#budgetManageBcidHiddenSearch").val();
        var gCode = $("#budgetManageGCodeHiddenSearch").val();
        var gName = $("#budgetManageGNameHiddenSearch").val();
        var brand = $("#budgetManageBrandHiddenSearch").val();
        var ggroup = $("#budgetManageGGroupHiddenSearch").val();
        var sgroup = $("#budgetManageSGroupHiddenSearch").val();
        var series = $("#budgetManageSeriesHiddenSearch").val();
        $('#budgetComponentsProductionCommentModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        showBudgetComponentsDetails1(bcid,gCode,gName,brand,ggroup,sgroup,series);
    }
}

function allTickBudgetComponentDetails(){
    $('#allTickBudgetComponentDetailsModal').modal('show');
}

function doAllTickBudgetComponentDetails() {
    var bcid = $("#budgetComponentsManageHiddenBCID").val();
    var action = "doAllTickBudgetComponentDetails";
    var param = {action:action,bcid:bcid};
    var res = manageAjaxRequest(param);
    if (res != false) {
        notice1Sec(res, "green");
        $('#allTickBudgetComponentDetailsModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        showBudgetComponentsDetails(bcid);
    }
}

function sendBudget() {
    var ch = $('#budgetComponentsManage-table').find('input');
    var bcid = new Array();
    for(var c=0;c<ch.length;c++){
        if(ch[c].checked){
            bcid[bcid.length] = ch[c].attributes.rid.value;
        }
    }
    if(bcid.length > 1){
        notice1Sec("فقط یک اجزای بودجه باید انتخاب شده باشد !","red");
        return false;
    }
    if(bcid.length==0){
        notice1Sec("هیچ اجزای بودجه ای انتخاب نشده است !","red");
        return false;
    }
    bcid = bcid[0];
    var res = ShowWorkflowBudget(bcid);
    $("#sendBudgetModal-body").html('');
    $("#sendBudgetModal-body").html(res);
    $("#sendBudgetHiddenBcid").val(bcid);
    $("#sendBudgetDesc").val('');
    $('#sendBudgetModal').modal('show');
}

function doSendBudget() {
    var bcid = $("#sendBudgetHiddenBcid").val();
    var desc = $("#sendBudgetDesc").val();
    var action = "doSendBudget";
    var param = {action:action,bcid:bcid,desc:desc};
    var res = manageAjaxRequest(param);
    if (res != false) {
        notice1Sec(res, "green");
        $('#sendBudgetModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        showBudgetComponentsList();
    }
}

function ShowWorkflowBudget(bcid) {
    var action = "ShowWorkflowBudget";
    var param = {action:action,bcid:bcid};
    var res = manageAjaxRequest(param);
    if(res != false){
        return res;
    }
}

function showBudgetWorkflow(bcid) {
    var res = ShowWorkflowBudget(bcid);
    $("#showBudgetWorkflow-body").html('');
    $("#showBudgetWorkflow-body").html(res);
    $('#showBudgetWorkflowModal').modal('show');
}

function finalTickBudgetComponents(bcid) {
    $("#budgetComponentsFinalTickIdHidden").val(bcid);
    $('#budgetComponentsFinalTickModal').modal('show');
}

function doFinalTickBudgetComponents() {
    var bcid = $("#budgetComponentsFinalTickIdHidden").val();
    var action = "doFinalTickBudgetComponents";
    var param = {action:action,bcid:bcid};
    var res = manageAjaxRequest(param);
    if (res != false) {
        notice1Sec(res, "green");
        $('#budgetComponentsFinalTickModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        showBudgetComponentsList();
    }
}

function editBudgetComponentDetails(bcdid) {
    var action = "editBudgetComponentDetails";
    var param = {action:action,bcdid:bcdid};
    var res = manageAjaxRequest(param);
    if (res != false) {
        $("#budgetComponentDetailsEdit-body").html('');
        $("#budgetComponentDetailsEdit-body").html(res);
        $('#budgetComponentDetailsEditHiddenBcdId').val(bcdid);
        $('#budgetComponentDetailsEditModal').modal('show');
    }
}

function doEditBudgetComponentDetails() {
    var bcdid = $('#budgetComponentDetailsEditHiddenBcdId').val();
    var farvardin = $("#editBudgetComponentsOne").val();
    var ordibehesht = $("#editBudgetComponentsTwo").val();
    var khordad = $("#editBudgetComponentsThree").val();
    var tir = $("#editBudgetComponentsFour").val();
    var mordad = $("#editBudgetComponentsFive").val();
    var shahrivar = $("#editBudgetComponentsSix").val();
    var mehr = $("#editBudgetComponentsSeven").val();
    var aban = $("#editBudgetComponentsEight").val();
    var azar = $("#editBudgetComponentsNine").val();
    var dey = $("#editBudgetComponentsTen").val();
    var bahman = $("#editBudgetComponentsEleven").val();
    var esfand = $("#editBudgetComponentsTwelve").val();
    if (!parseInt((farvardin.trim()).length) || !parseInt((ordibehesht.trim()).length) || !parseInt((khordad.trim()).length) || !parseInt((tir.trim()).length) || !parseInt((mordad.trim()).length) || !parseInt((shahrivar.trim()).length) || !parseInt((mehr.trim()).length) || !parseInt((aban.trim()).length) || !parseInt((azar.trim()).length) || !parseInt((dey.trim()).length) || !parseInt((bahman.trim()).length) || !parseInt((esfand.trim()).length) ){
        notice1Sec("یک یا چند مورد مشخص نشده است !","yellow");
        return false;
    }
    if (!$.isNumeric(farvardin) || !$.isNumeric(ordibehesht) || !$.isNumeric(khordad) || !$.isNumeric(tir) || !$.isNumeric(mordad) || !$.isNumeric(shahrivar) || !$.isNumeric(mehr) || !$.isNumeric(aban) || !$.isNumeric(azar) || !$.isNumeric(dey) || !$.isNumeric(bahman) || !$.isNumeric(esfand) ){
        notice1Sec("یک یا چند مورد عددی نیست !","yellow");
        return false;
    }

    var action = "doEditBudgetComponentDetails";
    var param = {action:action,bcdid:bcdid,farvardin:farvardin,ordibehesht:ordibehesht,khordad:khordad,tir:tir,mordad:mordad,shahrivar:shahrivar,mehr:mehr,aban:aban,azar:azar,dey:dey,bahman:bahman,esfand:esfand};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res, "green");
        var bcid = $("#budgetManageBcidHiddenSearch").val();
        var gCode = $("#budgetManageGCodeHiddenSearch").val();
        var gName = $("#budgetManageGNameHiddenSearch").val();
        var brand = $("#budgetManageBrandHiddenSearch").val();
        var ggroup = $("#budgetManageGGroupHiddenSearch").val();
        var sgroup = $("#budgetManageSGroupHiddenSearch").val();
        var series = $("#budgetManageSeriesHiddenSearch").val();
        $('#budgetComponentDetailsEditModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        showBudgetComponentsDetails1(bcid,gCode,gName,brand,ggroup,sgroup,series);
    }
}

function createBudgetComponentsDetailsExcel() {
    $("#budgetComponentsDetailsExcelYear").val(0);
    $('#budgetComponentsDetailsExcelModal').modal('show');
}

function doCreateBudgetComponentsDetailsExcel() {
    var bid = $("#budgetComponentsDetailsExcelYear").val();
    if (parseInt(bid) == 0){
        notice1Sec("ابتدا سال بودجه را انتخاب نمایید !","yellow");
        return false;
    }
    var action = "doCreateBudgetComponentsDetailsExcel";
    var param = {action:action,bid:bid};
    var res = manageAjaxRequest(param);
    if(res != false){
        window.open(res);
    }
}

function replaceNewBudget() {
    var action = "replaceNewBudget";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    if (res != false) {
        notice1Sec(res, "green");
    }
}

//******************** قیمت بودجه ********************

function showBudgetPriceManageList(page) {
    if(typeof page == "undefined"){
        page = 1;
    }
    var year = $("#budgetPriceManageYearSearch").val();
    var component = $("#budgetPriceManageComponentSearch").val();
    var component = component.join(",");
    var eCode = $("#budgetPriceManageECodeSearch").val();
    var gCode = $("#budgetPriceManageGCodeSearch").val();
    var brand = $("#budgetPriceManageBrandSearch").val();
    var group = $("#budgetPriceManageGroupSearch").val();
    if (parseInt(year) == -1){
        notice1Sec("ابتدا سال بودجه را انتخاب نمایید !","yellow");
        return false;
    }
    if (!parseInt((component.trim()).length)){
        component = -1;
    }
    var action = "showBudgetPriceManageList";
    var param = {action:action,year:year,component:component,eCode:eCode,gCode:gCode,brand:brand,group:group,page:page};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#budgetPriceManageBody").html('');
        $("#budgetPriceManageBody").html(res);
    }
}

function showBudgetPriceDetails(bcdid,month) {
    var action = "showBudgetPriceDetails";
    var param = {action:action,bcdid:bcdid,month:month};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#showBudgetPriceDetails-body").html('');
        $("#showBudgetPriceDetails-body").html(res);
        $('#showBudgetPriceDetailsModal').modal('show');
    }
}

function getYearBudgetComponents10() {
    var year = $('#budgetPriceManageYearSearch').val();
    var data = Main.yearBudgetComponents(year);
    $("#budgetPriceManageComponentSearch").find('option').remove();
    for(var e=0;e<data.length;e++){
        $("#budgetPriceManageComponentSearch").append('<option value="'+data[e]['RowID']+'">'+data[e]['gName']+'</option>');
    }
    $("#budgetPriceManageComponentSearch").selectpicker('refresh');
}

function getBudgetPriceManageExcel() {
    $("#budgetPriceManageExcelYear").val(0);
    $('#budgetPriceManageExcelModal').modal('show');
    var action = "getBudgetPriceManageExcel";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    if(res != false){
        window.open(res);
    }
}

function doGetBudgetPriceManageExcel() {
    var bid = $("#budgetPriceManageExcelYear").val();
    if (parseInt(bid) == 0){
        notice1Sec("ابتدا سال بودجه را انتخاب نمایید !","yellow");
        return false;
    }
    var action = "doGetBudgetPriceManageExcel";
    var param = {action:action,bid:bid};
    var res = manageAjaxRequest(param);
    if(res != false){
        window.open(res);
    }
}

//*************************************************************************************************************************************************************************************
//*************************************************************************************************************************************************************************************

//++++++++++++++++++++++ مدیریت بودجه نهایی +++++++++++++++++++++++

function finalBudgetManagement() {
    var action = "finalBudgetManagement";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    if(res != false) {
        $("#finalBudgetManagementID").html('');
        $("#finalBudgetManagementID").html(res[0]);
        if(jQuery.inArray(1, res[1]) !== -1) {
            $("#finalBudgetManageComponentSearch").selectpicker();
        }
        if(jQuery.inArray(2, res[1]) !== -1) {
            $(document).ready(function(){
                $("input[type='radio']").click(function(){
                    var radioValue = $("input[name='outProgramBudgetCommentType']:checked").val();
                    if (parseInt(radioValue) == 0){  // عدم تایید
                        $("#outProgramBudgetCommentDesc"+"-div").css("display", "");
                        $("#outProgramBudgetCommentWarning"+"-div").css("display", "none");
                    }else {
                        $("#outProgramBudgetCommentDesc").val('');
                        $("#outProgramBudgetCommentDesc"+"-div").css("display", "none");
                        $("#outProgramBudgetCommentWarning"+"-div").css("display", "");
                    }
                });
            });
            $("#createOutProgramBudgetComponents").selectpicker();
            $("#outProgramBudgetComponentSearch").selectpicker();
            $('#createOutProgramBudgetNDate').MdPersianDateTimePicker({
                targetTextSelector: '#createOutProgramBudgetNDate'
            });
            $('#createOutProgramBudgetSDate').MdPersianDateTimePicker({
                targetTextSelector: '#createOutProgramBudgetSDate'
            });
            showOutProgramBudgetList();
        }
        if(jQuery.inArray(3, res[1]) !== -1) {
            $(document).ready(function(){
                $("input[type='radio']").click(function(){
                    var radioValue = $("input[name='displacementBudgetCommentType']:checked").val();
                    if (parseInt(radioValue) == 0){  // عدم تایید
                        $("#displacementBudgetCommentDesc"+"-div").css("display", "");
                        $("#displacementBudgetCommentWarning"+"-div").css("display", "none");
                    }else {
                        $("#displacementBudgetCommentDesc").val('');
                        $("#displacementBudgetCommentDesc"+"-div").css("display", "none");
                        $("#displacementBudgetCommentWarning"+"-div").css("display", "");
                    }
                });
            });
            $("#createDisplacementBudgetComponents").selectpicker();
            $("#displacementBudgetComponentSearch").selectpicker();
            showDisplacementBudgetList();
        }
        if(jQuery.inArray(4, res[1]) !== -1) {
            $(document).ready(function(){
                $("input[type='radio']").click(function(){
                    var radioValue = $("input[name='delayBudgetCommentType']:checked").val();
                    if (parseInt(radioValue) == 0){  // عدم تایید
                        $("#delayBudgetCommentDesc"+"-div").css("display", "");
                        $("#delayBudgetCommentWarning"+"-div").css("display", "none");
                    }else {
                        $("#delayBudgetCommentDesc").val('');
                        $("#delayBudgetCommentDesc"+"-div").css("display", "none");
                        $("#delayBudgetCommentWarning"+"-div").css("display", "");
                    }
                });
            });
            $("#createDelayBudgetComponents").selectpicker();
            $("#delayBudgetComponentSearch").selectpicker();
            showDelayBudgetList();
        }
        if(jQuery.inArray(5, res[1]) !== -1) {
            $(document).ready(function(){
                $("input[type='radio']").click(function(){
                    var radioValue = $("input[name='amendmentBudgetCommentType']:checked").val();
                    if (parseInt(radioValue) == 0){  // عدم تایید
                        $("#amendmentBudgetCommentDesc"+"-div").css("display", "");
                        $("#amendmentBudgetCommentWarning"+"-div").css("display", "none");
                    }else {
                        $("#amendmentBudgetCommentDesc").val('');
                        $("#amendmentBudgetCommentDesc"+"-div").css("display", "none");
                        $("#amendmentBudgetCommentWarning"+"-div").css("display", "");
                    }
                });
            });
            $("#createAmendmentBudgetComponents").selectpicker();
            $("#amendmentBudgetComponentSearch").selectpicker();
            $('#createAmendmentBudgetADate').MdPersianDateTimePicker({
                targetTextSelector: '#createAmendmentBudgetADate',
                disableBeforeDate: new Date(),
                disableAfterDate: new Date(),
            });
            showAmendmentBudgetList();
        }
    }
}

//******************** بودجه نهایی پس از اعمال تغییرات ********************


function showFinalBudgetManagementList(page) {
    if(typeof page == "undefined"){
        page = 1;
    }
    var year = $("#finalBudgetManageYearSearch").val();
    var component = $("#finalBudgetManageComponentSearch").val();
    var component = component.join(",");
    if (!parseInt((component.trim()).length)){
        component = -1;
    }
    if (parseInt(year) == -1){
        notice1Sec("سال بودجه انتخاب نشده است !","yellow");
        return false;
    }
    var gCode = $("#finalBudgetManageGCodeSearch").val();
    var action = "showFinalBudgetManagementList";
    var param = {action:action,year:year,component:component,gCode:gCode,page:page};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#finalBudgetManagementBody").html('');
        $("#finalBudgetManagementBody").html(res);
    }
}

function getYearBudgetComponents8() {
    var year = $('#finalBudgetManageYearSearch').val();
    var data = Main.yearBudgetComponents(year);
    $("#finalBudgetManageComponentSearch").find('option').remove();
    for(var e=0;e<data.length;e++){
        $("#finalBudgetManageComponentSearch").append('<option value="'+data[e]['RowID']+'">'+data[e]['gName']+'</option>');
    }
    $("#finalBudgetManageComponentSearch").selectpicker('refresh');
}

function showDetailsOfFinalBudget(bcdid,month) {
    var action = "showDetailsOfFinalBudget";
    var param = {action:action,bcdid:bcdid,month:month};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#showDetailsOfFinalBudget-body").html('');
        $("#showDetailsOfFinalBudget-body").html(res[0]);
        $("#showDetailsOfFinalBudgetModal-title").html('');
        $("#showDetailsOfFinalBudgetModal-title").html(res[1]);
        $('#showDetailsOfFinalBudgetModal').modal('show');
    }
}

function getFinalBudgetManageExcel() {
    $("#finalBudgetManageExcelYear").val(0);
    $('#finalBudgetManageExcelModal').modal('show');
}

function doGetFinalBudgetManageExcel() {
    var bid = $("#finalBudgetManageExcelYear").val();
    if (parseInt(bid) == 0){
        notice1Sec("ابتدا سال بودجه را انتخاب نمایید !","yellow");
        return false;
    }
    var action = "doGetFinalBudgetManageExcel";
    var param = {action:action,bid:bid};
    var res = manageAjaxRequest(param);
    if(res != false){
        window.open(res);
    }
}

function getFinalBudgetNumberExcel() {
    $("#finalBudgetNumberExcelYear").val(0);
    $('#finalBudgetNumberExcelModal').modal('show');
}

function doGetFinalBudgetNumberExcel() {
    var bid = $("#finalBudgetNumberExcelYear").val();
    if (parseInt(bid) == 0){
        notice1Sec("ابتدا سال بودجه را انتخاب نمایید !","yellow");
        return false;
    }
    var action = "doGetFinalBudgetNumberExcel";
    var param = {action:action,bid:bid};
    var res = manageAjaxRequest(param);
    if(res != false){
        window.open(res);
    }
}

//******************** بودجه خارج از برنامه ********************

function showOutProgramBudgetList(page) {
    if(typeof page == "undefined"){
        page = 1;
    }
    var year = $("#outProgramBudgetYearSearch").val();
    var hcode = $("#outProgramBudgetHCodeSearch").val();
    var component = $("#outProgramBudgetComponentSearch").val();
    var component = component.join(",");
    var month = $("#outProgramBudgetMonthSearch").val();
    var finalTick = $("#outProgramBudgetFinalTickSearch").val();
    if (!parseInt((component.trim()).length)){
        component = -1;
    }
    var action = "showOutProgramBudgetList";
    var param = {action:action,year:year,component:component,month:month,hcode:hcode,finalTick:finalTick,page:page};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#outProgramBudgetManageBody").html('');
        $("#outProgramBudgetManageBody").html(res);
    }
}

function createOutProgramBudget() {
    $('#outProgramBudgetHiddenOpbid').val('');
    $('#createOutProgramBudgetYear').val(-1);
    $('#createOutProgramBudgetMonth').val(-1);
    $("#createOutProgramBudgetComponents").find('option').remove();
    $("#createOutProgramBudgetComponents").selectpicker('refresh');
    $('#createOutProgramBudgetHCode').val('');
    $('#createOutProgramBudgetNumber').val('');
    $('#createOutProgramBudgetCName').val('');
    $('#createOutProgramBudgetNDate').val('');
    $('#createOutProgramBudgetSDate').val('');
    $('#createOutProgramBudgetDesc').val('');
    $('#createOutProgramBudgetModal').modal('show');
}

function editOutProgramBudget(opbID) {
    var res = Main.getOutProgramBudgetInfo(opbID);
    if(res != false){
        $('#createOutProgramBudgetModal').modal('show');
        $("#outProgramBudgetHiddenOpbid").val(res['opbID']);
        $("#createOutProgramBudgetYear").val(res['bid']);
        getYearBudgetComponents();
        $("#createOutProgramBudgetComponents").val(res['bcdid']);
        $("#createOutProgramBudgetComponents").selectpicker('refresh');
        $("#createOutProgramBudgetMonth").val(res['month']);
        $("#createOutProgramBudgetHCode").val(res['HCode']);
        $("#createOutProgramBudgetNumber").val(res['number']);
        $("#createOutProgramBudgetCName").val(res['customerName']);
        $("#createOutProgramBudgetNDate").val(res['nDate']);
        $("#createOutProgramBudgetSDate").val(res['sDate']);
        $("#createOutProgramBudgetDesc").val(res['description']);
    }
}

function doEditCreateOutProgramBudget() {
    var opbid = $('#outProgramBudgetHiddenOpbid').val();
    var year = $('#createOutProgramBudgetYear').val();
    var month = $('#createOutProgramBudgetMonth').val();
    var num = $('#createOutProgramBudgetNumber').val();
    var cName = $('#createOutProgramBudgetCName').val();
    var nDate = $('#createOutProgramBudgetNDate').val();
    var sDate = $('#createOutProgramBudgetSDate').val();
    var desc = $('#createOutProgramBudgetDesc').val();
    var components = $('#createOutProgramBudgetComponents').val();
    var components = components.join(",");
    if (parseInt(year) == -1){
        notice1Sec("سال بودجه انتخاب نشده است !","yellow");
        return false;
    }
    if (parseInt(month) == -1){
        notice1Sec("ماه بودجه انتخاب نشده است !","yellow");
        return false;
    }
    if(!parseInt((num.trim()).length) || !$.isNumeric(num)){
        notice1Sec("مقدار وارد شده عددی نیست یا مشخص نشده است !","yellow");
        return false;
    }
    if (!parseInt((components.trim()).length)){
        notice1Sec("محصول انتخاب نشده است !","yellow");
        return false;
    }
    var action = "doEditCreateOutProgramBudget";
    var param = {action:action,opbid:opbid,year:year,month:month,components:components,num:num,cName:cName,nDate:nDate,sDate:sDate,desc:desc};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
        $('#createOutProgramBudgetMonth').val(-1);
        $("#createOutProgramBudgetComponents").selectpicker('deselectAll');
        $("#createOutProgramBudgetComponents").selectpicker('refresh');
        $('#createOutProgramBudgetHCode').val('');
        $('#createOutProgramBudgetNumber').val('');
        $('#createOutProgramBudgetCName').val('');
        $('#createOutProgramBudgetNDate').val('');
        $('#createOutProgramBudgetSDate').val('');
        $('#createOutProgramBudgetDesc').val('');
        showOutProgramBudgetList();
    }
}

function getYearBudgetComponents() {
    var bid = $('#createOutProgramBudgetYear').val();
    var data = Main.yearBudgetComponents(bid);
    $("#createOutProgramBudgetComponents").find('option').remove();
    for(var e=0;e<data.length;e++){
        $("#createOutProgramBudgetComponents").append('<option value="'+data[e]['RowID']+'">'+data[e]['gName']+'</option>');
    }
    $("#createOutProgramBudgetComponents").selectpicker('refresh');
}

function getYearBudgetComponents1() {
    var bid = $('#outProgramBudgetYearSearch').val();
    var data = Main.yearBudgetComponents(bid);
    $("#outProgramBudgetComponentSearch").find('option').remove();
    for(var e=0;e<data.length;e++){
        $("#outProgramBudgetComponentSearch").append('<option value="'+data[e]['RowID']+'">'+data[e]['gName']+'</option>');
    }
    $("#outProgramBudgetComponentSearch").selectpicker('refresh');
}

function recordOutProgramBudgetComment(opbid) {
    var res = Main.getOutProgramBudgetComment(opbid);
    $("#outProgramBudgetComment-body").html('');
    $("#outProgramBudgetComment-body").html(res);
    $("input[name='outProgramBudgetCommentType']").prop('checked',false);
    $("#outProgramBudgetCommentWarning"+"-div").css("display", "none");
    $("#outProgramBudgetCommentDesc"+"-div").css("display", "none");
    $("#outProgramBudgetCommentDesc").val('');
    $("#outProgramBudgetCommentHiddenOpbid").val(opbid);
    $('#outProgramBudgetCommentModal').modal('show');
}

function doRecordOutProgramBudgetComment() {
    var opbid = $("#outProgramBudgetCommentHiddenOpbid").val();
    var desc = $("#outProgramBudgetCommentDesc").val();
    var radioValue = $("input[name='outProgramBudgetCommentType']:checked").val();
    if(typeof radioValue == "undefined"){
        notice1Sec("تایید یا عدم تایید را انتخاب نمایید !","yellow");
        return false;
    }
    if (parseInt(radioValue) == 0 && !parseInt((desc.trim()).length) ){
        notice1Sec("نظرات خود را ثبت نمایید !","yellow");
        return false;
    }
    var action = "doRecordOutProgramBudgetComment";
    var param = {action:action,opbid:opbid,desc:desc,radioValue:radioValue};
    var res = manageAjaxRequest(param);
    if (res != false) {
        notice1Sec(res, "green");
        $("input[name='outProgramBudgetCommentType']").prop('checked',false);
        $("#outProgramBudgetCommentWarning"+"-div").css("display", "none");
        $("#outProgramBudgetCommentDesc"+"-div").css("display", "none");
        $("#outProgramBudgetCommentDesc").val('');
        recordOutProgramBudgetComment(opbid);
    }
}

function sendOutProgramBudget() {
    var ch = $('#outProgramBudget-table').find('input');
    var opbid = new Array();
    for(var c=0;c<ch.length;c++){
        if(ch[c].checked){
            opbid[opbid.length] = ch[c].attributes.rid.value;
        }
    }
    if(opbid.length > 1){
        notice1Sec("فقط یک بودجه خارج از برنامه باید انتخاب شده باشد !","red");
        return false;
    }
    if(opbid.length==0){
        notice1Sec("هیچ بودجه خارج از برنامه ای انتخاب نشده است !","red");
        return false;
    }
    opbid = opbid[0];
    var res = ShowWorkflowOutProgramBudget(opbid);
    $("#sendOutProgramBudgetModal-body").html('');
    $("#sendOutProgramBudgetModal-body").html(res);
    $("#sendOutProgramBudgetHiddenOpbid").val(opbid);
    $("#sendOutProgramBudgetDesc").val('');
    $('#sendOutProgramBudgetModal').modal('show');
}

function doSendOutProgramBudget() {
    var opbid = $("#sendOutProgramBudgetHiddenOpbid").val();
    var desc = $("#sendOutProgramBudgetDesc").val();
    var action = "doSendOutProgramBudget";
    var param = {action:action,opbid:opbid,desc:desc};
    var res = manageAjaxRequest(param);
    if (res != false) {
        notice1Sec(res, "green");
        $('#sendOutProgramBudgetModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        showOutProgramBudgetList();
    }
}

function showOutProgramBudgetInfo(opbid) {
    var action = "showOutProgramBudgetInfo";
    var param = {action:action,opbid:opbid};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#showOutProgramBudgetInfo-body").html('');
        $("#showOutProgramBudgetInfo-body").html(res);
        $('#showOutProgramBudgetInfoModal').modal('show');
    }
}

function ShowWorkflowOutProgramBudget(opbid) {
    var action = "ShowWorkflowOutProgramBudget";
    var param = {action:action,opbid:opbid};
    var res = manageAjaxRequest(param);
    if(res != false){
        return res;
    }
}

function showOutProgramBudgetWorkflow(opbid) {
    var res = ShowWorkflowOutProgramBudget(opbid);
    $("#showOutProgramBudgetWorkflow-body").html('');
    $("#showOutProgramBudgetWorkflow-body").html(res);
    $('#showOutProgramBudgetWorkflowModal').modal('show');
}

function finalTickOutProgramBudget(opbid) {
    $("#outProgramBudgetFinalTickIdHidden").val(opbid);
    $('#outProgramBudgetFinalTickModal').modal('show');
}

function doFinalTickOutProgramBudget() {
    var opbid = $("#outProgramBudgetFinalTickIdHidden").val();
    var action = "doFinalTickOutProgramBudget";
    var param = {action:action,opbid:opbid};
    var res = manageAjaxRequest(param);
    if (res != false) {
        notice1Sec(res, "green");
        $('#outProgramBudgetFinalTickModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        showOutProgramBudgetList();
    }
}

function getOutProgramHCodeWithName() {
    var components = $('#createOutProgramBudgetComponents').val();
    var components = components.join(",");
    var action = "getOutProgramHCodeWithName";
    var param = {action:action,components:components};
    var res = manageAjaxRequest(param);
    if(res != false){
        $('#createOutProgramBudgetHCode').val('');
        $('#createOutProgramBudgetHCode').val(res);
    }
}

function getOutProgramProductNameWithHcode() {
    var bid = $('#createOutProgramBudgetYear').val();
    var hcode = $('#createOutProgramBudgetHCode').val();
    var action = "getOutProgramProductNameWithHcode";
    var param = {action:action,bid:bid,hcode:hcode};
    var res = manageAjaxRequest(param);
    if (parseInt(res) == 0){
        $("#createOutProgramBudgetComponents").selectpicker('deselectAll');
    }else {
        $('#createOutProgramBudgetComponents').val(res);
    }
    $("#createOutProgramBudgetComponents").selectpicker('refresh');
}

function emptyOutProgramBudgetHCodeSearch() {
    $('#outProgramBudgetHCodeSearch').val('');
}

function emptyOutProgramBudgetComponentSearch() {
    $("#outProgramBudgetComponentSearch").selectpicker('deselectAll');
    $("#outProgramBudgetComponentSearch").selectpicker('refresh');
}

//******************** مجوز جابجایی بودجه ********************

function showDisplacementBudgetList(page) {
    if(typeof page == "undefined"){
        page = 1;
    }
    var year = $("#displacementBudgetYearSearch").val();
    var hcode = $("#displacementBudgetHCodeSearch").val();
    var component = $("#displacementBudgetComponentSearch").val();
    var component = component.join(",");
    var month = $("#displacementBudgetMonthSearch").val();
    var finalTick = $("#displacementBudgetFinalTickSearch").val();
    if (!parseInt((component.trim()).length)){
        component = -1;
    }
    var action = "showDisplacementBudgetList";
    var param = {action:action,year:year,component:component,month:month,hcode:hcode,finalTick:finalTick,page:page};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#displacementBudgetManageBody").html('');
        $("#displacementBudgetManageBody").html(res);
    }
}  //

function createDisplacementBudget() {
    $('#displacementBudgetHiddenDbid').val('');
    $('#createDisplacementBudgetYear').val(-1);
    $('#createDisplacementBudgetToYear').val(-1);
    $("#createDisplacementBudgetMonth").find('option').remove();
    $("#createDisplacementBudgetToMonth").find('option').remove();
    $("#createDisplacementBudgetComponents").find('option').remove();
    $("#createDisplacementBudgetComponents").selectpicker('refresh');
    $('#createDisplacementBudgetHCode').val('');
    $('#createDisplacementBudgetNumber').val('');
    $('#createDisplacementBudgetDesc').val('');
    $('#displacementBudgetTotalInMonth').val('');
    $('#createDisplacementBudgetModal').modal('show');
}  //

function editDisplacementBudget(dbID) {
    var res = Main.getDisplacementBudgetInfo(dbID);
    if(res != false){
        $('#createDisplacementBudgetModal').modal('show');
        $("#displacementBudgetHiddenDbid").val(res['dbID']);
        $("#createDisplacementBudgetYear").val(res['fromYear']);
        getYearBudgetComponents3();
        $("#createDisplacementBudgetComponents").val(res['bcdid']);
        $("#createDisplacementBudgetComponents").selectpicker('refresh');
        $("#createDisplacementBudgetMonth").val(res['fromMonth']);
        $("#createDisplacementBudgetToYear").val(res['toYear']);
        getMonthOfThisYear();
        $("#createDisplacementBudgetToMonth").val(res['toMonth']);
        $("#createDisplacementBudgetHCode").val(res['HCode']);
        $("#createDisplacementBudgetNumber").val(res['number']);
        $("#createDisplacementBudgetDesc").val(res['description']);
        getTotalNumberInMonth();
    }
}

function doEditCreateDisplacementBudget() {
    var dbid = $('#displacementBudgetHiddenDbid').val();
    var year = $('#createDisplacementBudgetYear').val();
    var toyear = $('#createDisplacementBudgetToYear').val();
    var month = $('#createDisplacementBudgetMonth').val();
    var tomonth = $('#createDisplacementBudgetToMonth').val();
    var num = $('#createDisplacementBudgetNumber').val();
    var desc = $('#createDisplacementBudgetDesc').val();
    var components = $('#createDisplacementBudgetComponents').val();
    var components = components.join(",");
    if (parseInt(year) == -1){
        notice1Sec("سال بودجه انتخاب نشده است !","yellow");
        return false;
    }
    if (parseInt(month) == -1){
        notice1Sec("از ماه بودجه انتخاب نشده است !","yellow");
        return false;
    }
    if (parseInt(tomonth) == -1){
        notice1Sec("به ماه بودجه انتخاب نشده است !","yellow");
        return false;
    }
    if(!parseInt((num.trim()).length) || !$.isNumeric(num)){
        notice1Sec("مقدار وارد شده عددی نیست یا مشخص نشده است !","yellow");
        return false;
    }
    if (!parseInt((components.trim()).length)){
        notice1Sec("محصول انتخاب نشده است !","yellow");
        return false;
    }
    var action = "doEditCreateDisplacementBudget";
    var param = {action:action,dbid:dbid,year:year,toyear:toyear,month:month,tomonth:tomonth,components:components,num:num,desc:desc};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
        $('#createDisplacementBudgetMonth').val(-1);
        $("#createDisplacementBudgetToMonth").find('option').remove();
        $("#createDisplacementBudgetComponents").selectpicker('deselectAll');
        $("#createDisplacementBudgetComponents").selectpicker('refresh');
        $('#createDisplacementBudgetToYear').val(-1);
        $('#createDisplacementBudgetNumber').val('');
        $('#createDisplacementBudgetDesc').val('');
        $('#createDisplacementBudgetHCode').val('');
        showDisplacementBudgetList();
    }
}

function getTotalNumberInMonth() {
    var month = $('#createDisplacementBudgetMonth').val();
    var components = $('#createDisplacementBudgetComponents').val();
    var components = components.join(",");
    var action = "getTotalNumberInMonth";
    var param = {action:action,month:month,components:components};
    var res = manageAjaxRequest(param);
    if(res != false){
        $('#displacementBudgetTotalInMonth').val('');
        $('#displacementBudgetTotalInMonth').val(res);
    }
}

function refreshDisplacementBudgetComponents() {
    var dbid = $('#displacementBudgetHiddenDbid').val();
    if (!parseInt((dbid.trim()).length)) {
        $("#createDisplacementBudgetComponents").selectpicker('deselectAll');
        $("#createDisplacementBudgetComponents").selectpicker('refresh');
        $('#createDisplacementBudgetHCode').val('');
    }else {
        getTotalNumberInMonth();
    }
}

function getYearBudgetComponents2() {
    var bid = $('#displacementBudgetYearSearch').val();
    var data = Main.yearBudgetComponents(bid);
    $("#displacementBudgetComponentSearch").find('option').remove();
    for(var e=0;e<data.length;e++){
        $("#displacementBudgetComponentSearch").append('<option value="'+data[e]['RowID']+'">'+data[e]['gName']+'</option>');
    }
    $("#displacementBudgetComponentSearch").selectpicker('refresh');
}  //

function getYearBudgetComponents3() {
    var bid = $('#createDisplacementBudgetYear').val();
    var data = Main.yearBudgetDisplacementComponents(bid);
    $("#createDisplacementBudgetComponents").find('option').remove();
    for(var e=0;e<data[0].length;e++){
        $("#createDisplacementBudgetComponents").append('<option value="'+data[0][e]['RowID']+'">'+data[0][e]['gName']+'</option>');
    }
    $("#createDisplacementBudgetComponents").selectpicker('refresh');
    $("#createDisplacementBudgetMonth").find('option').remove();
    $("#createDisplacementBudgetMonth").append('<option value="-1">انتخاب کنید</option>');
    for(var e=0;e<data[1].length;e++){
        $("#createDisplacementBudgetMonth").append('<option value="'+data[1][e]['value']+'">'+data[1][e]['title']+'</option>');
    }
}  //

function getMonthOfThisYear() {
    var bid = $('#createDisplacementBudgetToYear').val();
    var data = Main.getMonthOfThisYear(bid);

    $("#createDisplacementBudgetToMonth").find('option').remove();
    $("#createDisplacementBudgetToMonth").append('<option value="-1">انتخاب کنید</option>');
    for(var e=0;e<data.length;e++){
        $("#createDisplacementBudgetToMonth").append('<option value="'+data[e]['value']+'">'+data[e]['title']+'</option>');
    }
}  //

function recordDisplacementBudgetComment(dbid) {
    var res = Main.getDisplacementBudgetComment(dbid);
    $("#displacementBudgetComment-body").html('');
    $("#displacementBudgetComment-body").html(res);
    $("input[name='displacementBudgetCommentType']").prop('checked',false);
    $("#displacementBudgetCommentWarning"+"-div").css("display", "none");
    $("#displacementBudgetCommentDesc"+"-div").css("display", "none");
    $("#displacementBudgetCommentDesc").val('');
    $("#displacementBudgetCommentHiddenDbid").val(dbid);
    $('#displacementBudgetCommentModal').modal('show');
}  //

function doRecordDisplacementBudgetComment() {
    var dbid = $("#displacementBudgetCommentHiddenDbid").val();
    var desc = $("#displacementBudgetCommentDesc").val();
    var radioValue = $("input[name='displacementBudgetCommentType']:checked").val();
    if(typeof radioValue == "undefined"){
        notice1Sec("تایید یا عدم تایید را انتخاب نمایید !","yellow");
        return false;
    }
    if (parseInt(radioValue) == 0 && !parseInt((desc.trim()).length) ){
        notice1Sec("نظرات خود را ثبت نمایید !","yellow");
        return false;
    }
    var action = "doRecordDisplacementBudgetComment";
    var param = {action:action,dbid:dbid,desc:desc,radioValue:radioValue};
    var res = manageAjaxRequest(param);
    if (res != false) {
        notice1Sec(res, "green");
        $("input[name='displacementBudgetCommentType']").prop('checked',false);
        $("#displacementBudgetCommentWarning"+"-div").css("display", "none");
        $("#displacementBudgetCommentDesc"+"-div").css("display", "none");
        $("#displacementBudgetCommentDesc").val('');
        recordDisplacementBudgetComment(dbid);
    }
}  //

function sendDisplacementBudget() {
    var ch = $('#displacementBudget-table').find('input');
    var dbid = new Array();
    for(var c=0;c<ch.length;c++){
        if(ch[c].checked){
            dbid[dbid.length] = ch[c].attributes.rid.value;
        }
    }
    if(dbid.length > 1){
        notice1Sec("فقط یک بودجه خارج از برنامه باید انتخاب شده باشد !","red");
        return false;
    }
    if(dbid.length==0){
        notice1Sec("هیچ بودجه خارج از برنامه ای انتخاب نشده است !","red");
        return false;
    }
    dbid = dbid[0];
    var res = ShowWorkflowDisplacementBudget(dbid);
    $("#sendDisplacementBudgetModal-body").html('');
    $("#sendDisplacementBudgetModal-body").html(res);
    $("#sendDisplacementBudgetHiddenDbid").val(dbid);
    $("#sendDisplacementBudgetDesc").val('');
    $('#sendDisplacementBudgetModal').modal('show');
}  //

function doSendDisplacementBudget() {
    var dbid = $("#sendDisplacementBudgetHiddenDbid").val();
    var desc = $("#sendDisplacementBudgetDesc").val();
    var action = "doSendDisplacementBudget";
    var param = {action:action,dbid:dbid,desc:desc};
    var res = manageAjaxRequest(param);
    if (res != false) {
        notice1Sec(res, "green");
        $('#sendDisplacementBudgetModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        showDisplacementBudgetList();
    }
}  //

function ShowWorkflowDisplacementBudget(dbid) {
    var action = "ShowWorkflowDisplacementBudget";
    var param = {action:action,dbid:dbid};
    var res = manageAjaxRequest(param);
    if(res != false){
        return res;
    }
}  //

function showDisplacementBudgetWorkflow(dbid) {
    var res = ShowWorkflowDisplacementBudget(dbid);
    $("#showDisplacementBudgetWorkflow-body").html('');
    $("#showDisplacementBudgetWorkflow-body").html(res);
    $('#showDisplacementBudgetWorkflowModal').modal('show');
}  //

function finalTickDisplacementBudget(dbid) {
    $("#displacementBudgetFinalTickIdHidden").val(dbid);
    $('#displacementBudgetFinalTickModal').modal('show');
}

function doFinalTickDisplacementBudget() {
    var dbid = $("#displacementBudgetFinalTickIdHidden").val();
    var action = "doFinalTickDisplacementBudget";
    var param = {action:action,dbid:dbid};
    var res = manageAjaxRequest(param);
    if (res != false) {
        notice1Sec(res, "green");
        $('#displacementBudgetFinalTickModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        showDisplacementBudgetList();
    }
}

function getDisplacementProductNameWithHcode() {
    var bid = $('#createDisplacementBudgetYear').val();
    var month = $('#createDisplacementBudgetMonth').val();
    var hcode = $('#createDisplacementBudgetHCode').val();
    var action = "getDisplacementProductNameWithHcode";
    var param = {action:action,bid:bid,month:month,hcode:hcode};
    var res = manageAjaxRequest(param);
    if (parseInt(res[0]) == 0){
        $("#createDisplacementBudgetComponents").selectpicker('deselectAll');
    }else {
        $('#createDisplacementBudgetComponents').val(res[0]);
    }
    $("#createDisplacementBudgetComponents").selectpicker('refresh');
    $('#displacementBudgetTotalInMonth').val(res[1]);
}

function emptyDisplacementBudgetHCodeSearch() {
    $('#displacementBudgetHCodeSearch').val('');
}

function emptyDisplacementBudgetComponentSearch() {
    $("#displacementBudgetComponentSearch").selectpicker('deselectAll');
    $("#displacementBudgetComponentSearch").selectpicker('refresh');
}

//******************** مجوز تاخیر در تحویل بودجه ********************

function showDelayBudgetList(page) {
    if(typeof page == "undefined"){
        page = 1;
    }
    var year = $("#delayBudgetYearSearch").val();
    var component = $("#delayBudgetComponentSearch").val();
    var component = component.join(",");
    var month = $("#delayBudgetMonthSearch").val();
    var hcode = $("#delayBudgetHCodeSearch").val();
    var finalTick = $("#delayBudgetFinalTickSearch").val();
    if (!parseInt((component.trim()).length)){
        component = -1;
    }
    var action = "showDelayBudgetList";
    var param = {action:action,year:year,component:component,month:month,hcode:hcode,finalTick:finalTick,page:page};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#delayBudgetManageBody").html('');
        $("#delayBudgetManageBody").html(res);
    }
}

function getTotalNumberInMonth1() {
    var month = $('#createDelayBudgetMonth').val();
    var components = $('#createDelayBudgetComponents').val();
    var components = components.join(",");
    var action = "getTotalNumberInMonth";
    var param = {action:action,month:month,components:components};
    var res = manageAjaxRequest(param);
    if(res != false){
        $('#delayBudgetTotalInMonth').val('');
        $('#delayBudgetTotalInMonth').val(res);
    }
}

function refreshDelayBudgetComponents() {
    var dbid = $('#delayBudgetHiddenDbid').val();
    if (!parseInt((dbid.trim()).length)) {
        $("#createDelayBudgetComponents").selectpicker('deselectAll');
        $("#createDelayBudgetComponents").selectpicker('refresh');
    }else {
        getTotalNumberInMonth1();
    }
}

function createDelayBudget() {
    $('#delayBudgetHiddenDbid').val('');
    $('#createDelayBudgetYear').val(-1);
    $('#createDelayBudgetMonth').val(-1);
    $('#createDelayBudgetToMonth').val(-1);
    $("#createDelayBudgetComponents").find('option').remove();
    $("#createDelayBudgetComponents").selectpicker('refresh');
    $('#createDelayBudgetHCode').val('');
    $('#createDelayBudgetNumber').val('');
    $('#createDelayBudgetDesc').val('');
    $('#delayBudgetTotalInMonth').val('');
    $('#createDelayBudgetModal').modal('show');
}

function editDelayBudget(dbID) {
    var res = Main.getDelayBudgetInfo(dbID);
    if(res != false){
        $('#createDelayBudgetModal').modal('show');
        $("#delayBudgetHiddenDbid").val(res['dbID']);
        $("#createDelayBudgetYear").val(res['bid']);
        getYearBudgetComponents5();
        $("#createDelayBudgetComponents").val(res['bcdid']);
        $("#createDelayBudgetComponents").selectpicker('refresh');
        $("#createDelayBudgetMonth").val(res['fromMonth']);
        $("#createDelayBudgetToMonth").val(res['toMonth']);
        $("#createDelayBudgetHCode").val(res['HCode']);
        $("#createDelayBudgetNumber").val(res['number']);
        $("#createDelayBudgetDesc").val(res['description']);
        getTotalNumberInMonth1();
    }
}

function doEditCreateDelayBudget() {
    var dbid = $('#delayBudgetHiddenDbid').val();
    var year = $('#createDelayBudgetYear').val();
    var month = $('#createDelayBudgetMonth').val();
    var tomonth = $('#createDelayBudgetToMonth').val();
    var num = $('#createDelayBudgetNumber').val();
    var desc = $('#createDelayBudgetDesc').val();
    var components = $('#createDelayBudgetComponents').val();
    var components = components.join(",");
    if (parseInt(year) == -1){
        notice1Sec("سال بودجه انتخاب نشده است !","yellow");
        return false;
    }
    if (parseInt(month) == -1){
        notice1Sec("از ماه بودجه انتخاب نشده است !","yellow");
        return false;
    }
    if(!parseInt((num.trim()).length) || !$.isNumeric(num)){
        notice1Sec("مقدار وارد شده عددی نیست یا مشخص نشده است !","yellow");
        return false;
    }
    if (!parseInt((components.trim()).length)){
        notice1Sec("محصول انتخاب نشده است !","yellow");
        return false;
    }
    var action = "doEditCreateDelayBudget";
    var param = {action:action,dbid:dbid,year:year,month:month,tomonth:tomonth,components:components,num:num,desc:desc};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
        $('#createDelayBudgetMonth').val(-1);
        $('#createDelayBudgetToMonth').val(-1);
        $("#createDelayBudgetComponents").selectpicker('deselectAll');
        $("#createDelayBudgetComponents").selectpicker('refresh');
        $('#createDelayBudgetHCode').val('');
        $('#createDelayBudgetNumber').val('');
        $('#createDelayBudgetDesc').val('');
        showDelayBudgetList();
    }
}

function getYearBudgetComponents4() {
    var year = $('#delayBudgetYearSearch').val();
    var data = Main.yearBudgetComponents(year);
    $("#delayBudgetComponentSearch").find('option').remove();
    for(var e=0;e<data.length;e++){
        $("#delayBudgetComponentSearch").append('<option value="'+data[e]['RowID']+'">'+data[e]['gName']+'</option>');
    }
    $("#delayBudgetComponentSearch").selectpicker('refresh');
}

function getYearBudgetComponents5() {
    var year = $('#createDelayBudgetYear').val();
    var data = Main.yearBudgetComponents(year);
    $("#createDelayBudgetComponents").find('option').remove();
    for(var e=0;e<data.length;e++){
        $("#createDelayBudgetComponents").append('<option value="'+data[e]['RowID']+'">'+data[e]['gName']+'</option>');
    }
    $("#createDelayBudgetComponents").selectpicker('refresh');
}

function recordDelayBudgetComment(dbid) {
    var res = Main.getDelayBudgetComment(dbid);
    $("#delayBudgetComment-body").html('');
    $("#delayBudgetComment-body").html(res);
    $("input[name='delayBudgetCommentType']").prop('checked',false);
    $("#delayBudgetCommentWarning"+"-div").css("display", "none");
    $("#delayBudgetCommentDesc"+"-div").css("display", "none");
    $("#delayBudgetCommentDesc").val('');
    $("#delayBudgetCommentHiddenDbid").val(dbid);
    $('#delayBudgetCommentModal').modal('show');
}

function doRecordDelayBudgetComment() {
    var dbid = $("#delayBudgetCommentHiddenDbid").val();
    var desc = $("#delayBudgetCommentDesc").val();
    var radioValue = $("input[name='delayBudgetCommentType']:checked").val();
    if(typeof radioValue == "undefined"){
        notice1Sec("تایید یا عدم تایید را انتخاب نمایید !","yellow");
        return false;
    }
    if (parseInt(radioValue) == 0 && !parseInt((desc.trim()).length) ){
        notice1Sec("نظرات خود را ثبت نمایید !","yellow");
        return false;
    }
    var action = "doRecordDelayBudgetComment";
    var param = {action:action,dbid:dbid,desc:desc,radioValue:radioValue};
    var res = manageAjaxRequest(param);
    if (res != false) {
        notice1Sec(res, "green");
        $("input[name='delayBudgetCommentType']").prop('checked',false);
        $("#delayBudgetCommentWarning"+"-div").css("display", "none");
        $("#delayBudgetCommentDesc"+"-div").css("display", "none");
        $("#delayBudgetCommentDesc").val('');
        recordDelayBudgetComment(dbid);
    }
}

function sendDelayBudget() {
    var ch = $('#delayBudget-table').find('input');
    var dbid = new Array();
    for(var c=0;c<ch.length;c++){
        if(ch[c].checked){
            dbid[dbid.length] = ch[c].attributes.rid.value;
        }
    }
    if(dbid.length > 1){
        notice1Sec("فقط یک بودجه خارج از برنامه باید انتخاب شده باشد !","red");
        return false;
    }
    if(dbid.length==0){
        notice1Sec("هیچ بودجه خارج از برنامه ای انتخاب نشده است !","red");
        return false;
    }
    dbid = dbid[0];
    var res = ShowWorkflowDelayBudget(dbid);
    $("#sendDelayBudgetModal-body").html('');
    $("#sendDelayBudgetModal-body").html(res);
    $("#sendDelayBudgetHiddenDbid").val(dbid);
    $("#sendDelayBudgetDesc").val('');
    $('#sendDelayBudgetModal').modal('show');
}

function doSendDelayBudget() {
    var dbid = $("#sendDelayBudgetHiddenDbid").val();
    var desc = $("#sendDelayBudgetDesc").val();
    var action = "doSendDelayBudget";
    var param = {action:action,dbid:dbid,desc:desc};
    var res = manageAjaxRequest(param);
    if (res != false) {
        notice1Sec(res, "green");
        $('#sendDelayBudgetModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        showDelayBudgetList();
    }
}

function ShowWorkflowDelayBudget(dbid) {
    var action = "ShowWorkflowDelayBudget";
    var param = {action:action,dbid:dbid};
    var res = manageAjaxRequest(param);
    if(res != false){
        return res;
    }
}

function showDelayBudgetWorkflow(dbid) {
    var res = ShowWorkflowDelayBudget(dbid);
    $("#showDelayBudgetWorkflow-body").html('');
    $("#showDelayBudgetWorkflow-body").html(res);
    $('#showDelayBudgetWorkflowModal').modal('show');
}

function finalTickDelayBudget(dbid) {
    $("#delayBudgetFinalTickIdHidden").val(dbid);
    $('#delayBudgetFinalTickModal').modal('show');
}

function doFinalTickDelayBudget() {
    var dbid = $("#delayBudgetFinalTickIdHidden").val();
    var action = "doFinalTickDelayBudget";
    var param = {action:action,dbid:dbid};
    var res = manageAjaxRequest(param);
    if (res != false) {
        notice1Sec(res, "green");
        $('#delayBudgetFinalTickModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        showDelayBudgetList();
    }
}

function getDelayProductNameWithHcode() {
    var bid = $('#createDelayBudgetYear').val();
    var month = $('#createDelayBudgetMonth').val();
    var hcode = $('#createDelayBudgetHCode').val();
    var action = "getDelayProductNameWithHcode";
    var param = {action:action,bid:bid,month:month,hcode:hcode};
    var res = manageAjaxRequest(param);
    if (parseInt(res[0]) == 0){
        $("#createDelayBudgetComponents").selectpicker('deselectAll');
    }else {
        $('#createDelayBudgetComponents').val(res[0]);
    }
    $("#createDelayBudgetComponents").selectpicker('refresh');
    $('#delayBudgetTotalInMonth').val(res[1]);
}

function emptyDelayBudgetHCodeSearch() {
    $('#delayBudgetHCodeSearch').val('');
}

function emptyDelayBudgetComponentSearch() {
    $("#delayBudgetComponentSearch").selectpicker('deselectAll');
    $("#delayBudgetComponentSearch").selectpicker('refresh');
}

//******************** اصلاحیه بودجه ********************


function showAmendmentBudgetList(page) {
    if(typeof page == "undefined"){
        page = 1;
    }
    var year = $("#amendmentBudgetYearSearch").val();
    var component = $("#amendmentBudgetComponentSearch").val();
    var component = component.join(",");
    if (!parseInt((component.trim()).length)){
        component = -1;
    }
    var action = "showAmendmentBudgetList";
    var param = {action:action,year:year,component:component,page:page};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#amendmentBudgetManageBody").html('');
        $("#amendmentBudgetManageBody").html(res);
    }
}
function saveAmendmentBudget(input){
    var action="saveChangeAmendmentBudget";
    var number=$(input).val();
    var bcdid=$(input).attr('bcdid');
    var month=$(input).attr('month');
    var amendment_rowid=$(input).attr('amendment_rowid');
    var amendmentDate=$("#createAmendmentBudgetADate").val();
    
    var param={action:action,number:number,bcdid:bcdid,amendment_rowid:amendment_rowid,amendmentDate:amendmentDate,month:month}
    if(number){
        var res = manageAjaxRequest(param);
        if(res!=false || res=="update_ok"){
            $(input).fadeOut(1000);
            $(input).fadeIn(1000);
            $(input).css({'background':'green',"color":"#fff"});
            if(res>0){
                $(input).attr('amendment_rowid',res);
            }
        }
    }
}
function convertNumber(fa_num){
	const faDigits = ['۰۱','۰۲','۰۳','۰۴','۰۵','۰۶','۰۷','۰۸','۰۹','۱۰','۱۱','۱۲'];
	const enDigits = ['1','2','3','4','5','6','7','8','9','10','11','12'];
	var num_index=faDigits.indexOf(fa_num);
	return enDigits[num_index]
	
}
function createTableAmendmentBudget() {
    //var month = $('#createAmendmentBudgetMonth').val();
    var month = [1,2,3,4,5,6,7,8,9,10,11,12];
	var amendmentDate=$("#createAmendmentBudgetADate").val();
	var currentMonth=amendmentDate.split("/")[1];
	currentMonth=convertNumber(currentMonth);
	var restricFlag=1;
    var components = $('#createAmendmentBudgetComponents').val();
    var components = components.join(",");
    var action = "createTableAmendmentBudget";
	
	
	if(typeof(amendmentDate)=="undefined" || amendmentDate==""){
		notice1Sec("تاریخ مشخص نشده است","yellow");
		return false;
	}
	
	if(typeof(components)=="undefined" || components==""){
		notice1Sec("لیست محصولات مشخص نشده است","yellow");
		return false;
	}
	

    var param = {action:action,month:month,components:components};
    var res = manageAjaxRequest(param);
    if (res != false) {
        $("#createAmendmentBudgetModal-body").html('');
        $("#createAmendmentBudgetModal-body").html(res);
        $('input[id*="_current_total_"]').each(function(){
             $(this).css({'outline':'none','border':'none','border-radius':'5px','text-align':'center'}).attr('disabled',true)
        });

		$('input[id*="_edited_total_"]').each(function(){
            $(this).css({'outline':'none','border':'none','border-radius':'5px','text-align':'center'})
			if(parseInt($(this).val())>0){
				$(this).css({'background-color':'green','color':'#fff','outline':'none','border':'none','border-radius':'5px','text-align':'center'})
			}
		})
    }
   
   for(i=0;i<month.length;i++){
    var month_index = parseInt(month[i])+4;
    selectCol(month_index,"rgb(190, 237, 232)")
   }
   currentMonth=5;
   if(restricFlag>0){
	   restricFlag= parseInt(currentMonth)+restricFlag;
	  $('input[id*="_edited_total_"]').each(function(){
			if($(this).attr('month')<restricFlag){
				$(this).attr('disabled',true)
			}
            
		})
	   
   }
    
}
function selectCol(col_index,bgColor){
    $('#budgetAmendmentDetailsHtm-tableID> thead >tr > td:nth-child('+col_index+')').css({"background-color":bgColor,"color":"#000","border":"2px solid gray"});
    $('#budgetAmendmentDetailsHtm-tableID> tbody >tr > td:nth-child('+col_index+')').css("background-color",bgColor);
   // ("background-color","rgb(190, 237, 232)");
}
/*function createAmendmentBudget() {
    var res = Main.checkValidationDate();bgcolor
    if(res != false) {
        $('#createAmendmentBudgetADate').val('');
        $("#createAmendmentBudgetMonth").find('option').remove();
        $("#createAmendmentBudgetComponents").find('option').remove();
        $("#createAmendmentBudgetComponents").selectpicker('refresh');
        $("#createAmendmentBudgetModal-body").html('');
        $('#createAmendmentBudgetModal').modal('show');
    }
}*/

function createAmendmentBudget() {
    $('#createAmendmentBudgetADate').val('');
    $("#createAmendmentBudgetMonth").find('option').remove();
    $("#createAmendmentBudgetComponents").find('option').remove();
    $("#createAmendmentBudgetComponents").selectpicker('refresh');
    $("#createAmendmentBudgetModal-body").html('');
    $('#createAmendmentBudgetModal').modal('show');
	
}
/*
function doCreateAmendmentBudget() {
    var ch = $('#budgetAmendmentDetailsHtm-tableID').find('input:checked');
    var aDate = $("#createAmendmentBudgetADate").val();
    var month = $("#createAmendmentBudgetMonth").val();
    if (parseInt(ch.length) == 0){
        notice1Sec("ابتدا جدول را ایجاد نمایید !","yellow");
        return false;
    }
    var information = new Array();
    for(var c=0;c<ch.length;c++){
        var grade = ch[c].attributes.rid.value;
        
        var number = $("#budgetAmendmentNumber-"+grade).val();
        var desc = $("#budgetAmendmentDesc-"+grade).val();
        if ( parseInt((number.trim()).length) > 0 && !$.isNumeric(number)){
            notice1Sec("مقدار اصلاحیه یک یا چند مورد عددی نیست !","yellow");
            return false;
        }
        var bcdid = $("#bcdid-"+grade+"-Hidden").val();
        information[information.length] = [number,desc,bcdid];
    }
    var myJsonString = JSON.stringify(information);
		
    var action = "doCreateAmendmentBudget";
    var param = {action:action,myJsonString:myJsonString,aDate:aDate,month:month};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
        $('#createAmendmentBudgetModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        showAmendmentBudgetList();
    }
}*/
function getDateBudgetComponents3() {
    var bDate = $('#createAmendmentBudgetADate').val();
    var data = Main.dateBudgetComponents(bDate);
    var res = Main.getValidationMonth(bDate);
    $("#createHistoryAmendmentBudgetComponents").find('option').remove();
    for(var e=0;e<data.length;e++){
        $("#createHistoryAmendmentBudgetComponents").append('<option value="'+data[e]['RowID']+'">'+data[e]['gName']+'</option>');
    }
    $("#createHistoryAmendmentBudgetComponents").selectpicker('refresh');
}

function createHistoryAmendmentBudget(){
    
    getDateBudgetComponents3();
    $('#createHistoryAmendmentBudgetModal').modal('show');
}

function createTableHistoryAmendmentBudget(){
    var components = $('#createHistoryAmendmentBudgetComponents').val();
    var components = components.join(",");
    var action = "historyBudgetAmendmentDetailsHtm";
    var param = {action:action,components:components};
    var res = manageAjaxRequest(param);
	//console.log(res);
   
    if(res != false){
        $("#createHistoryAmendmentBudgetModal-body").html(res);
    }
    
}
function showDetailes(boxID){
	$("#"+boxID).each(function(){
		if($(this).is(":visible")){
			$(this).hide();
		}
	})
    $("#"+boxID).fadeToggle();
}

/* function doCreateAmendmentBudget() {

    var ch = $('#budgetAmendmentDetailsHtm-tableID').find('input:checked');
    var aDate = $("#createAmendmentBudgetADate").val();
   // var month = $("#createAmendmentBudgetMonth").val();
    var month=[1,2,3,4,5,6,7,8,9,10,11,12];
    
    if (parseInt(ch.length) == 0){
        notice1Sec("ابتدا جدول را ایجاد نمایید !","yellow");
        return false;
    }
    var information = new Array();
   for(var i=0;i<month.length;i++){
    for(var c=0;c<ch.length;c++){
        var grade = ch[c].attributes.rid.value;
        
        switch(parseInt(month[i])){

            case 1:
                var month_input = $("#f_edited_total_"+grade)
                break;
            case 2:
                var month_input = $("#o_edited_total_"+grade)
                break;
            case 3:
                var month_input = $("#kh_edited_total_"+grade)
                break;
            case 4:
                var month_input = $("#t_edited_total_"+grade)
                break;
            case 5:
                var month_input = $("#mo_edited_total_"+grade)
                break;
            case 6:
                var month_input = $("#sh_edited_total_"+grade)
                break;
            case 7:
                var month_input = $("#me_edited_total_"+grade)
                break;
            case 8:
                var month_input = $("#ab_edited_total_"+grade)
                break;
            case 9:
                var month_input = $("#az_edited_total_"+grade)
                break;
            case 10:
                var month_input = $("#d_edited_total_"+grade)
                break;
            case 11:
                var month_input = $("#b_edited_total_"+grade)
                break;
            case 12:
                var month_input = $("#es_edited_total_"+grade)
                break;
        }
        var number =$(month_input).val();
        var desc = "";
        
        if(number && $(month_input).attr('amendment_rowId')==""){
            if ( parseInt((number.trim()).length) > 0 && !$.isNumeric(number)){
                notice1Sec("مقدار اصلاحیه یک یا چند مورد عددی نیست !","yellow");
                return false;
            }
            var bcdid = $(month_input).attr('bcdid');
           // information[information.length] = [number,desc,bcdid];
            information[information.length] = {'month':month[i],'number':number,'desc':desc,'bcdid':bcdid};
        }
    }
}
    //var myJsonString = JSON.stringify(information);
    var myJsonString = information;
    var action = "doCreateAmendmentBudget";
    var param = {action:action,myJsonString:myJsonString,aDate:aDate,month:month};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
        $('#createAmendmentBudgetModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        showAmendmentBudgetList();
    }
}
 */
 //*****************************
 var amendmentInfoArray=[];
function selectEditedAmendment(input){
	var inputId=$(input).attr('id');
	var month = $(input).attr('month');
	var number = $(input).val();
	var desc="";
	var bcdid = $(input).attr('bcdid');
	var old_amendment_number = $(input).attr('old_amendment_number');
	var amendment_row_id = $(input).attr('amendment_rowid');
	var month = $(input).attr('month');
	
	if(parseInt(old_amendment_number)!= parseInt(number)){
		if ( parseInt((number.trim()).length) > 0 && !$.isNumeric(number)){
			notice1Sec("مقدار اصلاحیه عددی نیست !","yellow");
			$(input).val('');
			$("#"+inputId).focus();
            return false;
			exit;
		}
		var amendmentType="insert";
		if(amendment_row_id){
			amendmentType="update";
		}
		
	}
	
	amendObject={'month':month,'number':number,'desc':desc,'bcdid':bcdid,'amendment_row_id':amendment_row_id,'amendment_type':amendmentType}
	if(inputId){
		amendmentInfoArray[inputId]=amendObject;
	}
}

function getDateBudgetComponents4() {
    var bDate = $('#createAmendmentBudgetADate').val();
    var data = Main.dateBudgetComponents(bDate);
    var res = Main.getValidationMonth(bDate);
    $("#showAmendmentBudgetComponents").find('option').remove();
    for(var e=0;e<data.length;e++){
        $("#showAmendmentBudgetComponents").append('<option value="'+data[e]['RowID']+'">'+data[e]['gName']+'</option>');
    }
    $("#showAmendmentBudgetComponents").selectpicker('refresh');
}

function displayAmendmentBudget(){
	
getDateBudgetComponents4();
displayTableAmendmentBudget();
$("#displayAmendmentBudgetModal").modal('show');

}

function displayTableAmendmentBudget() {
    var month = [1,2,3,4,5,6,7,8,9,10,11,12];
	if($('#showAmendmentBudgetComponents').val()==""){

		values=sessionStorage.getItem('components');
		if(values){
			$.each(values.split(","), function(i,e){
				 $("#showAmendmentBudgetComponents option[value='" + e + "']").prop("selected", true);
			});
		}
	}
	
    var components = $('#showAmendmentBudgetComponents').val();

    var componentsFinal = components.join(",");
    var action = "displayTableAmendmentBudget";
    var param = {action:action,month:month,components:componentsFinal};
    var res = manageAjaxRequest(param);
    if (res != false) {
        $("#displayTableAmendmentBudgetModal-body").html('');
        $("#displayTableAmendmentBudgetModal-body").html(res);
        $('#displayTableAmendmentBudgetModal-body input[type="text"]').each(function(){
             $(this).css({'outline':'none','border':'none','border-radius':'5px','text-align':'center'}).attr('disabled',true)
        });

		$('input[id*="_edited_total_"]').each(function(){
            $(this).css({'outline':'none','border':'none','border-radius':'5px','text-align':'center'})
			if(parseInt($(this).val())>0){
				$(this).css({'background-color':'green','color':'#fff','outline':'none','border':'none','border-radius':'5px','text-align':'center'})
			}
		})
    }
   
   for(i=0;i<month.length;i++){
    var month_index = parseInt(month[i])+4;
    selectCol(month_index,"rgb(190, 237, 232)")
   }
    
}

 function doCreateAmendmentBudget() {
	 var aDate = $("#createAmendmentBudgetADate").val();
	var inputProblemsArray=[];
	var information=[];
	for(var key in amendmentInfoArray){
		var number  = amendmentInfoArray[key]['number'];
		if(number){
			if ( parseInt((number.trim()).length) > 0 && !$.isNumeric(number)){
				inputProblemsArray.push(key);
				
			}
			
			else
			{
				if(amendmentInfoArray[key]['amendment_type']=="insert" || amendmentInfoArray[key]['amendment_type']=="update"){
					information[information.length] = amendmentInfoArray[key];
				}
			}
		}
	}
	if(inputProblemsArray.length>0){
		for(var k=0;k<inputProblemsArray.length;k++){
			$("#"+inputProblemsArray[k]).css('background-color','red');
		}
		notice1Sec("مقدار اصلاحیه یک یا چند مورد عددی نیست !","yellow");
        return false;
		
	}
    var myJsonString = information;
    var action = "doCreateAmendmentBudget";
	//console.log('myJsonString');
	//console.log(myJsonString);
    var param = {action:action,myJsonString:myJsonString,aDate:aDate};
    var res = manageAjaxRequest(param);
	
    if(res != false){
        notice1Sec(res,"green");
        $('#createAmendmentBudgetModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        showAmendmentBudgetList();
		amendmentInfoArray=[];
		sessionStorage.setItem('components',$('#createAmendmentBudgetComponents').val());
		
    }
}

function editAmendmentBudget(abid) {
    var action = "editAmendmentBudget";
    var param = {action:action,abid:abid};
    var res = manageAjaxRequest(param);
    if (res != false) {
        $("#budgetAmendmentEditModal-body").html('');
        $("#budgetAmendmentEditModal-body").html(res);
        $('#budgetAmendmentEditModalHiddenAbId').val(abid);
        $('#budgetAmendmentEditModal').modal('show');
    }
}

function doEditAmendmentBudget() {
    var abid = $('#budgetAmendmentEditModalHiddenAbId').val();
    var number = $("#editBudgetAmendmentNumber").val();
    var desc = $("#editBudgetAmendmentDesc").val();
    if (!parseInt((number.trim()).length)){
        notice1Sec("مقدار اصلاحیه مشخص نشده است !","yellow");
        return false;
    }
    if (!$.isNumeric(number) ){
        notice1Sec("مقدار اصلاحیه عددی نیست !","yellow");
        return false;
    }
    var action = "doEditAmendmentBudget";
    var param = {action:action,abid:abid,number:number,desc:desc};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res, "green");
        $('#budgetAmendmentEditModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        showAmendmentBudgetList();
    }
}

function getDateBudgetComponents2() {
    var bDate = $('#createAmendmentBudgetADate').val();
    var data = Main.dateBudgetComponents(bDate);
    var res = Main.getValidationMonth(bDate);

    $("#createAmendmentBudgetMonth").find('option').remove();
    for(var b=0;b<res.length;b++){
        $("#createAmendmentBudgetMonth").append('<option value="'+res[b]['RowID']+'">'+res[b]['Name']+'</option>');
    }


    $("#createAmendmentBudgetComponents").find('option').remove();
    for(var e=0;e<data.length;e++){
        $("#createAmendmentBudgetComponents").append('<option value="'+data[e]['RowID']+'">'+data[e]['gName']+'</option>');
    }
    $("#createAmendmentBudgetComponents").selectpicker('refresh');
}

function getYearBudgetComponents9() {
    var year = $('#amendmentBudgetYearSearch').val();
    var data = Main.yearBudgetComponents(year);
    $("#amendmentBudgetComponentSearch").find('option').remove();
    for(var e=0;e<data.length;e++){
        $("#amendmentBudgetComponentSearch").append('<option value="'+data[e]['RowID']+'">'+data[e]['gName']+'</option>');
    }
    $("#amendmentBudgetComponentSearch").selectpicker('refresh');
}

function sendAmendmentBudget() {
    var ch = $('#amendmentBudget-table').find('input');
    var abid = new Array();
    for(var c=0;c<ch.length;c++){
        if(ch[c].checked){
            abid[abid.length] = ch[c].attributes.rid.value;
        }
    }
    if(abid.length > 1){
        notice1Sec("فقط یک اصلاحیه باید انتخاب شده باشد !","red");
        return false;
    }
    if(abid.length==0){
        notice1Sec("هیچ اصلاحیه ای انتخاب نشده است !","red");
        return false;
    }
    abid = abid[0];
    var res = ShowWorkflowAmendmentBudget(abid);
    $("#sendAmendmentBudgetModal-body").html('');
    $("#sendAmendmentBudgetModal-body").html(res);
    $("#sendAmendmentBudgetHiddenAbid").val(abid);
    $("#sendAmendmentBudgetDesc").val('');
    $('#sendAmendmentBudgetModal').modal('show');
}

function doSendAmendmentBudget() {
    var abid = $("#sendAmendmentBudgetHiddenAbid").val();
    var desc = $("#sendAmendmentBudgetDesc").val();
    var action = "doSendAmendmentBudget";
    var param = {action:action,abid:abid,desc:desc};
    var res = manageAjaxRequest(param);
    if (res != false) {
        notice1Sec(res, "green");
        $('#sendAmendmentBudgetModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        showAmendmentBudgetList();
    }
}

function ShowWorkflowAmendmentBudget(abid) {
    var action = "ShowWorkflowAmendmentBudget";
    var param = {action:action,abid:abid};
    var res = manageAjaxRequest(param);
    if(res != false){
        return res;
    }
}

function showAmendmentBudgetWorkflow(abid) {
    var res = ShowWorkflowAmendmentBudget(abid);
    $("#showAmendmentBudgetWorkflow-body").html('');
    $("#showAmendmentBudgetWorkflow-body").html(res);
    $('#showAmendmentBudgetWorkflowModal').modal('show');
}

function recordAmendmentBudgetComment(abid) {
    var res = Main.getAmendmentBudgetComment(abid);
    $("#amendmentBudgetComment-body").html('');
    $("#amendmentBudgetComment-body").html(res);
    $("input[name='amendmentBudgetCommentType']").prop('checked',false);
    $("#amendmentBudgetCommentWarning"+"-div").css("display", "none");
    $("#amendmentBudgetCommentDesc"+"-div").css("display", "none");
    $("#amendmentBudgetCommentDesc").val('');
    $("#amendmentBudgetCommentHiddenAbid").val(abid);
    $('#amendmentBudgetCommentModal').modal('show');
}

function doRecordAmendmentBudgetComment() {
    var abid = $("#amendmentBudgetCommentHiddenAbid").val();
    var desc = $("#amendmentBudgetCommentDesc").val();
    var radioValue = $("input[name='amendmentBudgetCommentType']:checked").val();
    if(typeof radioValue == "undefined"){
        notice1Sec("تایید یا عدم تایید را انتخاب نمایید !","yellow");
        return false;
    }
    if (parseInt(radioValue) == 0 && !parseInt((desc.trim()).length) ){
        notice1Sec("نظرات خود را ثبت نمایید !","yellow");
        return false;
    }
    var action = "doRecordAmendmentBudgetComment";
    var param = {action:action,abid:abid,desc:desc,radioValue:radioValue};
    var res = manageAjaxRequest(param);
    if (res != false) {
        notice1Sec(res, "green");
        $("input[name='amendmentBudgetCommentType']").prop('checked',false);
        $("#amendmentBudgetCommentWarning"+"-div").css("display", "none");
        $("#amendmentBudgetCommentDesc"+"-div").css("display", "none");
        $("#amendmentBudgetCommentDesc").val('');
        recordAmendmentBudgetComment(abid);
    }
}

function finalTickAmendmentBudget(abid) {
    $("#amendmentBudgetFinalTickIdHidden").val(abid);
    $('#amendmentBudgetFinalTickModal').modal('show');
}

function doFinalTickAmendmentBudget() {
    var abid = $("#amendmentBudgetFinalTickIdHidden").val();
    var action = "doFinalTickAmendmentBudget";
    var param = {action:action,abid:abid};
    var res = manageAjaxRequest(param);
    if (res != false) {
        notice1Sec(res, "green");
        $('#amendmentBudgetFinalTickModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        showAmendmentBudgetList();
    }
}

//*************************************************************************************************************************************************************************************
//*************************************************************************************************************************************************************************************

//++++++++++++++++++++++ اسناد ورود و خروج محصول +++++++++++++++++++++++

function productEntryExitDocuments() {
    var action = "productEntryExitDocuments";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    if(res != false) {
        $("#productEntryExitDocumentsID").html('');
        $("#productEntryExitDocumentsID").html(res[0]);
        if(jQuery.inArray(1, res[1]) !== -1) {
            var bpsDate = new AMIB.persianCalendar('budgetProductEntrySDateSearch');
            var bpeDate = new AMIB.persianCalendar('budgetProductEntryEDateSearch');
            $('#createBudgetProductEntryPEdate').MdPersianDateTimePicker({
                targetTextSelector: '#createBudgetProductEntryPEdate',
            });
            $("#createBudgetProductEntryComponents").selectpicker();
            $("#budgetProductEntryComponentSearch").selectpicker();
            showBudgetProductEntryList();
            //disableAfterDate: new Date(now.getFullYear(), now.getMonth()+1,-5),
        }
        if(jQuery.inArray(2, res[1]) !== -1) {
            var bpexsDate = new AMIB.persianCalendar('budgetProductExitSDateSearch');
            var bpexeDate = new AMIB.persianCalendar('budgetProductExitEDateSearch');
            $('#createBudgetProductExitPEdate').MdPersianDateTimePicker({
                targetTextSelector: '#createBudgetProductExitPEdate',
                disableBeforeDate: new Date(Date.now() - 2592e5),
                disableAfterDate: new Date(),
            });
            $("#createBudgetProductExitComponents").selectpicker();
            $("#budgetProductExitComponentSearch").selectpicker();
            showBudgetProductExitList();
        }
    }
}

//******************** سند ورود محصول ********************

function showBudgetProductEntryList(page) {
    if(typeof page == "undefined"){
        page = 1;
    }
    var sDate = $("#budgetProductEntrySDateSearch").val();
    var eDate = $("#budgetProductEntryEDateSearch").val();
    var year = $("#budgetProductEntryYearSearch").val();
    var component = $("#budgetProductEntryComponentSearch").val();
    var component = component.join(",");
    if (!parseInt((component.trim()).length)){
        component = -1;
    }
    var action = "showBudgetProductEntryList";
    var param = {action:action,sDate:sDate,eDate:eDate,year:year,component:component,page:page};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#budgetProductEntryManageBody").html('');
        $("#budgetProductEntryManageBody").html(res);
    }
}

function createBudgetProductEntry() {
    $('#createBudgetProductEntryPEdate').val('');
    $("#createBudgetProductEntryComponents").find('option').remove();
    $("#createBudgetProductEntryComponents").selectpicker('refresh');
    $('#createBudgetProductEntryHCode').val('');
    $('#createBudgetProductEntryNumber').val('');
    $('#createBudgetProductEntryDesc').val('');
    $('#createBudgetProductEntryModal').modal('show');
}

function doCreateBudgetProductEntry() {
    var peDate = $('#createBudgetProductEntryPEdate').val();
    var month = $('#createBudgetProductEntryMonth').val();
    var num = $('#createBudgetProductEntryNumber').val();
    var desc = $('#createBudgetProductEntryDesc').val();
    var components = $('#createBudgetProductEntryComponents').val();
    var components = components.join(",");
    if (!parseInt((peDate.trim()).length)){
        notice1Sec("تاریخ انتخاب نشده است !","yellow");
        return false;
    }
    if(!parseInt((num.trim()).length) || !$.isNumeric(num)){
        notice1Sec("مقدار وارد شده عددی نیست یا مشخص نشده است !","yellow");
        return false;
    }
    if (!parseInt((components.trim()).length)){
        notice1Sec("محصول انتخاب نشده است !","yellow");
        return false;
    }
    var action = "doCreateBudgetProductEntry";
    var param = {action:action,peDate:peDate,month:month,components:components,num:num,desc:desc};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
        $("#createBudgetProductEntryComponents").selectpicker('deselectAll');
        $("#createBudgetProductEntryComponents").selectpicker('refresh');
        $('#createBudgetProductEntryNumber').val('');
        $('#createBudgetProductEntryDesc').val('');
        showBudgetProductEntryList();
    }
}

function getYearBudgetComponents6() {
    var year = $('#budgetProductEntryYearSearch').val();
    var data = Main.yearBudgetComponents(year);
    $("#budgetProductEntryComponentSearch").find('option').remove();
    for(var e=0;e<data.length;e++){
        $("#budgetProductEntryComponentSearch").append('<option value="'+data[e]['RowID']+'">'+data[e]['gName']+'</option>');
    }
    $("#budgetProductEntryComponentSearch").selectpicker('refresh');
}

function getDateBudgetComponents() {
    var bDate = $('#createBudgetProductEntryPEdate').val();
    var data = Main.dateBudgetComponents(bDate);
    $("#createBudgetProductEntryComponents").find('option').remove();
    for(var e=0;e<data.length;e++){
        $("#createBudgetProductEntryComponents").append('<option value="'+data[e]['RowID']+'">'+data[e]['gName']+'</option>');
    }
    $("#createBudgetProductEntryComponents").selectpicker('refresh');
}

function deleteBudgetProductEntry(bpeid) {
    $('#deleteBudgetProductEntryIdHidden').val(bpeid);
    $('#deleteBudgetProductEntryModal').modal('show');
}

function doDeleteBudgetProductEntry() {
    var bpeid = $('#deleteBudgetProductEntryIdHidden').val();
    var action = "doDeleteBudgetProductEntry";
    var param = {action:action,bpeid:bpeid};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
        $('#deleteBudgetProductEntryModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        showBudgetProductEntryList();
    }
}

function getTotalNumberProductInThisMonth() {
    var month = $('#createBudgetProductEntryMonth').val();
    if (parseInt(month) == -1){
        $("#createBudgetProductEntryComponents").selectpicker('deselectAll');
        $("#createBudgetProductEntryComponents").selectpicker('refresh');
        $('#createBudgetProductEntryHCode').val('');
        notice1Sec("ابتدا ماه را انتخاب نمایید !","yellow");
        return false;
    }
    var components = $('#createBudgetProductEntryComponents').val();
    var components = components.join(",");
    var action = "getTotalNumberProductInThisMonth";
    var param = {action:action,month:month,components:components};
    var res = manageAjaxRequest(param);
    $('#totalNumberProductInThisMonth').val(res[0]);
    $('#createBudgetProductEntryHCode').val(res[1]);
}

function getProductNameWithHcode() {
    var peDate = $('#createBudgetProductEntryPEdate').val();
    var month = $('#createBudgetProductEntryMonth').val();
    if (parseInt(month) == -1){
        $("#createBudgetProductEntryComponents").selectpicker('deselectAll');
        $("#createBudgetProductEntryComponents").selectpicker('refresh');
        $('#createBudgetProductEntryHCode').val('');
        notice1Sec("ابتدا ماه را انتخاب نمایید !","yellow");
        return false;
    }
    var hcode = $('#createBudgetProductEntryHCode').val();
    var action = "getProductNameWithHcode";
    var param = {action:action,peDate:peDate,month:month,hcode:hcode};
    var res = manageAjaxRequest(param);
    if (parseInt(res[0]) == 0){
        $("#createBudgetProductEntryComponents").selectpicker('deselectAll');
    }else {
        $('#createBudgetProductEntryComponents').val(res[0]);
    }
    $("#createBudgetProductEntryComponents").selectpicker('refresh');
    $('#totalNumberProductInThisMonth').val(res[1]);
}

//******************** سند خروج محصول ********************

function showBudgetProductExitList(page) {
    if(typeof page == "undefined"){
        page = 1;
    }
    var sDate = $("#budgetProductExitSDateSearch").val();
    var eDate = $("#budgetProductExitEDateSearch").val();
    var year = $("#budgetProductExitYearSearch").val();
    var component = $("#budgetProductExitComponentSearch").val();
    var component = component.join(",");
    if (!parseInt((component.trim()).length)){
        component = -1;
    }
    var action = "showBudgetProductExitList";
    var param = {action:action,sDate:sDate,eDate:eDate,year:year,component:component,page:page};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#budgetProductExitManageBody").html('');
        $("#budgetProductExitManageBody").html(res);
    }
}

function createBudgetProductExit() {
    $('#createBudgetProductExitPEdate').val('');
    $("#createBudgetProductExitComponents").find('option').remove();
    $("#createBudgetProductExitComponents").selectpicker('refresh');
    $('#createBudgetProductExitNumber').val('');
    $('#createBudgetProductExitDesc').val('');
    $('#totalEntryNumberProduct').val('');
    $('#createBudgetProductExitModal').modal('show');
}

function doCreateBudgetProductExit() {
    var peDate = $('#createBudgetProductExitPEdate').val();
    var num = $('#createBudgetProductExitNumber').val();
    var desc = $('#createBudgetProductExitDesc').val();
    var components = $('#createBudgetProductExitComponents').val();
    var components = components.join(",");
    if (!parseInt((peDate.trim()).length)){
        notice1Sec("تاریخ انتخاب نشده است !","yellow");
        return false;
    }
    if(!parseInt((num.trim()).length) || !$.isNumeric(num)){
        notice1Sec("مقدار وارد شده عددی نیست یا مشخص نشده است !","yellow");
        return false;
    }
    if (!parseInt((components.trim()).length)){
        notice1Sec("محصول انتخاب نشده است !","yellow");
        return false;
    }
    var action = "doCreateBudgetProductExit";
    var param = {action:action,peDate:peDate,components:components,num:num,desc:desc};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
        $("#createBudgetProductExitComponents").selectpicker('deselectAll');
        $("#createBudgetProductExitComponents").selectpicker('refresh');
        $('#createBudgetProductExitNumber').val('');
        $('#createBudgetProductExitDesc').val('');
        showBudgetProductExitList();
    }
}

function getDateBudgetComponents1() {
    var bDate = $('#createBudgetProductExitPEdate').val();
    var data = Main.dateBudgetComponents(bDate);
    $("#createBudgetProductExitComponents").find('option').remove();
    for(var e=0;e<data.length;e++){
        $("#createBudgetProductExitComponents").append('<option value="'+data[e]['RowID']+'">'+data[e]['gName']+'</option>');
    }
    $("#createBudgetProductExitComponents").selectpicker('refresh');
}

function getYearBudgetComponents7() {
    var year = $('#budgetProductExitYearSearch').val();
    var data = Main.yearBudgetComponents(year);
    $("#budgetProductExitComponentSearch").find('option').remove();
    for(var e=0;e<data.length;e++){
        $("#budgetProductExitComponentSearch").append('<option value="'+data[e]['RowID']+'">'+data[e]['gName']+'</option>');
    }
    $("#budgetProductExitComponentSearch").selectpicker('refresh');
}

function deleteBudgetProductExit(bpeid) {
    $('#deleteBudgetProductExitIdHidden').val(bpeid);
    $('#deleteBudgetProductExitModal').modal('show');
}

function doDeleteBudgetProductExit() {
    var bpeid = $('#deleteBudgetProductExitIdHidden').val();
    var action = "doDeleteBudgetProductExit";
    var param = {action:action,bpeid:bpeid};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
        $('#deleteBudgetProductExitModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        showBudgetProductExitList();
    }
}

function getTotalEntryNumberProduct() {
    var components = $('#createBudgetProductExitComponents').val();
    var components = components.join(",");
    var action = "getTotalEntryNumberProduct";
    var param = {action:action,components:components};
    var res = manageAjaxRequest(param);
    if(res != false){
        $('#totalEntryNumberProduct').val('');
        $('#totalEntryNumberProduct').val(res);
    }
}

//++++++++++++++++++++ ارتباط با پرسنل +++++++++++++++++

function contactToPersonnel() {
    var action = "contactToPersonnel";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#contactToPersonnelID").html('');
        $("#contactToPersonnelID").html(res);
        $("#contactToPersonnelName").selectpicker();
        $("#contactToPersonnelUnit").selectpicker();
        $("#contactToPersonnelNameSearch").selectpicker();
        $("#contactToPersonnelUnitSearch").selectpicker();
        showContactToPersonnelList();
    }
}

function showContactToPersonnelList(page) {
    if(typeof page == "undefined"){
        page = 1;
    }
    var name = $("#contactToPersonnelNameSearch").val();
    var unit = $("#contactToPersonnelUnitSearch").val();
    name = name.join(",");
    unit = unit.join(",");
    if (!parseInt((name.trim()).length)){
        name = '';
    }
    if (!parseInt((unit.trim()).length)){
        unit = -1;
    }
    var action = "showContactToPersonnelList";
    var param = {action:action,name:name,unit:unit,page:page};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#contactToPersonnelBody").html('');
        $("#contactToPersonnelBody").html(res);
    }
}

function createPhone() {
    $("#contactToPersonnelHiddenCid").val('');
    $("#contactToPersonnelName").selectpicker('deselectAll');
    $("#contactToPersonnelName").selectpicker('refresh');
    $("#contactToPersonnelUnit").selectpicker('deselectAll');
    $("#contactToPersonnelUnit").selectpicker('refresh');
    $("#contactToPersonnelPost").val('');
    $("#contactToPersonnelPhone1").val('');
    $("#contactToPersonnelPhone2").val('');
    $("#contactToPersonnelPhone3").val('');
    $("#contactToPersonnelEmail").val('');
    $("#contactToPersonnelMobile").val('');
    $("#contactToPersonnelColorCode").val('');
    $('#contactToPersonnelModal').modal('show');
}

function editPhone(){
    var ch = $('#contactToPersonnelBody-table').find('input');
    var cid = new Array();
    for(var c=0;c<ch.length;c++){
        if(ch[c].checked){
            cid[cid.length] = ch[c].attributes.rid.value;
        }
    }
    if(cid.length > 1){
        notice1Sec("فقط یک داخلی باید انتخاب شده باشد !","red");
        return false;
    }
    if(cid.length==0){
        notice1Sec("هیچ داخلی انتخاب نشده است !","red");
        return false;
    }
    cid = cid[0];
    var res = Main.getContactToPersonnelInfo(cid);
    if(res != false){
        $('#contactToPersonnelModal').modal('show');
        $("#contactToPersonnelHiddenCid").val(res['cid']);
        $("#contactToPersonnelName").val(res['Name'].split(','));
        $("#contactToPersonnelName").selectpicker('refresh');
        $("#contactToPersonnelUnit").val(res['Unit']);
        $("#contactToPersonnelPost").val(res['post']);
        $("#contactToPersonnelPhone1").val(res['Number1']);
        $("#contactToPersonnelPhone2").val(res['Number2']);
        $("#contactToPersonnelPhone3").val(res['Number3']);
        $("#contactToPersonnelEmail").val(res['email']);
        $("#contactToPersonnelMobile").val(res['mobile']);
        $("#contactToPersonnelColorCode").val(res['color']);
        $("#contactToPersonnelUnit").selectpicker('refresh');
    }
}

function doEditCreatePhone(){
    var cid = $("#contactToPersonnelHiddenCid").val();
    var name = $("#contactToPersonnelName").val();
    var unit = $("#contactToPersonnelUnit").val();
    name = name.join(",");
    unit = unit.join(",");
    var post = $("#contactToPersonnelPost").val();
    var phone1 = $("#contactToPersonnelPhone1").val();
    var phone2 = $("#contactToPersonnelPhone2").val();
    var phone3 = $("#contactToPersonnelPhone3").val();
    var phone_o = $("#contactToOrganizationMobile").val();
    var email = $("#contactToPersonnelEmail").val();
    var mobile = $("#contactToPersonnelMobile").val();
    var code = $("#contactToPersonnelColorCode").val();

    if (!parseInt((name.trim()).length)){
        name = 0;
    }
    if (!parseInt((unit.trim()).length)){
        notice1Sec("واحد سازمانی انتخاب نشده است !","yellow");
        return false;
    }
    if (!parseInt((phone1.trim()).length)){
       // notice1Sec("شماره داخلی 1 مشخص نشده است !","yellow");
       // return false;
    }
    if (!parseInt((code.trim()).length)){
       // notice1Sec("کد رنگ مشخص نشده است !","yellow");
       // return false;
    }
    if (!parseInt((phone2.trim()).length)){
        phone2 = 0;
    }
    if (!parseInt((phone3.trim()).length)){
        phone3 = 0;
    }
    if (!parseInt((phone_o.trim()).length)){
        phone_o = 0;
    }
    var action = "doEditCreatePhone";
    var param = {action:action,cid:cid,name:name,unit:unit,post:post,phone1:phone1,phone2:phone2,phone3:phone3,email:email,mobile:mobile,code:code,phone_o:phone_o};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
        $("#contactToPersonnelName").selectpicker('deselectAll');
        $("#contactToPersonnelName").selectpicker('refresh');
        $("#contactToPersonnelPost").val('');
        $("#contactToPersonnelPhone1").val('');
        $("#contactToPersonnelPhone2").val('');
        $("#contactToPersonnelPhone3").val('');
        $("#contactToPersonnelEmail").val('');
        $("#contactToPersonnelMobile").val('');
        showContactToPersonnelList();
    }
}

function deletePhone(){
    var ch = $('#contactToPersonnelBody-table').find('input');
    var cid = new Array();
    for(var c=0;c<ch.length;c++){
        if(ch[c].checked){
            cid[cid.length] = ch[c].attributes.rid.value;
        }
    }
    if(cid.length>1){
        notice1Sec("فقط یک داخلی باید انتخاب شده باشد !","red");
        return false;
    }
    if(cid.length==0){
        notice1Sec("هیچ داخلی انتخاب نشده است !","red");
        return false;
    }
    cid = cid[0];
    $("#contactToPersonnel_deleteIdHidden").val(cid);
    $('#contactToPersonnelDeleteModal').modal('show');
}

function dodeletePhone() {
    var cid = $("#contactToPersonnel_deleteIdHidden").val();
    var action = "dodeletePhone";
    var param = {action:action,cid:cid};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
        $('#contactToPersonnelDeleteModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        showContactToPersonnelList();
    }
}

//++++++++++++++++++++++ مدیریت جلسات +++++++++++++++++++++++

function meetingManage() {
    var action = "meetingManage";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    if(res != false) {
        $("#meetingManageID").html('');
        $("#meetingManageID").html(res[0]);
        if(jQuery.inArray(1, res[1]) !== -1) {

            $(document).ready(function(){
                $("input[type='radio']").click(function(){
                    var mtype = $("input[name='meetingManageType']:checked").val();

                    if(parseInt(mtype) == 1) {  // حالت سریع
                        $("#meetingManageInterBoss").val(-1);
                        $("input[name='meetingManageRelationship']").prop('checked',false);
                        $("#meetingManageEqualManager").selectpicker('deselectAll');
                        $("#meetingManageEqualManager").selectpicker('refresh');
                        $("input[name='meetingManageSubstitute']").prop('checked',false);

                        $("#meetingManageInterBoss"+"-div").css("display", "none");
                        $("#meetingManageSubject"+"-div").css("display", "");
                        $("#meetingManageReason"+"-div").css("display", "");
                        $("#meetingManageHeadline"+"-div").css("display", "");
                        $("#meetingManageMeetingGroup"+"-div").css("display", "");
                        $("#meetingManageRelationship"+"-div").css("display", "none");
                        $("#meetingManageMembers"+"-div").css("display", "");
                        $("#meetingManageEqualManager"+"-div").css("display", "none");
                        $("#meetingManageGatheringDate"+"-div").css("display", "");
                        $("#meetingManageGatheringTime"+"-div").css("display", "");
                        $("#meetingManageGatheringPlace"+"-div").css("display", "");
                        $("#meetingManageSubstitute"+"-div").css("display", "none");
                        $("#meetingManageSubstituteMembers"+"-div").css("display", "none");
                        $("#meetingManageRequirements"+"-div").css("display", "none");
                        $("#meetingManageDescription"+"-div").css("display", "");
                    }else {
                        $("#meetingManageInterBoss"+"-div").css("display", "");
                        $("#meetingManageSubject"+"-div").css("display", "");
                        $("#meetingManageReason"+"-div").css("display", "");
                        $("#meetingManageHeadline"+"-div").css("display", "");
                        $("#meetingManageMeetingGroup"+"-div").css("display", "");
                        $("#meetingManageRelationship"+"-div").css("display", "");
                        $("#meetingManageMembers"+"-div").css("display", "");
                        $("#meetingManageEqualManager"+"-div").css("display", "");
                        $("#meetingManageGatheringDate"+"-div").css("display", "");
                        $("#meetingManageGatheringTime"+"-div").css("display", "");
                        $("#meetingManageGatheringPlace"+"-div").css("display", "");
                        $("#meetingManageSubstitute"+"-div").css("display", "");
                        $("#meetingManageSubstituteMembers"+"-div").css("display", "none");
                        $("#meetingManageRequirements"+"-div").css("display", "");
                        $("#meetingManageDescription"+"-div").css("display", "");
                    }

                    var substitute = $("input[name='meetingManageSubstitute']:checked").val();
                    if(parseInt(substitute) == 2){  // اگر انتخاب اعضا مجاز انتخاب شد
                        $("#meetingManageSubstituteMembers"+"-div").css("display", "");
                        var members = $('#meetingManageMembers').val();
                        members = members.join(',');
                        var rst = Main.getSubstituteMembers(members);
                        $("#meetingManageSubstituteMembers").find('option').remove();
                        for(var e=0;e<rst.length;e++){
                            $("#meetingManageSubstituteMembers").append('<option value="'+rst[e]['RowID']+'">'+rst[e]['fname']+' '+rst[e]['lname']+'</option>');
                        }
                        $("#meetingManageSubstituteMembers").selectpicker('refresh');
                    }else {
                        $("#meetingManageSubstituteMembers"+"-div").css("display", "none");
                    }

                    var type = $("input[name='createSubstituteStatusType']:checked").val();
                    if(parseInt(type) !== 1){ // جانشین انتخاب نمی کنم نبود
                        $("#createSubstituteStatusUser"+"-div").css("display", "");
                    }else {
                        $("#createSubstituteStatusUser"+"-div").css("display", "none");
                    }
                });
            });

            $("#createSubstituteStatusType-label-2").tooltip({ boundary: 'window' });
            $("#createSubstituteStatusType-label-3").tooltip({ boundary: 'window' });
            $("#createSubstituteStatusType-label-4").tooltip({ boundary: 'window' });
            $("#meetingManageType-label-1").tooltip({ boundary: 'window' });
            $("#meetingManageType-label-2").tooltip({ boundary: 'window' });
            $("#meetingManageMembers").selectpicker();
            $("#addRemoveMembersSelect").selectpicker();
            $("#addGuestMembersSelect").selectpicker();
            $("#meetingManageEqualManager").selectpicker();
            $("#meetingManageSubstituteMembers").selectpicker();
            $("#createSubstituteStatusUser").selectpicker();
            $('#meetingManageGatheringDate').MdPersianDateTimePicker({targetTextSelector: '#meetingManageGatheringDate'});
            $('#meetingCommentManageGatheringDate').MdPersianDateTimePicker({targetTextSelector: '#meetingCommentManageGatheringDate'});
            $('#createMeetingJobsValidDate').MdPersianDateTimePicker({targetTextSelector: '#createMeetingJobsValidDate'});
            $('#editMeetingJobsValidDate').MdPersianDateTimePicker({targetTextSelector: '#editMeetingJobsValidDate'});
            $(function() {
                $('#meetingManageGatheringTime-col').datetimepicker({
                    pickDate: false
                });
            });
            $('#meetingCommentManageGatheringTime-col').addClass('input-append');
            $(function() {
                $('#meetingCommentManageGatheringTime-col').datetimepicker({
                    pickDate: false
                });
            });
            $('#meetingManageGatheringTime-col').addClass('input-append');
            showFirstMeetingList();
        }
        if(jQuery.inArray(2, res[1]) !== -1) {
            showMeetingGroupList();
        }
        if(jQuery.inArray(3, res[1]) !== -1) {
            //$("#budgetPriceManageComponentSearch").selectpicker();
        }
    }
}

//++++++++++++++++++++++ جلسات +++++++++++++++++++++++

function showFirstMeetingList(page) {
    if(typeof page == "undefined"){
        page = 1;
    }
    var unCode = $("#meetingManageUncodeSearch").val();
    var subject = $("#meetingManageSubjectSearch").val();
    var grouping = $("#meetingManageGroupingSearch").val();
    var sender = $("#meetingManageSenderSearch").val();
    var closed = $("#meetingManageCloseOrOpenSearch").val();
    var action = "showFirstMeetingList";
    var param = {action:action,unCode:unCode,subject:subject,grouping:grouping,sender:sender,closed:closed,page:page};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#firstMeetingManageBody").html('');
        $("#firstMeetingManageBody").html(res);
    }
}

function createFirstMeeting(){
    $("#meetingManageHiddenMid").val('');
    $("input[name='meetingManageType']").prop('checked',false);
    $("input[name=meetingManageType]").prop('disabled',false);
    $("#meetingManageInterBoss").val(-1);
    $("#meetingManageInterBoss").prop('disabled',false);
    $("#meetingManageSubject").val('');
    $("#meetingManageReason").val('');
    $("#meetingManageHeadline").val('');
    $("#meetingManageMeetingGroup").val(-1);
    $("input[name='meetingManageRelationship']").prop('checked',false);
    $("input[name=meetingManageRelationship]").prop('disabled',false);
    $("#meetingManageMembers").selectpicker('deselectAll');
    $("#meetingManageMembers").selectpicker('refresh');
    $("#meetingManageEqualManager").selectpicker('deselectAll');
    $("#meetingManageEqualManager").selectpicker('refresh');
    $("#meetingManageGatheringDate").val('');
    $("#meetingManageGatheringTime").val('');
    $("#meetingManageGatheringPlace").val('');
    $("input[name='meetingManageSubstitute']").prop('checked',false);
    $("input[name=meetingManageSubstitute]").prop('disabled',false);
    $("#meetingManageSubstituteMembers").prop('disabled',false);
    $("#meetingManageSubstituteMembers").find('option').remove();
    $("#meetingManageSubstituteMembers").selectpicker('refresh');
    $("#meetingManageRequirements").val('');
    $("#meetingManageDescription").val('');

    $("#meetingManageInterBoss"+"-div").css("display", "none");
    $("#meetingManageSubject"+"-div").css("display", "none");
    $("#meetingManageReason"+"-div").css("display", "none");
    $("#meetingManageHeadline"+"-div").css("display", "none");
    $("#meetingManageMeetingGroup"+"-div").css("display", "none");
    $("#meetingManageRelationship"+"-div").css("display", "none");
    $("#meetingManageMembers"+"-div").css("display", "none");
    $("#meetingManageEqualManager"+"-div").css("display", "none");
    $("#meetingManageGatheringDate"+"-div").css("display", "none");
    $("#meetingManageGatheringTime"+"-div").css("display", "none");
    $("#meetingManageGatheringPlace"+"-div").css("display", "none");
    $("#meetingManageSubstitute"+"-div").css("display", "none");
    $("#meetingManageSubstituteMembers"+"-div").css("display", "none");
    $("#meetingManageRequirements"+"-div").css("display", "none");
    $("#meetingManageDescription"+"-div").css("display", "none");
	$("#meetingManageMeetingGroup").prop('disabled',false);

    $('#meetingManageModal').modal('show');
}

function editFirstMeeting() {
    var fmID = $("#meetingCommentManageHiddenMid").val();
    var res = Main.getFirstMeetingInfo(fmID);
    if(res != false){
        $('#meetingManageModal').modal('show');
        $("#meetingManageHiddenMid").val(res['fmID']);
        $("input[name=meetingManageType][value="+res['mType']+"]").prop('checked',true);
        $("input[name=meetingManageType]").prop('disabled',true);

        if(parseInt(res['mType']) == 1) {  // حالت سریع
            $("#meetingManageInterBoss"+"-div").css("display", "none");
            $("#meetingManageSubject"+"-div").css("display", "");
            $("#meetingManageReason"+"-div").css("display", "");
            $("#meetingManageHeadline"+"-div").css("display", "");
            $("#meetingManageMeetingGroup"+"-div").css("display", "");
            $("#meetingManageRelationship"+"-div").css("display", "none");
            $("#meetingManageMembers"+"-div").css("display", "");
            $("#meetingManageEqualManager"+"-div").css("display", "none");
            $("#meetingManageGatheringDate"+"-div").css("display", "");
            $("#meetingManageGatheringTime"+"-div").css("display", "");
            $("#meetingManageGatheringPlace"+"-div").css("display", "");
            $("#meetingManageSubstitute"+"-div").css("display", "none");
            $("#meetingManageSubstituteMembers"+"-div").css("display", "none");
            $("#meetingManageRequirements"+"-div").css("display", "none");
            $("#meetingManageDescription"+"-div").css("display", "");
        }else {
            $("#meetingManageInterBoss"+"-div").css("display", "");
            $("#meetingManageSubject"+"-div").css("display", "");
            $("#meetingManageReason"+"-div").css("display", "");
            $("#meetingManageHeadline"+"-div").css("display", "");
            $("#meetingManageMeetingGroup"+"-div").css("display", "");
            $("#meetingManageRelationship"+"-div").css("display", "");
            $("#meetingManageMembers"+"-div").css("display", "");
            $("#meetingManageEqualManager"+"-div").css("display", "");
            $("#meetingManageGatheringDate"+"-div").css("display", "");
            $("#meetingManageGatheringTime"+"-div").css("display", "");
            $("#meetingManageGatheringPlace"+"-div").css("display", "");
            $("#meetingManageSubstitute"+"-div").css("display", "");
            $("#meetingManageSubstituteMembers"+"-div").css("display", "none");
            $("#meetingManageRequirements"+"-div").css("display", "");
            $("#meetingManageDescription"+"-div").css("display", "");
        }

        $("#meetingManageInterBoss").val(res['modirID']);
        $("#meetingManageInterBoss").prop('disabled',true);
        $("#meetingManageSubject").val(res['subject']);
        $("#meetingManageReason").val(res['reason']);
        $("#meetingManageHeadline").val(res['headline']);
        $("#meetingManageMeetingGroup").val(res['grouping']);
        $("#meetingManageMeetingGroup").prop('disabled',true);
        $("input[name=meetingManageRelationship][value="+res['relationship']+"]").prop('checked',true);
        $("input[name=meetingManageRelationship]").prop('disabled',true);
        $("#meetingManageMembers").val(res['members'].split(','));
        $("#meetingManageMembers").selectpicker('refresh');
        $("#meetingManageEqualManager").val(res['manager2'].split(','));
        $("#meetingManageEqualManager").selectpicker('refresh');
        $("#meetingManageGatheringDate").val(res['gatheringDate']);
        $("#meetingManageGatheringTime").val(res['gatheringTime']);
        $("#meetingManageGatheringPlace").val(res['gatheringPlace']);
        $("input[name=meetingManageSubstitute][value="+res['substitute']+"]").prop('checked',true);
        $("input[name=meetingManageSubstitute]").prop('disabled',true);
        if (parseInt(res['substitute']) == 2){  // انتخاب اعضا مجاز
            var rst = Main.getSubstituteMembers(res['members']);
            $("#meetingManageSubstituteMembers").find('option').remove();
            for(var e=0;e<rst.length;e++){
                $("#meetingManageSubstituteMembers").append('<option value="'+rst[e]['RowID']+'">'+rst[e]['fname']+' '+rst[e]['lname']+'</option>');
            }

            $("#meetingManageSubstituteMembers").val(res['substituteMembers'].split(','));
            $("#meetingManageSubstituteMembers").selectpicker('refresh');
            $("#meetingManageSubstituteMembers").prop('disabled',true);
            $("#meetingManageSubstituteMembers"+"-div").css("display", "");
        }else {
            $("#meetingManageSubstituteMembers").selectpicker('deselectAll');
            $("#meetingManageSubstituteMembers").selectpicker('refresh');
            $("#meetingManageSubstituteMembers"+"-div").css("display", "none");
            $("#meetingManageSubstituteMembers").prop('disabled',true);
        }
        $("#meetingManageRequirements").val(res['requirements']);
        $("#meetingManageDescription").val(res['description']);
    }
}

function doEditCreateFirstMeeting() {
	
    var mid = $("#meetingManageHiddenMid").val();
    var mType = $("input[name='meetingManageType']:checked").val();
    var interBoss = $("#meetingManageInterBoss").val();
    var subject = $("#meetingManageSubject").val();
    var reason = $("#meetingManageReason").val();
    var headline = $("#meetingManageHeadline").val();
    var meetingGroup = $("#meetingManageMeetingGroup").val();
    var relationship = $("input[name='meetingManageRelationship']:checked").val();
    var members = $('#meetingManageMembers').val();
    members = members.join(',');
    var equalManager = $("#meetingManageEqualManager").val();
    equalManager = equalManager.join(',');
    var gDate = $("#meetingManageGatheringDate").val();
    var gTime = $("#meetingManageGatheringTime").val();
    var gPlace = $("#meetingManageGatheringPlace").val();
    var substitute = $("input[name='meetingManageSubstitute']:checked").val();
    var substituteMembers = $('#meetingManageSubstituteMembers').val();
    substituteMembers = substituteMembers.join(',');
    var requirements = $("#meetingManageRequirements").val();
    var desc = $("#meetingManageDescription").val();

    if(typeof mType == "undefined"){
        notice1Sec("نوع جلسه مشخص نشده است !","yellow");
        return false;
    }
    if (!parseInt((subject.trim()).length)){
        notice1Sec("موضوع جلسه مشخص نشده است !","yellow");
        return false;
    }
    if (!parseInt((reason.trim()).length)){
        notice1Sec("علت جلسه مشخص نشده است !","yellow");
        return false;
    }
    if (!parseInt((headline.trim()).length)){
        notice1Sec("سرتیتر مشخص نشده است !","yellow");
        return false;
    }
    if (parseInt(meetingGroup) == -1){
        notice1Sec("دسته بندی جلسه مشخص نشده است !","yellow");
        return false;
    }
    if (!parseInt((members.trim()).length)){
        notice1Sec("اعضا جلسه مشخص نشده است !","yellow");
        return false;
    }
    if (!parseInt((gDate.trim()).length)){
        notice1Sec("تاریخ پیشنهادی گردهمایی مشخص نشده است !","yellow");
        return false;
    }
    if (!parseInt((gTime.trim()).length)){
        notice1Sec("ساعت پیشنهادی گردهمایی مشخص نشده است !","yellow");
        return false;
    }
    if (!parseInt((gPlace.trim()).length)){
        notice1Sec("مکان پیشنهادی گردهمایی مشخص نشده است !","yellow");
        return false;
    }
    if (parseInt(mType) == 2){  // حالت نرمال
        if(typeof relationship == "undefined"){
            notice1Sec("ارتباط کاربران با یکدیگر مشخص نشده است !","yellow");
            return false;
        }
        if(typeof substitute == "undefined"){
            notice1Sec("امکان معرفی جانشین برای اعضا مشخص نشده است !","yellow");
            return false;
        }else if (parseInt(substitute) == 2){
            if (!parseInt((substituteMembers.trim()).length)){
                notice1Sec("اعضا مجاز به انتخاب جانشین مشخص نشده است !","yellow");
                return false;
            }
        }
        if (!parseInt((requirements.trim()).length)){
            notice1Sec("نیازمندی های گردهمایی مشخص نشده است !","yellow");
            return false;
        }
    }

    var action = "doEditCreateFirstMeeting";
    var param = {action:action,mid:mid,mType:mType,interBoss:interBoss,subject:subject,reason:reason,headline:headline,meetingGroup:meetingGroup,relationship:relationship,members:members,equalManager:equalManager,gDate:gDate,gTime:gTime,gPlace:gPlace,substitute:substitute,substituteMembers:substituteMembers,requirements:requirements,desc:desc};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
        if (parseInt(mid) > 0) {
            var rst = Main.getFirstMeetingComments(mid);
            $("#meeting-manage-comment-Info-body").html('');
            $("#meeting-manage-comment-Info-body").html(rst[0]);
        }
        $('#meetingManageModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        showFirstMeetingList();
    }
}

function resetSubstituteMembers() {
    var mid = $("#meetingManageHiddenMid").val();
    if (parseInt(mid) <= 0) {
        $("input[name='meetingManageSubstitute']").prop('checked', false);
        $("#meetingManageSubstituteMembers").find('option').remove();
        $("#meetingManageSubstituteMembers").selectpicker('refresh');
        $("#meetingManageSubstituteMembers" + "-div").css("display", "none");
    }
}

function createFirstMeetingComment(fmID) {
    $("#meetingCommentManageHiddenMid").val(fmID);
    //$("#meetingCommentManageSubject").val('');
    //$("#meetingCommentManageReason").val('');
    $("#meetingCommentManageHeadline").val('');
    $("#meetingCommentManageGatheringDate").val('');
    $("#meetingCommentManageGatheringTime").val('');
    $("#meetingCommentManageGatheringPlace").val('');
    $("#meetingCommentManageRequirements").val('');
    $("#meetingCommentManageDescription").val('');

    var res = Main.getFirstMeetingComments(fmID);
    $("#meeting-manage-comment-Info-body").html('');
    $("#meeting-manage-comment-Info-body").html(res[0]);
    $('#meetingCommentManageInfoModal-under-modal').css('font-size','20px');
    if (parseInt(res[1]) == 0){
        $('#meetingCommentManageInfoModal-under-modal').html('شما نیاز به انتخاب جانشین ندارید و می توانید نظر خود را ثبت نمایید !!!');
    }else if (parseInt(res[1]) == 1){
        $('#meetingCommentManageInfoModal-under-modal').html('شما ابتدا باید وضعیت جانشین خود را مشخص نمایید و سپس اقدام به ثبت نظر نمایید !!!');
    }else {
        $('#meetingCommentManageInfoModal-under-modal').html('');
    }
    $('#meetingCommentManageInfoModal').modal('show');
    $('.modal-form-m').show();
    if((parseInt(res[2])==1)){//جلسه به صورت fast  برگزار  می شود
        $("#createSubstituteStatus-btn").hide();
        $("#doCreateFirstMeetingComment-btn").hide();
        $("#startFirstMeeting-btn").hide();
        $("#addRemoveMember-btn").hide();
        $("#addGuestMember-btn").hide();
        if(parseInt(res[3])==1){//کاربر جز  مدیران جلسه  می باشد
            $("#editFirstMeeting-btn").show();
            
        }
        else{
            $("#editFirstMeeting-btn").hide();
        }
        //$('.modal-form-m').hide();
    }
	if((parseInt(res[2])==2)){//جلسه به صورت normal  برگزار  می شود
        if(parseInt(res[3])==1){//کاربر جز  مدیران جلسه  می باشد
            $("#editFirstMeeting-btn").show();
			$("#createSubstituteStatus-btn").show();
        $("#doCreateFirstMeetingComment-btn").hide();
        $("#startFirstMeeting-btn").show();
        $("#addRemoveMember-btn").show();
        $("#addGuestMember-btn").show();
            
        }
        else{
            $("#editFirstMeeting-btn").hide();
			$("#createSubstituteStatus-btn").show();
			$("#doCreateFirstMeetingComment-btn").show();
			$("#startFirstMeeting-btn").hide();
			$("#addRemoveMember-btn").hide();
			$("#addGuestMember-btn").hide();
        }
        //$('.modal-form-m').hide();
    }
	
}

function doCreateFirstMeetingComment() {

    var fmID = $("#meetingCommentManageHiddenMid").val();
    //var subject = $("#meetingCommentManageSubject").val();
    //var reason = $("#meetingCommentManageReason").val();
    var headline = $("#meetingCommentManageHeadline").val();
    var gDate = $("#meetingCommentManageGatheringDate").val();
    var gTime = $("#meetingCommentManageGatheringTime").val();
    var gPlace = $("#meetingCommentManageGatheringPlace").val();
    var requirements = $("#meetingCommentManageRequirements").val();
    var description = $("#meetingCommentManageDescription").val();

    var action = "doCreateFirstMeetingComment";
    var param = {action:action,fmID:fmID,headline:headline,gDate:gDate,gTime:gTime,gPlace:gPlace,requirements:requirements,description:description};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
        var rst = Main.getFirstMeetingComments(fmID);
        //$("#meetingCommentManageSubject").val('');
        //$("#meetingCommentManageReason").val('');
        $("#meetingCommentManageHeadline").val('');
        $("#meetingCommentManageGatheringDate").val('');
        $("#meetingCommentManageGatheringTime").val('');
        $("#meetingCommentManageGatheringPlace").val('');
        $("#meetingCommentManageRequirements").val('');
        $("#meetingCommentManageDescription").val('');
        $("#meeting-manage-comment-Info-body").html('');
        $("#meeting-manage-comment-Info-body").html(rst[0]);
    }
}

function createSubstituteStatus() {
    var fmID = $("#meetingCommentManageHiddenMid").val();
    var data = Main.getSubstituteUsers(fmID);
    $("#createSubstituteStatusUser").find('option').remove();
    for(var e=0;e<data.length;e++){
        $("#createSubstituteStatusUser").append('<option value="'+data[e]['RowID']+'">'+data[e]['fname']+' '+data[e]['lname']+'</option>');
    }
    $("#createSubstituteStatusUser").selectpicker('refresh');
    $("input[name='createSubstituteStatusType']").prop('checked',false);
    $("#createSubstituteStatusUser"+"-div").css("display", "none");
    $('#createSubstituteStatusModal').modal('show');
}

function doCreateSubstituteStatus() {
    var fmID = $("#meetingCommentManageHiddenMid").val();
    var type = $("input[name='createSubstituteStatusType']:checked").val();
    var user = $("#createSubstituteStatusUser").val();
    user = user.join(',');
    if(typeof type == "undefined"){
        notice1Sec("وضعیت انتخاب جانشین مشخص نشده است !","yellow");
        return false;
    }else if (parseInt(type) !== 1 && !parseInt((user.trim()).length)){
        notice1Sec("جانشین انتخاب نشده است !","yellow");
        return false;
    }
    var action = "doCreateSubstituteStatus";
    var param = {action:action,fmID:fmID,type:type,user:user};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
        $('#meetingCommentManageInfoModal-under-modal').html('');
        $('#createSubstituteStatusModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
    }
}

function startFirstMeeting() {
    var fmID = $("#meetingCommentManageHiddenMid").val();
    //var res = Main.checkMeetingCommentStatus(fmID);
    $("#startFirstMeetingIdHidden").val(fmID);
    $('#startFirstMeetingModal').modal('show');
}

function doStartFirstMeeting() {
    var fmID = $("#startFirstMeetingIdHidden").val();
    var action = "doStartFirstMeeting";
    var param = {action:action,fmID:fmID};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
        $('#startFirstMeetingModal').modal('hide');
        $('#meetingCommentManageInfoModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        showFirstMeetingList();
    }
}

function createMeetingJobs() {
    var ch = $('#firstMeetingManageBody-table').find('input');
    var fmID = new Array();
    for(var c=0;c<ch.length;c++){
        if(ch[c].checked){
            fmID[fmID.length] = ch[c].attributes.rid.value;
        }
    }
    if(fmID.length > 1){
        notice1Sec("فقط یک جلسه باید انتخاب شده باشد !","red");
        return false;
    }
    if(fmID.length==0){
        notice1Sec("هیچ جلسه ای انتخاب نشده است !","red");
        return false;
    }
    fmID = fmID[0];
    $('#createMeetingJobsHiddenMid').val(fmID);
    var res = Main.getMeetingMembersAndJobs(fmID);
    $("#createMeetingJobsMembers").find('option').remove();
    $("#createMeetingJobsMembers").append('<option value="0">انتخاب کنید</option>');
    for(var e=0;e<res[0].length;e++){
        $("#createMeetingJobsMembers").append('<option value="'+res[0][e]['RowID']+'">'+res[0][e]['fname']+' '+res[0][e]['lname']+'</option>');
    }
    $('#createMeetingJobsValidDate').val('');
    $('#createMeetingJobsDescription').val('');
    $('#createMeetingJobsBody').html(res[1]);
    $('#createMeetingJobsModal').modal('show');
}

function doCreateMeetingJobs() {
    var mid = $('#createMeetingJobsHiddenMid').val();
    var member = $('#createMeetingJobsMembers').val();
    var vDate = $('#createMeetingJobsValidDate').val();
    var desc = $('#createMeetingJobsDescription').val();
    if (parseInt(member) == 0){
        notice1Sec("عضو جلسه انتخاب نشده است !","yellow");
        return false;
    }
    if (!parseInt((vDate.trim()).length)){
        notice1Sec("مهلت انجام کار مشخص نشده است !","yellow");
        return false;
    }
    if (!parseInt((desc.trim()).length)){
        notice1Sec("شرح مسئولیت مشخص نشده است !","yellow");
        return false;
    }
    var action = "doCreateMeetingJobs";
    var param = {action:action,mid:mid,member:member,vDate:vDate,desc:desc};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
        var rst = Main.getMeetingMembersAndJobs(mid);
        $('#createMeetingJobsBody').html(rst[1]);
        $('#createMeetingJobsDescription').val('');
        $('#createMeetingJobsValidDate').val('');
    }
}

function deleteMeetingJobs(jobID) {
    $("#deleteMeetingJobsIdHidden").val(jobID);
    $('#deleteMeetingJobsModal').modal('show');
}

function doDeleteMeetingJobs() {
    var jobID = $("#deleteMeetingJobsIdHidden").val();
    var mid = $('#createMeetingJobsHiddenMid').val();
    var action = "doDeleteMeetingJobs";
    var param = {action:action,mid:mid,jobID:jobID};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
        var rst = Main.getMeetingMembersAndJobs(mid);
        $('#createMeetingJobsBody').html(rst[1]);
        $('#createMeetingJobsDescription').val('');
        $('#createMeetingJobsValidDate').val('');
    }
}

function createMeetingPrerequisite(jobID) {
    var mid = $('#createMeetingJobsHiddenMid').val();
    $('#createMeetingPrerequisiteHiddenJobID').val(jobID);
    var action = "createMeetingPrerequisite";
    var param = {action:action,mid:mid,jobID:jobID};
    var res = manageAjaxRequest(param);
    $('#createMeetingPrerequisiteBody').html(res);
    $('#createMeetingPrerequisiteModal').modal('show');
}

function doCreateMeetingPrerequisite() {
    var ch = $('#createMeetingJobsHtm-tableID').find('input');
    var jobID = new Array();
    for(var c=0;c<ch.length;c++){
        if(ch[c].checked){
            jobID[jobID.length] = ch[c].attributes.rid.value;
        }
    }
    if(jobID.length==0){
        notice1Sec("هیچ مسئولیتی انتخاب نشده است !","red");
        return false;
    }
    var job_count=jobID.length;
    jobID = jobID.join(',');
    var jid = $('#createMeetingPrerequisiteHiddenJobID').val();
    var mid = $('#createMeetingJobsHiddenMid').val();
    var action = "doCreateMeetingPrerequisite";
    var param = {action:action,jid:jid,mid:mid,jobID:jobID};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
        $('#createMeetingPrerequisiteModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        var span_count=$("#MeetingPrerequisite_btn_"+jid).children("span.Prerequisite_count");
        $(span_count).text(job_count);
        if(job_count>0)
            $(span_count).show()
        else
        $(span_count).hide()
      
    }
}

function showMeetingWorkReportList(mid) {
    $('#meetingJobsListHiddenMID').val(mid);
    var action = "showMeetingWorkReportList";
    var param = {action:action,mid:mid};
    var res = manageAjaxRequest(param);
    $('#meetingJobsListBody').html(res);
    $('#meetingJobsListModal').modal('show');
}

function createMeetingWorkReport(jobID,pre_count=0) {
    var result = Main.getMeetingJobPercent(jobID);
    var result_array=$.parseJSON(result);
    var rst=result_array['percent'];
    var is_meeting_admin = result_array['is_meeting_admin'];
    $('#createMeetingWorkReportHiddenJobID').val(jobID);
    $('#createMeetingWorkReportDescription').val('');
    $('#createMeetingWorkReportPercent').val(rst);
    $("#createMeetingWorkReportFinaltick").prop('checked',false);
    var res = Main.getMeetingWorkReportHtm(jobID);
	if(res==false){
		return false;
	}
    $('#createMeetingWorkReportBody').html(res);
    $('#createMeetingWorkReportModal').modal('show');
	//createMeetingWorkReportPercent
    var percent_job = rst;
	$("#createMeetingWorkReportPercent_g .progress-bar").css('width',percent_job+"%").text(percent_job+"%");
    if(is_meeting_admin!=1){
        $("#confirmMeetingJob-btn").hide();
        $("#noConfirmMeetingJob-btn").hide();
		$("#doCreateMeetingWorkReport-btn").show();
    }
	if(is_meeting_admin==1){
		$("#confirmMeetingJob-btn").show();
        $("#noConfirmMeetingJob-btn").show();
		$("#doCreateMeetingWorkReport-btn").hide();
		
	}
    if(pre_count>0){
        $("#createMeetingWorkReportModal .modal-form-m").hide();
        $("#createMeetingWorkReportModal .modal-footer").hide();
    }
    else{
        $("#createMeetingWorkReportModal .modal-form-m").show();
        $("#createMeetingWorkReportModal .modal-footer").show();
    }
   
    $("#createMeetingWorkReportModal .modal-header h5").html('گزارش کار ' +  $("#user_full_name_"+jobID).val() )
}

function doCreateMeetingWorkReport() {
    var mid = $('#meetingJobsListHiddenMID').val();
    var jobID = $('#createMeetingWorkReportHiddenJobID').val();
    var desc = $('#createMeetingWorkReportDescription').val();
    var percent = $('#createMeetingWorkReportPercent').val();
    if ($('#createMeetingWorkReportFinaltick').is(':checked')) {
        var status = 1;
    }else{
        status = 0;
    }
    if (!parseInt((desc.trim()).length)){
        notice1Sec("شرح کار نمی تواند خالی باشد !","yellow");
        return false;
    }
    if (!parseInt((percent.trim()).length) || !$.isNumeric(percent)){
        notice1Sec("درصد پیشرفت کار مشخص نشده یا عددی نمی باشد !","yellow");
        return false;
    }
    if (parseInt(percent) <= 0 || parseInt(percent) > 100){
        notice1Sec("درصد پیشرفت کار نمی تواند کمتر از 0 یا بیشتر از 100 باشد !","yellow");
        return false;
    }
    var action = "doCreateMeetingWorkReport";
    var param = {action:action,jobID:jobID,desc:desc,status:status,percent:percent};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
        var rst = Main.getMeetingWorkReportHtm(jobID);
        $('#createMeetingWorkReportBody').html(rst);
        $('#createMeetingWorkReportDescription').val('');
        $('#createMeetingWorkReportPercent').val('');
        $("#createMeetingWorkReportFinaltick").prop('checked',false);
        showMeetingWorkReportList(mid);
    }
}

function deleteMeetingWorkReport(mwrID) {
    $("#deleteMeetingWorkReportIdHidden").val(mwrID);
    $('#deleteMeetingWorkReportModal').modal('show');
}

function doDeleteMeetingWorkReport() {
    var mid = $('#meetingJobsListHiddenMID').val();
    var jobID = $('#createMeetingWorkReportHiddenJobID').val();
    var mwrID = $("#deleteMeetingWorkReportIdHidden").val();
    var action = "doDeleteMeetingWorkReport";
    var param = {action:action,mwrID:mwrID,jobID:jobID};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
        var rst = Main.getMeetingWorkReportHtm(jobID);
        $('#createMeetingWorkReportBody').html(rst);
        showMeetingWorkReportList(mid);
    }
}

function confirmMeetingJob(){
    $('#confirmMeetingJobModal').modal('show');
}

function doConfirmMeetingJob() {
    var mid = $('#meetingJobsListHiddenMID').val();
    var jobID = $('#createMeetingWorkReportHiddenJobID').val();
    var action = "doConfirmMeetingJob";
    var param = {action:action,mid:mid,jobID:jobID};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
        showMeetingWorkReportList(mid);
        $('#confirmMeetingJobModal').modal('hide');
        $('#createMeetingWorkReportModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
    }
}

function noConfirmMeetingJob() {
    $('#noConfirmMeetingJobDescription').val('');
    $('#noConfirmMeetingJobModal').modal('show');
}

function doNoConfirmMeetingJob() {
    var mid = $('#meetingJobsListHiddenMID').val();
    var jobID = $('#createMeetingWorkReportHiddenJobID').val();
    var desc = $('#noConfirmMeetingJobDescription').val();
    var action = "doNoConfirmMeetingJob";
    var param = {action:action,mid:mid,jobID:jobID,desc:desc};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
        var rst = Main.getMeetingWorkReportHtm(jobID);
        $('#createMeetingWorkReportBody').html(rst);
        showMeetingWorkReportList(mid);
        $('#noConfirmMeetingJobModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
    }
}

function addRemoveMember() {
    var fmID = $("#meetingCommentManageHiddenMid").val();
    var res = Main.getMeetingMembers(fmID);
    $("#addRemoveMembersSelect").val(res.split(','));
    $("#addRemoveMembersSelect").selectpicker('refresh');
    $('#addRemoveMemberModal').modal('show');
}

function doAddRemoveMember() {
    var fmID = $("#meetingCommentManageHiddenMid").val();
    var members = $('#addRemoveMembersSelect').val();
    members = members.join(',');
    var action = "doAddRemoveMember";
    var param = {action:action,fmID:fmID,members:members};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
        var rst = Main.getFirstMeetingComments(fmID);
        $("#meeting-manage-comment-Info-body").html('');
        $("#meeting-manage-comment-Info-body").html(rst[0]);
        $('#addRemoveMemberModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
    }
}

function addGuestMember() {
    var fmID = $("#meetingCommentManageHiddenMid").val();
    var rst = Main.getAllowedMembers(fmID);
    $("#addGuestMembersSelect").find('option').remove();
    for(var e=0;e<rst.length;e++){
        $("#addGuestMembersSelect").append('<option value="'+rst[e]['RowID']+'">'+rst[e]['fname']+' '+rst[e]['lname']+'</option>');
    }
    $("#addGuestMembersSelect").selectpicker('refresh');
    $('#addGuestMemberModal').modal('show');
}

function doAddGuestMember() {
    var fmID = $("#meetingCommentManageHiddenMid").val();
    var members = $('#addGuestMembersSelect').val();
    members = members.join(',');
    var role = $('#addGuestMembersRole').val();
    if (!parseInt((members.trim()).length)){
        notice1Sec("هیچ کاربری انتخاب نشده است !","yellow");
        return false;
    }
    if (parseInt(role) == 0 ){
        notice1Sec("نقش کاربر را انتخاب نمایید !","yellow");
        return false;
    }
    var action = "doAddGuestMember";
    var param = {action:action,fmID:fmID,members:members,role:role};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
        var rst = Main.getFirstMeetingComments(fmID);
        $("#meeting-manage-comment-Info-body").html('');
        $("#meeting-manage-comment-Info-body").html(rst[0]);
        $('#addGuestMemberModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
    }
}

function commentMeetingWorkReport(mwrID) {
    $("#commentMeetingWorkReportIdHidden").val(mwrID);
    $("#commentMeetingWorkReportDescription").val('');
    var res = Main.getMeetingWorkReportCommentHtm(mwrID);
    $('#commentMeetingWorkReportBody').html(res);
    $('#commentMeetingWorkReportModal').modal('show');
}

function doCommentMeetingWorkReport() {
    var mwrID = $('#commentMeetingWorkReportIdHidden').val();
    var desc = $('#commentMeetingWorkReportDescription').val();
    if (!parseInt((desc.trim()).length)){
        notice1Sec("لطفا نظر خود را بنویسید !","yellow");
        return false;
    }
    var action = "doCommentMeetingWorkReport";
    var param = {action:action,mwrID:mwrID,desc:desc};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
        $('#commentMeetingWorkReportDescription').val('');
        var rst = Main.getMeetingWorkReportCommentHtm(mwrID);
        $('#commentMeetingWorkReportBody').html(rst);
    }
}
//befor_deadline   وضعیت اتمام قبل از گزارش 100%  کارها
function closeFirstMeeting(befor_deadline=0) {
    var ch = $('#firstMeetingManageBody-table').find('input');
    var fmID = new Array();
    for(var c=0;c<ch.length;c++){
        if(ch[c].checked){
            fmID[fmID.length] = ch[c].attributes.rid.value;
        }
    }
    if(fmID.length > 1){
        notice1Sec("فقط یک جلسه باید انتخاب شده باشد !","red");
        return false;
    }
    if(fmID.length==0){
        notice1Sec("هیچ جلسه ای انتخاب نشده است !","red");
        return false;
    }
    fmID = fmID[0];
    $("#closeFirstMeetingIdHidden").val(fmID);
    $('#closeFirstMeetingModal').modal('show');
}

function doCloseFirstMeeting(befor_deadline=0) {
    var fmID = $("#closeFirstMeetingIdHidden").val();
    var action = "doCloseFirstMeeting";
    var meeting_close_reason= 'تمامی مسئولیت ها به صورت 100 درصد انجام شده و جلسه با موفقیت خاتمه یافت';
    if(sessionStorage.length){
        if(sessionStorage.getItem('bs_prompt_data')){
            meeting_close_reason= sessionStorage.getItem('bs_prompt_data');//دیتای ذخیره شده در پنجره  bs_prompt
            sessionStorage.removeItem("bs_prompt_data");
        }
    }

    var param = {action:action,fmID:fmID,befor_deadline:befor_deadline,meeting_close_reason:meeting_close_reason};
    var res = manageAjaxRequest(param);

    if(res != false){
		 
        if(res==-9){
            // گزارشات به صورت 100 % ثبت نشده است و کاربر مدیر جلسه نیاز به ساختار تصمیم گیری دارد
            bs_prompt('تاییدیه  اعلام خاتمه جلسه','علت خاتمه جلسه را وارد نمایید','doCloseFirstMeeting',[1],1);
            //console.log('testttt');
			return;
        }
        notice1Sec(res,"green");
        showFirstMeetingList();
    }
}

function downloadFirstMeetingVideo() {
    var action = "downloadFirstMeetingVideo";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    $('#downloadFirstMeetingVideoBody').html(res);
    $('#downloadFirstMeetingVideoModal').modal('show');
}

function edit_meeting_jobs_item(job_id){
    //$modalID = "editMeetingJobsModal";
    var action = "get_meeting_jobs_detailes";
     var param = {action:action,job_id:job_id};
     var res = manageAjaxRequest(param);
     if(res != false) {
		$("#reasonChangeMeetingJobsDescription").val('');
        $("#editMeetingJobsValidDate").val(res[0]['valid_date']);
        $("#editMeetingJobsModal").modal('show');
        $("#editMeetingJobsHiddenMid").val(job_id);
     }
}

function do_edit_meeting_jobs_item(){
    var job_id=$("#editMeetingJobsHiddenMid").val();
    var action ="do_edit_meeting_jobs_item";
    var meeting_id=$("#meetingJobsListHiddenMID").val();
    var valid_date=$("#editMeetingJobsValidDate").val();
    var description=$("#reasonChangeMeetingJobsDescription").val();
    var param = {action:action,edit_job_id:job_id,valid_date:valid_date,job_description:description};
    var res = manageAjaxRequest(param);
    if(res != false) {
        if(res>0){
        showMeetingWorkReportList(meeting_id)
        $("#editMeetingJobsModal").modal('hide');
        notice1Sec('تغییر با موفقیت اعمال شد','green');
        }
        else{
            notice1Sec(' !!تغییری اعمال نشد ','yellow');
        }
    }
    else{
        notice1Sec('   خطا در بروزرسانی اطلاعات ','red');
        return false;
    }
}

function get_meeting_jobs_history(meeting_job_id){
    var action ="get_meeting_jobs_history";
    var param = {action:action,meeting_job_id:meeting_job_id};
    var res = manageAjaxRequest(param);
    if(res){
        if(res[1]>0){
        $("#meetingJobsHistoryListModal").modal('show');
        $("#meetingJobsHistoryListBody").html('');
        $("#meetingJobsHistoryListBody").html(res[0]);
        $("#meetingJobsHistoryListModal .modal-header").removeClass('bg-secondary')
        $("#meetingJobsHistoryListModal .modal-header").css('background','skyblue')
        }
        else{
            notice1Sec('موردی ثبت نشده است','yellow');
        }
    }

}

function select_one_row(input){
  
    var check = $(input).prop('checked');
    $('#showMeetingWorkReportList-tableID .meeting_jobs_row').each(function(){
    
        $(this).prop('checked',false);
    })
    
    $(input).prop('checked',check);
   
}

//++++++++++++++++++++++ گزارشات جلسات +++++++++++++++++++++++

function meetingReportManage() {
    var action = "meetingReportManage";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    if(res != false) {
        $("#meetingReportManageID").html('');
        $("#meetingReportManageID").html(res);
        showMeetingReportList();
    }
}

function showMeetingReportList(page) {
    if(typeof page == "undefined"){
        page = 1;
    }
    var unCode = $("#meetingReportUncodeSearch").val();
    var subject = $("#meetingReportSubjectSearch").val();
    var grouping = $("#meetingReportGroupingSearch").val();
    var status = $("#meetingReportCloseOrOpenSearch").val();
    var chartType = $("#meetingReportChartTypeSearch").val();
    var action = "showMeetingReportList";
    var param = {action:action,unCode:unCode,subject:subject,grouping:grouping,status:status,page:page};
    var res = manageAjaxRequest(param);
    if(res != false){

        $("#meetingReportManageBody").html('');
        $("#meetingReportManageBody").html(res[0]);
        createReportChartMeeting(res[1],chartType);
    }
}

function createReportChartMeeting(jsonChartData,chartType){
    //*********************************
    const chartArgs = JSON.parse(jsonChartData);
    if(typeof chartArgs != "undefined" && chartArgs[0]){
        //var ctx = document.getElementById('chrt');
        var ctx = $("#chrt");
        cleanChartArgs = {
        labels : [] ,
        value : [] ,
        bgColor : [] ,
        borderColor : []
        };
        for(let i=0;i<chartArgs.length;i++){
        const currentIndex = chartArgs[i];
        cleanChartArgs.labels.push(currentIndex.label);
        cleanChartArgs.value.push(currentIndex.value);
        cleanChartArgs.bgColor.push(currentIndex.color[0]);
        cleanChartArgs.borderColor.push(currentIndex.color[1]);
        }
        switch (chartType){
            case "0":
                var chartType1="bar";
                break;
            case "1":
                var chartType1="pie";
                break;
        }
            if(ctx){

                var myChart = new Chart(ctx, {
                type: chartType1,
                data: {
                    labels: cleanChartArgs.labels,
                    datasets: [{
                    label: ['نمودار جلسات'],
                    data: cleanChartArgs.value,
                    backgroundColor: cleanChartArgs.bgColor,
                    borderColor: cleanChartArgs.borderColor,
                    borderWidth: 1
                    }]
                },
                options: {
                    scales: {
                        yAxes: [{ticks: {beginAtZero: true}}],
                        xAxes: [{ticks: {fontSize: 14,fontStyle: "bold",fontFamily: "dubai-bold"}}]
                    }
                }
            });
        }
    }
    //*********************************
}

function showReportMeetingInfo(fmID) {
    var action = "showReportMeetingInfo";
    var param = {action:action,fmID:fmID};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#meeting-Report-Info-body").html('');
        $("#meeting-Report-Info-body").html(res);
        $('#meetingReportInfoModal').modal('show');
    }
}

function showReportMeetingWorkReportList(mid) {
    $('#meetingReportJobsListHiddenMID').val(mid);
    var action = "showReportMeetingWorkReportList";
    var param = {action:action,mid:mid};
    var res = manageAjaxRequest(param);
    $('#meetingReportJobsListBody').html(res);
    $('#meetingReportJobsListModal').modal('show');
}

function reportMeetingWorkReport(jobID) {
    var res = Main.getMeetingWorkReportHtm1(jobID);
    $('#reportMeetingWorkReportBody').html(res);
    $('#reportMeetingWorkReportModal').modal('show');
}

//++++++++++++++++++++++ دسته بندی جلسات +++++++++++++++++++++++

function showMeetingGroupList(page) {
    if(typeof page == "undefined"){
        page = 1;
    }
    var action = "showMeetingGroupList";
    var param = {action:action,page:page};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#meetingGroupManageBody").html('');
        $("#meetingGroupManageBody").html(res);
    }
}

function createMeetingGroup() {
    $("#meetingGroupManageHiddenMid").val('');
    $("#meetingGroupManageName").val('');
    $('#meetingGroupManageModal').modal('show');
}

function editMeetingGroup() {
    var ch = $('#meetingGroupManageBody-table').find('input');
    var mid = new Array();
    for(var c=0;c<ch.length;c++){
        if(ch[c].checked){
            mid[mid.length] = ch[c].attributes.rid.value;
        }
    }
    if(mid.length > 1){
        notice1Sec("فقط یک دسته باید انتخاب شده باشد !","red");
        return false;
    }
    if(mid.length==0){
        notice1Sec("هیچ دسته ای انتخاب نشده است !","red");
        return false;
    }
    mid = mid[0];
    var res = Main.getMeetingGroupInfo(mid);
    if(res != false){
        $('#meetingGroupManageModal').modal('show');
        $("#meetingGroupManageHiddenMid").val(res['mid']);
        $("#meetingGroupManageName").val(res['groupName']);
    }
}

function doEditCreateMeetingGroup() {
    var mid = $("#meetingGroupManageHiddenMid").val();
    var name = $("#meetingGroupManageName").val();
    var action = "doEditCreateMeetingGroup";
    var param = {action:action,mid:mid,name:name};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
        $('#meetingGroupManageModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        showMeetingGroupList();
    }
}

//++++++++++++++++++++++ مدیریت برچسب ها +++++++++++++++++++++++
function download_label(file_name,input){
    if($(input).attr('href')){
        $(input).click();
        return false;
    }
    var action = "download_label_ftp";
    var param = {action:action,file_name:file_name};
    var res = manageAjaxRequest(param);
    if(res){
        $(input).attr('href',res);
        $(input).click();

        return false;

    }
}
function labelManagement() {
    var action = "labelManagement";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    if(res != false) {
        $("#labelManagementID").html('');
        $("#labelManagementID").html(res[0]);
        if(jQuery.inArray(1, res[1]) !== -1) {
            $("#labelManagementPieceSearch").selectpicker();
            $("#labelManagementPiece").selectpicker();
            showLabelManagementList();
        }
        if(jQuery.inArray(2, res[1]) !== -1) {
            $("#labelRequestManagementPieceIDSearch").selectpicker();
            var ndate = new AMIB.persianCalendar('labelRequestManagementNDate');
            var ndates = new AMIB.persianCalendar('labelRequestManagementNDateSearch');
            $("#labelRequestManagementName").selectpicker();
            showLabelRequestList();
        }
        if(jQuery.inArray(3, res[1]) !== -1) {
            $("#renderingRequestPieceSearch").selectpicker();
            $("#renderingRequestManagePiece").selectpicker();
            $("#renderingRequestManageLabels").selectpicker();
            showRenderingRequestList();
        }
    }
}

function showLabelManagementList(page) {
    if(typeof page == "undefined"){
        page = 1;
    }
    var labelNum = $("#labelManagementLabelNumSearch").val();
    var dateType = $("#labelManagementDateTypeSearch").val();
    var hpCode = $("#labelManagementHPCodeSearch").val();
    var piece = $("#labelManagementPieceSearch").val();
    piece = piece.join(',');
    var status = $("#labelManagementStatusSearch").val();
    var action = "showLabelManagementList";
    var param = {action:action,labelNum:labelNum,hpCode:hpCode,piece:piece,status:status,dateType:dateType,page:page};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#labelManagementBody").html('');
        $("#labelManagementBody").html(res);
    }
}

function getLabelPieceCode() {
    var piece = $('#labelManagementPiece').val();
    piece = piece.join(',');
    var action = "getLabelPieceCode";
    var param = {action:action,piece:piece};
    var res = manageAjaxRequest(param);
    if(res != false){
        $('#labelManagementPieceCode').val(res[0]['pCode']);
    }
}

function getLabelPieceName() {
    var pCode = $('#labelManagementPieceCode').val();
    var action = "getLabelPieceName";
    var param = {action:action,pCode:pCode};
    var res = manageAjaxRequest(param);
    if(res != false){
        $('#labelManagementPiece').val(res[0]['RowID']);
        $("#labelManagementPiece").selectpicker('refresh');
    }
}

function createLabel() {
    $("#labelManagementHiddenLid").val('');
    $("#labelManagementPieceCode").val('');
    $("#labelManagementPiece").selectpicker('deselectAll');
    $("#labelManagementPiece").selectpicker('refresh');
    $("#labelManagementPrintFormatting").val(0);
    $('#labelManagementModal').modal('show');
}

function editLabel() {
    var ch = $('#labelManagementBody-table').find('input');
    var lid = new Array();
    for(var c=0;c<ch.length;c++){
        if(ch[c].checked){
            lid[lid.length] = ch[c].attributes.rid.value;
        }
    }
    if(lid.length > 1){
        notice1Sec("فقط یک برچسب باید انتخاب شده باشد !","red");
        return false;
    }
    if(lid.length==0){
        notice1Sec("هیچ برچسبی انتخاب نشده است !","red");
        return false;
    }
    lid = lid[0];
    var res = Main.getLabelInfo(lid);
    if(res != false){
        $('#labelManagementModal').modal('show');
        $("#labelManagementHiddenLid").val(res['lid']);
        $("#labelManagementPieceCode").val(res['pCode']);
        $("#labelManagementPrintFormatting").val(res['printFormat']);
        $("#labelManagementPiece").selectpicker('deselectAll');
        $("#labelManagementPiece").val(res['pieceID']);
        $("#labelManagementPiece").selectpicker('refresh');
    }
}

function doEditCreateLabel() {
    var lid = $("#labelManagementHiddenLid").val();
    var pFormat = $("#labelManagementPrintFormatting").val();
    var piece = $('#labelManagementPiece').val();
    piece = piece.join(',');
    if(!parseInt((piece.trim()).length)){
        notice1Sec("برچسب انتخاب نشده است !","yellow");
        return false;
    }
    if(parseInt(pFormat) == 0){
        notice1Sec("فرمت چاپ را انتخاب نمایید !","yellow");
        return false;
    }

    var action = "doEditCreateLabel";
    var param = {action:action,lid:lid,piece:piece,pFormat:pFormat};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
        $('#labelManagementModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        showLabelManagementList();
    }
}

function attachFileToLabel() {
    var ch = $('#labelManagementBody-table').find('input');
    var lid = new Array();
    for(var c=0;c<ch.length;c++){
        if(ch[c].checked){
            lid[lid.length] = ch[c].attributes.rid.value;
        }
    }
    if(lid.length > 1){
        notice1Sec("فقط یک برچسب باید انتخاب شده باشد !","red");
        return false;
    }
    if(lid.length==0){
        notice1Sec("هیچ برچسبی انتخاب نشده است !","red");
        return false;
    }
    lid = lid[0];
    $("#attachmentFileToLabelID").val(lid);
    $("#attachmentFileToLabelFile").val('');
    var res = Main.getAttachedLabelFile(lid);
    $("#attachmentFileToLabel-body").html('');
    $("#attachmentFileToLabel-body").html(res);
    $('#attachmentFileToLabelModal').modal('show');
}

function doAttachFileToLabel() {
    var lid = $('#attachmentFileToLabelID').val();
    var formData = new FormData();
    if($('#attachmentFileToLabelFile').val() != '' || $('#attachmentFileToLabelFile')[0].files.length != 0){
        var fileSelect = document.getElementById('attachmentFileToLabelFile');
        var files = fileSelect.files;
        if(!window.File && window.FileReader && window.FileList && window.Blob){ //if browser doesn't supports File API
            notice1Sec("Your browser does not support new File API! Please upgrade.","yellow");
            return false;
        }else {
            var total_selected_files = files.length;
            // if (parseInt(total_selected_files) > 4){
            //     notice1Sec("بیشتر از چهار فایل نمی توان انتخاب کرد !","yellow");
            //     return false;
            // }else {
                for (var x = 0; x < total_selected_files; x++) {
                    formData.append("files[]",files[x]);
                }
           // }
        }
    }else {
        notice1Sec("هیچ فایلی انتخاب نشده است !","yellow");
        return false;
    }
    formData.append("action","doAttachFileToLabel");
    formData.append("lid",lid);

    var xhr = new XMLHttpRequest();
    xhr.open('POST', 'php/managemantproccess.php',true);
    xhr.onload = function () {
        if (xhr.status === 200) {
            var res = JSON.parse(xhr.responseText);
            if(res['res'] == "false"){
                notice1Sec(res['data'],'yellow');
            }else{
                notice1Sec('بارگذاری انجام شد.', "green");
                var rst = Main.getAttachedLabelFile(lid);
                $("#attachmentFileToLabel-body").html('');
                $("#attachmentFileToLabel-body").html(rst);
                $("#attachmentFileToLabelFile").val('');
                showLabelManagementList();
            }
        }else{
            notice1Sec("خطایی رخ داده است !",'yellow');
        }
    };
    xhr.send(formData);
}

function deleteAttachLabelFile(laid){
    var lid = $("#attachmentFileToLabelID").val();
    var action = "deleteAttachLabelFile";
    var param = {action:action,lid:lid,laid:laid};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res, "green");
        var rst = Main.getAttachedLabelFile(lid);
        $("#attachmentFileToLabel-body").html('');
        $("#attachmentFileToLabel-body").html(rst);
    }
}

function showLabelManageAttachment(lid) {
    var action = "showLabelManageAttachment";
    var param = {action:action,lid:lid};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#labelAttachmentFile-body").html('');
        $("#labelAttachmentFile-body").html(res);
        $('#labelAttachmentFileModal').modal('show');
    }
}

function confirmationLabel(lid) {
    $("#confirmationLabelIdHidden").val(lid);
    $('#confirmationLabelModal').modal('show');
}

function doConfirmationLabel() {
    var lid = $("#confirmationLabelIdHidden").val();
    var action = "doConfirmationLabel";
    var param = {action:action,lid:lid};
    var res = manageAjaxRequest(param);
    if (res != false) {
        notice1Sec(res, "green");
        $('#confirmationLabelModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        showLabelManagementList();
    }
}

function changeRequestLabel(lid) {
    $("#changeRequestLabelHiddenLid").val(lid);
    var res = Main.getChangeRequestLabelDesc(lid);
    $("#changeRequestLabelDescription").val('');
    $("#changeRequestLabelDescription").val(res['description']);
    $('#changeRequestLabelModal').modal('show');
}

function doChangeRequestLabel() {
    var lid = $("#changeRequestLabelHiddenLid").val();
    var desc = $("#changeRequestLabelDescription").val();
    if(!parseInt((desc.trim()).length)){
        notice1Sec("توضیحات مشخص نشده است !","yellow");
        return false;
    }
    var action = "doChangeRequestLabel";
    var param = {action:action,lid:lid,desc:desc};
    var res = manageAjaxRequest(param);
    if (res != false) {
        notice1Sec(res, "green");
        $('#changeRequestLabelModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        showLabelManagementList();
    }
}

function sendSMSForLabelConfirmation() {
    $("#sendSMSForLabelConfirmationType").val(0);
    $('#sendSMSForLabelConfirmationModal').modal('show');
}

function doSendSMSForLabelConfirmation() {
    var type = $("#sendSMSForLabelConfirmationType").val();
    if (parseInt(type) == 0){
        notice1Sec("بخش را انتخاب نمایید !","yellow");
        return false;
    }
    var action = "doSendSMSForLabelConfirmation";
    var param = {action:action,type:type};
    var res = manageAjaxRequest(param);
    if (res != false) {
        notice1Sec('ارسال با موفقیت انجام شد.', "green");
    }
}

//++++++++++++++++++++++ درخواست برچسب ها +++++++++++++++++++++++

function showLabelRequestList(page) {
    if(typeof page == "undefined"){
        page = 1;
    }
    var name = $("#labelRequestManagementNameSearch").val();
    var nDate = $("#labelRequestManagementNDateSearch").val();
    var bNum = $("#labelRequestManagementBNumSearch").val();
    var status = $("#labelRequestManagementStatusSearch").val();
    var closeType = $("#labelRequestManagementCloseTypeSearch").val();
    var pieceID = $("#labelRequestManagementPieceIDSearch").val();
    pieceID = pieceID.join(',');
    if (!parseInt((pieceID.trim()).length)){
        pieceID = 0;
    }
    var action = "showLabelRequestList";
    var param = {action:action,name:name,nDate:nDate,bNum:bNum,status:status,closeType:closeType,pieceID:pieceID,page:page};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#labelRequestManagementBody").html('');
        $("#labelRequestManagementBody").html(res);
    }
}

function createLabelRequest() {
    $("#labelRequestManagementHiddenLRid").val('');
    $("#labelRequestManagementNDate").val('');
    $("#labelRequestManagementBNumber").val('');
    $("#labelRequestManagementDescription").val('');
    $('#labelRequestManagementModal').modal('show');
}

function editLabelRequest() {
    var ch = $('#labelRequestManagementBody-table').find('input');
    var lrid = new Array();
    for(var c=0;c<ch.length;c++){
        if(ch[c].checked){
            lrid[lrid.length] = ch[c].attributes.rid.value;
        }
    }
    if(lrid.length > 1){
        notice1Sec("فقط یک درخواست باید انتخاب شده باشد !","red");
        return false;
    }
    if(lrid.length==0){
        notice1Sec("هیچ درخواستی انتخاب نشده است !","red");
        return false;
    }
    lrid = lrid[0];
    var res = Main.getLabelRequestInfo(lrid);
    if(res != false){
        $('#labelRequestManagementModal').modal('show');
        $("#labelRequestManagementHiddenLRid").val(res['lrid']);
        $("#labelRequestManagementNDate").val(res['needDate']);
        $("#labelRequestManagementBNumber").val(res['brName']);
        $("#labelRequestManagementDescription").val(res['description']);
    }
}

function doEditCreateLabelRequest() {
    var lrid = $("#labelRequestManagementHiddenLRid").val();
    var ndate = $("#labelRequestManagementNDate").val();
    var bnumber = $('#labelRequestManagementBNumber').val();
    var desc = $('#labelRequestManagementDescription').val();
    if(!parseInt((ndate.trim()).length)){
        notice1Sec("تاریخ نیاز مشخص نشده است !","yellow");
        return false;
    }
    if(!parseInt((bnumber.trim()).length)){
        notice1Sec("شماره درخواست خرید مشخص نشده است !","yellow");
        return false;
    }
    var action = "doEditCreateLabelRequest";
    var param = {action:action,lrid:lrid,ndate:ndate,bnumber:bnumber,desc:desc};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
        $('#labelRequestManagementModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        showLabelRequestList();
    }
}

function deleteLabelRequest() {
    var ch = $('#labelRequestManagementBody-table').find('input');
    var lrid = new Array();
    for(var c=0;c<ch.length;c++){
        if(ch[c].checked){
            lrid[lrid.length] = ch[c].attributes.rid.value;
        }
    }
    if(lrid.length > 1){
        notice1Sec("فقط یک درخواست باید انتخاب شده باشد !","red");
        return false;
    }
    if(lrid.length==0){
        notice1Sec("هیچ درخواستی انتخاب نشده است !","red");
        return false;
    }
    lrid = lrid[0];
    $("#deleteLabelRequestModalIdHidden").val(lrid);
    $('#deleteLabelRequestModal').modal('show');
}

function dodeleteLabelRequest() {
    var lrid = $("#deleteLabelRequestModalIdHidden").val();
    var action = "dodeleteLabelRequest";
    var param = {action:action,lrid:lrid};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
        $('#deleteLabelRequestModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        showLabelRequestList();
    }
}

function attachFileToLabelRequest() {
    var ch = $('#labelRequestManagementBody-table').find('input');
    var lrid = new Array();
    for(var c=0;c<ch.length;c++){
        if(ch[c].checked){
            lrid[lrid.length] = ch[c].attributes.rid.value;
        }
    }
    if(lrid.length > 1){
        notice1Sec("فقط یک درخواست باید انتخاب شده باشد !","red");
        return false;
    }
    if(lrid.length==0){
        notice1Sec("هیچ درخواستی انتخاب نشده است !","red");
        return false;
    }
    lrid = lrid[0];
    $("#attachmentFileToLabelRequestID").val(lrid);
    $("#attachmentFileToLabelRequestFile").val('');
    $("#attachmentFileToLabelRequestDimension").val('');
    $("#attachmentFileToLabelRequestDescription").val('');
    var res = Main.getAttachedLabelRequestFile(lrid);
    $("#attachmentFileToLabelRequest-body").html('');
    $("#attachmentFileToLabelRequest-body").html(res);
    $('#attachmentFileToLabelRequestModal').modal('show');
}

function doAttachFileToLabelRequest() {
    var lrid = $('#attachmentFileToLabelRequestID').val();
    var dimension = $('#attachmentFileToLabelRequestDimension').val();
    var desc = $('#attachmentFileToLabelRequestDescription').val();
    var formData = new FormData();
    if($('#attachmentFileToLabelRequestFile').val() != '' || $('#attachmentFileToLabelRequestFile')[0].files.length != 0){
        var fileSelect = document.getElementById('attachmentFileToLabelRequestFile');
        var files = fileSelect.files;
        if(!window.File && window.FileReader && window.FileList && window.Blob){ //if browser doesn't supports File API
            notice1Sec("Your browser does not support new File API! Please upgrade.","yellow");
            return false;
        }else {
            var total_selected_files = files.length;
            for (var x = 0; x < total_selected_files; x++) {
                formData.append("files[]",files[x]);
            }
        }
    }else {
        notice1Sec("هیچ فایلی انتخاب نشده است !","yellow");
        return false;
    }
    if(!parseInt((dimension.trim()).length)){
        notice1Sec("ابعاد مشخص نشده است !","yellow");
        return false;
    }
    formData.append("action","doAttachFileToLabelRequest");
    formData.append("lrid",lrid);
    formData.append("dimension",dimension);
    formData.append("desc",desc);

    var xhr = new XMLHttpRequest();
    xhr.open('POST', 'php/managemantproccess.php',true);
    xhr.onload = function () {
        if (xhr.status === 200) {
            var res = JSON.parse(xhr.responseText);
            if(res['res'] == "false"){
                notice1Sec(res['data'],'yellow');
            }else{
                notice1Sec('بارگذاری انجام شد.', "green");
                var rst = Main.getAttachedLabelRequestFile(lrid);
                $("#attachmentFileToLabelRequest-body").html('');
                $("#attachmentFileToLabelRequest-body").html(rst);
                $("#attachmentFileToLabelRequestFile").val('');
            }
        }else{
            notice1Sec("خطایی رخ داده است !",'yellow');
        }
    };
    xhr.send(formData);
}

function deleteAttachLabelRequestFile(lraid){
    var lrid = $('#attachmentFileToLabelRequestID').val();
    var action = "deleteAttachLabelRequestFile";
    var param = {action:action,lraid:lraid};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res, "green");
        var rst = Main.getAttachedLabelRequestFile(lrid);
        $("#attachmentFileToLabelRequest-body").html('');
        $("#attachmentFileToLabelRequest-body").html(rst);
    }
}

function showLabelRequestAttachment(lrid) {
    $('#attachmentFileToLabelRequestID').val(lrid);
    var action = "showLabelRequestAttachment";
    var param = {action:action,lrid:lrid};
    var res = manageAjaxRequest(param);
    $("#labelRequestAttachmentFile-body").html('');
    $("#labelRequestAttachmentFile-body").html(res);
    $('#labelRequestAttachmentFileModal').modal('show');

}

function confirmationAttachLabelRequestFile(lraid) {
    $('#confirmationAttachLabelRequestZincIdHidden').val(lraid);
    $('#confirmationAttachLabelRequestActioner').val(0);
    $('#confirmationAttachLabelRequestDescription').val('');
    $('#confirmationAttachLabelRequestZincModal').modal('show');
}

function doConfirmationAttachLabelRequestFile() {
    var lraid = $('#confirmationAttachLabelRequestZincIdHidden').val();
    var lrid = $('#attachmentFileToLabelRequestID').val();
    var actioner = $('#confirmationAttachLabelRequestActioner').val();
    var desc = $('#confirmationAttachLabelRequestDescription').val();
    if (parseInt(actioner) == 0){
        notice1Sec("شخص اقدام کننده چاپ را انتخاب کنید !","yellow");
        return false;
    }
    var action = "doConfirmationAttachLabelRequestFile";
    var param = {action:action,lraid:lraid,actioner:actioner,desc:desc};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res, "green");
        showLabelRequestAttachment(lrid);
    }
}

function finisherAttachLabelRequestFile(lraid) {
    $('#finisherAttachLabelRequestFileIdHidden').val(lraid);
    $('#finisherAttachLabelRequestModal').modal('show');
}

function doFinisherAttachLabelRequestFile() {
    var lraid = $('#finisherAttachLabelRequestFileIdHidden').val();
    var lrid = $('#attachmentFileToLabelRequestID').val();
    var action = "doFinisherAttachLabelRequestFile";
    var param = {action:action,lraid:lraid};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res, "green");
        showLabelRequestAttachment(lrid);
    }
}

function confirmationLabelRequest(lrid) {
    $("#confirmationLabelRequestIdHidden").val(lrid);
    $('#confirmationLabelRequestModal').modal('show');
}

function doConfirmationLabelRequest() {
    var lrid = $("#confirmationLabelRequestIdHidden").val();
    var action = "doConfirmationLabelRequest";
    var param = {action:action,lrid:lrid};
    var res = manageAjaxRequest(param);
    if (res != false) {
        notice1Sec(res, "green");
        $('#confirmationLabelRequestModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        showLabelRequestList();
    }
}

function getLabelHPCode() {
    var lid = $('#labelRequestDetailsLid').val();
    lid = lid.join(',');
    var action = "getLabelHPCode";
    var param = {action:action,lid:lid};
    var res = manageAjaxRequest(param);
    if (res != false) {
        $("#labelRequestDetailsHPCode").val(res[0]['HPCode']);
    }else {
        $("#labelRequestDetailsHPCode").val('');
    }
}

function getLabelName() {
    var hpCode = $('#labelRequestDetailsHPCode').val();
    if (parseInt(hpCode) == 0 || !parseInt((hpCode.trim()).length)){
        $("#labelRequestDetailsLid").selectpicker('deselectAll');
        $("#labelRequestDetailsLid").selectpicker('refresh');
    }else {
        var action = "getLabelName";
        var param = {action:action,hpCode:hpCode};
        var res = manageAjaxRequest(param);
        if (res != false) {
            $("#labelRequestDetailsLid").val(res[0]['pid']);
            $("#labelRequestDetailsLid").selectpicker('refresh');
        }else {
            $("#labelRequestDetailsLid").selectpicker('deselectAll');
            $("#labelRequestDetailsLid").selectpicker('refresh');
        }
    }
}

function createLabelRequestDetails(lrid) {
    $("#labelRequestDetailsIdHidden").val(lrid);
    $("#labelRequestDetailsLid").selectpicker('deselectAll');
    $("#labelRequestDetailsLid").selectpicker('refresh');
    $("#labelRequestDetailsHPCode").val('');
    $("#labelRequestDetailsNumber").val('');
    var res = Main.getLabelRequestDetails(lrid);
    if (res[0] != false && typeof res[0] !== "undefined") {
        $("#labelRequestDetailsModal-body").html('');
        $("#labelRequestDetailsModal-body").html(res[1]);
        $('#labelRequestDetailsModal').modal('show');
    }
}

function doCreateLabelRequestDetails(){
    var lrid = $("#labelRequestDetailsIdHidden").val();
    var lid = $("#labelRequestDetailsLid").val();
    lid = lid.join(',');
    var number = $("#labelRequestDetailsNumber").val();

    if(!parseInt((lid.trim()).length)){
        notice1Sec("برچسب انتخاب نشده است !","yellow");
        return false;
    }
    if(!parseInt((number.trim()).length) || !$.isNumeric(number)){
        notice1Sec("تعداد برچسب عددی نیست یا مشخص نشده است !","yellow");
        return false;
    }

    var action = "doCreateLabelRequestDetails";
    var param = {action:action,lrid:lrid,lid:lid,number:number};
    var res = manageAjaxRequest(param);
    if (res != false) {
        $("#labelRequestDetailsLid").selectpicker('deselectAll');
        $("#labelRequestDetailsLid").selectpicker('refresh');
        $("#labelRequestDetailsHPCode").val('');
        $("#labelRequestDetailsNumber").val('');
        var rst = Main.getLabelRequestDetails(lrid);
        $("#labelRequestDetailsModal-body").html('');
        $("#labelRequestDetailsModal-body").html(rst[1]);
    }
}

function deleteLabelRequestDetails(lrdid) {
    var lrid = $("#labelRequestDetailsIdHidden").val();
    var action = "deleteLabelRequestDetails";
    var param = {action:action,lrid:lrid,lrdid:lrdid};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res, "green");
        var rst = Main.getLabelRequestDetails(lrid);
        $("#labelRequestDetailsModal-body").html('');
        $("#labelRequestDetailsModal-body").html(rst[1]);
    }
}

function confirmationLabelRequestDetails(lrdid) {
    var lrid = $("#labelRequestDetailsIdHidden").val();
    var action = "confirmationLabelRequestDetails";
    var param = {action:action,lrdid:lrdid};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res, "green");
        var rst = Main.getLabelRequestDetails(lrid);
        $("#labelRequestDetailsModal-body").html('');
        $("#labelRequestDetailsModal-body").html(rst[1]);
    }
}

function closedLabelRequest() {
    var ch = $('#labelRequestManagementBody-table').find('input');
    var lrid = new Array();
    for(var c=0;c<ch.length;c++){
        if(ch[c].checked){
            lrid[lrid.length] = ch[c].attributes.rid.value;
        }
    }
    if(lrid.length > 1){
        notice1Sec("فقط یک درخواست باید انتخاب شده باشد !","red");
        return false;
    }
    if(lrid.length==0){
        notice1Sec("هیچ درخواستی انتخاب نشده است !","red");
        return false;
    }
    lrid = lrid[0];
    $("#closedLabelRequestIdHidden").val(lrid);
    $('#closedLabelRequestModal').modal('show');
}

function doClosedLabelRequest() {
    var lrid = $("#closedLabelRequestIdHidden").val();
    var action = "doClosedLabelRequest";
    var param = {action:action,lrid:lrid};
    var res = manageAjaxRequest(param);
    if (res != false) {
        notice1Sec(res, "green");
        $('#closedLabelRequestModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        showLabelRequestList();
    }
}

function doCreateLabelRequestExcel(){
    var lrid = $("#labelRequestDetailsIdHidden").val();
    var action = "doCreateLabelRequestExcel";
    var param = {action:action,lrid:lrid};
    var res = manageAjaxRequest(param);
    if (res != false) {
        window.open(res);
    }
}

//++++++++++++++++++++++ درخواست render +++++++++++++++++++++++

function showRenderingRequestList(page) {
    if(typeof page == "undefined"){
        page = 1;
    }
    var piece = $("#renderingRequestPieceSearch").val();
    piece = piece.join(',');

    var action = "showRenderingRequestList";
    var param = {action:action,piece:piece,page:page};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#renderingRequestManageBody").html('');
        $("#renderingRequestManageBody").html(res);
    }
}

function createRenderingRequest() {
    $("#renderingRequestManageHiddenRid").val('');
    $("#renderingRequestManagePiece").selectpicker('deselectAll');
    $("#renderingRequestManagePiece").selectpicker('refresh');
    $("#renderingRequestManageRequestType").val(-1);
    $("#renderingRequestManageDescription").val('');
    $("#renderingRequestManagePCode").val('');
    $('#renderingRequestManageModal').modal('show');
}

function editRenderingRequest() {
    var ch = $('#renderingRequestManageBody-table').find('input');
    var rid = new Array();
    for(var c=0;c<ch.length;c++){
        if(ch[c].checked){
            rid[rid.length] = ch[c].attributes.rid.value;
        }
    }
    if(rid.length > 1){
        notice1Sec("فقط یک درخواست باید انتخاب شده باشد !","red");
        return false;
    }
    if(rid.length==0){
        notice1Sec("هیچ درخواستی انتخاب نشده است !","red");
        return false;
    }
    rid = rid[0];
    var res = Main.getRenderingRequestInfo(rid);
    if(res != false){
        $('#renderingRequestManageModal').modal('show');
        $("#renderingRequestManageHiddenRid").val(res['rid']);
        $("#renderingRequestManagePCode").val(res['pCode']);
        $("#renderingRequestManageDescription").val(res['description']);
        $("#renderingRequestManageRequestType").val(res['type']);
        $("#renderingRequestManagePiece").selectpicker('deselectAll');
        $("#renderingRequestManagePiece").val(res['pieceID']);
        $("#renderingRequestManagePiece").selectpicker('refresh');
    }
}

function doEditCreateRenderingRequest() {
    var rid = $("#renderingRequestManageHiddenRid").val();
    var desc = $("#renderingRequestManageDescription").val();
    var type = $("#renderingRequestManageRequestType").val();
    var piece = $('#renderingRequestManagePiece').val();
    piece = piece.join(',');
    if(!parseInt((piece.trim()).length)){
        notice1Sec("برچسب انتخاب نشده است !","yellow");
        return false;
    }

    var rst = Main.checkRenderingRequest(piece);
    if (rst){
        $('#checkRenderingRequestModal').modal('show');
    }else {
        var action = "doEditCreateRenderingRequest";
        var param = {action:action,rid:rid,desc:desc,piece:piece,type:type};
        var res = manageAjaxRequest(param);
        if(res != false){
            notice1Sec(res,"green");
            $('#renderingRequestManageModal').modal('hide');
            $('body').removeClass('modal-open');
            $('.modal-backdrop').remove();
            showRenderingRequestList();
        }
    }
}

function doEditCreateRenderingRequest1() {
    var rid = $("#renderingRequestManageHiddenRid").val();
    var desc = $("#renderingRequestManageDescription").val();
    var piece = $('#renderingRequestManagePiece').val();
    piece = piece.join(',');
    if(!parseInt((piece.trim()).length)){
        notice1Sec("برچسب انتخاب نشده است !","yellow");
        return false;
    }
    var action = "doEditCreateRenderingRequest";
    var param = {action:action,rid:rid,desc:desc,piece:piece};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
        $('#renderingRequestManageModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        showRenderingRequestList();
    }
}

function attachFileToRenderingRequest() {
    var ch = $('#renderingRequestManageBody-table').find('input');
    var rid = new Array();
    for(var c=0;c<ch.length;c++){
        if(ch[c].checked){
            rid[rid.length] = ch[c].attributes.rid.value;
        }
    }
    if(rid.length > 1){
        notice1Sec("فقط یک درخواست باید انتخاب شده باشد !","red");
        return false;
    }
    if(rid.length==0){
        notice1Sec("هیچ درخواستی انتخاب نشده است !","red");
        return false;
    }
    rid = rid[0];
    $("#attachmentFileToRenderingRequestID").val(rid);

    var res = Main.getAttachedRenderingRequestFile(rid);
    $("#attachmentFileToRenderingRequest-body").html('');
    $("#attachmentFileToRenderingRequest-body").html(res[0]);
    $("#attachmentFileToRenderingRequestType").val(res[1]);
    if (parseInt(res[1]) == 0 ){  // برچسب
        $("#attachmentFileToRenderingRequestFile").val('');
        $("#attachmentFileToRenderingRequestThicness").val('');
        $("#attachmentFileToRenderingRequestSize").val('');
        $("#attachmentFileToRenderingRequestLatin").val('');
        $("#attachmentFileToRenderingRequestMapFile").val('');
        $("#attachmentFileToRenderingRequestCartoonSize").val('');
        $("#renderingRequestManageLabels").selectpicker('deselectAll');
        $("#renderingRequestManageLabels").selectpicker('refresh');

        $("#attachmentFileToRenderingRequestFile"+"-div").css("display", "");
        $("#attachmentFileToRenderingRequestThicness"+"-div").css("display", "");
        $("#attachmentFileToRenderingRequestSize"+"-div").css("display", "");
        $("#attachmentFileToRenderingRequestLatin"+"-div").css("display", "");
        $("#attachmentFileToRenderingRequestMapFile"+"-div").css("display", "none");
        $("#attachmentFileToRenderingRequestCartoonSize"+"-div").css("display", "none");
        $("#renderingRequestManageLabels"+"-div").css("display", "none");
    }else {  // کارتن
        $("#attachmentFileToRenderingRequestFile").val('');
        $("#attachmentFileToRenderingRequestThicness").val('');
        $("#attachmentFileToRenderingRequestSize").val('');
        $("#attachmentFileToRenderingRequestLatin").val('');
        $("#attachmentFileToRenderingRequestMapFile").val('');
        $("#attachmentFileToRenderingRequestCartoonSize").val('');
        $("#renderingRequestManageLabels").selectpicker('deselectAll');
        $("#renderingRequestManageLabels").selectpicker('refresh');

        $("#attachmentFileToRenderingRequestFile"+"-div").css("display", "none");
        $("#attachmentFileToRenderingRequestThicness"+"-div").css("display", "none");
        $("#attachmentFileToRenderingRequestSize"+"-div").css("display", "none");
        $("#attachmentFileToRenderingRequestLatin"+"-div").css("display", "none");
        $("#attachmentFileToRenderingRequestMapFile"+"-div").css("display", "");
        $("#attachmentFileToRenderingRequestCartoonSize"+"-div").css("display", "");
        $("#renderingRequestManageLabels"+"-div").css("display", "");
    }
    $('#attachmentFileToRenderingRequestModal').modal('show');
}

function doAttachFileToRenderingRequest() {
    var rid = $('#attachmentFileToRenderingRequestID').val();
    var thicness = $("#attachmentFileToRenderingRequestThicness").val();
    var size = $("#attachmentFileToRenderingRequestSize").val();
    var latin = $("#attachmentFileToRenderingRequestLatin").val();
    var type = $('#attachmentFileToRenderingRequestType').val();
    var cartoonSize = $("#attachmentFileToRenderingRequestCartoonSize").val();
    var labels = $('#renderingRequestManageLabels').val();
    labels = labels.join(',');
    var formData = new FormData();

    if (parseInt(type) == 0){  // برچسب
        if($('#attachmentFileToRenderingRequestFile').val() != '' || $('#attachmentFileToRenderingRequestFile')[0].files.length != 0){
            var fileSelect = document.getElementById('attachmentFileToRenderingRequestFile');
            var files = fileSelect.files;
            if(!window.File && window.FileReader && window.FileList && window.Blob){ //if browser doesn't supports File API
                notice1Sec("Your browser does not support new File API! Please upgrade.","yellow");
                return false;
            }else {
                var total_selected_files = files.length;
                if (parseInt(total_selected_files) > 1){
                    notice1Sec("بیشتر از یک فایل نمی توان انتخاب کرد !","yellow");
                    return false;
                }else {
                    for (var x = 0; x < total_selected_files; x++) {
                        formData.append("files[]",files[x]);
                    }
                }
                formData.append("filesm[]",'');
            }
        }else {
            notice1Sec("هیچ فایلی انتخاب نشده است !","yellow");
            return false;
        }
    }else {  // کارتن
        if($('#attachmentFileToRenderingRequestMapFile').val() != '' || $('#attachmentFileToRenderingRequestMapFile')[0].files.length != 0){
            var fileSelect1 = document.getElementById('attachmentFileToRenderingRequestMapFile');
            var files1 = fileSelect1.files;
            if(!window.File && window.FileReader && window.FileList && window.Blob){ //if browser doesn't supports File API
                notice1Sec("Your browser does not support new File API! Please upgrade.","yellow");
                return false;
            }else {
                var total_selected_files1 = files1.length;
                for (var x = 0; x < total_selected_files1; x++) {
                    formData.append("filesm[]",files1[x]);
                }
            }
            formData.append("files[]",'');
        }else {
            notice1Sec("هیچ فایلی انتخاب نشده است !","yellow");
            return false;
        }
    }

    formData.append("action","doAttachFileToRenderingRequest");
    formData.append("rid",rid);
    formData.append("thicness",thicness);
    formData.append("size",size);
    formData.append("latin",latin);
    formData.append("type",type);
    formData.append("cartoonSize",cartoonSize);
    formData.append("labels",labels);

    var xhr = new XMLHttpRequest();
    xhr.open('POST', 'php/managemantproccess.php',true);
    xhr.onload = function () {
        if (xhr.status === 200) {
            var res = JSON.parse(xhr.responseText);
            if(res['res'] == "false"){
                notice1Sec(res['data'],'yellow');
            }else{
                notice1Sec('بارگذاری انجام شد.', "green");
                var rst = Main.getAttachedRenderingRequestFile(rid);
                $("#attachmentFileToRenderingRequest-body").html('');
                $("#attachmentFileToRenderingRequest-body").html(rst[0]);
                $("#attachmentFileToRenderingRequestFile").val('');
                $("#attachmentFileToRenderingRequestThicness").val('');
                $("#attachmentFileToRenderingRequestSize").val('');
                $("#attachmentFileToRenderingRequestLatin").val('');
                $("#attachmentFileToRenderingRequestMapFile").val('');
                $("#attachmentFileToRenderingRequestCartoonSize").val('');
                $("#renderingRequestManageLabels").selectpicker('deselectAll');
                $("#renderingRequestManageLabels").selectpicker('refresh');
                showRenderingRequestList();
            }
        }else{
            notice1Sec("خطایی رخ داده است !",'yellow');
        }
    };
    xhr.send(formData);
}

function deleteAttachRenderingRequestFile(rid,type) {
    var lrid = $('#attachmentFileToRenderingRequestID').val();
    var action = "deleteAttachRenderingRequestFile";
    var param = {action:action,rid:rid,type:type};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res, "green");
        var rst = Main.getAttachedRenderingRequestFile(lrid);
        $("#attachmentFileToRenderingRequest-body").html('');
        $("#attachmentFileToRenderingRequest-body").html(rst[0]);
        showRenderingRequestList();
    }
}

function showRenderingRequestAttachment(rid) {
    var action = "showRenderingRequestAttachment";
    var param = {action:action,rid:rid};
    var res = manageAjaxRequest(param);
    $("#renderingRequestAttachmentFile-body").html('');
    $("#renderingRequestAttachmentFile-body").html(res);
    $('#renderingRequestAttachmentFileModal').modal('show');
}

function infoRenderingRequestAttachment(rid) {
    var action = "infoRenderingRequestAttachment";
    var param = {action:action,rid:rid};
    var res = manageAjaxRequest(param);
    $("#infoRenderingRequestAttachmentFile-body").html('');
    $("#infoRenderingRequestAttachmentFile-body").html(res);
    $('#infoRenderingRequestAttachmentFileModal').modal('show');
}

function usedRenderingRequestAttachment(rid) {
    var action = "usedRenderingRequestAttachment";
    var param = {action:action,rid:rid};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
        showRenderingRequestList();
    }
}

function getLabelPieceCodeWithName() {
    var piece = $('#renderingRequestManagePiece').val();
    piece = piece.join(',');
    var action = "getLabelPieceCodeWithName";
    var param = {action:action,piece:piece};
    var res = manageAjaxRequest(param);
    if(res != false){
        $('#renderingRequestManagePCode').val(res[0]['pCode']);
    }
}

function getLabelPieceNameWithCode() {
    var pCode = $('#renderingRequestManagePCode').val();
    var action = "getLabelPieceNameWithCode";
    var param = {action:action,pCode:pCode};
    var res = manageAjaxRequest(param);
    if(res != false){
        $('#renderingRequestManagePiece').val(res[0]['RowID']);
        $("#renderingRequestManagePiece").selectpicker('refresh');
    }
}

//++++++++++++++++++++++ مدیریت برنامه دستگاه ها +++++++++++++++++++++++

function devicesProgramManage() {
    var action = "devicesProgramManage";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    if(res != false) {
        $("#devicesProgramManageID").html('');
        $("#devicesProgramManageID").html(res[0]);
        if(jQuery.inArray(1, res[1]) !== -1) {
            var bpsDate = new AMIB.persianCalendar('devicesProgramManageSDateSearch');
            var bpeDate = new AMIB.persianCalendar('devicesProgramManageEDateSearch');
            showDevicesProgramManageList();
        }
        if(jQuery.inArray(2, res[1]) !== -1) {
            showDevicesManageList();
        }
    }
}

function showDevicesProgramManageList(page) {
    if(typeof page == "undefined"){
        page = 1;
    }
    var sDate = $("#devicesProgramManageSDateSearch").val();
    var eDate = $("#devicesProgramManageEDateSearch").val();
    var pName = $("#devicesProgramManagePNameSearch").val();
    var gName = $("#devicesProgramManageGNameSearch").val();
    var family = $("#devicesProgramManageFamilySearch").val();
    var deviceID = $("#devicesProgramManageDeviceSearch").val();
    var action = "showDevicesProgramManageList";
    var param = {action:action,sDate:sDate,eDate:eDate,pName:pName,gName:gName,family:family,deviceID:deviceID,page:page};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#devicesProgramManageBody").html('');
        $("#devicesProgramManageBody").html(res);
    }
}

function createDevicesProgram() {
    $("#devicesProgramManageFName").val('');
    $("#devicesProgramManageLName").val('');
    $("#devicesProgramManageDevicesName").val(0);
    $("#devicesProgramManagePName").val('');
    $("#devicesProgramManageGName").val('');
    $("#devicesProgramManageDesc").val('');
    $('#devicesProgramManageModal').modal('show');
}

function doCreateDevicesProgram() {
    var fname = $("#devicesProgramManageFName").val();
    var lname = $("#devicesProgramManageLName").val();
    var dName = $("#devicesProgramManageDevicesName").val();
    var pName = $("#devicesProgramManagePName").val();
    var gName = $("#devicesProgramManageGName").val();
    var desc = $("#devicesProgramManageDesc").val();
    if(!parseInt((fname.trim()).length)){
        notice1Sec("نام مشخص نشده است !","yellow");
        return false;
    }
    if(!parseInt((lname.trim()).length)){
        notice1Sec("نام خانوادگی مشخص نشده است !","yellow");
        return false;
    }
    if(!parseInt((pName.trim()).length)){
        notice1Sec("نام قطعه مشخص نشده است !","yellow");
        return false;
    }
    if(!parseInt((gName.trim()).length)){
        notice1Sec("نام محصول مشخص نشده است !","yellow");
        return false;
    }
    if(parseInt(dName) == 0){
        notice1Sec("نام دستگاه مشخص نشده است !","yellow");
        return false;
    }
    var action = "doCreateDevicesProgram";
    var param = {action:action,fname:fname,lname:lname,dName:dName,pName:pName,gName:gName,desc:desc};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
        $('#devicesProgramManageModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        showDevicesProgramManageList();
    }
}

function attachFileToDeviceProgram(dpID) {
    $("#attachFileToDeviceProgramID").val(dpID);
    $("#attachFileToDeviceProgramFileName").val('');
    $("#attachFileToDeviceProgramFile").val('');
    var res = Main.getAttachedDeviceProgramFile(dpID);
    $("#attachFileToDeviceProgram-body").html('');
    $("#attachFileToDeviceProgram-body").html(res);
    $('#attachFileToDeviceProgramModal').modal('show');
}

function doAttachFileToDeviceProgram() {
    var dpID = $('#attachFileToDeviceProgramID').val();
    var info = $('#attachFileToDeviceProgramFileName').val();
    if(!parseInt((info.trim()).length)){
        notice1Sec("نام فایل مشخص نشده است !","yellow");
        return false;
    }
    var formData = new FormData();
    if($('#attachFileToDeviceProgramFile').val() != '' || $('#attachFileToDeviceProgramFile')[0].files.length != 0){
        var fileSelect = document.getElementById('attachFileToDeviceProgramFile');
        var files = fileSelect.files;
        if(!window.File && window.FileReader && window.FileList && window.Blob){ //if browser doesn't supports File API
            notice1Sec("Your browser does not support new File API! Please upgrade.","yellow");
            return false;
        }else {
            var total_selected_files = files.length;
            for (var x = 0; x < total_selected_files; x++) {
                formData.append("files[]",files[x]);
            }
        }
    }else {
        notice1Sec("هیچ فایلی انتخاب نشده است !","yellow");
        return false;
    }
    formData.append("action","doAttachFileToDeviceProgram");
    formData.append("dpID",dpID);
    formData.append("info",info);

    var xhr = new XMLHttpRequest();
    xhr.open('POST', 'php/managemantproccess.php',true);
    xhr.onload = function () {
        if (xhr.status === 200) {
            var res = JSON.parse(xhr.responseText);
            if(res['res'] == "false"){
                notice1Sec(res['data'],'yellow');
            }else{
                notice1Sec('بارگذاری انجام شد.', "green");
                var rst = Main.getAttachedDeviceProgramFile(dpID);
                $("#attachFileToDeviceProgram-body").html('');
                $("#attachFileToDeviceProgram-body").html(rst);
                $("#attachFileToDeviceProgramFileName").val('');
                $("#attachFileToDeviceProgramFile").val('');
            }
        }else{
            notice1Sec("خطایی رخ داده است !",'yellow');
        }
    };
    xhr.send(formData);
}

function showAttachFileToDeviceProgram(dpID) {
    var res = Main.getAttachedDeviceProgramFile(dpID);
    $("#showAttachFileToDeviceProgram-body").html('');
    $("#showAttachFileToDeviceProgram-body").html(res);
    $('#showAttachFileToDeviceProgramModal').modal('show');
}

function showDevicesManageList(page) {
    if(typeof page == "undefined"){
        page = 1;
    }
    var action = "showDevicesManageList";
    var param = {action:action,page:page};
    var res = manageAjaxRequest(param);
    if(res != false){
        $("#editCreateDevicesManageBody").html('');
        $("#editCreateDevicesManageBody").html(res);
    }
}

function createDevices() {
    $("#editCreateDevicesHiddenDid").val('');
    $("#editCreateDevicesName").val('');
    $('#editCreateDevicesModal').modal('show');
}

function editDevices() {
    var ch = $('#devicesManageBody-table').find('input');
    var did = new Array();
    for(var c=0;c<ch.length;c++){
        if(ch[c].checked){
            did[did.length] = ch[c].attributes.rid.value;
        }
    }
    if(did.length > 1){
        notice1Sec("فقط یک دستگاه باید انتخاب شده باشد !","red");
        return false;
    }
    if(did.length==0){
        notice1Sec("هیچ دستگاهی انتخاب نشده است !","red");
        return false;
    }
    did = did[0];
    var res = Main.getDeviceInfo(did);
    if(res != false){
        $('#editCreateDevicesModal').modal('show');
        $("#editCreateDevicesHiddenDid").val(res['did']);
        $("#editCreateDevicesName").val(res['deviceName']);
    }
}

function doEditCreateDevices() {
    var did = $("#editCreateDevicesHiddenDid").val();
    var name = $("#editCreateDevicesName").val();
    if(!parseInt((name.trim()).length)){
        notice1Sec("نام دستگاه مشخص نشده است !","yellow");
        return false;
    }
    var action = "doEditCreateDevices";
    var param = {action:action,did:did,name:name};
    var res = manageAjaxRequest(param);
    if(res != false){
        notice1Sec(res,"green");
        $('#editCreateDevicesModal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        showDevicesManageList();
    }
}

//+++++++++++++++ خروجی اکسل BOM +++++++++++++++

function generalExcelBOM() {
    var action = "generalExcelBOM";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    if(res != false){
        window.open(res);
    }
}

function generalExcelBOMFinancial () {
    var action = "generalExcelBOMFinancial";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    if(res != false){
        window.open(res);
    }
}

function generalExcelBOMReport () {
    var action = "generalExcelBOMReport";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    if(res != false){
        window.open(res);
    }
}

function pieceExcelBOMReport(){
    var action = "pieceExcelBOMReport";
    var param = {action:action};
    var res = manageAjaxRequest(param);
    if(res != false){
        window.open(res);
    }
}


//********************************************************************************

function addSeprator() {
    $("#personnelManagmentDailyWages").val(function(index, value) {   //OK
        return value
            .replace(/\D/g, "")
            .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    });
    $("#personnelManagmentYearsCost").val(function(index, value) {   //OK
        return value
            .replace(/\D/g, "")
            .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    });
    $("#personnelManagmentRightHousing").val(function(index, value) {   //OK
        return value
            .replace(/\D/g, "")
            .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    });
    $("#personnelManagmentChild").val(function(index, value) {   //OK
        return value
            .replace(/\D/g, "")
            .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    });
    $("#personnelManagmentGrocery").val(function(index, value) {   //OK
        return value
            .replace(/\D/g, "")
            .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    });
    $("#personnelManagmentOutOfList").val(function(index, value) {   //OK
        return value
            .replace(/\D/g, "")
            .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    });
    $("#personnelManagmentService").val(function(index, value) {   //OK
        return value
            .replace(/\D/g, "")
            .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    });
    $("#personnelManagmentOvertimeLunch").val(function(index, value) {   //OK
        return value
            .replace(/\D/g, "")
            .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    });
    $("#personnelManagmentOvertimeService").val(function(index, value) {   //OK
        return value
            .replace(/\D/g, "")
            .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    });
    $("#brassWeightManageBSPrice").val(function(index, value) {   //OK
        return value
            .replace(/\D/g, "")
            .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    });
    $("#brassWeightManageBPriceU14").val(function(index, value) {   //OK
        return value
            .replace(/\D/g, "")
            .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    });
    $("#brassWeightManageBPriceUn14").val(function(index, value) {   //OK
        return value
            .replace(/\D/g, "")
            .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    });
    $("#brassWeightManageBPriceC").val(function(index, value) {   //OK
        return value
            .replace(/\D/g, "")
            .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    });
    $("#brassWeightManageCastingPrice").val(function(index, value) {   //OK
        return value
            .replace(/\D/g, "")
            .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    });
    $("#brassWeightManagePolishingSoilPrice").val(function(index, value) {   //OK
        return value
            .replace(/\D/g, "")
            .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    });
    $("#currencyManagmentCRate").val(function(index, value) {  //OK
        return value
            .replace(/\D/g, "")
            .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    });
    $("#personnelManageTsAmountSearch").val(function(index, value) {   //OK
        return value
            .replace(/\D/g, "")
            .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    });
    $("#personnelManageTeAmountSearch").val(function(index, value) {   //OK
        return value
            .replace(/\D/g, "")
            .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    });

    $("#pieceManagmentPriceDakheli").val(function(index, value) {   //OK
        return value
            .replace(/\D/g, "")
            .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    });
    $("#pieceManagmentCastingPrice").val(function(index, value) {   //OK
        return value
            .replace(/\D/g, "")
            .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    });
    $("#pieceManagmentCastMachPrice").val(function(index, value) {   //OK
        return value
            .replace(/\D/g, "")
            .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    });
    $("#pieceManagmentPlasticPlate").val(function(index, value) {   //OK
        return value
            .replace(/\D/g, "")
            .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    });
    $("#goodProccessPriceCalcAVGP").val(function(index, value) {   //OK
        return value
            .replace(/\D/g, "")
            .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    });
    $("#personnelManagmentResponsibilityRight").val(function(index, value) {   //OK
        return value
            .replace(/\D/g, "")
            .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    });
    $("#personnelManagmentHardWork").val(function(index, value) {   //OK
        return value
            .replace(/\D/g, "")
            .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    });
    $("#personnelManagmentJobRight").val(function(index, value) {   //OK
        return value
            .replace(/\D/g, "")
            .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    });
    $("#personnelManagmentFinancialAllowance").val(function(index, value) {   //OK
        return value
            .replace(/\D/g, "")
            .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    });
    $("#personnelMinimumSalary1").val(function(index, value) {   //OK
        return value
            .replace(/\D/g, "")
            .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    });
    $("#personnelMaximumSalary1").val(function(index, value) {   //OK
        return value
            .replace(/\D/g, "")
            .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    });
    $("#personnelMinimumSalary2").val(function(index, value) {   //OK
        return value
            .replace(/\D/g, "")
            .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    });
    $("#personnelMaximumSalary2").val(function(index, value) {   //OK
        return value
            .replace(/\D/g, "")
            .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    });
    $("#personnelMinimumSalary3").val(function(index, value) {   //OK
        return value
            .replace(/\D/g, "")
            .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    });
    $("#personnelMaximumSalary3").val(function(index, value) {   //OK
        return value
            .replace(/\D/g, "")
            .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    });
    $("#personnelMinimumSalary4").val(function(index, value) {   //OK
        return value
            .replace(/\D/g, "")
            .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    });
    $("#personnelMaximumSalary4").val(function(index, value) {   //OK
        return value
            .replace(/\D/g, "")
            .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    });
    $("#personnelMinimumSalary5").val(function(index, value) {   //OK
        return value
            .replace(/\D/g, "")
            .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    });
    $("#personnelMaximumSalary5").val(function(index, value) {   //OK
        return value
            .replace(/\D/g, "")
            .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    });
    $("#personnelMinimumSalary6").val(function(index, value) {   //OK
        return value
            .replace(/\D/g, "")
            .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    });
    $("#personnelMaximumSalary6").val(function(index, value) {   //OK
        return value
            .replace(/\D/g, "")
            .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    });
    $("#personnelMinimumSalary7").val(function(index, value) {   //OK
        return value
            .replace(/\D/g, "")
            .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    });
    $("#personnelMaximumSalary7").val(function(index, value) {   //OK
        return value
            .replace(/\D/g, "")
            .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    });
    $("#personnelMinimumSalary8").val(function(index, value) {   //OK
        return value
            .replace(/\D/g, "")
            .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    });
    $("#personnelMaximumSalary8").val(function(index, value) {   //OK
        return value
            .replace(/\D/g, "")
            .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    });
    $("#personnelMinimumSalary9").val(function(index, value) {   //OK
        return value
            .replace(/\D/g, "")
            .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    });
    $("#personnelMaximumSalary9").val(function(index, value) {   //OK
        return value
            .replace(/\D/g, "")
            .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    });
    $("#personnelMinimumSalary10").val(function(index, value) {   //OK
        return value
            .replace(/\D/g, "")
            .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    });
    $("#personnelMaximumSalary10").val(function(index, value) {   //OK
        return value
            .replace(/\D/g, "")
            .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    });
    $("#commentManagmentAmount").val(function(index, value) {   //OK
        return value
            .replace(/\D/g, "")
            .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    });
    $("#commentManagmentTotalAmount").val(function(index, value) {   //OK
        return value
            .replace(/\D/g, "")
            .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    });
    $("#commentManagmentCashSection").val(function(index, value) {   //OK
        return value
            .replace(/\D/g, "")
            .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    });
    $("#commentManagmentNonCashSection").val(function(index, value) {   //OK
        return value
            .replace(/\D/g, "")
            .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    });
    $("#depositManagmentDAmount").val(function(index, value) {   //OK
        return value
            .replace(/\D/g, "")
            .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    });
    $("#addCheckToCommentManageCAmount").val(function(index, value) {   //OK
        return value
            .replace(/\D/g, "")
            .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    });
    $("#contractManagmentAmount").val(function(index, value) {   //OK
        return value
            .replace(/\D/g, "")
            .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    });
    $("#contractArchiveExtensionAmount").val(function(index, value) {   //OK
        return value
            .replace(/\D/g, "")
            .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    });
    $("#contractManagmentHourAmount").val(function(index, value) {   //OK
        return value
            .replace(/\D/g, "")
            .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    });
    $("#contractArchiveExtensionHourAmount").val(function(index, value) {   //OK
        return value
            .replace(/\D/g, "")
            .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    });
    $("#receivedCustomerAmount").val(function(index, value) {   //OK
        return value
            .replace(/\D/g, "")
            .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    });
    $("#commentManageAmountSearch").val(function(index, value) {   //OK
        return value
            .replace(/\D/g, "")
            .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    });
    $("#reportPayCommentManageAmountSearch").val(function(index, value) {   //OK
        return value
            .replace(/\D/g, "")
            .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    });
    $("#fundListDetailsAmount").val(function(index, value) {   //OK
        return value
            .replace(/\D/g, "")
            .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    });
    $("#fundListManageAmountSearch").val(function(index, value) {   //OK
        return value
            .replace(/\D/g, "")
            .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    });
    $("#legalContractsManageAmount").val(function(index, value) {   //OK
        return value
            .replace(/\D/g, "")
            .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    });
    $("#customerReceiveAmountSearch").val(function(index, value) {   //OK
        return value
            .replace(/\D/g, "")
            .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    });
    $("#contractAmountSearch").val(function(index, value) {   //OK
        return value
            .replace(/\D/g, "")
            .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    });
    $("#deletedPayCommentReportAmountSearch").val(function(index, value) {   //OK
        return value
            .replace(/\D/g, "")
            .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    });
    $("#overpaymentCommentsAmountSearch").val(function(index, value) {   //OK
        return value
            .replace(/\D/g, "")
            .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    });
    $("#returnMoneyCommentAmount").val(function(index, value) {   //OK
        return value
            .replace(/\D/g, "")
            .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    });
    $("#fractionMoneyCommentAmount").val(function(index, value) {   //OK
        return value
            .replace(/\D/g, "")
            .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    });
    $("#agencyManageAmount").val(function(index, value) {   //OK
        return value
            .replace(/\D/g, "")
            .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    });
    $("#foodManageAmount").val(function(index, value) {   //OK
        return value
            .replace(/\D/g, "")
            .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    });
    $("#drinkManageAmount").val(function(index, value) {   //OK
        return value
            .replace(/\D/g, "")
            .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    });
    $("#editOneSalesPriceGoodsAmount").val(function(index, value) {   //OK
        return value
            .replace(/\D/g, "")
            .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    });
    $("#personnelManagmentHourlyWages").val(function(index, value) {   //OK
        return value
            .replace(/\D/g, "")
            .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    });
    $("#personnelRightMarry").val(function(index, value) {   //OK
        return value
            .replace(/\D/g, "")
            .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    });
    $("#warrantyDocumentOwnerCost").val(function(index, value) {   //OK
        return value
            .replace(/\D/g, "")
            .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    });
}

//********************************************************************************
//------------------------------ pager Function ----------------------------------

function goToLastPage(currentPage,lastPage,func){
    if(!parseInt(lastPage)){
        notice1Sec("خطایی رخ داده است","red");
        return false;
    }
    if(parseInt(currentPage)==parseInt(lastPage)){
        return false;
    }
    eval(func+"("+lastPage+")");
}

function goToFirstPage(currentPage,func){
    if(parseInt(currentPage)==1){
        return false;
    }
    eval(func+"(1)");
}

function prev(currentPage,func){
    if(!parseInt(currentPage)){
        notice1Sec("خطایی رخ داده است","red");
        return false;
    }
    if(parseInt(currentPage)==1){
        return false;
    }
    currentPage -=1;
    eval(func+"("+currentPage+")");
}

function next(currentPage,pagecount,func){
    if(!parseInt(currentPage)){
        notice1Sec("خطایی رخ داده است","red");
        return false;
    }
    if(parseInt(currentPage)==pagecount){
        return false;
    }
    currentPage +=1;
    eval(func+"("+currentPage+")");
}

function goToPage(e,obj,func,pagecount,currentPage){
    if(e.keyCode==13){
        var page =  obj.value;
        if(parseInt(page)==parseInt(currentPage)){
            return false;
        }
        if(parseInt(page)>0 && parseInt(page)<=parseInt(pagecount)){
            eval(func+"("+page+")");
        }
    }
}

//----------------------------------------------------------------------------------

function notice1Sec(txt,color) {
    new jBox('Notice', {
        attributes: {
            x: 'right',
            y: 'top'
        },
        position: {
            x: 20,
            y: 85
        },
        stack: false,
        animation: {
            open: 'tada',
            close: 'zoomIn'
        },
        autoClose: 2000,
        color: color,
        content: txt,
        delayOnHover: true,
        showCountdown: true,
        closeButton: true
    });
}
// //در صورتی که  پاسخ برگشتی قطعی باشد
// //  برای مثال true با false باشد  
// و نتیجه نهایی نیاز به تصمیم گیری مجدد نداشته باشد  بلوک  if و else if شماره  1و2 و در غیر اینصورت وارد بلوک else 3 میگردد 

function manageAjaxRequest(formData,loading=0,atype,url){
    if(typeof atype == "undefined"){
        var atype="POST";
    }
    if(typeof url == "undefined"){
        var url = "php/managemantproccess.php";
    }
   // loading=loading;
    var ajaxResult = "";
    $.ajax({
        global:true,
        url:url,
        type:atype,
       async: false,
        data : formData,
       beforeSend: function(){
           // add_loading(formData.action);
       },
    //    complete:function(){
    //     //console.log('completed..'+formData.action);
    //     setTimeout(function(){remove_loading(formData.action)},500)
          
    //    },
       error:function(){
        //alert('Error');
           // remove_loading(formData.action);
       },
        success:function(res){
          // remove_loading(formData.action);
           
            if(res == "access denied"){
               
                window.open("login.php","_self");
                exit;
            }
            var result = new Array();
            if(res && res !=""){
                result = JSON.parse(res);
                if(result['res'] == "false"){// if شماره 1
                    notice1Sec(result['data'],'yellow');
                    ajaxResult = false;
                }else if(result['res'] == "true"){ //else if شماره 2
                    ajaxResult = result['data'];
				}
                else{
                    ajaxResult = result['data']; // else شماره 3
                }
			}
			else
			{
               // notice1Sec('پاسخ مشخصی دریافت نشد','red');
                ajaxResult = false;
			}
        }
    });
    //remove_loading(formData.action);
    return ajaxResult;
}

 function setMeetingDetailes(meetingObject){
	 //console.log('meetingObject');
	  //console.log(meetingObject);
	 $("#MeetingStartComment").hide();
	if(meetingObject['is_admin']!=1){
		$("#editFirstMeeting-btn").hide();
		//$("#createSubstituteStatus-btn").hide();
		$("#startFirstMeeting-btn").hide();
		$("#addRemoveMember-btn").hide();
		$("#addGuestMember-btn").hide();
		$("#confirmMeetingJob-btn").hide();
		$("#noConfirmMeetingJob-btn").hide();
	}
	
	if(meetingObject['is_admin']==1)
	{
		var edited=0;
		if(meetingObject['is_meeting_start']==1){
			var MeetingStartComment="";
			 if(meetingObject['MeetingStartComment'] && meetingObject['MeetingStartComment'].trim()!=""){
				MeetingStartComment = meetingObject['MeetingStartComment']
				edited =1
				$("#ProceedingsComment").text(MeetingStartComment);
			 }
			var d = new Date();
			var deadline = new Date(meetingObject['meetingGregoryDate']);
			var diff =(deadline.getTime() - d.getTime()) / 1000;
			diff /= 60;
			var diff2 = Math.round(diff);
			if(diff2<0){
				$("#deadlineToStartMeeting").html('<button id="sharheJalase_modal_btn" onclick="show_sharheJalase_modal()" class="btn btn-success">درج شرح جلسه در گردهمایی</button><div></div>');
			}
			else{
				//$("#deadlineToStartMeeting").html('شما قادر به  درج صورتجلسه تا  تاریخ  '+'<span Style="color:#751c1c">'+meetingObject['meetingDate']+'</span>'+" و ساعت  "+'<span Style="color:#751c1c">'+ meetingObject['meetingTime']+"</span>"+"نمی باشید");
				$("#deadlineToStartMeeting").html('<button id="sharheJalase_modal_btn" onclick="show_sharheJalase_modal()" class="btn btn-success">درج شرح جلسه در گردهمایی</button>');
				setInterval(function(){
					var d = new Date();
					//var deadline = new Date('7/24/2023');
					var deadline = new Date(meetingObject['meetingGregoryDate']);
					var diff =(deadline.getTime() - d.getTime()) / 1000;
					diff /= 60;
					var diff2 = Math.round(diff);
					if(diff2<0){
						$("#deadlineToStartMeeting").html('<button id="sharheJalase_modal_btn"  onclick="show_sharheJalase_modal()"class="btn btn-success">درج شرح جلسه در گردهمایی</button>');
					}
				},60000)
			}
			if(meetingObject['mType']==1){
				//console.log('test');
			}
		}
	}
	if(edited==1){
		$("#sharheJalase_modal_btn").html('ویرایش شرح جلسه درج شده در گردهمایی');
	}
	if(meetingObject['meeting_closed']==1){
		//console.log('test:');
	$("#MeetingStartComment").append('<hr><h6 style="color:red"> علت خاتمه جلسه :</h6><p style="color:red">'+meetingObject['meeting_close_reason']+'</p>');
		//if(meetingObject['MeetingStartComment'] && meetingObject['MeetingStartComment'].trim()!=""){
			$("#MeetingStartComment").show(1000);
		//}
		$("#sharheJalase_modal_btn").hide();
	}
 }
 

function show_sharheJalase_modal() {
 var fmID = $("#meetingCommentManageHiddenMid").val();
  $('#ProceedingsModal').modal('show');
}

function doCreateProceedingsComment() {
	
    var fmID = $("#meetingCommentManageHiddenMid").val();
    var ProceedingsComment = $("#ProceedingsComment").val();
   // var meeting_type = $("#meeting_type").val();
    if(typeof ProceedingsComment == "undefined" ||  ProceedingsComment==""){
        notice1Sec("شرح جلسه ثبت نشده است","yellow");
		$('#ProceedingsModal').modal('hide');
        return false;
    }
    var action = "doCreateProceedingsComment";
    var param = {action:action,fmID:fmID,ProceedingsComment:ProceedingsComment};
	var url = "php/managemantproccess.php";
	$.ajax({
        url:url,
        type:"post",
        async: false,
        data : param,
        success:function(res)
		{
			if(res != false)
			{
				var result_array = $.parseJSON(res);
				if(result_array.msgType=="warning"){
					notice1Sec(result_array.message,"yellow");
				}
				if(result_array.msgType=="success")
				{
					notice1Sec(result_array.message,"green");
					$('#ProceedingsModal').modal('hide');
					$('#meetingCommentManageInfoModal-under-modal').html('');
					$('#createSubstituteStatusModal').modal('show');
					$('body').removeClass('modal-open');
					$('.modal-backdrop').remove();
					$("#MeetingStartComment").fadeIn(1000);
					$("#MeetingStartComment").html('<p><h4 style="text-align:center">دستور شروع گردهمایی : </h4>'+ProceedingsComment+'</p>');
					$("#sharheJalase_modal_btn").html('ویرایش شرح جلسه درج شده در گردهمایی');
				}
			}
		}
	});
}
function changeProgressValue(event){
	if(event.target.value>100){
		event.target.value =0;
	}
	else if(event.target.value<0){
		event.target.value =0;
	}
	$("#createMeetingWorkReportPercent_g .progress-bar").css('width',event.target.value+"%").text(event.target.value+"%");

}

function goToEngineeringApp(param,token){
	if(typeof(param)=="undefined"){
		notice1Sec("شناسه کاربری  یافت نشد  از برنامه خارج شده و دوباره وارد شوید",'red');
		return false;
	}
    var url="http://sabax.local?token1="+param+"&token2="+token;
	window.open(url, '_blank');
}

function openpouyanAtomation(url){

    //var url="http://frp-kartabl1.local";
    //var url="http://frp-kartabl1.local";
	window.open(url, '_blank');
}

$(window).click(function(e)
{

	var container = $("[id^='box_detailes_']");
	if(e.target.id.indexOf("amend_det_")<0){
		if (!container.is(e.target) && container.has(e.target).length === 0 ) 
		{
			container.hide();
		}
	}
	
});

function ajaxHandler (formData,atype,url,loadin_selector){
        if(typeof atype == "undefined"){
            var atype="POST";
        }
        if(typeof url == "undefined"){
            var url = "php/managemantproccess.php";
        }
        if(typeof loadin_selector == "undefined"){
            var loadin_selector = "";
        }
        var ajaxResult = "";
        $.ajax({
            url:url,
            type:atype,
            async: false,
            data : formData,
            beforeSend:function(){
              // $('body').append('<div id="loadingPage" style="position: fixed;top: 0;left: 0;z-index: 10000 !important;width: 100vw;height: 100vh;background: rgba( 0, 0, 0, .8 ) url(\'images/loading.gif\') 50% 50% no-repeat;"><!-- Place at bottom of page --></div>')
               //$('body #loadingPage').fadeIn();
            },
            complete:function(){
            //     $('body #loadingPage').fadeOut();
            //    $('body #loadingPage').remove();
               
            },
            success:function(res){
                if(res == "access denied"){
                    window.open("login.php","_self");
                    exit;
                }
                var result = new Array();
                try{
                    if(res && res !=""){
                        result = JSON.parse(res);
                        if(result['res'] == "false"){
                            notice1Sec(result['data'],'yellow');
                            ajaxResult = false;
                        }else if(result['res'] == "true"){
                            ajaxResult = result['data'];
                        }
                    }
                    else
                    {
                       // notice1Sec('پاسخ مشخصی دریافت نشد','red');
                        ajaxResult = false;
                    }
                }
                catch(err){
                    notice1Sec('خطایی رخ داده است '+err.message ,"red",5000);  
                }
            }
        });
        return ajaxResult;
    }
	
    function openMeetings(){
        if($("#createMeetingWorkReportHiddenJobID").length>0){
            return false;//فرم قبلا باز شده است 
        }
		programClick('linkid-meetingManageID');
        jID=$("#meeting_job_id").val();
        createMeetingWorkReport(jID,0)
		//$('#meetingJobsModal').modal('hide')
		//$('.modal-backdrop').hide();
        $("#createMeetingWorkReportModal").css('z-index','100000')
        var meeting_user=$("#meeting_job_user").val();
        $("#createMeetingWorkReportModal-title").text('گزارش کار  ' + meeting_user );
        //$("#meetingJobsModalDetailes").modal('hide');
	}


    function manage_organizational_procedures(){
       // function organizationalDocumentationManage() {
        var action = "organizationalProcedures";
        var param = {action:action};
        var res = ajaxHandler(param);
        $('#myTabContent').children('div').each(function(){
            if($(this).hasClass('show')){
                $(this).removeClass('show')
            }
            if($(this).hasClass('active')){
                $(this).removeClass('active');
            }
        })
        $("#OrganizationalProceduresID").addClass('show').addClass('active')
        $("#OrganizationalProceduresID").html('');
        $("#OrganizationalProceduresID").html(res);

    }

    function add_organization_department(){
        var form="<form>";
        form+= create_form_row({"title":"نام واحد","id":"new_department_name","type":"text"})
        form+= create_form_row({"title":"توضیحات","id":"new_department_desc","type":"textarea"})
        form+= create_form_row({type:"button",id:'organization_unit_save_btn',class:'btn btn-success',value:"تایید",onclick:'save_organization_department()'})
        append_large_modal( 'add_organization_unit',"افزودن واحد سازمانی",form,'',bgcolor="#c3d4dd",win_width="400px",'auto')
    }

    function save_organization_department (){
        var action = "save_organization_department";
        var new_department_name=$("#new_department_name").val().trim();
        var new_department_desc=$("#new_department_desc").val().trim();
        if(new_department_name=="" ||new_department_name==null || typeof(new_department_name)=='undefined'){
            notice1Sec('نام واحد را وارد نمایید','yellow');
            return false;
        }
        var param = {action:action,new_department_name:new_department_name,new_department_desc:new_department_desc};
        var res = ajaxHandler(param); 
        res=true;
        if(res){
            $("#add_organization_unit").modal('hide');
            $("#add_organization_unit").remove();
            manage_organizational_procedures();
            notice1Sec('اطلاعات با موفقیت ذخیره شد','green');
        }
        else{
            notice1Sec('خطا در ذخیره  اطلاعات','red');
            return false;
        }
    }

    function append_large_modal( id,title,header,body="",bgcolor="#c3d4dd",win_width="90vw",win_hidgt="auto")
    {
    
         var html=`
        <div id="${id}" class="modal " tabindex="-1" role="dialog" aria-labelledby="paymentMaturityAlarmModal-title"   aria-hidden="true"
        data-backdrop="static" data-keyboard="false" style="background:rgba(200,200,200,0.5)">

            <div class="modal-dialog" style="max-width: ${win_width};">
                <div class="modal-content">
                    <div class="modal-header bg-primary">
                        <h5 style="text-shadow:3px 3px 3px" class="modal-title text-light">${title}
                            </h5>
                        <button type="button" class="close" id="close_modal_top" onclick="close_modal('${id}')"  aria-hidden="true">&times;</button>
                    </div>
                    <div class="modal-body"  style="background-color:${bgcolor}; border:1px solid gray;min-height:${win_hidgt};max-height:auto;">
                        <div class="data-header"></div>
                        <div class="data-grad">
                        
                        </div>
                    </div><!-- modal-body !-->
                    <div class="modal-footer-custom" style="display:none">
                        <nav aria-label="Page navigation example">
                            <ul class="pagination">
                                <li class="page-item"><a class="page-link" href="#">Previous</a></li>
                                <li class="page-item"><a class="page-link" href="#">1</a></li>
                                <li class="page-item active"><a class="page-link" href="#">2</a></li>
                                <li class="page-item"><a class="page-link" href="#">3</a></li>
                                <li class="page-item"><a class="page-link" href="#">Next</a></li>
                            </ul>
                        </nav>

                    </div>
                </div>
            </div>
        </div>
        `;
        $("body").append(html);
        $('#'+id +" .modal-body .data-header").html('').html(header)
        $('#'+id +" .modal-body .data-grad").html('').html(body)
        $("#"+id).modal('show')
    }

function close_modal(id){
    $("#"+id).modal('hide') ; 
    $("#"+id).remove();
} 

function open_department_procedures(unit_id){
    var action = "open_department_detailes";
    var unit_name="";
    var param = {action:action,unit_id:unit_id};
    var res = ajaxHandler(param);
    if(res){
        unit_name=res['unit_name']
        var html_res=res['html_res']
    }
    append_large_modal('procedures'+unit_id,'رویه های سازمانی واحد '+ `<span style="color:red">${unit_name}</span>`,html_res);

    $("#inlineRadio0").click();
   // tooltip({ boundary: 'window' })
}


function add_unit_procedures(unit_id,mode){
    var id="procedures_";
    $("#"+id+"_"+unit_id).modal('hide');
    $("#"+id+"_"+unit_id).remove();
    
    var procedures_type=$("#procedures_type_hidden").val();
    if(mode=="add"){
        var procedures_box="";
        var id="add_procedure";
        create_procedure_field="";
        if(procedures_type=="all"){
            var action_p_type = "get_procedures_type"
            var p_type_param={action:action_p_type};
            var p_type_res=ajaxHandler(p_type_param)
            var options=[];
            if(p_type_res){
                for(var k=0; k<p_type_res.length;k++){
                    var option={}
                    option={"title":p_type_res[k]['procedure_type_name'],id:"type_"+p_type_res[k]['RowID'],onclick:"set_procedures_type(this)",value:p_type_res[k]['RowID']}
                    options.push(option)
                }
            }
            create_procedure_field+=create_form_row(
                {title:"نوع رویه",type:"radio_group",name:"procedures_type",options:options})
        }
        create_procedure_field+='<h6 style="padding:10px;color:red">تکمیل تمام فیلد ها الزامی  می باشد </h6>';
        create_procedure_field+=create_form_row({title:" نام رویه",type:"text",id:'procedures_name'})
        create_procedure_field+=create_form_row({type:"hidden",id:'unit_id_hidden',value:unit_id})
       // create_procedure_field+=create_form_row({type:"hidden",id:'procedures_type_hidden',value:procedures_type})
        create_procedure_field+=create_form_row({type:"hidden",id:'window_id',value:id+"_"+unit_id})
        
        create_procedure_field+=create_form_row({type:"button",id:'procedure_save_btn',class:'btn btn-success',value:"تایید و ادامه",onclick:'save_procedure()'})
    }
    append_large_modal(id+"_"+unit_id,' ایجاد رویه جدید',create_procedure_field,'',"#c3d4dd","800px");
}

function set_procedures_type(input){
    $("#procedures_type_hidden").val($(input).val());
}

function get_all_active_users(){
    var action="get_all_active_users"
    var param={action:action}
    var res=ajaxHandler(param)
    return res;
}

function create_data_table(table_id){
    // var hasdash=table_id.indexOf('-');
    // var selcetor='#'+table_id;
    // if(hasdash>0){
    //     var table_class=table_id.replace("-","_");
    //     $("#"+table_id).addClass(table_class)
    //     selcetor="."+table_class;
    // }
    //      new DataTable(selcetor, {
    //      language:{
    //        url: 'js/fa.json',
    //        //url:'//cdn.datatables.net/plug-ins/1.13.7/i18n/fa.json',
    //     },
    //     pagingType: 'full_numbers',
       
    // });
    // }
    new DataTable('#'+table_id, {
         language:{
           url: 'js/fa.json',
           //url:'//cdn.datatables.net/plug-ins/1.13.7/i18n/fa.json',
        },
        pagingType: 'full_numbers',
       
    });
}
function get_users_download_info(p_id,selector,multi_select_selector){
    var action ="get_users_procedures_download_info";
    var param={action:action,p_id:p_id}
    var res=ajaxHandler(param);
    if(res){
        
       $(selector).html('')
       $(selector).html(res['table_html'])
       $(multi_select_selector).html('')
       $(multi_select_selector).html(res['select_option'])
       $(multi_select_selector).selectpicker('refresh')
    }
    
    create_data_table("users_download_info");
}

function not_allow_download(user_id,p_id){
    var action ="not_allow_download";
    var param={action:action,user_id:user_id,p_id:p_id}
    var res=ajaxHandler(param)
    if(res){
        get_users_download_info(p_id,"#users_download_box",'#allowed_user_download')
    }

}
function manage_users_download(p_id){
   
    var action="manage_users_download";
    var attributes=[ 'multiple', {'key':"data-live-search",'value':"true"},{"key":"data-actions-box","value":"true"},{"key":"data-selected-text-format","value":"count"}]
    var options=[];
    //var all_users_info=get_all_active_users();
    

    var form="<form>";
    form+=create_form_row({title:"  کاربران مجاز جهت دانلود و مشاهده",type:"select",id:'allowed_user_download',style:"width:20px;height:20px",attributes,options})
    form+= create_form_row({type:"button",id:'organization_unit_save_btn',class:'btn btn-success',value:"تایید",onclick:'add_users_download_procedure('+p_id+')'})
    form+=`<hr><div id="users_download_box"></div>`;
    append_large_modal( 'add_organization_unit',"  مدیریت مشاهده رویه ها",form,'',bgcolor="#fff",win_width="800px",'auto')
    $("#allowed_user_download").selectpicker();
    get_users_download_info(p_id,"#users_download_box",'#allowed_user_download');
    // for(k in all_users_info){
    //     options.push({"key":all_users_info[k]['RowID'],'value':all_users_info[k]['fname']+" "+all_users_info[k]['lname']})
    // }
}

function add_users_download_procedure(pid){
    var action="add_users_download_procedure";
    var users_array=$("#allowed_user_download").val().join();
    var param={action:action,users_array:users_array,pid:pid}
    var res=ajaxHandler(param);
    if(res){
        get_users_download_info(pid,"#users_download_box","#allowed_user_download")
    }

}

function save_procedure(){
    var procedure_name="";
    var unit_id=""; 
    var procedure_type=""; 
    var window_id=""; 
    var action="save_procedure";
    window_id=$("#window_id").val();
    procedure_name=$("#procedures_name").val();
    unit_id=$("#unit_id_hidden").val();
    procedure_type=$("#procedures_type_hidden").val();
    if(procedure_type=="all"){
        notice1Sec('نوع رویه را انتخاب نمایید','yellow');
        return false;
    }

    if(procedure_name=="" || procedure_name==null || typeof(procedure_name)=="undefined"){

        notice1Sec('نام رویه را وارد نمایید','yellow');
        return false;
    }
    var param={action:action,unit_id:unit_id,procedure_name:procedure_name,procedure_type:procedure_type};
    var res=ajaxHandler(param)

    if(res>0){
        var detailes_html="";
        var create_procedure_field="";
        $("#"+window_id +" .data-header").hide();
        detailes_html+=`<h6 style="padding:10px;color:red">تکمیل  کردن همه فیلدها الزامی می باشد</h6><div style="padding-right:2rem"><h5><span style="margin:10px">نام رویه :</span><span style="margin:10px">${procedure_name}</span></h5><hr>`;
        create_procedure_field+=create_form_row({title:"جاری شدن بلافاصله",type:"checkbox",id:'start_now',style:"width:20px;height:20px",onclick:"check_start_now(this)"})
        create_procedure_field+=create_form_row({type:"hidden",id:'procedure_row_id',value:res})
        create_procedure_field+=create_form_row({title:"تاریخ آخرین بازنگری",type:"text",id:'last_review_date',style:"width:100%"})
        create_procedure_field+=create_form_row({title:" سطح تغییرات",type:"text",id:'changes_level',style:"width:100%"})
        create_procedure_field+=create_form_row({title:" وضعیت جاری رویه ",type:"text",id:'current_procedure_status',style:"width:100%"})
        create_procedure_field+=create_form_row({title:"تاریخ جاری شدن",type:"text",id:'start_date',style:"width:100%"})
        create_procedure_field+=create_form_row({title:"ساعت جاری شدن",type:"time",id:'start_time',style:"width:100%"})
        create_procedure_field+=create_form_row({title:"شماره فرم",type:"text",id:'form_number',style:"width:100%"})
       // create_procedure_field+=create_form_row({title:" قابل دانلود برای همه",type:"checkbox",id:'allowed_for_all_downloaded',style:"width:20px"})
        //create_procedure_field+=create_form_row({title:" کاربران مجاز جهت دانلود",type:"select",id:'allowed_user_download',style:"width:20px;height:20px",attributes,options})
        create_procedure_field+=create_form_row({title:" توضیحات تکمیلی",type:"textarea",id:'form_description',style:"width:100%"})
        //******************************* */
        create_procedure_field+='<div id="procedure_file_group"><fieldset class="file_group" style="border:2px solid green;border-radius:10px"><legend style="width:auto; padding:10px;font-size:1rem">پیوست فایلها</legend>';
        create_procedure_field+='<table id="file_tbl" class="table"><tr><td>عنوان فایل</td><td>انتخاب فایل</td><td>حذف فایل</td></tr><tr><td>'+create_form_row({type:"text",id:'file_name_1',style:"width:100%"})+"</td><td>";
        create_procedure_field+=create_form_row({type:"file",id:'procedure_file_1',style:"width:100%", onchange:"manage_procedure_file('procedure_file_group',this)"})+'</td><td id="del_btn_td_1"></td></tr></table></fieldset>'
         create_procedure_field+='</div>';
        //******************************* */
        // create_procedure_field+='<div id="procedure_file_group"><fieldset class="file_group" style="border:2px solid green;border-radius:10px;padding:0 10px"><legend style="width:auto; padding:10px;file-size:1rem">پیوست شماره 1   </legend>';
        // create_procedure_field+=create_form_row({title:"نام  فایل",type:"text",id:'file_name_1',style:"width:75%"})
        // create_procedure_field+=create_form_row({title: " انتخاب فایل 1",type:"file",id:'procedure_file_1',style:"width:75%", onchange:"manage_procedure_file('procedure_file_group',this)"})+"</fieldset>"
        //  create_procedure_field+='</div>';
        create_procedure_field+=create_form_row({value:"تایید نهایی",type:"button",id:'final_confirm_btn',class:"btn btn-success" ,onclick:"final_save_procedure()"})
        detailes_html+=create_procedure_field+"</div>";
        $("#"+window_id+' .data-grad').html(detailes_html)
        $('#start_date').MdPersianDateTimePicker({
            targetTextSelector: '#start_date',
            disableBeforeDate: new Date(),
        });
        $('#last_review_date').MdPersianDateTimePicker({
            targetTextSelector: '#last_review_date',
            //disableBeforeDate: new Date(),
        });
       // rsstDate = new AMIB.persianCalendar('start_date');
        $("#start_date").parent().css("display","flex")
           $('#allowed_user_download').selectpicker();

    }
}

function check_start_now(input){
    if($(input).prop("checked")){
      $("#start_date").parents('.form-group').hide();
      $("#start_time").parents('.form-group').hide();
    }
    else{
        $("#start_date").parents('.form-group').show();
        $("#start_time").parents('.form-group').show();
    }
}

function manage_procedure_file(input_id,this_input,display_status=0){
    var id=$(this_input).attr('id');
    id_array=id.split('_');
    var pre_index=id_array[2];
    var index=parseInt(id_array[2])+1;
    id_array[2]=index;
    var file_id=id_array.join("_");
    create_procedure_field="";
    create_procedure_field+='<tr><td>'+create_form_row({type:"text",id:'file_name_'+index,style:"width:75%"})+'</td><td>'
    create_procedure_field+=create_form_row({type:"file",id:file_id,style:"width:75%", onchange:"manage_procedure_file('procedure_file_group',this)"})+'</td>';
    //console.log(display_status);
    if(display_status==1){
        create_procedure_field+= "<td>"+create_form_row({type:"checkbox",id:"display_file_"+index,style:""})+'</td>';
      
    }
    create_procedure_field+='<td id="del_btn_td_'+index +'"></td></tr>';
    $("#"+id).parents("#file_tbl tbody").append(create_procedure_field);
    $("#del_btn_td_"+pre_index).append('<div class="form-group row"><button style="width:80%" onclick="delete_file_row(this)" style="margin-right:5px" class="btn btn-danger">حذف</button></div>');
    $(this_input).attr('onchange','');
}

function delete_file_row(input){
    $(input).parents('tr').remove();
}

function final_save_procedure(mode=0){
 
    var file_box=$("#procedure_file_group")
    var formData="";
    var procedure_type=$("#procedures_type_hidden").val();
    var uploaded_files_select=[];
    var unit_id=$("#unit_id_hidden").val();
    var last_review_date=$("#last_review_date").val();
    var changes_level=$("#changes_level").val();
    var current_procedure_status=$("#current_procedure_status").val();
    formData=new FormData();
    var file_error_count=0;
    var file_added=0;
    $(file_box).find('input:file').each(function()
    {
        var this_file=$(this).attr('id')
        var index=this_file.split("_")[2];
        if($("#"+this_file).val())
        {
            file_added++;
            if($('#'+this_file).val() != '' || $('#'+this_file)[0].files.length != 0)
            {
                if($("#file_name_"+index).val().trim()=="" || $("#file_name_"+index).val().trim()==null || typeof($("#file_name_"+index).val().trim())=="undefined"){
                    notice1Sec("عنوان فایل را وارد نمایید","yellow");
                   $("#file_name_"+index).focus();
                   file_error_count++;
                }
        
                var fileSelect = document.getElementById(this_file);
                var files = fileSelect.files;
                if(!window.File && window.FileReader && window.FileList && window.Blob)
                { //if browser doesn't supports File API
                    notice1Sec("Your browser does not support new File API! Please upgrade.","yellow");
                    return false;
        
                }else 
                {
                
                    var total_selected_files = files.length;
                    for (var x = 0; x < total_selected_files; x++) 
                    {
                        formData.append("procedures_file[]",files[x]);
                        formData.append("file_info[]",$("#"+this_file).val())
                        formData.append("file_name[]",$("#file_name_"+index).val())
                        //formData.append("form_number[]",$("#form_number_"+index).val())
                    }
                }
            }
            else
            {
                notice1Sec("فایل انتخاب نشده است.","yellow");
                return false;
            }
       }
       
    })
    if(mode==1)
    {
      var uploaded_files=$("#uploaded_file_tbl .uploaded_file_row");
      $(uploaded_files).each(function(){
        if($(this).is(":checked")){
            uploaded_files_select.push($(this).val());
        }
      })
    }
    var start_date = $("#start_date").val().trim();
    var start_time = $("#start_time").val().trim();
    var start_now = $("#start_now").is(":checked")?1:0;
    //var form_title = $("#form_title").val().trim();
    var reason_reversion="";
    var form_number = $("#form_number").val().trim();
    var form_description = $("#form_description").val().trim();
    var procedure_row_id = $("#procedure_row_id").val().trim();
    if(start_now==0)
    {
        if(start_date=="" || start_date==null || typeof(start_date)=="undefined"){
            notice1Sec('تاریخ جاری شدن فرم  وارد نشده است','yellow');
            return false;
        }

        if(start_time=="" || start_time==null || typeof(start_time)=="undefined"){
            notice1Sec('زمان جاری شدن فرم وارد نشده است','yellow');
            return false;
        }
    }
    if(file_error_count>0){
        return false;
    }

    if(last_review_date.trim()=="" || last_review_date.trim()==null || typeof(last_review_date.trim())=="undefined"){
        notice1Sec('    آخرین تاریخ بازنگری وارد نشده است','yellow');
        $("#last_review_date").focus();
        return false;
    }
    if(changes_level.trim()=="" || changes_level.trim()==null || typeof(changes_level.trim())=="undefined"){
        notice1Sec('سطح تغییرات  وارد نشده است','yellow');
        $("#changes_level").focus();
        return false;
    }
    if(current_procedure_status.trim()=="" || current_procedure_status.trim()==null || typeof(current_procedure_status.trim())=="undefined"){
        notice1Sec('وضعیت رویه وارد نشده است','yellow');
        $("#current_procedure_status").focus();
        return false;
    }

    if(form_number=="" || form_number==null || typeof(form_number)=="undefined"){
        notice1Sec('شماره فرم وارد نشده است','yellow');
        $("#form_number").focus();
        return false;
    }

    if(file_added==0){
        if(mode==0){
        notice1Sec('حداقل باید بک فایل   پیوست شود','yellow');
        return false;
        }
        if(mode==1){
            if(uploaded_files_select.length==0){
                notice1Sec('حداقل باید یک فایل   پیوست یا از فایلهای پیوست شده قبلی انتخاب شود','yellow');
                return false;
            }
        }
    }
    formData.append('start_date',start_date)
    formData.append('start_time',start_time)
    formData.append('start_now',start_now)
    formData.append('insert_mode',mode)
    formData.append('form_number',form_number)
    formData.append('form_description',form_description)
    formData.append('action','final_save_procedure')
    formData.append('changes_level',changes_level)
    formData.append('current_procedure_status',current_procedure_status)
    formData.append('last_review_date',last_review_date)
    formData.append('p_id',procedure_row_id)
    if(mode==1){
       
        if(sessionStorage.length){
            if(sessionStorage.getItem('bs_prompt_data')){
                reason_reversion= sessionStorage.getItem('bs_prompt_data');//دیتای ذخیره شده در پنجره  bs_prompt
                sessionStorage.removeItem("bs_prompt_data");
            }
        }
        formData.append('reason_reversion',reason_reversion)
        formData.append('uploaded_files',uploaded_files_select)
    }
    
    var xhr = new XMLHttpRequest();
    xhr.open('POST', 'php/managemantproccess.php',true);
    xhr.onload = function () 
    {
        if (xhr.status === 200) 
        {
            var res = JSON.parse(xhr.responseText);
            if(res['res'] == "false")
            {
                notice1Sec(res['data'],'yellow');
            }
            else
            {
                notice1Sec(res['data'],'green');
                close_modal($("#window_id").val())
                input="#inlineRadio"+procedure_type;
                $(input).click();
                go_to_page_op(input,procedure_type,unit_id)
                manage_organizational_procedures()
            }
        }else{
            notice1Sec("خطایی رخ داده است !",'yellow');
        }
    };

    xhr.send(formData);
}

// function get_procedure_history(procedure_id){
//     var action="get_procedure_history";
//     var param={action:action,procedure_id:procedure_id}
//     var res= ajaxHandler(param);
//     if(res){
//         append_large_modal("procedur_history"+procedure_id,"تاریخچه فرآیند","",res,"#fff",'1000px')
//     }
    
// }

function search_organization_department()
{
    var action = "SearchorganizationalProcedures";
    var param = {action:action};
    var res = ajaxHandler(param);
    append_large_modal("organizational_procedures_serach","جستجوی رویه های سازمانی","",res,"#fff","100vw","100vh")

}

function search_department_procedures(unit_id){
    var header="";
    var action="get_search_select_params";
    var param={action:action}
    var data_res=ajaxHandler(param)
    var procedure_type_options="";
    if(data_res.length){
        for(k in data_res){
           procedure_type_options+=`<option value="${data_res[k]['RowID']}">${data_res[k]['procedure_type_name']}</option>` 
        }
    }
    header = 
    `<form>
        <div class="row">
            <input type="hidden" value="${unit_id}" id="unit_id_hidden">
            <div class="col">
                <select id="procedure_type_admin"  type="text" class="form-control" >
                    <option value="0"> همه رویه ها</option>
                    ${procedure_type_options}
                </select>
            </div>
            <div class="col">
                <input id="procedure_name" type="text" class="form-control" placeholder="نام رویه">
            </div>
            <div class="col">
                <input id="from_date" type="text" class="form-control" placeholder="  از تاریخ جاری شدن">
            </div>
            <div class="col">
                <input title="   تا تاریخ جاری شدن"  id="to_date"  type="text" class="form-control" placeholder="تا تاریخ جاری شدن ">
            </div>
            <div class="col">
                <input id="form_number" type="text" class="form-control" placeholder="شماره فرم">
            </div>
            <div class="col">
                
                <select  id="procedure_status" type="text" class="form-control" ><option  value="all">  همه وضعیت رویه ها </option>
                <option value="1">فعال</option>
                <option value="0">حذف شده</option>
                <option value="-1">ابطال شده</option>
                <option value="2">منسوخ شده</option>
                <option value="3"> در حال پیگیری</option>
                </select>
            </div>
            <div class="col">
                <input type="button" id="procedure_search_btn" onclick="search_unit_procedurs(this)" class="form-control btn btn-primary" value="جستجو">
            </div>
        </div>
    </form>`
    var body="";
    append_large_modal("search_procedure","جستجوی رویه ها",header,body,"#fff","90vw","50vh")
    $('#from_date').MdPersianDateTimePicker({
        targetTextSelector: '#from_date',
    });
    $('#to_date').MdPersianDateTimePicker({
        targetTextSelector: '#to_date',
    });
    search_unit_procedurs($("#procedure_search_btn"))
}

function search_unit_procedurs_users(input,unit_id){
    $(input).html('<i class="fa fa-spinner fa-spin"></i>');
    var action="search_unit_procedurs_users";
    var procedure_name=$("#procedure_name_user").val();
    var procedure_type=$("#procedure_type_user").val();
    var from_date=$("#from_date_user").val();
    var to_date=$("#to_date_user").val();
    var form_number=$("#form_number_user").val();
    var procedure_status=$("#procedure_status_user").val();
    var param = {
                    action:action,
                    procedure_name:procedure_name,
                    procedure_type:procedure_type,
                    from_date:from_date,
                    to_date:to_date,
                    form_number:form_number,
                    procedure_status:procedure_status,
                    unit_id:unit_id
                }
    var res=ajaxHandler(param);
    if(res){
        $(input).parents('.data-grad').html(res);
        $(input).html('');
        $(input).text('جستجو');
        $(input).addClass('btn btn-primary');
        $(input).removeClass('btn btn-danger');
    }
    else{
        $(input).html('');
        $(input).text('جستجو');
        $(input).removeClass('btn btn-primary');
        $(input).addClass('btn btn-danger');
    }

    $('#from_date_user').MdPersianDateTimePicker({
        targetTextSelector: '#from_date_user',
    });
    $('#to_date_user').MdPersianDateTimePicker({
        targetTextSelector: '#to_date_user',
    });
    
}

function search_unit_procedurs(input,page=1){
    var unit=$("#unit_id_hidden").val();
    var action="search_unit_procedurs"
    var procedure_name=$("#procedure_name").val();
    var from_date=$("#from_date").val();
    var to_date=$("#to_date").val();
    var form_number=$("#form_number").val();
    var procedure_status=$("#procedure_status").val();
    var procedure_type_admin=$("#procedure_type_admin").val();
    var param={action:action,unit:unit,procedure_name:procedure_name,from_date:from_date,to_date:to_date,form_number:form_number,procedure_status:procedure_status,procedure_type_admin:procedure_type_admin,page_number:page}
    var res=ajaxHandler(param)
    $(input).parents('#search_procedure').find('.data-grad').html('').html(res);
   // $(input).parents('#search_procedure').find('.data-grad').html(res);
}

function page_navigate_search(n_type){
    var procedure_name =$("#procedure_name_hidden").val();
    var unit=$("#unit_hidden").val();
    var page_number = $("#page_number_hidden").val();
    var from_date = $("#from_date_hidden").val();
    var to_date=$("#to_date_hidden").val();
    var form_number=$("#form_number_hidden").val();
    var procedure_status=$("#procedure_status_hidden").val();
    var action="search_unit_procedurs";
    var all_page = $("#all_page_hidden").val();
    switch(n_type){
        case "first":
            page_number=1
            break;
        case "last":
            page_number=all_page
            break;
        case "next":
            page_number=parseInt(page_number)+1
            break;
        case "prev":
              page_number=parseInt(page_number)-1
            break;
    }

    if(page_number==0 || page_number>all_page){
        notice1Sec("صفحه مورد نظر وجود ندارد",'yellow');
        return false;
    }

    var param={action:action,unit:unit,procedure_name:procedure_name,from_date:from_date,to_date:to_date,form_number:form_number,procedure_status:procedure_status,page_number:page_number}
  
    var res=ajaxHandler(param)
    $("#procedure_search_btn").parents('#search_procedure').find('.data-grad').html('').html(res);

    //procedure_search_btn


}

function get_procedure_history(RowId,input,has_parent=0)
{
    if(has_parent==0){
        notice1Sec("رویه فاقد تاریخچه می باشد","yellow");
        return false;
    }
    $(".procedure_parents").not("#parents_"+RowId).hide();
    $(".history-btn").not(input).addClass('btn-success').removeClass('btn-danger');
    $(".history-btn").not(input).html("<i class='fa fa-plus'></i>")
 
    if($("#parents_"+RowId).is(":visible")){
        $("#parents_"+RowId).hide();
        $(input).removeClass("btn-danger")
        $(input).addClass("btn-success")
        $(input).html("<i class='fa fa-plus'></i>");
        $(input).parents("tr").removeClass("selected")
        $("#parents_"+RowId+" div").removeClass("selected2")
       
    }
    else
    {
        $("#parents_"+RowId).show();
        $(input).removeClass("btn-sucess")
        $(input).addClass("btn-danger")
        $(input).html("<i class='fa fa-minus'></i>");
        $(input).parents("tr").addClass("selected")
        $("#parents_"+RowId+" div").addClass("selected2")

    }

}

function display_procedure_info(p_id){
    var action ="display_procedure_info";
    if(p_id=="" || p_id==null || typeof(p_id)=="undefined"){
        notice1Sec('شناسه رویه به درستی دریافت نشده است','red');
        return false;
    }
    var param={action :action,procedure_id:p_id}
    var res= ajaxHandler(param);
   
    if(res){
        append_large_modal("procedur_info"+p_id,"جزییات فرآیند ","",res,"#fff",'800px')
    }
}

function active_canceled_procedure(RowID){
   // bs_prompt('فعالسازی دوباره',"علت فعالسازی دوباره را وارد نمایید",'do_active_canceled_procedure',[RowID],1,"رویه دوباره فعال و جاری میگردد",'green')
   var detailes_html="";
   var create_procedure_field="";
   create_procedure_field+='<h6 style="padding:10px;color:red">تکمیل شدن همه فیلد ها الزامی می باشد</h6>';
    create_procedure_field+=create_form_row({title:"جاری شدن بلافاصله",type:"checkbox",id:'start_now',style:"width:2rem;height:2rem",onclick:"check_start_now(this)"})
    create_procedure_field+=create_form_row({type:"hidden",id:'procedure_row_id',value:''})
    create_procedure_field+=create_form_row({title:"تاریخ جاری شدن",type:"text",id:'start_date',style:"width:75%"})
    create_procedure_field+=create_form_row({title:"ساعت جاری شدن",type:"time",id:'start_time',style:"width:75%"})
    create_procedure_field+=create_form_row({type:"hidden",id:'window_search_id',value:'reactive_'+RowID})
    create_procedure_field+=create_form_row({title:"تاریخ آخرین بازنگری",type:"text",id:'last_review_date',style:"width:75%"})
        create_procedure_field+=create_form_row({title:" سطح تغییرات",type:"text",id:'changes_level',style:"width:75%"})
        create_procedure_field+=create_form_row({title:" وضعیت جاری رویه ",type:"text",id:'current_procedure_status',style:"width:75%"})
    
    
    create_procedure_field+=create_form_row({title:"علت  فعالسازی دوباره ",type:"textarea",id:'reason_reactive',style:"width:75%"})
    create_procedure_field+=create_form_row({value:"فعالسازی ",type:"button",id:'reaction_procedure',class:"btn btn-success" ,onclick:"do_active_canceled_procedure("+RowID+")"})
    append_large_modal('reactive_'+RowID,'فعالسازی دوباره رویه',"",create_procedure_field,"800px",'auto');
    $('#start_date').MdPersianDateTimePicker({
        targetTextSelector: '#start_date',
        disableBeforeDate: new Date(),
    });
    $('#last_review_date').MdPersianDateTimePicker({
        targetTextSelector: '#last_review_date',
       // disableBeforeDate: new Date(),
    });
}
function do_active_canceled_procedure(RowID){
    var reason_reactive=$("#reason_reactive").val();
    var start_date= $("#start_date").val()
    var start_time=$("#start_time").val()
    var action="active_canceled_procedure";
    var start_now = $("#start_now").is(":checked")?1:0;
    var last_review_date = $("#last_review_date").val();
    var changes_level = $("#changes_level").val();
    var current_procedure_status = $("#current_procedure_status").val();
    if(reason_reactive.trim()=="" || reason_reactive.trim()==null || typeof(reason_reactive.trim())=="undefined"){
        notice1Sec('علت فعالسازی را وارد نمایید',"yellow");
        return false;
    }
    var param={action:action,reason_reactive:reason_reactive,start_date:start_date,start_time:start_time,start_now:start_now,RowID:RowID,last_review_date:last_review_date,changes_level:changes_level,current_procedure_status:current_procedure_status}
    var res= ajaxHandler(param);
    if(res){
 
        close_modal($("#window_search_id").val())
        search_unit_procedurs($("#procedure_search_btn"));
        manage_organizational_procedures();

    }
}
function delete_procedure(procedure_id){
  
    var message="در صورت حذف رویه کلیه  فایلهای پیوست شده حذف  شده و  قابل بازیابی نخواهند بود";
    bs_prompt('حذف رویه ',"علت حذف رویه را وارد نمایید","do_delete_procedure",[procedure_id],1,message,'red')
}

function do_delete_procedure(procedure_id){
    var procedure_type=$("#procedures_type_hidden").val();
    var unit_id=$("#unit_id_hidden").val();
    var input ="";
    var reason_delete="";
    if(sessionStorage.length){
        if(sessionStorage.getItem('bs_prompt_data')){
            reason_delete= sessionStorage.getItem('bs_prompt_data');//دیتای ذخیره شده در پنجره  bs_prompt
            sessionStorage.removeItem("bs_prompt_data");
        }
    }
   var action ="do_delete_procedure";
   var param = {action:action,procedure_id:procedure_id,reason_delete:reason_delete}
   
   var res=ajaxHandler(param)
   if(res){
        notice1Sec(res,'green');
        input="#inlineRadio"+procedure_type;
        go_to_page_op(input,procedure_type,unit_id)
        $(input).click();
        manage_organizational_procedures()
        return false;
   }
//    else
//    {
//         notice1Sec(res,'yellow');
//         return false;
//    }
}

function cancellation_procedure(procedure_id){
  
    var message="در صورت ابطال رویه  رویه و  فایلهای پیوست شده در  دسترس  کاربر نخواهند بود";
    bs_prompt('ابطال  رویه ',"علت ابطال رویه را وارد نمایید","do_cancellation_procedure",[procedure_id],1,message,'#ca8a04')
}

function do_cancellation_procedure(procedure_id){
    var procedure_type=$("#procedure_type_hidden").val();
    var unit_id=$("#unit_id_hidden").val();
    var input ="";
    var reason_cancellation="";
    if(sessionStorage.length){
        if(sessionStorage.getItem('bs_prompt_data')){
            reason_cancellation= sessionStorage.getItem('bs_prompt_data');//دیتای ذخیره شده در پنجره  bs_prompt
            sessionStorage.removeItem("bs_prompt_data");
        }
    }
   var action ="do_cancellation_procedure";
   var param = {action:action,procedure_id:procedure_id,reason_cancellation:reason_cancellation}
   var res=ajaxHandler(param)
   if(res){
        notice1Sec(res,'green');
        input="#inlineRadio"+procedure_type;
        go_to_page_op(input,procedure_type,unit_id)
        $(input).click();
        manage_organizational_procedures()
        return false;
   }
//    else
//    {
//         notice1Sec(res,'yellow');
//         return false;
//    }
}

function display_records_procedure(p_id){
    var action ="display_records_procedure";
    var param  = {action:action,procedure_id:p_id}
    var res=ajaxHandler(param);
    if(res){
        append_large_modal("procedure_records_"+p_id,"مشاهده سوابق قعالیت رویه","",res,"#fff",'800px',"auto")
    }
}

function reversion_procedure(p_id){
    var action ="reversion_procedure";
    var param  = {action:action,procedure_id:p_id}
    var res=ajaxHandler(param);
    var procedures_file="";
    var uploaded_files="";
    if(res){
        uploaded_files=res['files_info'];
        var create_procedure_field=`<h6 style="padding:10px;color:red">تکمیل کردن همه فیلد ها الزامی می باشد</h6><h6><span>نام رویه :</span> <span>${res.procedure_info.procedure_name}</span></h6><hr>`;
        create_procedure_field+='<form id="procedure_reversion" style="width:70%;margin:0 auto;">';
        create_procedure_field+=create_form_row({title:"جاری شدن بلافاصله",type:"checkbox",id:'start_now',style:"width:2rem;height:2rem",onclick:"check_start_now(this)"})
        create_procedure_field+=create_form_row({type:"hidden",id:'procedure_row_id',value:res.procedure_info.RowID})
        create_procedure_field+=create_form_row({title:"تاریخ جاری شدن",type:"text",id:'start_date',style:"width:75%"})
        create_procedure_field+=create_form_row({title:"ساعت جاری شدن",type:"time",id:'start_time',style:"width:75%"})
        create_procedure_field+=create_form_row({title:"شماره فرم",type:"text",id:'form_number',style:"width:75%", value:res.procedure_info.form_number})
        create_procedure_field+=create_form_row({title:"تاریخ آخرین بازنگری",type:"text",id:'last_review_date',style:"width:75%"})
        create_procedure_field+=create_form_row({title:" سطح تغییرات",type:"text",id:'changes_level',style:"width:75%"})
        create_procedure_field+=create_form_row({title:" وضعیت جاری رویه ",type:"text",id:'current_procedure_status',style:"width:75%"})
        create_procedure_field+=create_form_row({title:" توضیحات تکمیلی",type:"textarea",id:'form_description',style:"width:75%",value:res.procedure_info.description})
        create_procedure_field+="</form>"
       
        create_procedure_field+=`<div id="procedure_file_group">
            <fieldset class="file_group" style="border:2px solid green;border-radius:10px"><legend style="width:auto; padding:10px;font-size:1rem">فایلهای پیوست شده </legend>
                ${uploaded_files}
            </fieldset>
            <fieldset class="file_group" style="border:2px solid green;border-radius:10px"><legend style="width:auto; padding:10px;font-size:1rem">پیوست فایلها</legend>`;
        create_procedure_field+='<table id="file_tbl" class="table"><tr><td>عنوان فایل</td><td>انتخاب فایل</td><td>حذف فایل</td></tr></thead><tr><td>'+create_form_row({type:"text",id:'file_name_1',style:"width:75%"})+"</td><td>";
        create_procedure_field+=create_form_row({type:"file",id:'procedure_file_1',style:"width:75%", onchange:"manage_procedure_file('procedure_file_group',this)"})+'</td><td id="del_btn_td_1"></td></tr></tbody></table></fieldset>'
        create_procedure_field+=create_form_row({value:"بروزرسانی ",type:"button",id:'final_confirm_btn',class:"btn btn-success" ,onclick:"create_new_version()"})
        create_procedure_field+=create_form_row({type:"hidden",id:'window_id',value:'reversion_'+p_id})
        create_procedure_field+"</div>"+uploaded_files;
        $("#start_date").parent().css("display","flex")
        append_large_modal('reversion_'+p_id,'  بروزرسانی ورژن رویه ',create_procedure_field,'',"#c3d4dd","800px");
        $('#start_date').MdPersianDateTimePicker({
            targetTextSelector: '#start_date',
            disableBeforeDate: new Date(),
        });
        $('#last_review_date').MdPersianDateTimePicker({
            targetTextSelector: '#last_review_date',
            //disableBeforeDate: new Date(),
        });
        
        
    }
}

function create_new_version(){
    bs_prompt("تغییر ورژن جاری رویه",'علت تغییر ورژن را وارد نمایید',"final_save_procedure",[1],1,'در صورت تغییر ورژن جاری   ورژن قبلی قابل ویرایش نمی باشد ',"green")
}

function attach_procedure_file(RowID){
    var action = "manage_attach_procedure_file";
    var param={action:action,procedure_id:RowID}
    var form="";
    form+='<form id="procedure_entry_file" style="width:70%;margin:0 auto;display:none;">';
  //var form=`<button onclick="toggle_form(\'procedure_entry_file\',this)" class="btn btn-primary"><i class="fa fa-plus"></i ></button><form id="procedure_entry_file" style="width:70%;margin:0 auto;display:none">`;
    form+=create_form_row({title:" فایل  ",type:"file",id:'procedure_file_'+RowID,name:'procedure_file_'+RowID})
    form+=create_form_row({title:"عنوان فایل ",type:"text",id:'procedure_file_name_'+RowID})
    form+=create_form_row({title:"کد فایل ",type:"text",id:'procedure_file_code_'+RowID })
    form+=create_form_row({title:" توضیحات",type:"textarea",id:'procedure_file_text_'+RowID})
    form+=create_form_row({type:"button",id:'procedure_save_btn',class:'btn btn-success',value:"تایید",onclick:'save_procedure_file('+RowID+')'})
    form+="</form>"
    var res=ajaxHandler(param)
    if($("#file_attach_"+RowID)){
        $("#file_attach_"+RowID).modal('hide')
        $("#file_attach_"+RowID).remove();
    }

    append_large_modal("file_attach_"+RowID,'   مدیریت پیوست ها  ',form+res,"#c3d4dd","800px");
}


function downloadFile(data){
    const link_source=`data:application/pdf;base64,${data}`;
    const download_link=document.createElement('a')
    const filename="file.pdf"
    download_link.href=link_source
    download_link.download=filename
    download_link.click();
}

function go_to_page_op(input,procedure_type,unit_id,page=1){
    var parent=$(input).parents('div.data-header').siblings('.data-grad');
    $("#procedures_type_hidden").val(procedure_type);
    var action="get_procedures_list";
    var param={action:action,unit_id:unit_id,procedure_type:procedure_type,page_number:page}
 
    var res=ajaxHandler(param);
    $(parent).html(res)
    $('#from_date_user').MdPersianDateTimePicker({
        targetTextSelector: '#from_date_user',
    });
    $('#to_date_user').MdPersianDateTimePicker({
        targetTextSelector: '#to_date_user',
    });
}

function page_navigate(n_type){
    var procedure_type=$("#procedures_type_hidden").val();
    var unit_id=$("#unit_id_hidden").val()
    var page_number = $("#page_number_hidden").val();
    var all_pages=$("#all_page_hidden").val();
    var input="";
    switch(procedure_type){
        case "all":
            input =$("#inlineRadio0");
            break;
        case "0":
            input =$("#inlineRadio1");
            break;
        case "1":
            input =$("#inlineRadio2");
            break;
        case "2":
            input =$("#inlineRadio3");
            break;
    }
    switch(n_type){
        case "next":
            page_number=parseInt(page_number)+1
            break;
        case "prev":
            page_number=parseInt(page_number)-1
            break;
        case "first":
            page_number=1;
            break;
        case "last":
            page_number=all_pages
            break;
        case "custom":
            page_number=$("#goToPageInput").val();
            break;
    }
    if(page_number===0){
        notice1Sec('صفحه مورد نظر وجود ندارد','yellow')
        return false;
    }
     if(page_number>all_pages){
        notice1Sec('صفحه مورد نظر وجود ندارد','yellow')
        return false;
    }
     if(page_number==null || page_number=="" || typeof(page_number)=="undefined"){
        return false;
    }
    go_to_page_op(input,procedure_type,unit_id,page_number)
}

function show_help(input){
    $(input).parents('td').find("p").show();
}
function hide_help(input){
    $(input).parents('td').find("p").hide();
}
    

function manage_last_cancelled_version_procedure(row_id){
    var action="manage_last_cancelled_version_procedure";
    var param={action:action,row_id:row_id}
    var res=ajaxHandler(param);
    var create_procedure_field="";
    var uploaded_files=res[0]['files_info'];
    var permission=res[0]['add_permission'];

    create_procedure_field+=`<div id="procedure_file_group">
    <fieldset class="file_group" style="border:2px solid green;border-radius:10px">
        <legend style="width:auto; padding:10px;font-size:1rem">فایلهای پیوست شده </legend>
        ${uploaded_files}
    </fieldset>`;
    if(permission==1){
        create_procedure_field+=`<fieldset class="file_group" style="border:2px solid green;border-radius:10px"><legend style="width:auto; padding:10px;font-size:1rem">پیوست فایلها</legend>`;
        create_procedure_field+='<table id="file_tbl" class="table"><tr><td>عنوان فایل</td><td>انتخاب فایل</td><td>مشاهده توسط کاربر</td><td>حذف فایل</td></tr></thead><tr><td>'+create_form_row({type:"text",id:'file_name_1',style:"width:75%"})+"</td><td>";
        create_procedure_field+=create_form_row({type:"file",id:'procedure_file_1',style:"width:75%", onchange:"manage_procedure_file('procedure_file_group',this,1)"})+'</td><td>'+create_form_row({type:"checkbox",id:'display_file_1',style:""})+'</td><td id="del_btn_td_1"></td></tr></tbody></table></fieldset>'
        create_procedure_field+=create_form_row({value:"بروزرسانی ",type:"button",id:'final_confirm_btn',class:"btn btn-success" ,onclick:"uoload_last_cancelled_version_procedure_file()"})
    }
    create_procedure_field+=create_form_row({type:"hidden",id:'window_id',value:'manage_cancelled_files_'+row_id})
    create_procedure_field+=create_form_row({type:"hidden",id:'cancelled_procedure_id',value:row_id})
    create_procedure_field+"</div>"+uploaded_files;
    $("#start_date").parent().css("display","flex")
    append_large_modal('manage_cancelled_files_'+row_id,' مدیریت فایلهای منسوخ شده',create_procedure_field,'',"#c3d4dd","800px");
    $('#start_date').MdPersianDateTimePicker({
        targetTextSelector: '#start_date',
        disableBeforeDate: new Date(),
    });

}

function uoload_last_cancelled_version_procedure_file(){

    var file_box=$("#procedure_file_group")
    var formData="";
    formData=new FormData();
    var file_error_count=0;
    var file_added=0;
    var prosedure_id=$("#cancelled_procedure_id").val();
    var display_files_array=[];
    var not_display_files_array=[];
    var array_handler=[]
    $("#cancelled_file_tbl tr td ").find(".uploaded_file_row").each(function(){
        if($(this).is(":checked")){
            display_files_array.push($(this).val())
          
        }
        else{
            not_display_files_array.push($(this).val())
        }
       
    })


    $(file_box).find('input:file').each(function()
    {
        var this_file=$(this).attr('id')
        var index=this_file.split("_")[2];
        if($("#"+this_file).val())
        {
            file_added++;
            if($('#'+this_file).val() != '' || $('#'+this_file)[0].files.length != 0)
            {
                if($("#file_name_"+index).val().trim()=="" || $("#file_name_"+index).val().trim()==null || typeof($("#file_name_"+index).val().trim())=="undefined"){
                    notice1Sec("عنوان فایل را وارد نمایید","yellow");
                   $("#file_name_"+index).focus();
                   file_error_count++;
                }
        
                var fileSelect = document.getElementById(this_file);
                var files = fileSelect.files;
                if(!window.File && window.FileReader && window.FileList && window.Blob)
                { //if browser doesn't supports File API
                    notice1Sec("Your browser does not support new File API! Please upgrade.","yellow");
                    return false;
        
                }else 
                {
                
                    var total_selected_files = files.length;
                    for (var x = 0; x < total_selected_files; x++) 
                    {
                        formData.append("procedures_file[]",files[x]);
                        formData.append("file_info[]",$("#"+this_file).val())
                        formData.append("file_name[]",$("#file_name_"+index).val())
                        formData.append("display_file[]",$("#display_file_"+index).is(":checked")?1:0)
                    }
                }
            }
            else
            {
                notice1Sec("فایل انتخاب نشده است.","yellow");
                return false;
            }
       }
       
    })

    if(file_error_count>0){
        return false;
    }
    // if(file_added==0){
    //     notice1Sec('حداقل باید یک فایل   پیوست شود','yellow');
    //     return false;
   
    // }

    formData.append('action','uoload_last_cancelled_version_procedure_file')
    formData.append('prosedure_id',prosedure_id)
    formData.append('action','uoload_last_cancelled_version_procedure_file')
    formData.append('display_files_array',display_files_array)
    formData.append('not_display_files_array',not_display_files_array)

    var xhr = new XMLHttpRequest();
    xhr.open('POST', 'php/managemantproccess.php',true);
    xhr.onload = function () 
    {
        if (xhr.status === 200) 
        {
            var res = JSON.parse(xhr.responseText);
            if(res['res'] == "false")
            {
                notice1Sec(res['data'],'yellow');
            }
            else
            {
                notice1Sec(res['data'],'green');
                close_modal($("#window_id").val())
                input="#inlineRadio"+procedure_type;
                $(input).click();
                 go_to_page_op(input,procedure_type,unit_id)
            }
        }else{
            notice1Sec("خطایی رخ داده است !",'yellow');
        }
    };

    xhr.send(formData);
}


function create_form_row(info_row={}){
    var html="";
    var type=info_row['type']
    switch(type)
    {
        case "password":
        case "file":
        case "number":
        case "text":
        case "file":
        case "time":
        case "checkbox" :   
        
            var type=info_row['type']
            delete info_row.type;
            var attributes="";
            var className="form-control";
            if(info_row['class']){
                    className+=`" ${info_row['class']}"`
                    delete info_row.title;
            }
            var title=info_row['title'];
            delete info_row.title;
            for(k in info_row){
            attributes+=`${k}="${info_row[k]}"`
            }
            var form_row_box="col-sm-6 p-2";
            if(type=="checkbox"){
                form_row_box="col-sm-2"
            }
            html=`<div class="form-group row">`
                title?html+=`<label for="" class="col-sm-4 col-form-label">${title} :</label>`:form_row_box="col-sm-12"
            html+=`<div class="${form_row_box}" >
                    <input type="${type}" class="${className}" ${attributes}>
                </div>
            </div>`;

                break;
            case "button":
                var attributes="";
                     for(k in info_row){
                        attributes+=`${k}="${info_row[k]}"`
                    }
                    
                    html=
                    `<div class="form-group row">
                        <div class="col-sm-10 p-2">
                            <input  ${attributes}>
                        </div>
                    </div>`;
                    break;
            case "textarea"  :
                var attributes="";
                var className="form-control"
                  delete info_row.type
                  var title=info_row.title
                   delete info_row.title
                   if(info_row.class){
                    className+=` ${info_row.class}`
                    delete info_row.className
                   }
                for(k in info_row){
                        if(k!='value'){
                            attributes+=`${k}="${info_row[k]}"`
                        }
                    }
                  
                    html=
                    `<div class="form-group row">
                      <label for="" class="col-sm-4 col-form-label">${title} :</label>
                        <div class="col-sm-6 p-2">
                            <textarea rows="3" ${attributes} class="${className}">${info_row.value?info_row.value:""}</textarea>
                        </div>
                    </div>`;

                break;
                case "select":
                    var title=info_row['title'];
                    var options=info_row['options'];
                    var attributes =info_row['attributes'];
                    var option="";
                    var attrs="";
                    for(k in options){
                        var option_detailes="";
                        option_detailes=options[k];
                        option+=`<option value="${option_detailes.key}">${option_detailes.value}</option>`
                    }
                   
                    for(attr_key in attributes){
                        var attr="";
                        attr=attributes[attr_key];
                        if(typeof(attr)=="string"){
                            attrs+=` ${attr} `;
                        }
                        if(typeof(attr)=="object"){
                            attrs+=` ${attr.key}="${attr.value}" `;
                        }
                    }

                    var attributes="";
                    var className="form-control"
                    html=
                    `<div class="form-group row">
                      <label for="" class="col-sm-4 col-form-label">${title} :</label>
                        <div class="col-sm-6 p-2">
                            <select id="${info_row['id']}"  ${attrs} class="${className}">
                            ${option}
                            </select>
                        </div>
                    </div>`;

                    break;
                case "hidden":
                    var attributes="";
                    for(k in info_row){
                        attributes+=`${k}="${info_row[k]}"`
                    }
                        html=
                            `<input ${attributes}>`;
                    break;
                    case "radio_group":
                        if(info_row.options){
                            var inputs="";
                            var options=info_row.options;
                            for (k in options){
                                inputs+=
                                `<label class="radio-inline">
                                        <input type="radio" id="${options[k]['id']?options[k]['id']:""}"  
                                            name="${info_row['name']}" 
                                                onclick="${options[k]['onclick']?options[k]['onclick']:""}" 
                                                    value="${options[k]['value']?options[k]['value']:""}">
                                            ${options[k]['title']?options[k]['title']:""}
                                </label>`;
                            }
                        }
                        
                        html=
                    `<div class="form-group row">
                      <label for="" class="col-sm-2 col-form-label">${info_row.title} :</label>
                        <div class="col-sm-10 p-2">
                            ${inputs}
                        </div>
                    </div>`;
                          
                        break;
            }
            return html;
        }
    
    function get_procedures_manages(){
        var action="get_procedures_manages";
        param={action:action}
        var res=ajaxHandler(param);
        if(res){
            if(typeof(res=="array")){
                return res;
            }
        }
    }
    
    function add_organization_procedure_type(){// ثبت نوع رویه 
       // var  options=[];
        var procedure_mangers=get_procedures_manages();
        /*for(k in procedure_mangers){
            var user_data=procedure_mangers[k];
            options.push({"key":user_data['RowID'],"value":user_data['fname']+" "+user_data['lname']})
        }*/
        var form="<form>";
       // form+= create_form_row({"title":"قابل مشاهده برای همه","id":"display_for_all","type":"checkbox","style":"width:20px;height:20px","onclick":"toggel_allowed_users(this,'user_select')"})
        form+= create_form_row({"title":"نوع سند","id":"new_procedure_type","type":"text"})
        //var attributes=[ 'multiple', {'key':"data-live-search",'value':"true"},{"key":"data-actions-box","value":"true"},{"key":"data-selected-text-format","value":"count"}]
       // form+=create_form_row({"title":"کاربران مجاز  تغییر دهنده","id":"user_select","type":"select",attributes,options})
        form+= create_form_row({"title":"توضیحات","id":"new_procedure_type_desc","type":"textarea"})
        form+= create_form_row({type:"button",id:'organization_unit_save_btn',class:'btn btn-success',value:"تایید",onclick:'save_organization_procedure_type()'})
        append_large_modal( 'add_organization_procedure_type',"افزودن نوع سند سازمانی ",form,'',bgcolor="#c3d4dd",win_width="700px",'auto');
       // $('#user_select').selectpicker();
        //selcted_value_multi_select=get_multi_selected_value($('#user_select'))
    }

    // function toggle_form(selector,input){
    //     var display=$(input).siblings("#"+selector).is(':visible')?1:0
    //     if(display==0){
    //         $(input).removeClass('btn-primary');
    //         $(input).addClass('btn-danger');
    //         $(input).html('<i class="fa fa-minus"></i>');
    //         $(input).siblings("#"+selector).show();
    //     }
    //     if(display==1){
    //         //else{
    //         $(input).addClass('btn-primary');
    //         $(input).removeClass('btn-danger');
    //         $(input).html('<i class="fa fa-plus"></i>');
    //         $(input).siblings("#"+selector).hide();
    //     }
    // }

    function toggel_allowed_users(input,elm_id){
        if($(input).is(":checked")){
            $("#"+elm_id).parents('.form-group').hide();
        }
        else{
            $("#"+elm_id).parents('.form-group').show();
        }
    }
    
    function save_organization_procedure_type(){
        var action = "save_organization_procedure_type";
        var new_procedure_type=$("#new_procedure_type").val().trim();
        var new_procedure_type_desc=$("#new_procedure_type_desc").val().trim();
        var display_for_all=$("#display_for_all").is(":checked")?1:0;
       
        if(new_procedure_type == "" ||new_procedure_type == null || typeof(new_procedure_type) == 'undefined'){
            notice1Sec('نوع سند را وارد نمایید','yellow');
            return false;
        }
       // var admin_ids=$('#user_select').val();
      /* if(display_for_all==0){
            if(!admin_ids.length){
                notice1Sec('مدیران مجاز به استفاده از این رویه مشخص نشده است','yellow');
                return false;
            }
       }
       else
       {
            
            admin_ids.push(['all'])
           
       }
       */
       
        var param = {action:action,new_procedure_type:new_procedure_type,new_procedure_type_desc:new_procedure_type_desc};
        var res = ajaxHandler(param); 
        res=true;
        if(res)
        {
            $("#add_organization_procedure_type").modal('hide');
            $("#add_organization_procedure_type").remove();
            manage_organizational_procedures();
            notice1Sec('اطلاعات با موفقیت ذخیره شد','green');
        }
        else
        {
            notice1Sec('خطا در ذخیره  اطلاعات','red');
            return false;
        }
    }

    function cancellation_procedure_file(file_procedure_id,procedure_id){
        if($("#bs_prompt")){
            $("#bs_prompt").remove();
        }
        bs_prompt('حذف رویه',' علت حذف فایل','do_cancellation_procedure_file',[file_procedure_id])
        sessionStorage.setItem('procedure_id',procedure_id)
        
       
    }

    function do_cancellation_procedure_file(file_procedures_id){

        var action="do_cancellation_procedure_file";
        var remove_reason="";
        var procedure_id="";
        if(sessionStorage.length){
            if(sessionStorage.getItem('bs_prompt_data')){
                remove_reason= sessionStorage.getItem('bs_prompt_data');//دیتای ذخیره شده در پنجره  bs_prompt
                sessionStorage.removeItem("bs_prompt_data");
            }
            if(sessionStorage.getItem('procedure_id')){
                procedure_id= sessionStorage.getItem('procedure_id');
                sessionStorage.removeItem("procedure_id");
            }
        }

        var param={action:action,remove_reason:remove_reason,file_procedures_id:file_procedures_id}
        var result=  ajaxHandler (param);

       notice1Sec(result,'green');
      
       
        attach_procedure_file(procedure_id); 
        $("#count_procedure_files_"+procedure_id).text($("#procedures_files_count").val()); 
        $("#count_history_files_"+procedure_id).text($("#procedures_history_count").val());

        if(parseInt($("#procedures_history_count").val())>0){
            $("#count_history_files_"+procedure_id).parent().addClass('btn-success');
            $("#count_history_files_"+procedure_id).parent().removeClass('btn-danger');
            $("#count_history_files_"+procedure_id).show();
        }

        if(parseInt($("#procedures_files_count").val())==0){
            $("#count_procedure_files_"+procedure_id).parent().removeClass('btn-success');
            $("#count_procedure_files_"+procedure_id).parent().addClass('btn-danger');
            $("#count_procedure_files_"+procedure_id).hide();
        }
    }
    
    // function open_procedure_history(RowID){
    //     var action = "open_procedure_history";
    //     var param={action:action,procedure_id:RowID}
    //     var res=ajaxHandler(param)
    //     $("#file_history_"+RowID).remove()
    //     append_large_modal("file_history_"+RowID,'   تاریخچه رویه ها ',res,"#c3d4dd","800px");
    // }

    // function create_multistep_form(forms=[],color){
    //     var count= forms.length;
    //     var form="";
    //     var steps=`<div>
    //                     <ul style="display:flex;justify-content:flex-start;align-items:center;">"`
    //     for(var j=0;j<=count;j++){
    //         if(j!=count)
    //             steps+=` <li style="list-style:none;border-bottom:2px solid ${color};position:relative;width:30%"><span style="text-align:center;position:absolute;width:25px;height:25px;top:-10px;right:-6px; border-radius:100%;background:${color}">${parseInt(j)+1}</span></li>`;
    //         else
    //         steps+=` <li style="list-style:none;;position:relative;width:30%"><span style="text-align:center;position:absolute;width:25px;height:25px;top:-10px;right:-6px; border-radius:100%;background:${color}">${parseInt(j)+1}</span></li>`;
    //         }
    //     steps+=` </ul></div>`;
    //     form+=steps;
    //     for(var i=0;i<count;i++){

    //         form+='<div>'+forms[i]+"</div>"
    //     }
        
    //     return form;
    // }
function createRecruitment(){

    $("#recruitment_modal").modal('show');
    $("#recruitment_fullname").val("");
    $("#recruitment_mobile").val("");
    $("#recruitment_national_id").val("");
    $("#recruitment_description").val("");
    $("#recruitment_test_date").val("");
    $("#recruitment_id").val("")
    $("#recruitment_modal").modal('show');
}
 function editRecruitment(RowID){
    var action ='getRecruitment';
    var r_id=RowID;
    var param={action:action,r_id:r_id};
    var res=  manageAjaxRequest(param);
    

    if(res){
       $("#recruitment_fullname").val(res[0]['fullname']);
       $("#recruitment_mobile").val(res[0]['mobile']);
       $("#recruitment_national_id").val(res[0]['national_code']);
       $("#recruitment_description").val(res[0]['description']);
       $("#recruitment_id").val(RowID)
       $("#recruitment_modal").modal('show');
    }
}
 function doEditCreateRecruitment(){
    var rid=$("#recruitment_id").val();
    var fullname = $("#recruitment_fullname").val();
    var mobile=$("#recruitment_mobile").val();
    var national_code =  $("#recruitment_national_id").val();
    var recruitment_test_date = $("#recruitment_test_date").val();
    var description = $("#recruitment_description").val();
    var action="editCreateRecruitment";
    var param={action:action,rid:rid,fullname:fullname,mobile:mobile,national_code:national_code,description:description,recruitment_test_date:recruitment_test_date};
    var res=  manageAjaxRequest(param);

    if(res)
    {
        $("#recruitment_modal").modal('hide');
        showRecruitmentList();
        notice1Sec(res,'green');
    }
}

 function attch_recruitment_tests(RowID){
    $("#RecruitmentAddAttachmentFileModal").modal('show');
    $('#RecruitmentManagmentAddAttachmentID').val(RowID);
    var action="get_recruitment_uploded_files";
    var params={action:action,cid:RowID}
    res=  manageAjaxRequest(params)

    if(res){
        $("#RecruitmentManagmentAddAttachmentName").val('');
        $("#RecruitmentManagmentAddAttachment").val('');
        $("#RecruitmentAddAttachmentFile-body").html('');
        $("#RecruitmentAddAttachmentFile-body").html(res);
    }
}

function do_attach_recruitment_files(){

    var cid = $('#RecruitmentManagmentAddAttachmentID').val();
    var info = $('#RecruitmentManagmentAddAttachmentName').val();
    var formData = new FormData();
    if($('#RecruitmentManagmentAddAttachment').val() != '' || $('#RecruitmentManagmentAddAttachment')[0].files.length != 0){
        var fileSelect = document.getElementById('RecruitmentManagmentAddAttachment');
        var files = fileSelect.files;
        if(!window.File && window.FileReader && window.FileList && window.Blob){ //if browser doesn't supports File API
            notice1Sec("Your browser does not support new File API! Please upgrade.","yellow");
            return false;
        }else {
            var total_selected_files = files.length;
            for (var x = 0; x < total_selected_files; x++) {
                formData.append("files[]",files[x]);
            }
        }
    }
   // formData.append("action","doAttachFileToComment");
   if(info=='' ||  info=="undefined"){
    notice1Sec('عنوان فایل را وارد نمایید ','yellow');
    return false;
   }
   if($("#RecruitmentManagmentAddAttachment").val()=='' ||  $("#RecruitmentManagmentAddAttachment").val()=="undefined"){
    notice1Sec('  فایل انتخاب نشده است  ','yellow');
    return false;
   }

    formData.append("action","doAttachFileToRecruitment");
    formData.append("cid",cid);
    formData.append("info",info);

    var xhr = new XMLHttpRequest();
    xhr.open('POST', 'php/managemantproccess.php',true);
    xhr.onload = function () {
        if (xhr.status === 200) {
            var res = JSON.parse(xhr.responseText);
            if(res['res'] == "false"){
                notice1Sec(res['data'],'yellow');
            }else{
                notice1Sec('بارگذاری انجام شد.', "green");
                attch_recruitment_tests(cid)


            }
        }else{
            notice1Sec("خطایی رخ داده است !",'yellow');
        }
    };
    xhr.send(formData);
}
 function delete_recruitment_files(rowID){
    var cid = $('#RecruitmentManagmentAddAttachmentID').val();
    var action="delete_recruitment_files" ;
    var param={action:action,RowID:rowID};
    var res=manageAjaxRequest(param);
   
    if(res){
        attch_recruitment_tests(cid);
        notice1Sec("فایل با موفقیت حذف شد",'green');

    }
}